define(['dart_sdk', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/painting/alignment.dart', 'packages/flutter/src/services/mouse_cursor.dart', 'packages/flutter/src/rendering/layer.dart', 'packages/flutter/src/widgets/widget_inspector.dart', 'packages/flutter/src/widgets/icon_theme.dart', 'packages/flutter/src/widgets/icon_theme_data.dart', 'packages/flutter/src/foundation/debug.dart', 'packages/flutter/src/painting/colors.dart', 'packages/flutter/src/material/icons.dart', 'packages/flutter/src/foundation/_platform_web.dart', 'packages/flutter/src/widgets/icon.dart', 'packages/flutter/src/widgets/icon_data.dart', 'packages/flutter/src/services/system_channels.dart', 'packages/flutter/src/painting/border_radius.dart', 'packages/flutter/src/painting/borders.dart', 'packages/flutter/src/animation/animation_controller.dart', 'packages/flutter/src/animation/listener_helpers.dart', 'packages/flutter/src/animation/curves.dart', 'packages/flutter/src/painting/matrix_utils.dart', 'packages/vector_math/vector_math_64.dart', 'packages/flutter/src/material/material_state.dart', 'packages/flutter/src/painting/placeholder_span.dart', 'packages/flutter/src/material/colors.dart', 'packages/flutter/src/material/material_state_mixin.dart', 'packages/flutter/src/rendering/layout_helper.dart', 'packages/flutter/src/rendering/shifted_box.dart', 'packages/flutter/src/painting/rounded_rectangle_border.dart', 'packages/flutter/src/material/constants.dart', 'packages/flutter/src/rendering/flex.dart', 'packages/flutter/src/widgets/dismissible.dart', 'packages/flutter/src/foundation/key.dart', 'packages/flutter/src/widgets/safe_area.dart', 'packages/flutter/src/foundation/object.dart', 'packages/flutter/src/painting/circle_border.dart', 'packages/flutter/src/painting/stadium_border.dart', 'packages/flutter/src/widgets/layout_builder.dart', 'packages/flutter/src/widgets/preferred_size.dart', 'packages/flutter/src/painting/basic_types.dart', 'packages/flutter/src/painting/_network_image_web.dart', 'packages/flutter/src/foundation/collections.dart', 'packages/flutter/src/rendering/custom_paint.dart', 'packages/flutter/src/material/tab_controller.dart', 'packages/flutter/src/painting/decoration.dart', 'packages/flutter/src/gestures/recognizer.dart', 'packages/flutter/src/material/tab_indicator.dart', 'packages/flutter/src/widgets/single_child_scroll_view.dart', 'packages/flutter/src/widgets/page_view.dart', 'packages/flutter/src/painting/box_decoration.dart', 'packages/flutter/src/painting/box_border.dart', 'packages/flutter/src/widgets/dual_transition_builder.dart', 'packages/flutter/src/animation/tween_sequence.dart', 'packages/flutter/src/cupertino/route.dart', 'packages/flutter/src/foundation/change_notifier.dart', 'packages/flutter/src/material/input_border.dart', 'packages/flutter/src/widgets/implicit_animations.dart', 'packages/flutter/src/gestures/binding.dart', 'packages/flutter/src/gestures/events.dart', 'packages/flutter/src/semantics/semantics_service.dart', 'packages/flutter/src/rendering/proxy_box.dart', 'packages/flutter/src/painting/geometry.dart', 'packages/flutter/src/widgets/bottom_navigation_bar_item.dart', 'packages/flutter/src/painting/notched_shapes.dart', 'packages/flutter/src/material/typography.dart', 'packages/flutter/src/material/floating_action_button_theme.dart', 'packages/flutter/src/material/bottom_sheet_theme.dart', 'packages/flutter/src/cupertino/text_theme.dart', 'packages/flutter/src/semantics/semantics_event.dart', 'packages/flutter/src/services/system_sound.dart', 'packages/flutter/src/services/haptic_feedback.dart', 'packages/flutter/src/gestures/tap.dart', 'packages/flutter/src/foundation/observer_list.dart', 'packages/flutter/src/painting/decoration_image.dart', 'packages/flutter/src/painting/shape_decoration.dart', 'packages/flutter/src/gestures/drag_details.dart', 'packages/flutter/src/widgets/draggable_scrollable_sheet.dart', 'packages/flutter/src/widgets/overflow_bar.dart', 'packages/flutter/src/rendering/custom_layout.dart', 'packages/flutter/src/widgets/scroll_notification_observer.dart', 'packages/flutter/src/scheduler/ticker.dart', 'packages/flutter/src/foundation/synchronous_future.dart', 'packages/flutter/src/services/system_chrome.dart', 'packages/flutter/src/widgets/navigation_toolbar.dart', 'packages/flutter/src/rendering/stack.dart', 'packages/flutter/src/semantics/semantics.dart', 'packages/flutter/src/widgets/annotated_region.dart', 'packages/flutter/src/widgets/sliver_persistent_header.dart', 'packages/flutter/src/rendering/sliver_persistent_header.dart'], (function load__packages__flutter__src__material__icon_button_dart(dart_sdk, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__painting__alignment$46dart, packages__flutter__src__services__mouse_cursor$46dart, packages__flutter__src__rendering__layer$46dart, packages__flutter__src__widgets__widget_inspector$46dart, packages__flutter__src__widgets__icon_theme$46dart, packages__flutter__src__widgets__icon_theme_data$46dart, packages__flutter__src__foundation__debug$46dart, packages__flutter__src__painting__colors$46dart, packages__flutter__src__material__icons$46dart, packages__flutter__src__foundation___platform_web$46dart, packages__flutter__src__widgets__icon$46dart, packages__flutter__src__widgets__icon_data$46dart, packages__flutter__src__services__system_channels$46dart, packages__flutter__src__painting__border_radius$46dart, packages__flutter__src__painting__borders$46dart, packages__flutter__src__animation__animation_controller$46dart, packages__flutter__src__animation__listener_helpers$46dart, packages__flutter__src__animation__curves$46dart, packages__flutter__src__painting__matrix_utils$46dart, packages__vector_math__vector_math_64$46dart, packages__flutter__src__material__material_state$46dart, packages__flutter__src__painting__placeholder_span$46dart, packages__flutter__src__material__colors$46dart, packages__flutter__src__material__material_state_mixin$46dart, packages__flutter__src__rendering__layout_helper$46dart, packages__flutter__src__rendering__shifted_box$46dart, packages__flutter__src__painting__rounded_rectangle_border$46dart, packages__flutter__src__material__constants$46dart, packages__flutter__src__rendering__flex$46dart, packages__flutter__src__widgets__dismissible$46dart, packages__flutter__src__foundation__key$46dart, packages__flutter__src__widgets__safe_area$46dart, packages__flutter__src__foundation__object$46dart, packages__flutter__src__painting__circle_border$46dart, packages__flutter__src__painting__stadium_border$46dart, packages__flutter__src__widgets__layout_builder$46dart, packages__flutter__src__widgets__preferred_size$46dart, packages__flutter__src__painting__basic_types$46dart, packages__flutter__src__painting___network_image_web$46dart, packages__flutter__src__foundation__collections$46dart, packages__flutter__src__rendering__custom_paint$46dart, packages__flutter__src__material__tab_controller$46dart, packages__flutter__src__painting__decoration$46dart, packages__flutter__src__gestures__recognizer$46dart, packages__flutter__src__material__tab_indicator$46dart, packages__flutter__src__widgets__single_child_scroll_view$46dart, packages__flutter__src__widgets__page_view$46dart, packages__flutter__src__painting__box_decoration$46dart, packages__flutter__src__painting__box_border$46dart, packages__flutter__src__widgets__dual_transition_builder$46dart, packages__flutter__src__animation__tween_sequence$46dart, packages__flutter__src__cupertino__route$46dart, packages__flutter__src__foundation__change_notifier$46dart, packages__flutter__src__material__input_border$46dart, packages__flutter__src__widgets__implicit_animations$46dart, packages__flutter__src__gestures__binding$46dart, packages__flutter__src__gestures__events$46dart, packages__flutter__src__semantics__semantics_service$46dart, packages__flutter__src__rendering__proxy_box$46dart, packages__flutter__src__painting__geometry$46dart, packages__flutter__src__widgets__bottom_navigation_bar_item$46dart, packages__flutter__src__painting__notched_shapes$46dart, packages__flutter__src__material__typography$46dart, packages__flutter__src__material__floating_action_button_theme$46dart, packages__flutter__src__material__bottom_sheet_theme$46dart, packages__flutter__src__cupertino__text_theme$46dart, packages__flutter__src__semantics__semantics_event$46dart, packages__flutter__src__services__system_sound$46dart, packages__flutter__src__services__haptic_feedback$46dart, packages__flutter__src__gestures__tap$46dart, packages__flutter__src__foundation__observer_list$46dart, packages__flutter__src__painting__decoration_image$46dart, packages__flutter__src__painting__shape_decoration$46dart, packages__flutter__src__gestures__drag_details$46dart, packages__flutter__src__widgets__draggable_scrollable_sheet$46dart, packages__flutter__src__widgets__overflow_bar$46dart, packages__flutter__src__rendering__custom_layout$46dart, packages__flutter__src__widgets__scroll_notification_observer$46dart, packages__flutter__src__scheduler__ticker$46dart, packages__flutter__src__foundation__synchronous_future$46dart, packages__flutter__src__services__system_chrome$46dart, packages__flutter__src__widgets__navigation_toolbar$46dart, packages__flutter__src__rendering__stack$46dart, packages__flutter__src__semantics__semantics$46dart, packages__flutter__src__widgets__annotated_region$46dart, packages__flutter__src__widgets__sliver_persistent_header$46dart, packages__flutter__src__rendering__sliver_persistent_header$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const math = dart_sdk.math;
  const ui = dart_sdk.ui;
  const _internal = dart_sdk._internal;
  const _interceptors = dart_sdk._interceptors;
  const async = dart_sdk.async;
  const _js_helper = dart_sdk._js_helper;
  const collection = dart_sdk.collection;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const alignment = packages__flutter__src__painting__alignment$46dart.src__painting__alignment;
  const mouse_cursor = packages__flutter__src__services__mouse_cursor$46dart.src__services__mouse_cursor;
  const box$ = packages__flutter__src__rendering__layer$46dart.src__rendering__box;
  const object = packages__flutter__src__rendering__layer$46dart.src__rendering__object;
  const layer = packages__flutter__src__rendering__layer$46dart.src__rendering__layer;
  const binding = packages__flutter__src__rendering__layer$46dart.src__rendering__binding;
  const basic = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__basic;
  const widget_inspector = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__widget_inspector;
  const framework = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__framework;
  const focus_manager = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__focus_manager;
  const navigator$ = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__navigator;
  const debug = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__debug;
  const media_query = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__media_query;
  const restoration_properties = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__restoration_properties;
  const ticker_provider = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__ticker_provider;
  const text$ = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__text;
  const container = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__container;
  const transitions = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__transitions;
  const heroes = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__heroes;
  const inherited_theme = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__inherited_theme;
  const scroll_position_with_single_context = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__scroll_position_with_single_context;
  const scroll_controller = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__scroll_controller;
  const scroll_physics = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__scroll_physics;
  const scroll_notification = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__scroll_notification;
  const notification_listener = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__notification_listener;
  const pages = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__pages;
  const overlay$ = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__overlay;
  const gesture_detector = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__gesture_detector;
  const actions = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__actions;
  const focus_scope = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__focus_scope;
  const automatic_keep_alive = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__automatic_keep_alive;
  const image = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__image;
  const routes = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__routes;
  const primary_scroll_controller = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__primary_scroll_controller;
  const modal_barrier = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__modal_barrier;
  const restoration = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__restoration;
  const localizations$ = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__localizations;
  const icon_theme = packages__flutter__src__widgets__icon_theme$46dart.src__widgets__icon_theme;
  const icon_theme_data = packages__flutter__src__widgets__icon_theme_data$46dart.src__widgets__icon_theme_data;
  const diagnostics = packages__flutter__src__foundation__debug$46dart.src__foundation__diagnostics;
  const assertions = packages__flutter__src__foundation__debug$46dart.src__foundation__assertions;
  const debug$ = packages__flutter__src__foundation__debug$46dart.src__foundation__debug;
  const colors = packages__flutter__src__painting__colors$46dart.src__painting__colors;
  const icons = packages__flutter__src__material__icons$46dart.src__material__icons;
  const platform$ = packages__flutter__src__foundation___platform_web$46dart.src__foundation__platform;
  const icon = packages__flutter__src__widgets__icon$46dart.src__widgets__icon;
  const icon_data = packages__flutter__src__widgets__icon_data$46dart.src__widgets__icon_data;
  const restoration$ = packages__flutter__src__services__system_channels$46dart.src__services__restoration;
  const border_radius = packages__flutter__src__painting__border_radius$46dart.src__painting__border_radius;
  const borders = packages__flutter__src__painting__borders$46dart.src__painting__borders;
  const animation_controller = packages__flutter__src__animation__animation_controller$46dart.src__animation__animation_controller;
  const tween = packages__flutter__src__animation__listener_helpers$46dart.src__animation__tween;
  const animation = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animation;
  const animations = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animations;
  const curves = packages__flutter__src__animation__curves$46dart.src__animation__curves;
  const matrix_utils = packages__flutter__src__painting__matrix_utils$46dart.src__painting__matrix_utils;
  const vector_math_64 = packages__vector_math__vector_math_64$46dart.vector_math_64;
  const material_state = packages__flutter__src__material__material_state$46dart.src__material__material_state;
  const text_style = packages__flutter__src__painting__placeholder_span$46dart.src__painting__text_style;
  const text_painter = packages__flutter__src__painting__placeholder_span$46dart.src__painting__text_painter;
  const colors$ = packages__flutter__src__material__colors$46dart.src__material__colors;
  const material_state_mixin = packages__flutter__src__material__material_state_mixin$46dart.src__material__material_state_mixin;
  const layout_helper = packages__flutter__src__rendering__layout_helper$46dart.src__rendering__layout_helper;
  const shifted_box = packages__flutter__src__rendering__shifted_box$46dart.src__rendering__shifted_box;
  const rounded_rectangle_border = packages__flutter__src__painting__rounded_rectangle_border$46dart.src__painting__rounded_rectangle_border;
  const constants = packages__flutter__src__material__constants$46dart.src__material__constants;
  const flex = packages__flutter__src__rendering__flex$46dart.src__rendering__flex;
  const dismissible = packages__flutter__src__widgets__dismissible$46dart.src__widgets__dismissible;
  const key = packages__flutter__src__foundation__key$46dart.src__foundation__key;
  const safe_area = packages__flutter__src__widgets__safe_area$46dart.src__widgets__safe_area;
  const object$ = packages__flutter__src__foundation__object$46dart.src__foundation__object;
  const circle_border = packages__flutter__src__painting__circle_border$46dart.src__painting__circle_border;
  const stadium_border = packages__flutter__src__painting__stadium_border$46dart.src__painting__stadium_border;
  const layout_builder = packages__flutter__src__widgets__layout_builder$46dart.src__widgets__layout_builder;
  const preferred_size = packages__flutter__src__widgets__preferred_size$46dart.src__widgets__preferred_size;
  const basic_types = packages__flutter__src__painting__basic_types$46dart.src__painting__basic_types;
  const image_provider = packages__flutter__src__painting___network_image_web$46dart.src__painting__image_provider;
  const collections = packages__flutter__src__foundation__collections$46dart.src__foundation__collections;
  const custom_paint = packages__flutter__src__rendering__custom_paint$46dart.src__rendering__custom_paint;
  const tab_controller = packages__flutter__src__material__tab_controller$46dart.src__material__tab_controller;
  const decoration = packages__flutter__src__painting__decoration$46dart.src__painting__decoration;
  const recognizer = packages__flutter__src__gestures__recognizer$46dart.src__gestures__recognizer;
  const tab_indicator = packages__flutter__src__material__tab_indicator$46dart.src__material__tab_indicator;
  const single_child_scroll_view = packages__flutter__src__widgets__single_child_scroll_view$46dart.src__widgets__single_child_scroll_view;
  const page_view = packages__flutter__src__widgets__page_view$46dart.src__widgets__page_view;
  const box_decoration = packages__flutter__src__painting__box_decoration$46dart.src__painting__box_decoration;
  const box_border = packages__flutter__src__painting__box_border$46dart.src__painting__box_border;
  const dual_transition_builder = packages__flutter__src__widgets__dual_transition_builder$46dart.src__widgets__dual_transition_builder;
  const tween_sequence = packages__flutter__src__animation__tween_sequence$46dart.src__animation__tween_sequence;
  const route$ = packages__flutter__src__cupertino__route$46dart.src__cupertino__route;
  const change_notifier = packages__flutter__src__foundation__change_notifier$46dart.src__foundation__change_notifier;
  const input_border = packages__flutter__src__material__input_border$46dart.src__material__input_border;
  const implicit_animations = packages__flutter__src__widgets__implicit_animations$46dart.src__widgets__implicit_animations;
  const binding$ = packages__flutter__src__gestures__binding$46dart.src__gestures__binding;
  const events = packages__flutter__src__gestures__events$46dart.src__gestures__events;
  const semantics_service = packages__flutter__src__semantics__semantics_service$46dart.src__semantics__semantics_service;
  const proxy_box = packages__flutter__src__rendering__proxy_box$46dart.src__rendering__proxy_box;
  const geometry = packages__flutter__src__painting__geometry$46dart.src__painting__geometry;
  const bottom_navigation_bar_item = packages__flutter__src__widgets__bottom_navigation_bar_item$46dart.src__widgets__bottom_navigation_bar_item;
  const notched_shapes = packages__flutter__src__painting__notched_shapes$46dart.src__painting__notched_shapes;
  const typography$ = packages__flutter__src__material__typography$46dart.src__material__typography;
  const text_theme = packages__flutter__src__material__typography$46dart.src__material__text_theme;
  const floating_action_button_theme = packages__flutter__src__material__floating_action_button_theme$46dart.src__material__floating_action_button_theme;
  const bottom_sheet_theme = packages__flutter__src__material__bottom_sheet_theme$46dart.src__material__bottom_sheet_theme;
  const theme = packages__flutter__src__cupertino__text_theme$46dart.src__cupertino__theme;
  const colors$0 = packages__flutter__src__cupertino__text_theme$46dart.src__cupertino__colors;
  const text_theme$ = packages__flutter__src__cupertino__text_theme$46dart.src__cupertino__text_theme;
  const semantics_event = packages__flutter__src__semantics__semantics_event$46dart.src__semantics__semantics_event;
  const system_sound = packages__flutter__src__services__system_sound$46dart.src__services__system_sound;
  const haptic_feedback = packages__flutter__src__services__haptic_feedback$46dart.src__services__haptic_feedback;
  const tap = packages__flutter__src__gestures__tap$46dart.src__gestures__tap;
  const observer_list = packages__flutter__src__foundation__observer_list$46dart.src__foundation__observer_list;
  const decoration_image = packages__flutter__src__painting__decoration_image$46dart.src__painting__decoration_image;
  const shape_decoration = packages__flutter__src__painting__shape_decoration$46dart.src__painting__shape_decoration;
  const drag_details = packages__flutter__src__gestures__drag_details$46dart.src__gestures__drag_details;
  const draggable_scrollable_sheet = packages__flutter__src__widgets__draggable_scrollable_sheet$46dart.src__widgets__draggable_scrollable_sheet;
  const overflow_bar = packages__flutter__src__widgets__overflow_bar$46dart.src__widgets__overflow_bar;
  const custom_layout = packages__flutter__src__rendering__custom_layout$46dart.src__rendering__custom_layout;
  const scroll_notification_observer = packages__flutter__src__widgets__scroll_notification_observer$46dart.src__widgets__scroll_notification_observer;
  const ticker = packages__flutter__src__scheduler__ticker$46dart.src__scheduler__ticker;
  const synchronous_future = packages__flutter__src__foundation__synchronous_future$46dart.src__foundation__synchronous_future;
  const system_chrome = packages__flutter__src__services__system_chrome$46dart.src__services__system_chrome;
  const navigation_toolbar = packages__flutter__src__widgets__navigation_toolbar$46dart.src__widgets__navigation_toolbar;
  const stack = packages__flutter__src__rendering__stack$46dart.src__rendering__stack;
  const semantics = packages__flutter__src__semantics__semantics$46dart.src__semantics__semantics;
  const annotated_region = packages__flutter__src__widgets__annotated_region$46dart.src__widgets__annotated_region;
  const sliver_persistent_header = packages__flutter__src__widgets__sliver_persistent_header$46dart.src__widgets__sliver_persistent_header;
  const sliver_persistent_header$ = packages__flutter__src__rendering__sliver_persistent_header$46dart.src__rendering__sliver_persistent_header;
  var icon_button = Object.create(dart.library);
  var back_button = Object.create(dart.library);
  var time = Object.create(dart.library);
  var ink_ripple = Object.create(dart.library);
  var button_style_button = Object.create(dart.library);
  var text_button = Object.create(dart.library);
  var snack_bar = Object.create(dart.library);
  var floating_action_button_location = Object.create(dart.library);
  var floating_action_button = Object.create(dart.library);
  var flexible_space_bar = Object.create(dart.library);
  var toggle_buttons_theme = Object.create(dart.library);
  var time_picker_theme = Object.create(dart.library);
  var text_selection_theme = Object.create(dart.library);
  var text_button_theme = Object.create(dart.library);
  var tabs$ = Object.create(dart.library);
  var tab_bar_theme = Object.create(dart.library);
  var switch_theme = Object.create(dart.library);
  var snack_bar_theme = Object.create(dart.library);
  var slider_theme = Object.create(dart.library);
  var scrollbar_theme = Object.create(dart.library);
  var radio_theme = Object.create(dart.library);
  var progress_indicator_theme = Object.create(dart.library);
  var popup_menu_theme = Object.create(dart.library);
  var page_transitions_theme = Object.create(dart.library);
  var outlined_button_theme = Object.create(dart.library);
  var navigation_rail = Object.create(dart.library);
  var navigation_rail_theme = Object.create(dart.library);
  var input_decorator = Object.create(dart.library);
  var ink_splash = Object.create(dart.library);
  var button_style = Object.create(dart.library);
  var elevated_button_theme = Object.create(dart.library);
  var dialog_theme = Object.create(dart.library);
  var data_table_theme = Object.create(dart.library);
  var chip_theme = Object.create(dart.library);
  var checkbox_theme = Object.create(dart.library);
  var card_theme = Object.create(dart.library);
  var raised_button = Object.create(dart.library);
  var outline_button = Object.create(dart.library);
  var material_button = Object.create(dart.library);
  var button = Object.create(dart.library);
  var flat_button = Object.create(dart.library);
  var color_scheme = Object.create(dart.library);
  var button_theme = Object.create(dart.library);
  var button_bar_theme = Object.create(dart.library);
  var tooltip_theme = Object.create(dart.library);
  var tooltip = Object.create(dart.library);
  var bottom_navigation_bar = Object.create(dart.library);
  var bottom_navigation_bar_theme = Object.create(dart.library);
  var bottom_app_bar_theme = Object.create(dart.library);
  var theme_data = Object.create(dart.library);
  var ink_highlight = Object.create(dart.library);
  var feedback = Object.create(dart.library);
  var ink_well = Object.create(dart.library);
  var ink_decoration = Object.create(dart.library);
  var list_tile = Object.create(dart.library);
  var drawer = Object.create(dart.library);
  var bottom_sheet = Object.create(dart.library);
  var divider_theme = Object.create(dart.library);
  var divider = Object.create(dart.library);
  var banner_theme = Object.create(dart.library);
  var banner = Object.create(dart.library);
  var scaffold$ = Object.create(dart.library);
  var elevation_overlay = Object.create(dart.library);
  var material = Object.create(dart.library);
  var debug$0 = Object.create(dart.library);
  var material_localizations = Object.create(dart.library);
  var theme$ = Object.create(dart.library);
  var app_bar_theme = Object.create(dart.library);
  var app_bar = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(false);
  var T$ = {
    DiagnosticsPropertyOfWidget: () => (T$.DiagnosticsPropertyOfWidget = dart.constFn(diagnostics.DiagnosticsProperty$(framework.Widget)))(),
    VoidTovoid: () => (T$.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ObjectFlagPropertyOfVoidTovoid: () => (T$.ObjectFlagPropertyOfVoidTovoid = dart.constFn(diagnostics.ObjectFlagProperty$(T$.VoidTovoid())))(),
    DiagnosticsPropertyOfEdgeInsetsGeometry: () => (T$.DiagnosticsPropertyOfEdgeInsetsGeometry = dart.constFn(diagnostics.DiagnosticsProperty$(edge_insets.EdgeInsetsGeometry)))(),
    DiagnosticsPropertyOfFocusNode: () => (T$.DiagnosticsPropertyOfFocusNode = dart.constFn(diagnostics.DiagnosticsProperty$(focus_manager.FocusNode)))(),
    ObjectN: () => (T$.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    DayPeriodL: () => (T$.DayPeriodL = dart.constFn(dart.legacy(time.DayPeriod)))(),
    intToString: () => (T$.intToString = dart.constFn(dart.fnType(core.String, [core.int])))(),
    TimeOfDayN: () => (T$.TimeOfDayN = dart.constFn(dart.nullable(time.TimeOfDay)))(),
    ListOfObjectN: () => (T$.ListOfObjectN = dart.constFn(core.List$(T$.ObjectN())))(),
    JSArrayOfint: () => (T$.JSArrayOfint = dart.constFn(_interceptors.JSArray$(core.int)))(),
    TimeOfDayFormatL: () => (T$.TimeOfDayFormatL = dart.constFn(dart.legacy(time.TimeOfDayFormat)))(),
    HourFormatL: () => (T$.HourFormatL = dart.constFn(dart.legacy(time.HourFormat)))(),
    TweenOfdouble: () => (T$.TweenOfdouble = dart.constFn(tween.Tween$(core.double)))(),
    VoidTobool: () => (T$.VoidTobool = dart.constFn(dart.fnType(core.bool, [])))(),
    JSArrayOfRenderObject: () => (T$.JSArrayOfRenderObject = dart.constFn(_interceptors.JSArray$(object.RenderObject)))(),
    VoidToRect: () => (T$.VoidToRect = dart.constFn(dart.fnType(ui.Rect, [])))(),
    DiagnosticsPropertyOfButtonStyle: () => (T$.DiagnosticsPropertyOfButtonStyle = dart.constFn(diagnostics.DiagnosticsProperty$(button_style.ButtonStyle)))(),
    ButtonStyleN: () => (T$.ButtonStyleN = dart.constFn(dart.nullable(button_style.ButtonStyle)))(),
    FnToTN: () => (T$.FnToTN = dart.constFn(dart.gFnType(T => [dart.nullable(T), [dart.fnType(dart.nullable(T), [T$.ButtonStyleN()])]], T => [T$.ObjectN()])))(),
    FnToTN$1: () => (T$.FnToTN$1 = dart.constFn(dart.gFnType(T => [dart.nullable(T), [dart.fnType(dart.nullable(material_state.MaterialStateProperty$(T)), [T$.ButtonStyleN()])]], T => [T$.ObjectN()])))(),
    doubleN: () => (T$.doubleN = dart.constFn(dart.nullable(core.double)))(),
    MaterialStatePropertyOfdoubleN: () => (T$.MaterialStatePropertyOfdoubleN = dart.constFn(material_state.MaterialStateProperty$(T$.doubleN())))(),
    MaterialStatePropertyNOfdoubleN: () => (T$.MaterialStatePropertyNOfdoubleN = dart.constFn(dart.nullable(T$.MaterialStatePropertyOfdoubleN())))(),
    ButtonStyleNToMaterialStatePropertyNOfdoubleN: () => (T$.ButtonStyleNToMaterialStatePropertyNOfdoubleN = dart.constFn(dart.fnType(T$.MaterialStatePropertyNOfdoubleN(), [T$.ButtonStyleN()])))(),
    TextStyleN: () => (T$.TextStyleN = dart.constFn(dart.nullable(text_style.TextStyle)))(),
    MaterialStatePropertyOfTextStyleN: () => (T$.MaterialStatePropertyOfTextStyleN = dart.constFn(material_state.MaterialStateProperty$(T$.TextStyleN())))(),
    MaterialStatePropertyNOfTextStyleN: () => (T$.MaterialStatePropertyNOfTextStyleN = dart.constFn(dart.nullable(T$.MaterialStatePropertyOfTextStyleN())))(),
    ButtonStyleNToMaterialStatePropertyNOfTextStyleN: () => (T$.ButtonStyleNToMaterialStatePropertyNOfTextStyleN = dart.constFn(dart.fnType(T$.MaterialStatePropertyNOfTextStyleN(), [T$.ButtonStyleN()])))(),
    ColorN: () => (T$.ColorN = dart.constFn(dart.nullable(ui.Color)))(),
    MaterialStatePropertyOfColorN: () => (T$.MaterialStatePropertyOfColorN = dart.constFn(material_state.MaterialStateProperty$(T$.ColorN())))(),
    MaterialStatePropertyNOfColorN: () => (T$.MaterialStatePropertyNOfColorN = dart.constFn(dart.nullable(T$.MaterialStatePropertyOfColorN())))(),
    ButtonStyleNToMaterialStatePropertyNOfColorN: () => (T$.ButtonStyleNToMaterialStatePropertyNOfColorN = dart.constFn(dart.fnType(T$.MaterialStatePropertyNOfColorN(), [T$.ButtonStyleN()])))(),
    EdgeInsetsGeometryN: () => (T$.EdgeInsetsGeometryN = dart.constFn(dart.nullable(edge_insets.EdgeInsetsGeometry)))(),
    MaterialStatePropertyOfEdgeInsetsGeometryN: () => (T$.MaterialStatePropertyOfEdgeInsetsGeometryN = dart.constFn(material_state.MaterialStateProperty$(T$.EdgeInsetsGeometryN())))(),
    MaterialStatePropertyNOfEdgeInsetsGeometryN: () => (T$.MaterialStatePropertyNOfEdgeInsetsGeometryN = dart.constFn(dart.nullable(T$.MaterialStatePropertyOfEdgeInsetsGeometryN())))(),
    ButtonStyleNToMaterialStatePropertyNOfEdgeInsetsGeometryN: () => (T$.ButtonStyleNToMaterialStatePropertyNOfEdgeInsetsGeometryN = dart.constFn(dart.fnType(T$.MaterialStatePropertyNOfEdgeInsetsGeometryN(), [T$.ButtonStyleN()])))(),
    SizeN: () => (T$.SizeN = dart.constFn(dart.nullable(ui.Size)))(),
    MaterialStatePropertyOfSizeN: () => (T$.MaterialStatePropertyOfSizeN = dart.constFn(material_state.MaterialStateProperty$(T$.SizeN())))(),
    MaterialStatePropertyNOfSizeN: () => (T$.MaterialStatePropertyNOfSizeN = dart.constFn(dart.nullable(T$.MaterialStatePropertyOfSizeN())))(),
    ButtonStyleNToMaterialStatePropertyNOfSizeN: () => (T$.ButtonStyleNToMaterialStatePropertyNOfSizeN = dart.constFn(dart.fnType(T$.MaterialStatePropertyNOfSizeN(), [T$.ButtonStyleN()])))(),
    BorderSideN: () => (T$.BorderSideN = dart.constFn(dart.nullable(borders.BorderSide)))(),
    MaterialStatePropertyOfBorderSideN: () => (T$.MaterialStatePropertyOfBorderSideN = dart.constFn(material_state.MaterialStateProperty$(T$.BorderSideN())))(),
    MaterialStatePropertyNOfBorderSideN: () => (T$.MaterialStatePropertyNOfBorderSideN = dart.constFn(dart.nullable(T$.MaterialStatePropertyOfBorderSideN())))(),
    ButtonStyleNToMaterialStatePropertyNOfBorderSideN: () => (T$.ButtonStyleNToMaterialStatePropertyNOfBorderSideN = dart.constFn(dart.fnType(T$.MaterialStatePropertyNOfBorderSideN(), [T$.ButtonStyleN()])))(),
    OutlinedBorderN: () => (T$.OutlinedBorderN = dart.constFn(dart.nullable(borders.OutlinedBorder)))(),
    MaterialStatePropertyOfOutlinedBorderN: () => (T$.MaterialStatePropertyOfOutlinedBorderN = dart.constFn(material_state.MaterialStateProperty$(T$.OutlinedBorderN())))(),
    MaterialStatePropertyNOfOutlinedBorderN: () => (T$.MaterialStatePropertyNOfOutlinedBorderN = dart.constFn(dart.nullable(T$.MaterialStatePropertyOfOutlinedBorderN())))(),
    ButtonStyleNToMaterialStatePropertyNOfOutlinedBorderN: () => (T$.ButtonStyleNToMaterialStatePropertyNOfOutlinedBorderN = dart.constFn(dart.fnType(T$.MaterialStatePropertyNOfOutlinedBorderN(), [T$.ButtonStyleN()])))(),
    MouseCursorN: () => (T$.MouseCursorN = dart.constFn(dart.nullable(mouse_cursor.MouseCursor)))(),
    ButtonStyleNToMouseCursorN: () => (T$.ButtonStyleNToMouseCursorN = dart.constFn(dart.fnType(T$.MouseCursorN(), [T$.ButtonStyleN()])))(),
    SetOfMaterialState: () => (T$.SetOfMaterialState = dart.constFn(core.Set$(material_state.MaterialState)))(),
    SetOfMaterialStateToMouseCursorN: () => (T$.SetOfMaterialStateToMouseCursorN = dart.constFn(dart.fnType(T$.MouseCursorN(), [T$.SetOfMaterialState()])))(),
    ButtonStyleNToColorN: () => (T$.ButtonStyleNToColorN = dart.constFn(dart.fnType(T$.ColorN(), [T$.ButtonStyleN()])))(),
    SetOfMaterialStateToColorN: () => (T$.SetOfMaterialStateToColorN = dart.constFn(dart.fnType(T$.ColorN(), [T$.SetOfMaterialState()])))(),
    VisualDensityN: () => (T$.VisualDensityN = dart.constFn(dart.nullable(theme_data.VisualDensity)))(),
    ButtonStyleNToVisualDensityN: () => (T$.ButtonStyleNToVisualDensityN = dart.constFn(dart.fnType(T$.VisualDensityN(), [T$.ButtonStyleN()])))(),
    MaterialTapTargetSizeN: () => (T$.MaterialTapTargetSizeN = dart.constFn(dart.nullable(theme_data.MaterialTapTargetSize)))(),
    ButtonStyleNToMaterialTapTargetSizeN: () => (T$.ButtonStyleNToMaterialTapTargetSizeN = dart.constFn(dart.fnType(T$.MaterialTapTargetSizeN(), [T$.ButtonStyleN()])))(),
    DurationN: () => (T$.DurationN = dart.constFn(dart.nullable(core.Duration)))(),
    ButtonStyleNToDurationN: () => (T$.ButtonStyleNToDurationN = dart.constFn(dart.fnType(T$.DurationN(), [T$.ButtonStyleN()])))(),
    boolN: () => (T$.boolN = dart.constFn(dart.nullable(core.bool)))(),
    ButtonStyleNToboolN: () => (T$.ButtonStyleNToboolN = dart.constFn(dart.fnType(T$.boolN(), [T$.ButtonStyleN()])))(),
    AlignmentGeometryN: () => (T$.AlignmentGeometryN = dart.constFn(dart.nullable(alignment.AlignmentGeometry)))(),
    ButtonStyleNToAlignmentGeometryN: () => (T$.ButtonStyleNToAlignmentGeometryN = dart.constFn(dart.fnType(T$.AlignmentGeometryN(), [T$.ButtonStyleN()])))(),
    InteractiveInkFeatureFactoryN: () => (T$.InteractiveInkFeatureFactoryN = dart.constFn(dart.nullable(ink_well.InteractiveInkFeatureFactory)))(),
    ButtonStyleNToInteractiveInkFeatureFactoryN: () => (T$.ButtonStyleNToInteractiveInkFeatureFactoryN = dart.constFn(dart.fnType(T$.InteractiveInkFeatureFactoryN(), [T$.ButtonStyleN()])))(),
    AnimationStatusTovoid: () => (T$.AnimationStatusTovoid = dart.constFn(dart.fnType(dart.void, [animation.AnimationStatus])))(),
    RenderBoxAndBoxConstraintsToSize: () => (T$.RenderBoxAndBoxConstraintsToSize = dart.constFn(dart.fnType(ui.Size, [box$.RenderBox, box$.BoxConstraints])))(),
    OffsetN: () => (T$.OffsetN = dart.constFn(dart.nullable(ui.Offset)))(),
    BoxHitTestResultAndOffsetNTobool: () => (T$.BoxHitTestResultAndOffsetNTobool = dart.constFn(dart.fnType(core.bool, [box$.BoxHitTestResult, T$.OffsetN()])))(),
    JSArrayOfWidget: () => (T$.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    SnackBarClosedReasonL: () => (T$.SnackBarClosedReasonL = dart.constFn(dart.legacy(snack_bar.SnackBarClosedReason)))(),
    StringToString: () => (T$.StringToString = dart.constFn(dart.fnType(core.String, [core.String])))(),
    StringL: () => (T$.StringL = dart.constFn(dart.legacy(core.String)))(),
    ValueKeyOfStringL: () => (T$.ValueKeyOfStringL = dart.constFn(key.ValueKey$(T$.StringL())))(),
    DismissDirectionTovoid: () => (T$.DismissDirectionTovoid = dart.constFn(dart.fnType(dart.void, [dismissible.DismissDirection])))(),
    WidgetN: () => (T$.WidgetN = dart.constFn(dart.nullable(framework.Widget)))(),
    BuildContextAndWidgetNToAlign: () => (T$.BuildContextAndWidgetNToAlign = dart.constFn(dart.fnType(basic.Align, [framework.BuildContext, T$.WidgetN()])))(),
    _AnimationSwapOfdouble: () => (T$._AnimationSwapOfdouble = dart.constFn(floating_action_button_location._AnimationSwap$(core.double)))(),
    ObjectFlagPropertyOfObject: () => (T$.ObjectFlagPropertyOfObject = dart.constFn(diagnostics.ObjectFlagProperty$(core.Object)))(),
    DiagnosticsPropertyOfShapeBorder: () => (T$.DiagnosticsPropertyOfShapeBorder = dart.constFn(diagnostics.DiagnosticsProperty$(borders.ShapeBorder)))(),
    DiagnosticsPropertyOfMaterialTapTargetSize: () => (T$.DiagnosticsPropertyOfMaterialTapTargetSize = dart.constFn(diagnostics.DiagnosticsProperty$(theme_data.MaterialTapTargetSize)))(),
    CollapseModeL: () => (T$.CollapseModeL = dart.constFn(dart.legacy(flexible_space_bar.CollapseMode)))(),
    StretchModeL: () => (T$.StretchModeL = dart.constFn(dart.legacy(flexible_space_bar.StretchMode)))(),
    BuildContextAndBoxConstraintsToContainer: () => (T$.BuildContextAndBoxConstraintsToContainer = dart.constFn(dart.fnType(container.Container, [framework.BuildContext, box$.BoxConstraints])))(),
    BuildContextAndBoxConstraintsToClipRect: () => (T$.BuildContextAndBoxConstraintsToClipRect = dart.constFn(dart.fnType(basic.ClipRect, [framework.BuildContext, box$.BoxConstraints])))(),
    DiagnosticsPropertyOfBoxConstraints: () => (T$.DiagnosticsPropertyOfBoxConstraints = dart.constFn(diagnostics.DiagnosticsProperty$(box$.BoxConstraints)))(),
    DiagnosticsPropertyOfBorderRadius: () => (T$.DiagnosticsPropertyOfBorderRadius = dart.constFn(diagnostics.DiagnosticsProperty$(border_radius.BorderRadius)))(),
    DiagnosticsPropertyOfTextStyle: () => (T$.DiagnosticsPropertyOfTextStyle = dart.constFn(diagnostics.DiagnosticsProperty$(text_style.TextStyle)))(),
    DiagnosticsPropertyOfBorderSide: () => (T$.DiagnosticsPropertyOfBorderSide = dart.constFn(diagnostics.DiagnosticsProperty$(borders.BorderSide)))(),
    DiagnosticsPropertyOfInputDecorationTheme: () => (T$.DiagnosticsPropertyOfInputDecorationTheme = dart.constFn(diagnostics.DiagnosticsProperty$(input_decorator.InputDecorationTheme)))(),
    TabBarIndicatorSizeL: () => (T$.TabBarIndicatorSizeL = dart.constFn(dart.legacy(tabs$.TabBarIndicatorSize)))(),
    AnimationOfdouble: () => (T$.AnimationOfdouble = dart.constFn(animation.Animation$(core.double)))(),
    JSArrayOfdouble: () => (T$.JSArrayOfdouble = dart.constFn(_interceptors.JSArray$(core.double)))(),
    WidgetL: () => (T$.WidgetL = dart.constFn(dart.legacy(framework.Widget)))(),
    StateOfStatefulWidget: () => (T$.StateOfStatefulWidget = dart.constFn(framework.State$(framework.StatefulWidget)))(),
    GlobalKeyOfStateOfStatefulWidget: () => (T$.GlobalKeyOfStateOfStatefulWidget = dart.constFn(framework.GlobalKey$(T$.StateOfStatefulWidget())))(),
    WidgetToGlobalKeyOfStateOfStatefulWidget: () => (T$.WidgetToGlobalKeyOfStateOfStatefulWidget = dart.constFn(dart.fnType(T$.GlobalKeyOfStateOfStatefulWidget(), [framework.Widget])))(),
    ListOfGlobalKeyOfStateOfStatefulWidget: () => (T$.ListOfGlobalKeyOfStateOfStatefulWidget = dart.constFn(core.List$(T$.GlobalKeyOfStateOfStatefulWidget())))(),
    intToGlobalKeyOfStateOfStatefulWidget: () => (T$.intToGlobalKeyOfStateOfStatefulWidget = dart.constFn(dart.fnType(T$.GlobalKeyOfStateOfStatefulWidget(), [core.int])))(),
    ListOfWidget: () => (T$.ListOfWidget = dart.constFn(core.List$(framework.Widget)))(),
    intToCenter: () => (T$.intToCenter = dart.constFn(dart.fnType(basic.Center, [core.int])))(),
    FutureOfvoid: () => (T$.FutureOfvoid = dart.constFn(async.Future$(dart.void)))(),
    NotificationListenerOfScrollNotification: () => (T$.NotificationListenerOfScrollNotification = dart.constFn(notification_listener.NotificationListener$(scroll_notification.ScrollNotification)))(),
    intToWidget: () => (T$.intToWidget = dart.constFn(dart.fnType(framework.Widget, [core.int])))(),
    BuildContextAndWidgetNToSemantics: () => (T$.BuildContextAndWidgetNToSemantics = dart.constFn(dart.fnType(basic.Semantics, [framework.BuildContext, T$.WidgetN()])))(),
    ColorNAndColorNAnddoubleToColorN: () => (T$.ColorNAndColorNAnddoubleToColorN = dart.constFn(dart.fnType(T$.ColorN(), [T$.ColorN(), T$.ColorN(), core.double])))(),
    DiagnosticsPropertyOfMaterialStatePropertyOfColorN: () => (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MaterialStatePropertyOfColorN())))(),
    MaterialStatePropertyOfMouseCursorN: () => (T$.MaterialStatePropertyOfMouseCursorN = dart.constFn(material_state.MaterialStateProperty$(T$.MouseCursorN())))(),
    DiagnosticsPropertyOfMaterialStatePropertyOfMouseCursorN: () => (T$.DiagnosticsPropertyOfMaterialStatePropertyOfMouseCursorN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MaterialStatePropertyOfMouseCursorN())))(),
    SnackBarBehaviorL: () => (T$.SnackBarBehaviorL = dart.constFn(dart.legacy(snack_bar_theme.SnackBarBehavior)))(),
    DiagnosticsPropertyOfSnackBarBehavior: () => (T$.DiagnosticsPropertyOfSnackBarBehavior = dart.constFn(diagnostics.DiagnosticsProperty$(snack_bar_theme.SnackBarBehavior)))(),
    ShowValueIndicatorL: () => (T$.ShowValueIndicatorL = dart.constFn(dart.legacy(slider_theme.ShowValueIndicator)))(),
    ThumbL: () => (T$.ThumbL = dart.constFn(dart.legacy(slider_theme.Thumb)))(),
    JSArrayOfObjectN: () => (T$.JSArrayOfObjectN = dart.constFn(_interceptors.JSArray$(T$.ObjectN())))(),
    DiagnosticsPropertyOfSliderComponentShape: () => (T$.DiagnosticsPropertyOfSliderComponentShape = dart.constFn(diagnostics.DiagnosticsProperty$(slider_theme.SliderComponentShape)))(),
    DiagnosticsPropertyOfSliderTickMarkShape: () => (T$.DiagnosticsPropertyOfSliderTickMarkShape = dart.constFn(diagnostics.DiagnosticsProperty$(slider_theme.SliderTickMarkShape)))(),
    DiagnosticsPropertyOfSliderTrackShape: () => (T$.DiagnosticsPropertyOfSliderTrackShape = dart.constFn(diagnostics.DiagnosticsProperty$(slider_theme.SliderTrackShape)))(),
    DiagnosticsPropertyOfRangeSliderTickMarkShape: () => (T$.DiagnosticsPropertyOfRangeSliderTickMarkShape = dart.constFn(diagnostics.DiagnosticsProperty$(slider_theme.RangeSliderTickMarkShape)))(),
    DiagnosticsPropertyOfRangeSliderThumbShape: () => (T$.DiagnosticsPropertyOfRangeSliderThumbShape = dart.constFn(diagnostics.DiagnosticsProperty$(slider_theme.RangeSliderThumbShape)))(),
    DiagnosticsPropertyOfRangeSliderTrackShape: () => (T$.DiagnosticsPropertyOfRangeSliderTrackShape = dart.constFn(diagnostics.DiagnosticsProperty$(slider_theme.RangeSliderTrackShape)))(),
    DiagnosticsPropertyOfRangeSliderValueIndicatorShape: () => (T$.DiagnosticsPropertyOfRangeSliderValueIndicatorShape = dart.constFn(diagnostics.DiagnosticsProperty$(slider_theme.RangeSliderValueIndicatorShape)))(),
    EnumPropertyOfShowValueIndicator: () => (T$.EnumPropertyOfShowValueIndicator = dart.constFn(diagnostics.EnumProperty$(slider_theme.ShowValueIndicator)))(),
    ThumbN: () => (T$.ThumbN = dart.constFn(dart.nullable(slider_theme.Thumb)))(),
    TextDirectionAndRangeValuesAnddouble__ToThumbN: () => (T$.TextDirectionAndRangeValuesAnddouble__ToThumbN = dart.constFn(dart.fnType(T$.ThumbN(), [ui.TextDirection, slider_theme.RangeValues, core.double, ui.Size, ui.Size, core.double])))(),
    DiagnosticsPropertyOfTextDirectionAndRangeValuesAnddouble__ToThumbN: () => (T$.DiagnosticsPropertyOfTextDirectionAndRangeValuesAnddouble__ToThumbN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.TextDirectionAndRangeValuesAnddouble__ToThumbN())))(),
    numN: () => (T$.numN = dart.constFn(dart.nullable(core.num)))(),
    numNAndnumNAnddoubleTodoubleN: () => (T$.numNAndnumNAnddoubleTodoubleN = dart.constFn(dart.fnType(T$.doubleN(), [T$.numN(), T$.numN(), core.double])))(),
    DiagnosticsPropertyOfMaterialStatePropertyOfdoubleN: () => (T$.DiagnosticsPropertyOfMaterialStatePropertyOfdoubleN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MaterialStatePropertyOfdoubleN())))(),
    DiagnosticsPropertyOfbool: () => (T$.DiagnosticsPropertyOfbool = dart.constFn(diagnostics.DiagnosticsProperty$(core.bool)))(),
    DiagnosticsPropertyOfRadius: () => (T$.DiagnosticsPropertyOfRadius = dart.constFn(diagnostics.DiagnosticsProperty$(ui.Radius)))(),
    DiagnosticsPropertyOfdouble: () => (T$.DiagnosticsPropertyOfdouble = dart.constFn(diagnostics.DiagnosticsProperty$(core.double)))(),
    DiagnosticsPropertyOfVisualDensity: () => (T$.DiagnosticsPropertyOfVisualDensity = dart.constFn(diagnostics.DiagnosticsProperty$(theme_data.VisualDensity)))(),
    TweenOfOffset: () => (T$.TweenOfOffset = dart.constFn(tween.Tween$(ui.Offset)))(),
    BuildContextAndWidgetNToContainer: () => (T$.BuildContextAndWidgetNToContainer = dart.constFn(dart.fnType(container.Container, [framework.BuildContext, T$.WidgetN()])))(),
    BuildContextAndWidgetNToFractionalTranslation: () => (T$.BuildContextAndWidgetNToFractionalTranslation = dart.constFn(dart.fnType(basic.FractionalTranslation, [framework.BuildContext, T$.WidgetN()])))(),
    BuildContextAndBoxConstraintsToAnimatedBuilder: () => (T$.BuildContextAndBoxConstraintsToAnimatedBuilder = dart.constFn(dart.fnType(transitions.AnimatedBuilder, [framework.BuildContext, box$.BoxConstraints])))(),
    BuildContextAndAnimationOfdoubleAndWidgetNTo_ZoomEnterTransition: () => (T$.BuildContextAndAnimationOfdoubleAndWidgetNTo_ZoomEnterTransition = dart.constFn(dart.fnType(page_transitions_theme._ZoomEnterTransition, [framework.BuildContext, T$.AnimationOfdouble(), T$.WidgetN()])))(),
    BuildContextAndAnimationOfdoubleAndWidgetNTo_ZoomExitTransition: () => (T$.BuildContextAndAnimationOfdoubleAndWidgetNTo_ZoomExitTransition = dart.constFn(dart.fnType(page_transitions_theme._ZoomExitTransition, [framework.BuildContext, T$.AnimationOfdouble(), T$.WidgetN()])))(),
    TweenSequenceItemOfdouble: () => (T$.TweenSequenceItemOfdouble = dart.constFn(tween_sequence.TweenSequenceItem$(core.double)))(),
    JSArrayOfTweenSequenceItemOfdouble: () => (T$.JSArrayOfTweenSequenceItemOfdouble = dart.constFn(_interceptors.JSArray$(T$.TweenSequenceItemOfdouble())))(),
    TweenSequenceOfdouble: () => (T$.TweenSequenceOfdouble = dart.constFn(tween_sequence.TweenSequence$(core.double)))(),
    TweenOfdoubleN: () => (T$.TweenOfdoubleN = dart.constFn(tween.Tween$(T$.doubleN())))(),
    TargetPlatformL: () => (T$.TargetPlatformL = dart.constFn(dart.legacy(platform$.TargetPlatform)))(),
    PageTransitionsBuilderL: () => (T$.PageTransitionsBuilderL = dart.constFn(dart.legacy(page_transitions_theme.PageTransitionsBuilder)))(),
    PageTransitionsBuilderN: () => (T$.PageTransitionsBuilderN = dart.constFn(dart.nullable(page_transitions_theme.PageTransitionsBuilder)))(),
    TargetPlatformToPageTransitionsBuilderN: () => (T$.TargetPlatformToPageTransitionsBuilderN = dart.constFn(dart.fnType(T$.PageTransitionsBuilderN(), [platform$.TargetPlatform])))(),
    MapOfTargetPlatform$PageTransitionsBuilder: () => (T$.MapOfTargetPlatform$PageTransitionsBuilder = dart.constFn(core.Map$(platform$.TargetPlatform, page_transitions_theme.PageTransitionsBuilder)))(),
    DiagnosticsPropertyOfMapOfTargetPlatform$PageTransitionsBuilder: () => (T$.DiagnosticsPropertyOfMapOfTargetPlatform$PageTransitionsBuilder = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MapOfTargetPlatform$PageTransitionsBuilder())))(),
    ListOfAnimationController: () => (T$.ListOfAnimationController = dart.constFn(core.List$(animation_controller.AnimationController)))(),
    intToAnimationController: () => (T$.intToAnimationController = dart.constFn(dart.fnType(animation_controller.AnimationController, [core.int])))(),
    AnimationControllerToAnimationOfdouble: () => (T$.AnimationControllerToAnimationOfdouble = dart.constFn(dart.fnType(T$.AnimationOfdouble(), [animation_controller.AnimationController])))(),
    boolTovoid: () => (T$.boolTovoid = dart.constFn(dart.fnType(dart.void, [core.bool])))(),
    NavigationRailLabelTypeL: () => (T$.NavigationRailLabelTypeL = dart.constFn(dart.legacy(navigation_rail.NavigationRailLabelType)))(),
    DiagnosticsPropertyOfIconThemeData: () => (T$.DiagnosticsPropertyOfIconThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(icon_theme_data.IconThemeData)))(),
    DiagnosticsPropertyOfNavigationRailLabelType: () => (T$.DiagnosticsPropertyOfNavigationRailLabelType = dart.constFn(diagnostics.DiagnosticsProperty$(navigation_rail.NavigationRailLabelType)))(),
    JSArrayOfListenable: () => (T$.JSArrayOfListenable = dart.constFn(_interceptors.JSArray$(change_notifier.Listenable)))(),
    FloatingLabelBehaviorL: () => (T$.FloatingLabelBehaviorL = dart.constFn(dart.legacy(input_decorator.FloatingLabelBehavior)))(),
    _DecorationSlotL: () => (T$._DecorationSlotL = dart.constFn(dart.legacy(input_decorator._DecorationSlot)))(),
    LinkedMapOf_DecorationSlot$RenderBox: () => (T$.LinkedMapOf_DecorationSlot$RenderBox = dart.constFn(_js_helper.LinkedMap$(input_decorator._DecorationSlot, box$.RenderBox)))(),
    SyncIterableOfRenderBox: () => (T$.SyncIterableOfRenderBox = dart.constFn(_js_helper.SyncIterable$(box$.RenderBox)))(),
    JSArrayOfDiagnosticsNode: () => (T$.JSArrayOfDiagnosticsNode = dart.constFn(_interceptors.JSArray$(diagnostics.DiagnosticsNode)))(),
    RenderBoxN: () => (T$.RenderBoxN = dart.constFn(dart.nullable(box$.RenderBox)))(),
    RenderBoxNAndStringTovoid: () => (T$.RenderBoxNAndStringTovoid = dart.constFn(dart.fnType(dart.void, [T$.RenderBoxN(), core.String])))(),
    LinkedMapOfRenderBoxN$double: () => (T$.LinkedMapOfRenderBoxN$double = dart.constFn(_js_helper.LinkedMap$(T$.RenderBoxN(), core.double)))(),
    JSArrayOfRenderBoxN: () => (T$.JSArrayOfRenderBoxN = dart.constFn(_interceptors.JSArray$(T$.RenderBoxN())))(),
    RenderBoxAnddoubleTodouble: () => (T$.RenderBoxAnddoubleTodouble = dart.constFn(dart.fnType(core.double, [box$.RenderBox, core.double])))(),
    RenderBoxNTovoid: () => (T$.RenderBoxNTovoid = dart.constFn(dart.fnType(dart.void, [T$.RenderBoxN()])))(),
    TransformLayerN: () => (T$.TransformLayerN = dart.constFn(dart.nullable(layer.TransformLayer)))(),
    BoxHitTestResultAndOffsetTobool: () => (T$.BoxHitTestResultAndOffsetTobool = dart.constFn(dart.fnType(core.bool, [box$.BoxHitTestResult, ui.Offset])))(),
    LinkedMapOf_DecorationSlot$Element: () => (T$.LinkedMapOf_DecorationSlot$Element = dart.constFn(_js_helper.LinkedMap$(input_decorator._DecorationSlot, framework.Element)))(),
    DiagnosticsPropertyOfInputDecoration: () => (T$.DiagnosticsPropertyOfInputDecoration = dart.constFn(diagnostics.DiagnosticsProperty$(input_decorator.InputDecoration)))(),
    JSArrayOfString: () => (T$.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    DiagnosticsPropertyOfFloatingLabelBehavior: () => (T$.DiagnosticsPropertyOfFloatingLabelBehavior = dart.constFn(diagnostics.DiagnosticsProperty$(input_decorator.FloatingLabelBehavior)))(),
    DiagnosticsPropertyOfInputBorder: () => (T$.DiagnosticsPropertyOfInputBorder = dart.constFn(diagnostics.DiagnosticsProperty$(input_border.InputBorder)))(),
    DiagnosticsPropertyOfMaterialStatePropertyOfTextStyleN: () => (T$.DiagnosticsPropertyOfMaterialStatePropertyOfTextStyleN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MaterialStatePropertyOfTextStyleN())))(),
    DiagnosticsPropertyOfMaterialStatePropertyOfEdgeInsetsGeometryN: () => (T$.DiagnosticsPropertyOfMaterialStatePropertyOfEdgeInsetsGeometryN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MaterialStatePropertyOfEdgeInsetsGeometryN())))(),
    DiagnosticsPropertyOfMaterialStatePropertyOfSizeN: () => (T$.DiagnosticsPropertyOfMaterialStatePropertyOfSizeN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MaterialStatePropertyOfSizeN())))(),
    DiagnosticsPropertyOfMaterialStatePropertyOfBorderSideN: () => (T$.DiagnosticsPropertyOfMaterialStatePropertyOfBorderSideN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MaterialStatePropertyOfBorderSideN())))(),
    DiagnosticsPropertyOfMaterialStatePropertyOfOutlinedBorderN: () => (T$.DiagnosticsPropertyOfMaterialStatePropertyOfOutlinedBorderN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MaterialStatePropertyOfOutlinedBorderN())))(),
    EnumPropertyOfMaterialTapTargetSize: () => (T$.EnumPropertyOfMaterialTapTargetSize = dart.constFn(diagnostics.EnumProperty$(theme_data.MaterialTapTargetSize)))(),
    DiagnosticsPropertyOfDuration: () => (T$.DiagnosticsPropertyOfDuration = dart.constFn(diagnostics.DiagnosticsProperty$(core.Duration)))(),
    DiagnosticsPropertyOfAlignmentGeometry: () => (T$.DiagnosticsPropertyOfAlignmentGeometry = dart.constFn(diagnostics.DiagnosticsProperty$(alignment.AlignmentGeometry)))(),
    TextStyleNAndTextStyleNAnddoubleToTextStyleN: () => (T$.TextStyleNAndTextStyleNAnddoubleToTextStyleN = dart.constFn(dart.fnType(T$.TextStyleN(), [T$.TextStyleN(), T$.TextStyleN(), core.double])))(),
    EdgeInsetsGeometryNAndEdgeInsetsGeometryNAnddoubleToEdgeInsetsGeometryN: () => (T$.EdgeInsetsGeometryNAndEdgeInsetsGeometryNAnddoubleToEdgeInsetsGeometryN = dart.constFn(dart.fnType(T$.EdgeInsetsGeometryN(), [T$.EdgeInsetsGeometryN(), T$.EdgeInsetsGeometryN(), core.double])))(),
    SizeNAndSizeNAnddoubleToSizeN: () => (T$.SizeNAndSizeNAnddoubleToSizeN = dart.constFn(dart.fnType(T$.SizeN(), [T$.SizeN(), T$.SizeN(), core.double])))(),
    DiagnosticsPropertyOfDecoration: () => (T$.DiagnosticsPropertyOfDecoration = dart.constFn(diagnostics.DiagnosticsProperty$(decoration.Decoration)))(),
    EnumPropertyOfBrightness: () => (T$.EnumPropertyOfBrightness = dart.constFn(diagnostics.EnumProperty$(ui.Brightness)))(),
    DiagnosticsPropertyOfOutlinedBorder: () => (T$.DiagnosticsPropertyOfOutlinedBorder = dart.constFn(diagnostics.DiagnosticsProperty$(borders.OutlinedBorder)))(),
    DiagnosticsPropertyOfClip: () => (T$.DiagnosticsPropertyOfClip = dart.constFn(diagnostics.DiagnosticsProperty$(ui.Clip)))(),
    DiagnosticsPropertyOfButtonTextTheme: () => (T$.DiagnosticsPropertyOfButtonTextTheme = dart.constFn(diagnostics.DiagnosticsProperty$(button_theme.ButtonTextTheme)))(),
    DiagnosticsPropertyOfBrightness: () => (T$.DiagnosticsPropertyOfBrightness = dart.constFn(diagnostics.DiagnosticsProperty$(ui.Brightness)))(),
    BuildContextAndWidgetNToRaisedButton: () => (T$.BuildContextAndWidgetNToRaisedButton = dart.constFn(dart.fnType(raised_button.RaisedButton, [framework.BuildContext, T$.WidgetN()])))(),
    ShapeBorderN: () => (T$.ShapeBorderN = dart.constFn(dart.nullable(borders.ShapeBorder)))(),
    intL: () => (T$.intL = dart.constFn(dart.legacy(core.int)))(),
    ColorL: () => (T$.ColorL = dart.constFn(dart.legacy(ui.Color)))(),
    ButtonTextThemeL: () => (T$.ButtonTextThemeL = dart.constFn(dart.legacy(button_theme.ButtonTextTheme)))(),
    ButtonBarLayoutBehaviorL: () => (T$.ButtonBarLayoutBehaviorL = dart.constFn(dart.legacy(button_theme.ButtonBarLayoutBehavior)))(),
    EnumPropertyOfButtonTextTheme: () => (T$.EnumPropertyOfButtonTextTheme = dart.constFn(diagnostics.EnumProperty$(button_theme.ButtonTextTheme)))(),
    DiagnosticsPropertyOfColorScheme: () => (T$.DiagnosticsPropertyOfColorScheme = dart.constFn(diagnostics.DiagnosticsProperty$(color_scheme.ColorScheme)))(),
    DiagnosticsPropertyOfMainAxisAlignment: () => (T$.DiagnosticsPropertyOfMainAxisAlignment = dart.constFn(diagnostics.DiagnosticsProperty$(flex.MainAxisAlignment)))(),
    DiagnosticsPropertyOfMainAxisSize: () => (T$.DiagnosticsPropertyOfMainAxisSize = dart.constFn(diagnostics.DiagnosticsProperty$(flex.MainAxisSize)))(),
    DiagnosticsPropertyOfButtonBarLayoutBehavior: () => (T$.DiagnosticsPropertyOfButtonBarLayoutBehavior = dart.constFn(diagnostics.DiagnosticsProperty$(button_theme.ButtonBarLayoutBehavior)))(),
    DiagnosticsPropertyOfVerticalDirection: () => (T$.DiagnosticsPropertyOfVerticalDirection = dart.constFn(diagnostics.DiagnosticsProperty$(basic_types.VerticalDirection)))(),
    ListOf_TooltipState: () => (T$.ListOf_TooltipState = dart.constFn(core.List$(tooltip._TooltipState)))(),
    LinkedHashSetOf_TooltipState: () => (T$.LinkedHashSetOf_TooltipState = dart.constFn(collection.LinkedHashSet$(tooltip._TooltipState)))(),
    PointerEnterEventTovoid: () => (T$.PointerEnterEventTovoid = dart.constFn(dart.fnType(dart.void, [events.PointerEnterEvent])))(),
    PointerExitEventTovoid: () => (T$.PointerExitEventTovoid = dart.constFn(dart.fnType(dart.void, [events.PointerExitEvent])))(),
    BuildContextToWidget: () => (T$.BuildContextToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext])))(),
    BottomNavigationBarTypeL: () => (T$.BottomNavigationBarTypeL = dart.constFn(dart.legacy(bottom_navigation_bar.BottomNavigationBarType)))(),
    BottomNavigationBarItemTobool: () => (T$.BottomNavigationBarItemTobool = dart.constFn(dart.fnType(core.bool, [bottom_navigation_bar_item.BottomNavigationBarItem])))(),
    JSArrayOfAnimationController: () => (T$.JSArrayOfAnimationController = dart.constFn(_interceptors.JSArray$(animation_controller.AnimationController)))(),
    ListQueueOf_Circle: () => (T$.ListQueueOf_Circle = dart.constFn(collection.ListQueue$(bottom_navigation_bar._Circle)))(),
    ListOfCurvedAnimation: () => (T$.ListOfCurvedAnimation = dart.constFn(core.List$(animations.CurvedAnimation)))(),
    intToCurvedAnimation: () => (T$.intToCurvedAnimation = dart.constFn(dart.fnType(animations.CurvedAnimation, [core.int])))(),
    doubleAnddoubleTodouble: () => (T$.doubleAnddoubleTodouble = dart.constFn(dart.fnType(core.double, [core.double, core.double])))(),
    IterableOfAnimationOfdouble: () => (T$.IterableOfAnimationOfdouble = dart.constFn(core.Iterable$(T$.AnimationOfdouble())))(),
    IterableOfAnimationOfdoubleTodouble: () => (T$.IterableOfAnimationOfdoubleTodouble = dart.constFn(dart.fnType(core.double, [T$.IterableOfAnimationOfdouble()])))(),
    DiagnosticsPropertyOfBottomNavigationBarType: () => (T$.DiagnosticsPropertyOfBottomNavigationBarType = dart.constFn(diagnostics.DiagnosticsProperty$(bottom_navigation_bar.BottomNavigationBarType)))(),
    DiagnosticsPropertyOfNotchedShape: () => (T$.DiagnosticsPropertyOfNotchedShape = dart.constFn(diagnostics.DiagnosticsProperty$(notched_shapes.NotchedShape)))(),
    MaterialTapTargetSizeL: () => (T$.MaterialTapTargetSizeL = dart.constFn(dart.legacy(theme_data.MaterialTapTargetSize)))(),
    VoidToThemeData: () => (T$.VoidToThemeData = dart.constFn(dart.fnType(theme_data.ThemeData, [])))(),
    EnumPropertyOfTargetPlatform: () => (T$.EnumPropertyOfTargetPlatform = dart.constFn(diagnostics.EnumProperty$(platform$.TargetPlatform)))(),
    DiagnosticsPropertyOfButtonThemeData: () => (T$.DiagnosticsPropertyOfButtonThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(button_theme.ButtonThemeData)))(),
    DiagnosticsPropertyOfToggleButtonsThemeData: () => (T$.DiagnosticsPropertyOfToggleButtonsThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(toggle_buttons_theme.ToggleButtonsThemeData)))(),
    DiagnosticsPropertyOfTextTheme: () => (T$.DiagnosticsPropertyOfTextTheme = dart.constFn(diagnostics.DiagnosticsProperty$(text_theme.TextTheme)))(),
    DiagnosticsPropertyOfSliderThemeData: () => (T$.DiagnosticsPropertyOfSliderThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(slider_theme.SliderThemeData)))(),
    DiagnosticsPropertyOfTabBarTheme: () => (T$.DiagnosticsPropertyOfTabBarTheme = dart.constFn(diagnostics.DiagnosticsProperty$(tab_bar_theme.TabBarTheme)))(),
    DiagnosticsPropertyOfTooltipThemeData: () => (T$.DiagnosticsPropertyOfTooltipThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(tooltip_theme.TooltipThemeData)))(),
    DiagnosticsPropertyOfCardTheme: () => (T$.DiagnosticsPropertyOfCardTheme = dart.constFn(diagnostics.DiagnosticsProperty$(card_theme.CardTheme)))(),
    DiagnosticsPropertyOfChipThemeData: () => (T$.DiagnosticsPropertyOfChipThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(chip_theme.ChipThemeData)))(),
    DiagnosticsPropertyOfPageTransitionsTheme: () => (T$.DiagnosticsPropertyOfPageTransitionsTheme = dart.constFn(diagnostics.DiagnosticsProperty$(page_transitions_theme.PageTransitionsTheme)))(),
    DiagnosticsPropertyOfAppBarTheme: () => (T$.DiagnosticsPropertyOfAppBarTheme = dart.constFn(diagnostics.DiagnosticsProperty$(app_bar_theme.AppBarTheme)))(),
    DiagnosticsPropertyOfScrollbarThemeData: () => (T$.DiagnosticsPropertyOfScrollbarThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(scrollbar_theme.ScrollbarThemeData)))(),
    DiagnosticsPropertyOfBottomAppBarTheme: () => (T$.DiagnosticsPropertyOfBottomAppBarTheme = dart.constFn(diagnostics.DiagnosticsProperty$(bottom_app_bar_theme.BottomAppBarTheme)))(),
    DiagnosticsPropertyOfDialogTheme: () => (T$.DiagnosticsPropertyOfDialogTheme = dart.constFn(diagnostics.DiagnosticsProperty$(dialog_theme.DialogTheme)))(),
    DiagnosticsPropertyOfFloatingActionButtonThemeData: () => (T$.DiagnosticsPropertyOfFloatingActionButtonThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(floating_action_button_theme.FloatingActionButtonThemeData)))(),
    DiagnosticsPropertyOfNavigationRailThemeData: () => (T$.DiagnosticsPropertyOfNavigationRailThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(navigation_rail_theme.NavigationRailThemeData)))(),
    DiagnosticsPropertyOfTypography: () => (T$.DiagnosticsPropertyOfTypography = dart.constFn(diagnostics.DiagnosticsProperty$(typography$.Typography)))(),
    DiagnosticsPropertyOfNoDefaultCupertinoThemeData: () => (T$.DiagnosticsPropertyOfNoDefaultCupertinoThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(theme.NoDefaultCupertinoThemeData)))(),
    DiagnosticsPropertyOfSnackBarThemeData: () => (T$.DiagnosticsPropertyOfSnackBarThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(snack_bar_theme.SnackBarThemeData)))(),
    DiagnosticsPropertyOfBottomSheetThemeData: () => (T$.DiagnosticsPropertyOfBottomSheetThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(bottom_sheet_theme.BottomSheetThemeData)))(),
    DiagnosticsPropertyOfPopupMenuThemeData: () => (T$.DiagnosticsPropertyOfPopupMenuThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(popup_menu_theme.PopupMenuThemeData)))(),
    DiagnosticsPropertyOfMaterialBannerThemeData: () => (T$.DiagnosticsPropertyOfMaterialBannerThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(banner_theme.MaterialBannerThemeData)))(),
    DiagnosticsPropertyOfDividerThemeData: () => (T$.DiagnosticsPropertyOfDividerThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(divider_theme.DividerThemeData)))(),
    DiagnosticsPropertyOfButtonBarThemeData: () => (T$.DiagnosticsPropertyOfButtonBarThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(button_bar_theme.ButtonBarThemeData)))(),
    DiagnosticsPropertyOfTimePickerThemeData: () => (T$.DiagnosticsPropertyOfTimePickerThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(time_picker_theme.TimePickerThemeData)))(),
    DiagnosticsPropertyOfTextSelectionThemeData: () => (T$.DiagnosticsPropertyOfTextSelectionThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(text_selection_theme.TextSelectionThemeData)))(),
    DiagnosticsPropertyOfBottomNavigationBarThemeData: () => (T$.DiagnosticsPropertyOfBottomNavigationBarThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(bottom_navigation_bar_theme.BottomNavigationBarThemeData)))(),
    DiagnosticsPropertyOfTextButtonThemeData: () => (T$.DiagnosticsPropertyOfTextButtonThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(text_button_theme.TextButtonThemeData)))(),
    DiagnosticsPropertyOfElevatedButtonThemeData: () => (T$.DiagnosticsPropertyOfElevatedButtonThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(elevated_button_theme.ElevatedButtonThemeData)))(),
    DiagnosticsPropertyOfOutlinedButtonThemeData: () => (T$.DiagnosticsPropertyOfOutlinedButtonThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(outlined_button_theme.OutlinedButtonThemeData)))(),
    DiagnosticsPropertyOfDataTableThemeData: () => (T$.DiagnosticsPropertyOfDataTableThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(data_table_theme.DataTableThemeData)))(),
    DiagnosticsPropertyOfCheckboxThemeData: () => (T$.DiagnosticsPropertyOfCheckboxThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(checkbox_theme.CheckboxThemeData)))(),
    DiagnosticsPropertyOfRadioThemeData: () => (T$.DiagnosticsPropertyOfRadioThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(radio_theme.RadioThemeData)))(),
    DiagnosticsPropertyOfSwitchThemeData: () => (T$.DiagnosticsPropertyOfSwitchThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(switch_theme.SwitchThemeData)))(),
    DiagnosticsPropertyOfProgressIndicatorThemeData: () => (T$.DiagnosticsPropertyOfProgressIndicatorThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(progress_indicator_theme.ProgressIndicatorThemeData)))(),
    _FifoCacheOf_IdentityThemeDataCacheKey$ThemeData: () => (T$._FifoCacheOf_IdentityThemeDataCacheKey$ThemeData = dart.constFn(theme_data._FifoCache$(theme_data._IdentityThemeDataCacheKey, theme_data.ThemeData)))(),
    IterablePropertyOfString: () => (T$.IterablePropertyOfString = dart.constFn(diagnostics.IterableProperty$(core.String)))(),
    DiagnosticsPropertyOfMouseCursor: () => (T$.DiagnosticsPropertyOfMouseCursor = dart.constFn(diagnostics.DiagnosticsProperty$(mouse_cursor.MouseCursor)))(),
    DiagnosticsPropertyOfBoxShape: () => (T$.DiagnosticsPropertyOfBoxShape = dart.constFn(diagnostics.DiagnosticsProperty$(box_border.BoxShape)))(),
    _HighlightTypeL: () => (T$._HighlightTypeL = dart.constFn(dart.legacy(ink_well._HighlightType)))(),
    InkHighlightN: () => (T$.InkHighlightN = dart.constFn(dart.nullable(ink_highlight.InkHighlight)))(),
    LinkedMapOf_HighlightType$InkHighlightN: () => (T$.LinkedMapOf_HighlightType$InkHighlightN = dart.constFn(_js_helper.LinkedMap$(ink_well._HighlightType, T$.InkHighlightN())))(),
    ObserverListOf_ParentInkResponseState: () => (T$.ObserverListOf_ParentInkResponseState = dart.constFn(observer_list.ObserverList$(ink_well._ParentInkResponseState)))(),
    CallbackActionOfActivateIntent: () => (T$.CallbackActionOfActivateIntent = dart.constFn(actions.CallbackAction$(actions.ActivateIntent)))(),
    CallbackActionOfButtonActivateIntent: () => (T$.CallbackActionOfButtonActivateIntent = dart.constFn(actions.CallbackAction$(actions.ButtonActivateIntent)))(),
    ActionOfIntent: () => (T$.ActionOfIntent = dart.constFn(actions.Action$(actions.Intent)))(),
    LinkedMapOfType$ActionOfIntent: () => (T$.LinkedMapOfType$ActionOfIntent = dart.constFn(_js_helper.LinkedMap$(core.Type, T$.ActionOfIntent())))(),
    InkHighlightNTobool: () => (T$.InkHighlightNTobool = dart.constFn(dart.fnType(core.bool, [T$.InkHighlightN()])))(),
    MaterialStateL: () => (T$.MaterialStateL = dart.constFn(dart.legacy(material_state.MaterialState)))(),
    _HashSetOfInteractiveInkFeature: () => (T$._HashSetOfInteractiveInkFeature = dart.constFn(collection._HashSet$(ink_well.InteractiveInkFeature)))(),
    LinkedHashSetOfMaterialState: () => (T$.LinkedHashSetOfMaterialState = dart.constFn(collection.LinkedHashSet$(material_state.MaterialState)))(),
    ListTileStyleL: () => (T$.ListTileStyleL = dart.constFn(dart.legacy(list_tile.ListTileStyle)))(),
    BuildContextToListTileTheme: () => (T$.BuildContextToListTileTheme = dart.constFn(dart.fnType(list_tile.ListTileTheme, [framework.BuildContext])))(),
    ListTileControlAffinityL: () => (T$.ListTileControlAffinityL = dart.constFn(dart.legacy(list_tile.ListTileControlAffinity)))(),
    SyncIterableOfWidget: () => (T$.SyncIterableOfWidget = dart.constFn(_js_helper.SyncIterable$(framework.Widget)))(),
    _ListTileSlotL: () => (T$._ListTileSlotL = dart.constFn(dart.legacy(list_tile._ListTileSlot)))(),
    LinkedMapOf_ListTileSlot$Element: () => (T$.LinkedMapOf_ListTileSlot$Element = dart.constFn(_js_helper.LinkedMap$(list_tile._ListTileSlot, framework.Element)))(),
    LinkedMapOf_ListTileSlot$RenderBox: () => (T$.LinkedMapOf_ListTileSlot$RenderBox = dart.constFn(_js_helper.LinkedMap$(list_tile._ListTileSlot, box$.RenderBox)))(),
    DrawerAlignmentL: () => (T$.DrawerAlignmentL = dart.constFn(dart.legacy(drawer.DrawerAlignment)))(),
    NotificationListenerOfDraggableScrollableNotification: () => (T$.NotificationListenerOfDraggableScrollableNotification = dart.constFn(notification_listener.NotificationListener$(draggable_scrollable_sheet.DraggableScrollableNotification)))(),
    MaterialBannerClosedReasonL: () => (T$.MaterialBannerClosedReasonL = dart.constFn(dart.legacy(banner.MaterialBannerClosedReason)))(),
    _ScaffoldSlotL: () => (T$._ScaffoldSlotL = dart.constFn(dart.legacy(scaffold$._ScaffoldSlot)))(),
    _HashSetOfScaffoldState: () => (T$._HashSetOfScaffoldState = dart.constFn(collection._HashSet$(scaffold$.ScaffoldState)))(),
    ScaffoldFeatureControllerOfMaterialBanner$MaterialBannerClosedReason: () => (T$.ScaffoldFeatureControllerOfMaterialBanner$MaterialBannerClosedReason = dart.constFn(scaffold$.ScaffoldFeatureController$(banner.MaterialBanner, banner.MaterialBannerClosedReason)))(),
    ListQueueOfScaffoldFeatureControllerOfMaterialBanner$MaterialBannerClosedReason: () => (T$.ListQueueOfScaffoldFeatureControllerOfMaterialBanner$MaterialBannerClosedReason = dart.constFn(collection.ListQueue$(T$.ScaffoldFeatureControllerOfMaterialBanner$MaterialBannerClosedReason())))(),
    ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason: () => (T$.ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason = dart.constFn(scaffold$.ScaffoldFeatureController$(snack_bar.SnackBar, snack_bar.SnackBarClosedReason)))(),
    ListQueueOfScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason: () => (T$.ListQueueOfScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason = dart.constFn(collection.ListQueue$(T$.ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason())))(),
    VoidToScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason: () => (T$.VoidToScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason = dart.constFn(dart.fnType(T$.ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason(), [])))(),
    ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReasonTodynamic: () => (T$.ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReasonTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T$.ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason()])))(),
    CompleterOfSnackBarClosedReason: () => (T$.CompleterOfSnackBarClosedReason = dart.constFn(async.Completer$(snack_bar.SnackBarClosedReason)))(),
    voidToNull: () => (T$.voidToNull = dart.constFn(dart.fnType(core.Null, [dart.void])))(),
    VoidToScaffoldFeatureControllerOfMaterialBanner$MaterialBannerClosedReason: () => (T$.VoidToScaffoldFeatureControllerOfMaterialBanner$MaterialBannerClosedReason = dart.constFn(dart.fnType(T$.ScaffoldFeatureControllerOfMaterialBanner$MaterialBannerClosedReason(), [])))(),
    ScaffoldFeatureControllerOfMaterialBanner$MaterialBannerClosedReasonTodynamic: () => (T$.ScaffoldFeatureControllerOfMaterialBanner$MaterialBannerClosedReasonTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T$.ScaffoldFeatureControllerOfMaterialBanner$MaterialBannerClosedReason()])))(),
    CompleterOfMaterialBannerClosedReason: () => (T$.CompleterOfMaterialBannerClosedReason = dart.constFn(async.Completer$(banner.MaterialBannerClosedReason)))(),
    BuildContextAndBoxConstraintsToMediaQuery: () => (T$.BuildContextAndBoxConstraintsToMediaQuery = dart.constFn(dart.fnType(media_query.MediaQuery, [framework.BuildContext, box$.BoxConstraints])))(),
    RectTodynamic: () => (T$.RectTodynamic = dart.constFn(dart.fnType(dart.dynamic, [ui.Rect])))(),
    AnimationMinOfdouble: () => (T$.AnimationMinOfdouble = dart.constFn(animations.AnimationMin$(core.double)))(),
    GlobalKeyOfDrawerControllerState: () => (T$.GlobalKeyOfDrawerControllerState = dart.constFn(framework.GlobalKey$(drawer.DrawerControllerState)))(),
    JSArrayOf_StandardBottomSheet: () => (T$.JSArrayOf_StandardBottomSheet = dart.constFn(_interceptors.JSArray$(scaffold$._StandardBottomSheet)))(),
    DraggableScrollableNotificationTobool: () => (T$.DraggableScrollableNotificationTobool = dart.constFn(dart.fnType(core.bool, [draggable_scrollable_sheet.DraggableScrollableNotification])))(),
    FnTovoid: () => (T$.FnTovoid = dart.constFn(dart.fnType(dart.void, [T$.VoidTovoid()])))(),
    BuildContextAndFnToWidget: () => (T$.BuildContextAndFnToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T$.FnTovoid()])))(),
    BuildContextToNotificationListenerOfDraggableScrollableNotification: () => (T$.BuildContextToNotificationListenerOfDraggableScrollableNotification = dart.constFn(dart.fnType(T$.NotificationListenerOfDraggableScrollableNotification(), [framework.BuildContext])))(),
    VoidToNull: () => (T$.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    GlobalKeyOf_StandardBottomSheetState: () => (T$.GlobalKeyOf_StandardBottomSheetState = dart.constFn(framework.GlobalKey$(scaffold$._StandardBottomSheetState)))(),
    VoidTo_StandardBottomSheet: () => (T$.VoidTo_StandardBottomSheet = dart.constFn(dart.fnType(scaffold$._StandardBottomSheet, [])))(),
    _StandardBottomSheetTodynamic: () => (T$._StandardBottomSheetTodynamic = dart.constFn(dart.fnType(dart.dynamic, [scaffold$._StandardBottomSheet])))(),
    JSArrayOfLayoutId: () => (T$.JSArrayOfLayoutId = dart.constFn(_interceptors.JSArray$(basic.LayoutId)))(),
    BuildContextAndWidgetNToCustomMultiChildLayout: () => (T$.BuildContextAndWidgetNToCustomMultiChildLayout = dart.constFn(dart.fnType(basic.CustomMultiChildLayout, [framework.BuildContext, T$.WidgetN()])))(),
    MaterialTypeL: () => (T$.MaterialTypeL = dart.constFn(dart.legacy(material.MaterialType)))(),
    EnumPropertyOfMaterialType: () => (T$.EnumPropertyOfMaterialType = dart.constFn(diagnostics.EnumProperty$(material.MaterialType)))(),
    DiagnosticsPropertyOfBorderRadiusGeometry: () => (T$.DiagnosticsPropertyOfBorderRadiusGeometry = dart.constFn(diagnostics.DiagnosticsProperty$(border_radius.BorderRadiusGeometry)))(),
    NotificationListenerOfLayoutChangedNotification: () => (T$.NotificationListenerOfLayoutChangedNotification = dart.constFn(notification_listener.NotificationListener$(notification_listener.LayoutChangedNotification)))(),
    LayoutChangedNotificationTobool: () => (T$.LayoutChangedNotificationTobool = dart.constFn(dart.fnType(core.bool, [notification_listener.LayoutChangedNotification])))(),
    JSArrayOfInkFeature: () => (T$.JSArrayOfInkFeature = dart.constFn(_interceptors.JSArray$(material.InkFeature)))(),
    dynamicToTweenOfdouble: () => (T$.dynamicToTweenOfdouble = dart.constFn(dart.fnType(T$.TweenOfdouble(), [dart.dynamic])))(),
    TweenNOfdouble: () => (T$.TweenNOfdouble = dart.constFn(dart.nullable(T$.TweenOfdouble())))(),
    dynamicToColorTween: () => (T$.dynamicToColorTween = dart.constFn(dart.fnType(tween.ColorTween, [dart.dynamic])))(),
    ColorTweenN: () => (T$.ColorTweenN = dart.constFn(dart.nullable(tween.ColorTween)))(),
    dynamicToShapeBorderTween: () => (T$.dynamicToShapeBorderTween = dart.constFn(dart.fnType(material.ShapeBorderTween, [dart.dynamic])))(),
    ShapeBorderTweenN: () => (T$.ShapeBorderTweenN = dart.constFn(dart.nullable(material.ShapeBorderTween)))(),
    BorderRadiusN: () => (T$.BorderRadiusN = dart.constFn(dart.nullable(border_radius.BorderRadius)))(),
    LinkedMapOfMaterialType$BorderRadiusN: () => (T$.LinkedMapOfMaterialType$BorderRadiusN = dart.constFn(_js_helper.LinkedMap$(material.MaterialType, T$.BorderRadiusN())))(),
    SynchronousFutureOfMaterialLocalizations: () => (T$.SynchronousFutureOfMaterialLocalizations = dart.constFn(synchronous_future.SynchronousFuture$(material_localizations.MaterialLocalizations)))(),
    DiagnosticsPropertyOfThemeData: () => (T$.DiagnosticsPropertyOfThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(theme_data.ThemeData)))(),
    dynamicToThemeDataTween: () => (T$.dynamicToThemeDataTween = dart.constFn(dart.fnType(theme$.ThemeDataTween, [dart.dynamic])))(),
    DiagnosticsPropertyOfThemeDataTween: () => (T$.DiagnosticsPropertyOfThemeDataTween = dart.constFn(diagnostics.DiagnosticsProperty$(theme$.ThemeDataTween)))(),
    AnnotatedRegionOfSystemUiOverlayStyle: () => (T$.AnnotatedRegionOfSystemUiOverlayStyle = dart.constFn(annotated_region.AnnotatedRegion$(system_chrome.SystemUiOverlayStyle)))()
  };
  var S = {
    iconSize: dart.privateName(icon_button, "IconButton.iconSize"),
    visualDensity: dart.privateName(icon_button, "IconButton.visualDensity"),
    padding: dart.privateName(icon_button, "IconButton.padding"),
    alignment: dart.privateName(icon_button, "IconButton.alignment"),
    splashRadius: dart.privateName(icon_button, "IconButton.splashRadius"),
    icon: dart.privateName(icon_button, "IconButton.icon"),
    focusColor: dart.privateName(icon_button, "IconButton.focusColor"),
    hoverColor: dart.privateName(icon_button, "IconButton.hoverColor"),
    color: dart.privateName(icon_button, "IconButton.color"),
    splashColor: dart.privateName(icon_button, "IconButton.splashColor"),
    highlightColor: dart.privateName(icon_button, "IconButton.highlightColor"),
    disabledColor: dart.privateName(icon_button, "IconButton.disabledColor"),
    onPressed: dart.privateName(icon_button, "IconButton.onPressed"),
    mouseCursor: dart.privateName(icon_button, "IconButton.mouseCursor"),
    focusNode: dart.privateName(icon_button, "IconButton.focusNode"),
    autofocus: dart.privateName(icon_button, "IconButton.autofocus"),
    tooltip: dart.privateName(icon_button, "IconButton.tooltip"),
    enableFeedback: dart.privateName(icon_button, "IconButton.enableFeedback"),
    constraints: dart.privateName(icon_button, "IconButton.constraints"),
    EdgeInsets_bottom: dart.privateName(edge_insets, "EdgeInsets.bottom"),
    EdgeInsets_right: dart.privateName(edge_insets, "EdgeInsets.right"),
    EdgeInsets_top: dart.privateName(edge_insets, "EdgeInsets.top"),
    EdgeInsets_left: dart.privateName(edge_insets, "EdgeInsets.left"),
    Alignment_y: dart.privateName(alignment, "Alignment.y"),
    Alignment_x: dart.privateName(alignment, "Alignment.x"),
    SystemMouseCursor_kind: dart.privateName(mouse_cursor, "SystemMouseCursor.kind"),
    BoxConstraints_maxHeight: dart.privateName(box$, "BoxConstraints.maxHeight"),
    BoxConstraints_minHeight: dart.privateName(box$, "BoxConstraints.minHeight"),
    BoxConstraints_maxWidth: dart.privateName(box$, "BoxConstraints.maxWidth"),
    BoxConstraints_minWidth: dart.privateName(box$, "BoxConstraints.minWidth"),
    _Location_name: dart.privateName(widget_inspector, "_Location.name"),
    _Location_column: dart.privateName(widget_inspector, "_Location.column"),
    _Location_line: dart.privateName(widget_inspector, "_Location.line"),
    _Location_file: dart.privateName(widget_inspector, "_Location.file"),
    _name: dart.privateName(platform$, "_name"),
    color$1: dart.privateName(back_button, "BackButton.color"),
    onPressed$1: dart.privateName(back_button, "BackButton.onPressed"),
    Widget__location: dart.privateName(framework, "Widget._location"),
    Widget_key: dart.privateName(framework, "Widget.key"),
    color$2: dart.privateName(back_button, "CloseButton.color"),
    onPressed$2: dart.privateName(back_button, "CloseButton.onPressed"),
    Icon_textDirection: dart.privateName(icon, "Icon.textDirection"),
    Icon_semanticLabel: dart.privateName(icon, "Icon.semanticLabel"),
    Icon_color: dart.privateName(icon, "Icon.color"),
    Icon_size: dart.privateName(icon, "Icon.size"),
    IconData_matchTextDirection: dart.privateName(icon_data, "IconData.matchTextDirection"),
    IconData_fontPackage: dart.privateName(icon_data, "IconData.fontPackage"),
    IconData_fontFamily: dart.privateName(icon_data, "IconData.fontFamily"),
    IconData_codePoint: dart.privateName(icon_data, "IconData.codePoint"),
    Icon_icon: dart.privateName(icon, "Icon.icon"),
    _name$1: dart.privateName(time, "_name"),
    hour: dart.privateName(time, "TimeOfDay.hour"),
    minute: dart.privateName(time, "TimeOfDay.minute"),
    $toString: dartx.toString,
    _defaultValue: dart.privateName(time, "_defaultValue"),
    $_get: dartx._get,
    __InkRipple__radius: dart.privateName(ink_ripple, "_#InkRipple#_radius"),
    __InkRipple__radius_isSet: dart.privateName(ink_ripple, "_#InkRipple#_radius#isSet"),
    __InkRipple__radiusController: dart.privateName(ink_ripple, "_#InkRipple#_radiusController"),
    __InkRipple__radiusController_isSet: dart.privateName(ink_ripple, "_#InkRipple#_radiusController#isSet"),
    __InkRipple__fadeIn: dart.privateName(ink_ripple, "_#InkRipple#_fadeIn"),
    __InkRipple__fadeIn_isSet: dart.privateName(ink_ripple, "_#InkRipple#_fadeIn#isSet"),
    __InkRipple__fadeInController: dart.privateName(ink_ripple, "_#InkRipple#_fadeInController"),
    __InkRipple__fadeInController_isSet: dart.privateName(ink_ripple, "_#InkRipple#_fadeInController#isSet"),
    __InkRipple__fadeOut: dart.privateName(ink_ripple, "_#InkRipple#_fadeOut"),
    __InkRipple__fadeOut_isSet: dart.privateName(ink_ripple, "_#InkRipple#_fadeOut#isSet"),
    __InkRipple__fadeOutController: dart.privateName(ink_ripple, "_#InkRipple#_fadeOutController"),
    __InkRipple__fadeOutController_isSet: dart.privateName(ink_ripple, "_#InkRipple#_fadeOutController#isSet"),
    _position: dart.privateName(ink_ripple, "_position"),
    _borderRadius: dart.privateName(ink_ripple, "_borderRadius"),
    _customBorder: dart.privateName(ink_ripple, "_customBorder"),
    _textDirection: dart.privateName(ink_ripple, "_textDirection"),
    _targetRadius: dart.privateName(ink_ripple, "_targetRadius"),
    _clipCallback: dart.privateName(ink_ripple, "_clipCallback"),
    _fadeInController: dart.privateName(ink_ripple, "_fadeInController"),
    _fadeIn: dart.privateName(ink_ripple, "_fadeIn"),
    _radiusController: dart.privateName(ink_ripple, "_radiusController"),
    _radius: dart.privateName(ink_ripple, "_radius"),
    _fadeOutController: dart.privateName(ink_ripple, "_fadeOutController"),
    _handleAlphaStatusChanged: dart.privateName(ink_ripple, "_handleAlphaStatusChanged"),
    _fadeOut: dart.privateName(ink_ripple, "_fadeOut"),
    _color: dart.privateName(ink_well, "_color"),
    Radius_y: dart.privateName(ui, "Radius.y"),
    Radius_x: dart.privateName(ui, "Radius.x"),
    BorderRadius_bottomRight: dart.privateName(border_radius, "BorderRadius.bottomRight"),
    BorderRadius_bottomLeft: dart.privateName(border_radius, "BorderRadius.bottomLeft"),
    BorderRadius_topRight: dart.privateName(border_radius, "BorderRadius.topRight"),
    BorderRadius_topLeft: dart.privateName(border_radius, "BorderRadius.topLeft"),
    referenceBox: dart.privateName(material, "InkFeature.referenceBox"),
    onRemoved: dart.privateName(material, "InkFeature.onRemoved"),
    _debugDisposed: dart.privateName(material, "_debugDisposed"),
    _controller: dart.privateName(material, "_controller"),
    _removeFeature: dart.privateName(material, "_removeFeature"),
    $add: dartx.add,
    $length: dartx.length,
    _paint: dart.privateName(material, "_paint"),
    Interval_curve: dart.privateName(curves, "Interval.curve"),
    Interval_end: dart.privateName(curves, "Interval.end"),
    Interval_begin: dart.privateName(curves, "Interval.begin"),
    Duration__duration: dart.privateName(core, "Duration._duration"),
    onPressed$3: dart.privateName(button_style_button, "ButtonStyleButton.onPressed"),
    onLongPress: dart.privateName(button_style_button, "ButtonStyleButton.onLongPress"),
    style: dart.privateName(button_style_button, "ButtonStyleButton.style"),
    clipBehavior: dart.privateName(button_style_button, "ButtonStyleButton.clipBehavior"),
    focusNode$1: dart.privateName(button_style_button, "ButtonStyleButton.focusNode"),
    autofocus$1: dart.privateName(button_style_button, "ButtonStyleButton.autofocus"),
    child: dart.privateName(button_style_button, "ButtonStyleButton.child"),
    _controller$1: dart.privateName(button_style_button, "_controller"),
    _elevation: dart.privateName(button_style_button, "_elevation"),
    _backgroundColor: dart.privateName(button_style_button, "_backgroundColor"),
    $isFinite: dartx.isFinite,
    _name$2: dart.privateName(theme_data, "_name"),
    resolveCallback: dart.privateName(button_style_button, "_MouseCursor.resolveCallback"),
    minSize: dart.privateName(button_style_button, "_InputPadding.minSize"),
    _minSize: dart.privateName(button_style_button, "_minSize"),
    _computeSize: dart.privateName(button_style_button, "_computeSize"),
    _name$3: dart.privateName(ui, "_name"),
    OffsetBase__dy: dart.privateName(ui, "OffsetBase._dy"),
    OffsetBase__dx: dart.privateName(ui, "OffsetBase._dx"),
    _name$4: dart.privateName(borders, "_name"),
    BorderSide_style: dart.privateName(borders, "BorderSide.style"),
    BorderSide_width: dart.privateName(borders, "BorderSide.width"),
    Color_value: dart.privateName(ui, "Color.value"),
    BorderSide_color: dart.privateName(borders, "BorderSide.color"),
    OutlinedBorder_side: dart.privateName(borders, "OutlinedBorder.side"),
    RoundedRectangleBorder_borderRadius: dart.privateName(rounded_rectangle_border, "RoundedRectangleBorder.borderRadius"),
    label: dart.privateName(text_button, "_TextButtonWithIconChild.label"),
    icon$1: dart.privateName(text_button, "_TextButtonWithIconChild.icon"),
    _name$5: dart.privateName(snack_bar, "_name"),
    textColor: dart.privateName(snack_bar, "SnackBarAction.textColor"),
    disabledTextColor: dart.privateName(snack_bar, "SnackBarAction.disabledTextColor"),
    label$1: dart.privateName(snack_bar, "SnackBarAction.label"),
    onPressed$4: dart.privateName(snack_bar, "SnackBarAction.onPressed"),
    _haveTriggeredAction: dart.privateName(snack_bar, "_haveTriggeredAction"),
    _handlePressed: dart.privateName(snack_bar, "_handlePressed"),
    content: dart.privateName(snack_bar, "SnackBar.content"),
    backgroundColor: dart.privateName(snack_bar, "SnackBar.backgroundColor"),
    elevation: dart.privateName(snack_bar, "SnackBar.elevation"),
    margin: dart.privateName(snack_bar, "SnackBar.margin"),
    padding$1: dart.privateName(snack_bar, "SnackBar.padding"),
    width: dart.privateName(snack_bar, "SnackBar.width"),
    shape: dart.privateName(snack_bar, "SnackBar.shape"),
    behavior: dart.privateName(snack_bar, "SnackBar.behavior"),
    action: dart.privateName(snack_bar, "SnackBar.action"),
    duration: dart.privateName(snack_bar, "SnackBar.duration"),
    animation: dart.privateName(snack_bar, "SnackBar.animation"),
    onVisible: dart.privateName(snack_bar, "SnackBar.onVisible"),
    dismissDirection: dart.privateName(snack_bar, "SnackBar.dismissDirection"),
    _name$6: dart.privateName(dismissible, "_name"),
    _wasVisible: dart.privateName(snack_bar, "_wasVisible"),
    _onAnimationStatusChanged: dart.privateName(snack_bar, "_onAnimationStatusChanged"),
    _name$7: dart.privateName(animation, "_name"),
    Threshold_threshold: dart.privateName(curves, "Threshold.threshold"),
    ValueKey_value: dart.privateName(key, "ValueKey.value"),
    Cubic_d: dart.privateName(curves, "Cubic.d"),
    Cubic_c: dart.privateName(curves, "Cubic.c"),
    Cubic_b: dart.privateName(curves, "Cubic.b"),
    Cubic_a: dart.privateName(curves, "Cubic.a"),
    child$1: dart.privateName(floating_action_button, "FloatingActionButton.child"),
    tooltip$1: dart.privateName(floating_action_button, "FloatingActionButton.tooltip"),
    foregroundColor: dart.privateName(floating_action_button, "FloatingActionButton.foregroundColor"),
    backgroundColor$1: dart.privateName(floating_action_button, "FloatingActionButton.backgroundColor"),
    focusColor$1: dart.privateName(floating_action_button, "FloatingActionButton.focusColor"),
    hoverColor$1: dart.privateName(floating_action_button, "FloatingActionButton.hoverColor"),
    splashColor$1: dart.privateName(floating_action_button, "FloatingActionButton.splashColor"),
    heroTag: dart.privateName(floating_action_button, "FloatingActionButton.heroTag"),
    onPressed$5: dart.privateName(floating_action_button, "FloatingActionButton.onPressed"),
    mouseCursor$1: dart.privateName(floating_action_button, "FloatingActionButton.mouseCursor"),
    elevation$1: dart.privateName(floating_action_button, "FloatingActionButton.elevation"),
    focusElevation: dart.privateName(floating_action_button, "FloatingActionButton.focusElevation"),
    hoverElevation: dart.privateName(floating_action_button, "FloatingActionButton.hoverElevation"),
    highlightElevation: dart.privateName(floating_action_button, "FloatingActionButton.highlightElevation"),
    disabledElevation: dart.privateName(floating_action_button, "FloatingActionButton.disabledElevation"),
    mini: dart.privateName(floating_action_button, "FloatingActionButton.mini"),
    shape$1: dart.privateName(floating_action_button, "FloatingActionButton.shape"),
    clipBehavior$1: dart.privateName(floating_action_button, "FloatingActionButton.clipBehavior"),
    isExtended: dart.privateName(floating_action_button, "FloatingActionButton.isExtended"),
    focusNode$2: dart.privateName(floating_action_button, "FloatingActionButton.focusNode"),
    autofocus$2: dart.privateName(floating_action_button, "FloatingActionButton.autofocus"),
    materialTapTargetSize: dart.privateName(floating_action_button, "FloatingActionButton.materialTapTargetSize"),
    enableFeedback$1: dart.privateName(floating_action_button, "FloatingActionButton.enableFeedback"),
    _sizeConstraints: dart.privateName(floating_action_button, "FloatingActionButton._sizeConstraints"),
    SingleChildRenderObjectWidget_child: dart.privateName(framework, "SingleChildRenderObjectWidget.child"),
    SizedBox_height: dart.privateName(basic, "SizedBox.height"),
    SizedBox_width: dart.privateName(basic, "SizedBox.width"),
    _sizeConstraints$1: dart.privateName(floating_action_button, "_sizeConstraints"),
    _name$8: dart.privateName(flexible_space_bar, "_name"),
    title: dart.privateName(flexible_space_bar, "FlexibleSpaceBar.title"),
    background: dart.privateName(flexible_space_bar, "FlexibleSpaceBar.background"),
    centerTitle: dart.privateName(flexible_space_bar, "FlexibleSpaceBar.centerTitle"),
    collapseMode: dart.privateName(flexible_space_bar, "FlexibleSpaceBar.collapseMode"),
    stretchModes: dart.privateName(flexible_space_bar, "FlexibleSpaceBar.stretchModes"),
    titlePadding: dart.privateName(flexible_space_bar, "FlexibleSpaceBar.titlePadding"),
    _getEffectiveCenterTitle: dart.privateName(flexible_space_bar, "_getEffectiveCenterTitle"),
    _getTitleAlignment: dart.privateName(flexible_space_bar, "_getTitleAlignment"),
    _getCollapsePadding: dart.privateName(flexible_space_bar, "_getCollapsePadding"),
    $clamp: dartx.clamp,
    $contains: dartx.contains,
    toolbarOpacity: dart.privateName(flexible_space_bar, "FlexibleSpaceBarSettings.toolbarOpacity"),
    minExtent: dart.privateName(flexible_space_bar, "FlexibleSpaceBarSettings.minExtent"),
    maxExtent: dart.privateName(flexible_space_bar, "FlexibleSpaceBarSettings.maxExtent"),
    currentExtent: dart.privateName(flexible_space_bar, "FlexibleSpaceBarSettings.currentExtent"),
    isScrolledUnder: dart.privateName(flexible_space_bar, "FlexibleSpaceBarSettings.isScrolledUnder"),
    textStyle: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.textStyle"),
    constraints$1: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.constraints"),
    color$3: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.color"),
    selectedColor: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.selectedColor"),
    disabledColor$1: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.disabledColor"),
    fillColor: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.fillColor"),
    focusColor$2: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.focusColor"),
    highlightColor$1: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.highlightColor"),
    splashColor$2: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.splashColor"),
    hoverColor$2: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.hoverColor"),
    borderColor: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.borderColor"),
    selectedBorderColor: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.selectedBorderColor"),
    disabledBorderColor: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.disabledBorderColor"),
    borderWidth: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.borderWidth"),
    borderRadius: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.borderRadius"),
    $runtimeType: dartx.runtimeType,
    data: dart.privateName(toggle_buttons_theme, "ToggleButtonsTheme.data"),
    backgroundColor$2: dart.privateName(time_picker_theme, "TimePickerThemeData.backgroundColor"),
    hourMinuteTextColor: dart.privateName(time_picker_theme, "TimePickerThemeData.hourMinuteTextColor"),
    hourMinuteColor: dart.privateName(time_picker_theme, "TimePickerThemeData.hourMinuteColor"),
    dayPeriodTextColor: dart.privateName(time_picker_theme, "TimePickerThemeData.dayPeriodTextColor"),
    dayPeriodColor: dart.privateName(time_picker_theme, "TimePickerThemeData.dayPeriodColor"),
    dialHandColor: dart.privateName(time_picker_theme, "TimePickerThemeData.dialHandColor"),
    dialBackgroundColor: dart.privateName(time_picker_theme, "TimePickerThemeData.dialBackgroundColor"),
    dialTextColor: dart.privateName(time_picker_theme, "TimePickerThemeData.dialTextColor"),
    entryModeIconColor: dart.privateName(time_picker_theme, "TimePickerThemeData.entryModeIconColor"),
    hourMinuteTextStyle: dart.privateName(time_picker_theme, "TimePickerThemeData.hourMinuteTextStyle"),
    dayPeriodTextStyle: dart.privateName(time_picker_theme, "TimePickerThemeData.dayPeriodTextStyle"),
    helpTextStyle: dart.privateName(time_picker_theme, "TimePickerThemeData.helpTextStyle"),
    shape$2: dart.privateName(time_picker_theme, "TimePickerThemeData.shape"),
    hourMinuteShape: dart.privateName(time_picker_theme, "TimePickerThemeData.hourMinuteShape"),
    dayPeriodShape: dart.privateName(time_picker_theme, "TimePickerThemeData.dayPeriodShape"),
    dayPeriodBorderSide: dart.privateName(time_picker_theme, "TimePickerThemeData.dayPeriodBorderSide"),
    inputDecorationTheme: dart.privateName(time_picker_theme, "TimePickerThemeData.inputDecorationTheme"),
    data$1: dart.privateName(time_picker_theme, "TimePickerTheme.data"),
    cursorColor: dart.privateName(text_selection_theme, "TextSelectionThemeData.cursorColor"),
    selectionColor: dart.privateName(text_selection_theme, "TextSelectionThemeData.selectionColor"),
    selectionHandleColor: dart.privateName(text_selection_theme, "TextSelectionThemeData.selectionHandleColor"),
    data$2: dart.privateName(text_selection_theme, "TextSelectionTheme.data"),
    style$1: dart.privateName(text_button_theme, "TextButtonThemeData.style"),
    $hashCode: dartx.hashCode,
    data$3: dart.privateName(text_button_theme, "TextButtonTheme.data"),
    _name$9: dart.privateName(tabs$, "_name"),
    text: dart.privateName(tabs$, "Tab.text"),
    child$2: dart.privateName(tabs$, "Tab.child"),
    icon$2: dart.privateName(tabs$, "Tab.icon"),
    iconMargin: dart.privateName(tabs$, "Tab.iconMargin"),
    height: dart.privateName(tabs$, "Tab.height"),
    _buildLabelText: dart.privateName(tabs$, "_buildLabelText"),
    labelStyle: dart.privateName(tabs$, "_TabStyle.labelStyle"),
    unselectedLabelStyle: dart.privateName(tabs$, "_TabStyle.unselectedLabelStyle"),
    selected: dart.privateName(tabs$, "_TabStyle.selected"),
    labelColor: dart.privateName(tabs$, "_TabStyle.labelColor"),
    unselectedLabelColor: dart.privateName(tabs$, "_TabStyle.unselectedLabelColor"),
    child$3: dart.privateName(tabs$, "_TabStyle.child"),
    $insert: dartx.insert,
    _currentTabOffsets: dart.privateName(tabs$, "_currentTabOffsets"),
    _currentTextDirection: dart.privateName(tabs$, "_currentTextDirection"),
    _currentRect: dart.privateName(tabs$, "_currentRect"),
    _painter: dart.privateName(tabs$, "_painter"),
    _needsPaint: dart.privateName(tabs$, "_needsPaint"),
    $isNotEmpty: dartx.isNotEmpty,
    $toDouble: dartx.toDouble,
    $floor: dartx.floor,
    $ceil: dartx.ceil,
    $abs: dartx.abs,
    _initialViewportDimensionWasZero: dart.privateName(tabs$, "_initialViewportDimensionWasZero"),
    _initialScrollOffset: dart.privateName(tabs$, "_initialScrollOffset"),
    tabs: dart.privateName(tabs$, "TabBar.tabs"),
    controller: dart.privateName(tabs$, "TabBar.controller"),
    isScrollable: dart.privateName(tabs$, "TabBar.isScrollable"),
    padding$2: dart.privateName(tabs$, "TabBar.padding"),
    indicatorColor: dart.privateName(tabs$, "TabBar.indicatorColor"),
    indicatorWeight: dart.privateName(tabs$, "TabBar.indicatorWeight"),
    indicatorPadding: dart.privateName(tabs$, "TabBar.indicatorPadding"),
    indicator: dart.privateName(tabs$, "TabBar.indicator"),
    automaticIndicatorColorAdjustment: dart.privateName(tabs$, "TabBar.automaticIndicatorColorAdjustment"),
    indicatorSize: dart.privateName(tabs$, "TabBar.indicatorSize"),
    labelColor$1: dart.privateName(tabs$, "TabBar.labelColor"),
    unselectedLabelColor$1: dart.privateName(tabs$, "TabBar.unselectedLabelColor"),
    labelStyle$1: dart.privateName(tabs$, "TabBar.labelStyle"),
    labelPadding: dart.privateName(tabs$, "TabBar.labelPadding"),
    unselectedLabelStyle$1: dart.privateName(tabs$, "TabBar.unselectedLabelStyle"),
    overlayColor: dart.privateName(tabs$, "TabBar.overlayColor"),
    dragStartBehavior: dart.privateName(tabs$, "TabBar.dragStartBehavior"),
    mouseCursor$2: dart.privateName(tabs$, "TabBar.mouseCursor"),
    enableFeedback$2: dart.privateName(tabs$, "TabBar.enableFeedback"),
    onTap: dart.privateName(tabs$, "TabBar.onTap"),
    physics: dart.privateName(tabs$, "TabBar.physics"),
    _name$10: dart.privateName(recognizer, "_name"),
    _scrollController: dart.privateName(tabs$, "_scrollController"),
    _controller$2: dart.privateName(tabs$, "_controller"),
    _indicatorPainter: dart.privateName(tabs$, "_indicatorPainter"),
    _currentIndex: dart.privateName(tabs$, "_currentIndex"),
    ___TabBarState__tabStripWidth: dart.privateName(tabs$, "_#_TabBarState#_tabStripWidth"),
    ___TabBarState__tabStripWidth_isSet: dart.privateName(tabs$, "_#_TabBarState#_tabStripWidth#isSet"),
    ___TabBarState__tabKeys: dart.privateName(tabs$, "_#_TabBarState#_tabKeys"),
    ___TabBarState__tabKeys_isSet: dart.privateName(tabs$, "_#_TabBarState#_tabKeys#isSet"),
    _tabStripWidth: dart.privateName(tabs$, "_tabStripWidth"),
    _tabKeys: dart.privateName(tabs$, "_tabKeys"),
    $map: dartx.map,
    $toList: dartx.toList,
    _indicator: dart.privateName(tabs$, "_indicator"),
    _controllerIsValid: dart.privateName(tabs$, "_controllerIsValid"),
    _handleTabControllerAnimationTick: dart.privateName(tabs$, "_handleTabControllerAnimationTick"),
    _handleTabControllerTick: dart.privateName(tabs$, "_handleTabControllerTick"),
    _updateTabController: dart.privateName(tabs$, "_updateTabController"),
    _initIndicatorPainter: dart.privateName(tabs$, "_initIndicatorPainter"),
    $addAll: dartx.addAll,
    $removeRange: dartx.removeRange,
    _tabScrollOffset: dart.privateName(tabs$, "_tabScrollOffset"),
    _tabCenteredScrollOffset: dart.privateName(tabs$, "_tabCenteredScrollOffset"),
    _scrollToCurrentIndex: dart.privateName(tabs$, "_scrollToCurrentIndex"),
    _scrollToControllerValue: dart.privateName(tabs$, "_scrollToControllerValue"),
    _saveTabOffsets: dart.privateName(tabs$, "_saveTabOffsets"),
    _handleTap: dart.privateName(tabs$, "_handleTap"),
    _buildStyledTab: dart.privateName(tabs$, "_buildStyledTab"),
    $_set: dartx._set,
    controller$1: dart.privateName(tabs$, "TabBarView.controller"),
    children: dart.privateName(tabs$, "TabBarView.children"),
    physics$1: dart.privateName(tabs$, "TabBarView.physics"),
    dragStartBehavior$1: dart.privateName(tabs$, "TabBarView.dragStartBehavior"),
    ___TabBarViewState__pageController: dart.privateName(tabs$, "_#_TabBarViewState#_pageController"),
    ___TabBarViewState__pageController_isSet: dart.privateName(tabs$, "_#_TabBarViewState#_pageController#isSet"),
    ___TabBarViewState__children: dart.privateName(tabs$, "_#_TabBarViewState#_children"),
    ___TabBarViewState__children_isSet: dart.privateName(tabs$, "_#_TabBarViewState#_children#isSet"),
    ___TabBarViewState__childrenWithKey: dart.privateName(tabs$, "_#_TabBarViewState#_childrenWithKey"),
    ___TabBarViewState__childrenWithKey_isSet: dart.privateName(tabs$, "_#_TabBarViewState#_childrenWithKey#isSet"),
    _warpUnderwayCount: dart.privateName(tabs$, "_warpUnderwayCount"),
    _pageController: dart.privateName(tabs$, "_pageController"),
    _children: dart.privateName(tabs$, "_children"),
    _childrenWithKey: dart.privateName(tabs$, "_childrenWithKey"),
    _updateChildren: dart.privateName(tabs$, "_updateChildren"),
    _warpToCurrentIndex: dart.privateName(tabs$, "_warpToCurrentIndex"),
    $round: dartx.round,
    _handleScrollNotification: dart.privateName(tabs$, "_handleScrollNotification"),
    ScrollPhysics_parent: dart.privateName(scroll_physics, "ScrollPhysics.parent"),
    backgroundColor$3: dart.privateName(tabs$, "TabPageSelectorIndicator.backgroundColor"),
    borderColor$1: dart.privateName(tabs$, "TabPageSelectorIndicator.borderColor"),
    size: dart.privateName(tabs$, "TabPageSelectorIndicator.size"),
    controller$2: dart.privateName(tabs$, "TabPageSelector.controller"),
    indicatorSize$1: dart.privateName(tabs$, "TabPageSelector.indicatorSize"),
    color$4: dart.privateName(tabs$, "TabPageSelector.color"),
    selectedColor$1: dart.privateName(tabs$, "TabPageSelector.selectedColor"),
    _buildTabIndicator: dart.privateName(tabs$, "_buildTabIndicator"),
    indicator$1: dart.privateName(tab_bar_theme, "TabBarTheme.indicator"),
    indicatorSize$2: dart.privateName(tab_bar_theme, "TabBarTheme.indicatorSize"),
    labelColor$2: dart.privateName(tab_bar_theme, "TabBarTheme.labelColor"),
    labelPadding$1: dart.privateName(tab_bar_theme, "TabBarTheme.labelPadding"),
    labelStyle$2: dart.privateName(tab_bar_theme, "TabBarTheme.labelStyle"),
    unselectedLabelColor$2: dart.privateName(tab_bar_theme, "TabBarTheme.unselectedLabelColor"),
    unselectedLabelStyle$2: dart.privateName(tab_bar_theme, "TabBarTheme.unselectedLabelStyle"),
    thumbColor: dart.privateName(switch_theme, "SwitchThemeData.thumbColor"),
    trackColor: dart.privateName(switch_theme, "SwitchThemeData.trackColor"),
    materialTapTargetSize$1: dart.privateName(switch_theme, "SwitchThemeData.materialTapTargetSize"),
    mouseCursor$3: dart.privateName(switch_theme, "SwitchThemeData.mouseCursor"),
    overlayColor$1: dart.privateName(switch_theme, "SwitchThemeData.overlayColor"),
    splashRadius$1: dart.privateName(switch_theme, "SwitchThemeData.splashRadius"),
    a: dart.privateName(switch_theme, "_LerpProperties.a"),
    b: dart.privateName(switch_theme, "_LerpProperties.b"),
    t: dart.privateName(switch_theme, "_LerpProperties.t"),
    lerpFunction: dart.privateName(switch_theme, "_LerpProperties.lerpFunction"),
    data$4: dart.privateName(switch_theme, "SwitchTheme.data"),
    _name$11: dart.privateName(snack_bar_theme, "_name"),
    backgroundColor$4: dart.privateName(snack_bar_theme, "SnackBarThemeData.backgroundColor"),
    actionTextColor: dart.privateName(snack_bar_theme, "SnackBarThemeData.actionTextColor"),
    disabledActionTextColor: dart.privateName(snack_bar_theme, "SnackBarThemeData.disabledActionTextColor"),
    contentTextStyle: dart.privateName(snack_bar_theme, "SnackBarThemeData.contentTextStyle"),
    elevation$2: dart.privateName(snack_bar_theme, "SnackBarThemeData.elevation"),
    shape$3: dart.privateName(snack_bar_theme, "SnackBarThemeData.shape"),
    behavior$1: dart.privateName(snack_bar_theme, "SnackBarThemeData.behavior"),
    data$5: dart.privateName(slider_theme, "SliderTheme.data"),
    _name$12: dart.privateName(slider_theme, "_name"),
    trackHeight: dart.privateName(slider_theme, "SliderThemeData.trackHeight"),
    activeTrackColor: dart.privateName(slider_theme, "SliderThemeData.activeTrackColor"),
    inactiveTrackColor: dart.privateName(slider_theme, "SliderThemeData.inactiveTrackColor"),
    disabledActiveTrackColor: dart.privateName(slider_theme, "SliderThemeData.disabledActiveTrackColor"),
    disabledInactiveTrackColor: dart.privateName(slider_theme, "SliderThemeData.disabledInactiveTrackColor"),
    activeTickMarkColor: dart.privateName(slider_theme, "SliderThemeData.activeTickMarkColor"),
    inactiveTickMarkColor: dart.privateName(slider_theme, "SliderThemeData.inactiveTickMarkColor"),
    disabledActiveTickMarkColor: dart.privateName(slider_theme, "SliderThemeData.disabledActiveTickMarkColor"),
    disabledInactiveTickMarkColor: dart.privateName(slider_theme, "SliderThemeData.disabledInactiveTickMarkColor"),
    thumbColor$1: dart.privateName(slider_theme, "SliderThemeData.thumbColor"),
    overlappingShapeStrokeColor: dart.privateName(slider_theme, "SliderThemeData.overlappingShapeStrokeColor"),
    disabledThumbColor: dart.privateName(slider_theme, "SliderThemeData.disabledThumbColor"),
    overlayColor$2: dart.privateName(slider_theme, "SliderThemeData.overlayColor"),
    valueIndicatorColor: dart.privateName(slider_theme, "SliderThemeData.valueIndicatorColor"),
    overlayShape: dart.privateName(slider_theme, "SliderThemeData.overlayShape"),
    tickMarkShape: dart.privateName(slider_theme, "SliderThemeData.tickMarkShape"),
    thumbShape: dart.privateName(slider_theme, "SliderThemeData.thumbShape"),
    trackShape: dart.privateName(slider_theme, "SliderThemeData.trackShape"),
    valueIndicatorShape: dart.privateName(slider_theme, "SliderThemeData.valueIndicatorShape"),
    rangeTickMarkShape: dart.privateName(slider_theme, "SliderThemeData.rangeTickMarkShape"),
    rangeThumbShape: dart.privateName(slider_theme, "SliderThemeData.rangeThumbShape"),
    rangeTrackShape: dart.privateName(slider_theme, "SliderThemeData.rangeTrackShape"),
    rangeValueIndicatorShape: dart.privateName(slider_theme, "SliderThemeData.rangeValueIndicatorShape"),
    showValueIndicator: dart.privateName(slider_theme, "SliderThemeData.showValueIndicator"),
    valueIndicatorTextStyle: dart.privateName(slider_theme, "SliderThemeData.valueIndicatorTextStyle"),
    minThumbSeparation: dart.privateName(slider_theme, "SliderThemeData.minThumbSeparation"),
    thumbSelector: dart.privateName(slider_theme, "SliderThemeData.thumbSelector"),
    RoundSliderOverlayShape_overlayRadius: dart.privateName(slider_theme, "RoundSliderOverlayShape.overlayRadius"),
    RoundSliderTickMarkShape_tickMarkRadius: dart.privateName(slider_theme, "RoundSliderTickMarkShape.tickMarkRadius"),
    RoundSliderThumbShape_pressedElevation: dart.privateName(slider_theme, "RoundSliderThumbShape.pressedElevation"),
    RoundSliderThumbShape_elevation: dart.privateName(slider_theme, "RoundSliderThumbShape.elevation"),
    RoundSliderThumbShape_disabledThumbRadius: dart.privateName(slider_theme, "RoundSliderThumbShape.disabledThumbRadius"),
    RoundSliderThumbShape_enabledThumbRadius: dart.privateName(slider_theme, "RoundSliderThumbShape.enabledThumbRadius"),
    RoundRangeSliderTickMarkShape_tickMarkRadius: dart.privateName(slider_theme, "RoundRangeSliderTickMarkShape.tickMarkRadius"),
    RoundRangeSliderThumbShape_pressedElevation: dart.privateName(slider_theme, "RoundRangeSliderThumbShape.pressedElevation"),
    RoundRangeSliderThumbShape_elevation: dart.privateName(slider_theme, "RoundRangeSliderThumbShape.elevation"),
    RoundRangeSliderThumbShape_disabledThumbRadius: dart.privateName(slider_theme, "RoundRangeSliderThumbShape.disabledThumbRadius"),
    RoundRangeSliderThumbShape_enabledThumbRadius: dart.privateName(slider_theme, "RoundRangeSliderThumbShape.enabledThumbRadius"),
    disabledThumbGapWidth: dart.privateName(slider_theme, "RectangularSliderTrackShape.disabledThumbGapWidth"),
    tickMarkRadius: dart.privateName(slider_theme, "RoundSliderTickMarkShape.tickMarkRadius"),
    tickMarkRadius$1: dart.privateName(slider_theme, "RoundRangeSliderTickMarkShape.tickMarkRadius"),
    enabledThumbRadius: dart.privateName(slider_theme, "RoundSliderThumbShape.enabledThumbRadius"),
    disabledThumbRadius: dart.privateName(slider_theme, "RoundSliderThumbShape.disabledThumbRadius"),
    elevation$3: dart.privateName(slider_theme, "RoundSliderThumbShape.elevation"),
    pressedElevation: dart.privateName(slider_theme, "RoundSliderThumbShape.pressedElevation"),
    _disabledThumbRadius: dart.privateName(slider_theme, "_disabledThumbRadius"),
    enabledThumbRadius$1: dart.privateName(slider_theme, "RoundRangeSliderThumbShape.enabledThumbRadius"),
    disabledThumbRadius$1: dart.privateName(slider_theme, "RoundRangeSliderThumbShape.disabledThumbRadius"),
    elevation$4: dart.privateName(slider_theme, "RoundRangeSliderThumbShape.elevation"),
    pressedElevation$1: dart.privateName(slider_theme, "RoundRangeSliderThumbShape.pressedElevation"),
    overlayRadius: dart.privateName(slider_theme, "RoundSliderOverlayShape.overlayRadius"),
    _upperRectangleWidth: dart.privateName(slider_theme, "_upperRectangleWidth"),
    _getIdealOffset: dart.privateName(slider_theme, "_getIdealOffset"),
    start: dart.privateName(slider_theme, "RangeValues.start"),
    end: dart.privateName(slider_theme, "RangeValues.end"),
    start$1: dart.privateName(slider_theme, "RangeLabels.start"),
    end$1: dart.privateName(slider_theme, "RangeLabels.end"),
    thickness: dart.privateName(scrollbar_theme, "ScrollbarThemeData.thickness"),
    showTrackOnHover: dart.privateName(scrollbar_theme, "ScrollbarThemeData.showTrackOnHover"),
    isAlwaysShown: dart.privateName(scrollbar_theme, "ScrollbarThemeData.isAlwaysShown"),
    interactive: dart.privateName(scrollbar_theme, "ScrollbarThemeData.interactive"),
    radius: dart.privateName(scrollbar_theme, "ScrollbarThemeData.radius"),
    thumbColor$2: dart.privateName(scrollbar_theme, "ScrollbarThemeData.thumbColor"),
    trackColor$1: dart.privateName(scrollbar_theme, "ScrollbarThemeData.trackColor"),
    trackBorderColor: dart.privateName(scrollbar_theme, "ScrollbarThemeData.trackBorderColor"),
    crossAxisMargin: dart.privateName(scrollbar_theme, "ScrollbarThemeData.crossAxisMargin"),
    mainAxisMargin: dart.privateName(scrollbar_theme, "ScrollbarThemeData.mainAxisMargin"),
    minThumbLength: dart.privateName(scrollbar_theme, "ScrollbarThemeData.minThumbLength"),
    a$1: dart.privateName(scrollbar_theme, "_LerpProperties.a"),
    b$1: dart.privateName(scrollbar_theme, "_LerpProperties.b"),
    t$1: dart.privateName(scrollbar_theme, "_LerpProperties.t"),
    lerpFunction$1: dart.privateName(scrollbar_theme, "_LerpProperties.lerpFunction"),
    data$6: dart.privateName(scrollbar_theme, "ScrollbarTheme.data"),
    mouseCursor$4: dart.privateName(radio_theme, "RadioThemeData.mouseCursor"),
    fillColor$1: dart.privateName(radio_theme, "RadioThemeData.fillColor"),
    overlayColor$3: dart.privateName(radio_theme, "RadioThemeData.overlayColor"),
    splashRadius$2: dart.privateName(radio_theme, "RadioThemeData.splashRadius"),
    materialTapTargetSize$2: dart.privateName(radio_theme, "RadioThemeData.materialTapTargetSize"),
    visualDensity$1: dart.privateName(radio_theme, "RadioThemeData.visualDensity"),
    a$2: dart.privateName(radio_theme, "_LerpProperties.a"),
    b$2: dart.privateName(radio_theme, "_LerpProperties.b"),
    t$2: dart.privateName(radio_theme, "_LerpProperties.t"),
    lerpFunction$2: dart.privateName(radio_theme, "_LerpProperties.lerpFunction"),
    data$7: dart.privateName(radio_theme, "RadioTheme.data"),
    color$5: dart.privateName(progress_indicator_theme, "ProgressIndicatorThemeData.color"),
    linearTrackColor: dart.privateName(progress_indicator_theme, "ProgressIndicatorThemeData.linearTrackColor"),
    linearMinHeight: dart.privateName(progress_indicator_theme, "ProgressIndicatorThemeData.linearMinHeight"),
    circularTrackColor: dart.privateName(progress_indicator_theme, "ProgressIndicatorThemeData.circularTrackColor"),
    refreshBackgroundColor: dart.privateName(progress_indicator_theme, "ProgressIndicatorThemeData.refreshBackgroundColor"),
    data$8: dart.privateName(progress_indicator_theme, "ProgressIndicatorTheme.data"),
    color$6: dart.privateName(popup_menu_theme, "PopupMenuThemeData.color"),
    shape$4: dart.privateName(popup_menu_theme, "PopupMenuThemeData.shape"),
    elevation$5: dart.privateName(popup_menu_theme, "PopupMenuThemeData.elevation"),
    textStyle$1: dart.privateName(popup_menu_theme, "PopupMenuThemeData.textStyle"),
    enableFeedback$3: dart.privateName(popup_menu_theme, "PopupMenuThemeData.enableFeedback"),
    data$9: dart.privateName(popup_menu_theme, "PopupMenuTheme.data"),
    _positionAnimation: dart.privateName(page_transitions_theme, "_positionAnimation"),
    _opacityAnimation: dart.privateName(page_transitions_theme, "_opacityAnimation"),
    animation$1: dart.privateName(page_transitions_theme, "_OpenUpwardsPageTransition.animation"),
    secondaryAnimation: dart.privateName(page_transitions_theme, "_OpenUpwardsPageTransition.secondaryAnimation"),
    child$4: dart.privateName(page_transitions_theme, "_OpenUpwardsPageTransition.child"),
    animation$2: dart.privateName(page_transitions_theme, "_ZoomPageTransition.animation"),
    secondaryAnimation$1: dart.privateName(page_transitions_theme, "_ZoomPageTransition.secondaryAnimation"),
    child$5: dart.privateName(page_transitions_theme, "_ZoomPageTransition.child"),
    animation$3: dart.privateName(page_transitions_theme, "_ZoomEnterTransition.animation"),
    child$6: dart.privateName(page_transitions_theme, "_ZoomEnterTransition.child"),
    reverse: dart.privateName(page_transitions_theme, "_ZoomEnterTransition.reverse"),
    animation$4: dart.privateName(page_transitions_theme, "_ZoomExitTransition.animation"),
    reverse$1: dart.privateName(page_transitions_theme, "_ZoomExitTransition.reverse"),
    child$7: dart.privateName(page_transitions_theme, "_ZoomExitTransition.child"),
    _builders: dart.privateName(page_transitions_theme, "PageTransitionsTheme._builders"),
    _builders$1: dart.privateName(page_transitions_theme, "_builders"),
    _all: dart.privateName(page_transitions_theme, "_all"),
    style$2: dart.privateName(outlined_button_theme, "OutlinedButtonThemeData.style"),
    data$10: dart.privateName(outlined_button_theme, "OutlinedButtonTheme.data"),
    backgroundColor$5: dart.privateName(navigation_rail, "NavigationRail.backgroundColor"),
    extended: dart.privateName(navigation_rail, "NavigationRail.extended"),
    leading: dart.privateName(navigation_rail, "NavigationRail.leading"),
    trailing: dart.privateName(navigation_rail, "NavigationRail.trailing"),
    destinations: dart.privateName(navigation_rail, "NavigationRail.destinations"),
    selectedIndex: dart.privateName(navigation_rail, "NavigationRail.selectedIndex"),
    onDestinationSelected: dart.privateName(navigation_rail, "NavigationRail.onDestinationSelected"),
    elevation$6: dart.privateName(navigation_rail, "NavigationRail.elevation"),
    groupAlignment: dart.privateName(navigation_rail, "NavigationRail.groupAlignment")
  };
  var S$ = {
    labelType: dart.privateName(navigation_rail, "NavigationRail.labelType"),
    unselectedLabelTextStyle: dart.privateName(navigation_rail, "NavigationRail.unselectedLabelTextStyle"),
    selectedLabelTextStyle: dart.privateName(navigation_rail, "NavigationRail.selectedLabelTextStyle"),
    unselectedIconTheme: dart.privateName(navigation_rail, "NavigationRail.unselectedIconTheme"),
    selectedIconTheme: dart.privateName(navigation_rail, "NavigationRail.selectedIconTheme"),
    minWidth: dart.privateName(navigation_rail, "NavigationRail.minWidth"),
    minExtendedWidth: dart.privateName(navigation_rail, "NavigationRail.minExtendedWidth"),
    ___NavigationRailState__destinationControllers: dart.privateName(navigation_rail, "_#_NavigationRailState#_destinationControllers"),
    ___NavigationRailState__destinationControllers_isSet: dart.privateName(navigation_rail, "_#_NavigationRailState#_destinationControllers#isSet"),
    ___NavigationRailState__destinationAnimations: dart.privateName(navigation_rail, "_#_NavigationRailState#_destinationAnimations"),
    ___NavigationRailState__destinationAnimations_isSet: dart.privateName(navigation_rail, "_#_NavigationRailState#_destinationAnimations#isSet"),
    ___NavigationRailState__extendedController: dart.privateName(navigation_rail, "_#_NavigationRailState#_extendedController"),
    ___NavigationRailState__extendedController_isSet: dart.privateName(navigation_rail, "_#_NavigationRailState#_extendedController#isSet"),
    ___NavigationRailState__extendedAnimation: dart.privateName(navigation_rail, "_#_NavigationRailState#_extendedAnimation"),
    ___NavigationRailState__extendedAnimation_isSet: dart.privateName(navigation_rail, "_#_NavigationRailState#_extendedAnimation#isSet"),
    _destinationControllers: dart.privateName(navigation_rail, "_destinationControllers"),
    _destinationAnimations: dart.privateName(navigation_rail, "_destinationAnimations"),
    _extendedController: dart.privateName(navigation_rail, "_extendedController"),
    _extendedAnimation: dart.privateName(navigation_rail, "_extendedAnimation"),
    _initControllers: dart.privateName(navigation_rail, "_initControllers"),
    _disposeControllers: dart.privateName(navigation_rail, "_disposeControllers"),
    _resetState: dart.privateName(navigation_rail, "_resetState"),
    _rebuild: dart.privateName(navigation_rail, "_rebuild"),
    _positionAnimation$1: dart.privateName(navigation_rail, "_positionAnimation"),
    _extendedLabelFadeValue: dart.privateName(navigation_rail, "_extendedLabelFadeValue"),
    _name$13: dart.privateName(navigation_rail, "_name"),
    _normalLabelFadeInValue: dart.privateName(navigation_rail, "_normalLabelFadeInValue"),
    _normalLabelFadeOutValue: dart.privateName(navigation_rail, "_normalLabelFadeOutValue"),
    icon$3: dart.privateName(navigation_rail, "NavigationRailDestination.icon"),
    selectedIcon: dart.privateName(navigation_rail, "NavigationRailDestination.selectedIcon"),
    label$2: dart.privateName(navigation_rail, "NavigationRailDestination.label"),
    padding$3: dart.privateName(navigation_rail, "NavigationRailDestination.padding"),
    animation$5: dart.privateName(navigation_rail, "_ExtendedNavigationRailAnimation.animation"),
    backgroundColor$6: dart.privateName(navigation_rail_theme, "NavigationRailThemeData.backgroundColor"),
    elevation$7: dart.privateName(navigation_rail_theme, "NavigationRailThemeData.elevation"),
    unselectedLabelTextStyle$1: dart.privateName(navigation_rail_theme, "NavigationRailThemeData.unselectedLabelTextStyle"),
    selectedLabelTextStyle$1: dart.privateName(navigation_rail_theme, "NavigationRailThemeData.selectedLabelTextStyle"),
    unselectedIconTheme$1: dart.privateName(navigation_rail_theme, "NavigationRailThemeData.unselectedIconTheme"),
    selectedIconTheme$1: dart.privateName(navigation_rail_theme, "NavigationRailThemeData.selectedIconTheme"),
    groupAlignment$1: dart.privateName(navigation_rail_theme, "NavigationRailThemeData.groupAlignment"),
    labelType$1: dart.privateName(navigation_rail_theme, "NavigationRailThemeData.labelType"),
    data$11: dart.privateName(navigation_rail_theme, "NavigationRailTheme.data"),
    _start: dart.privateName(input_decorator, "_start"),
    _extent: dart.privateName(input_decorator, "_extent"),
    border: dart.privateName(input_decorator, "_BorderContainer.border"),
    gap: dart.privateName(input_decorator, "_BorderContainer.gap"),
    gapAnimation: dart.privateName(input_decorator, "_BorderContainer.gapAnimation"),
    fillColor$2: dart.privateName(input_decorator, "_BorderContainer.fillColor"),
    hoverColor$3: dart.privateName(input_decorator, "_BorderContainer.hoverColor"),
    isHovering: dart.privateName(input_decorator, "_BorderContainer.isHovering"),
    child$8: dart.privateName(input_decorator, "_BorderContainer.child"),
    ___BorderContainerState__controller: dart.privateName(input_decorator, "_#_BorderContainerState#_controller"),
    ___BorderContainerState__controller_isSet: dart.privateName(input_decorator, "_#_BorderContainerState#_controller#isSet"),
    ___BorderContainerState__hoverColorController: dart.privateName(input_decorator, "_#_BorderContainerState#_hoverColorController"),
    ___BorderContainerState__hoverColorController_isSet: dart.privateName(input_decorator, "_#_BorderContainerState#_hoverColorController#isSet"),
    ___BorderContainerState__borderAnimation: dart.privateName(input_decorator, "_#_BorderContainerState#_borderAnimation"),
    ___BorderContainerState__borderAnimation_isSet: dart.privateName(input_decorator, "_#_BorderContainerState#_borderAnimation#isSet"),
    ___BorderContainerState__border: dart.privateName(input_decorator, "_#_BorderContainerState#_border"),
    ___BorderContainerState__border_isSet: dart.privateName(input_decorator, "_#_BorderContainerState#_border#isSet"),
    ___BorderContainerState__hoverAnimation: dart.privateName(input_decorator, "_#_BorderContainerState#_hoverAnimation"),
    ___BorderContainerState__hoverAnimation_isSet: dart.privateName(input_decorator, "_#_BorderContainerState#_hoverAnimation#isSet"),
    ___BorderContainerState__hoverColorTween: dart.privateName(input_decorator, "_#_BorderContainerState#_hoverColorTween"),
    ___BorderContainerState__hoverColorTween_isSet: dart.privateName(input_decorator, "_#_BorderContainerState#_hoverColorTween#isSet"),
    _controller$3: dart.privateName(input_decorator, "_controller"),
    _hoverColorController: dart.privateName(input_decorator, "_hoverColorController"),
    _borderAnimation: dart.privateName(input_decorator, "_borderAnimation"),
    _border: dart.privateName(input_decorator, "_border"),
    _hoverAnimation: dart.privateName(input_decorator, "_hoverAnimation"),
    _hoverColorTween: dart.privateName(input_decorator, "_hoverColorTween"),
    child$9: dart.privateName(input_decorator, "_Shaker.child"),
    textAlign: dart.privateName(input_decorator, "_HelperError.textAlign"),
    helperText: dart.privateName(input_decorator, "_HelperError.helperText"),
    helperStyle: dart.privateName(input_decorator, "_HelperError.helperStyle"),
    helperMaxLines: dart.privateName(input_decorator, "_HelperError.helperMaxLines"),
    errorText: dart.privateName(input_decorator, "_HelperError.errorText"),
    errorStyle: dart.privateName(input_decorator, "_HelperError.errorStyle"),
    errorMaxLines: dart.privateName(input_decorator, "_HelperError.errorMaxLines"),
    ___HelperErrorState__controller: dart.privateName(input_decorator, "_#_HelperErrorState#_controller"),
    ___HelperErrorState__controller_isSet: dart.privateName(input_decorator, "_#_HelperErrorState#_controller#isSet"),
    _helper: dart.privateName(input_decorator, "_helper"),
    _error: dart.privateName(input_decorator, "_error"),
    _buildError: dart.privateName(input_decorator, "_buildError"),
    _buildHelper: dart.privateName(input_decorator, "_buildHelper"),
    _handleChange: dart.privateName(input_decorator, "_handleChange"),
    _name$14: dart.privateName(input_decorator, "_name"),
    contentPadding: dart.privateName(input_decorator, "_Decoration.contentPadding"),
    isCollapsed: dart.privateName(input_decorator, "_Decoration.isCollapsed"),
    floatingLabelHeight: dart.privateName(input_decorator, "_Decoration.floatingLabelHeight"),
    floatingLabelProgress: dart.privateName(input_decorator, "_Decoration.floatingLabelProgress"),
    border$1: dart.privateName(input_decorator, "_Decoration.border"),
    borderGap: dart.privateName(input_decorator, "_Decoration.borderGap"),
    alignLabelWithHint: dart.privateName(input_decorator, "_Decoration.alignLabelWithHint"),
    isDense: dart.privateName(input_decorator, "_Decoration.isDense"),
    visualDensity$2: dart.privateName(input_decorator, "_Decoration.visualDensity"),
    icon$4: dart.privateName(input_decorator, "_Decoration.icon"),
    input: dart.privateName(input_decorator, "_Decoration.input"),
    label$3: dart.privateName(input_decorator, "_Decoration.label"),
    hint: dart.privateName(input_decorator, "_Decoration.hint"),
    prefix: dart.privateName(input_decorator, "_Decoration.prefix"),
    suffix: dart.privateName(input_decorator, "_Decoration.suffix"),
    prefixIcon: dart.privateName(input_decorator, "_Decoration.prefixIcon"),
    suffixIcon: dart.privateName(input_decorator, "_Decoration.suffixIcon"),
    helperError: dart.privateName(input_decorator, "_Decoration.helperError"),
    counter: dart.privateName(input_decorator, "_Decoration.counter"),
    container: dart.privateName(input_decorator, "_Decoration.container"),
    fixTextFieldOutlineLabel: dart.privateName(input_decorator, "_Decoration.fixTextFieldOutlineLabel"),
    boxToBaseline: dart.privateName(input_decorator, "_RenderDecorationLayout.boxToBaseline"),
    inputBaseline: dart.privateName(input_decorator, "_RenderDecorationLayout.inputBaseline"),
    outlineBaseline: dart.privateName(input_decorator, "_RenderDecorationLayout.outlineBaseline"),
    subtextBaseline: dart.privateName(input_decorator, "_RenderDecorationLayout.subtextBaseline"),
    containerHeight: dart.privateName(input_decorator, "_RenderDecorationLayout.containerHeight"),
    subtextHeight: dart.privateName(input_decorator, "_RenderDecorationLayout.subtextHeight"),
    _icon: dart.privateName(input_decorator, "_icon"),
    _input: dart.privateName(input_decorator, "_input"),
    _label: dart.privateName(input_decorator, "_label"),
    _hint: dart.privateName(input_decorator, "_hint"),
    _prefix: dart.privateName(input_decorator, "_prefix"),
    _suffix: dart.privateName(input_decorator, "_suffix"),
    _prefixIcon: dart.privateName(input_decorator, "_prefixIcon"),
    _suffixIcon: dart.privateName(input_decorator, "_suffixIcon"),
    _helperError: dart.privateName(input_decorator, "_helperError"),
    _counter: dart.privateName(input_decorator, "_counter"),
    _container: dart.privateName(input_decorator, "_container"),
    _expands: dart.privateName(input_decorator, "_expands"),
    _labelTransform: dart.privateName(input_decorator, "_labelTransform"),
    _decoration: dart.privateName(input_decorator, "_decoration"),
    _textDirection$1: dart.privateName(input_decorator, "_textDirection"),
    _textBaseline: dart.privateName(input_decorator, "_textBaseline"),
    _textAlignVertical: dart.privateName(input_decorator, "_textAlignVertical"),
    _isFocused: dart.privateName(input_decorator, "_isFocused"),
    $remove: dartx.remove,
    _updateChild: dart.privateName(input_decorator, "_updateChild"),
    _children$1: dart.privateName(input_decorator, "_children"),
    _isOutlineAligned: dart.privateName(input_decorator, "_isOutlineAligned"),
    _defaultTextAlignVertical: dart.privateName(input_decorator, "_defaultTextAlignVertical"),
    $forEach: dartx.forEach,
    _layoutLineBox: dart.privateName(input_decorator, "_layoutLineBox"),
    _interpolateThree: dart.privateName(input_decorator, "_interpolateThree"),
    _layout: dart.privateName(input_decorator, "_layout"),
    _lineHeight: dart.privateName(input_decorator, "_lineHeight"),
    _paintLabel: dart.privateName(input_decorator, "_paintLabel"),
    $values: dartx.values,
    $containsValue: dartx.containsValue,
    $containsKey: dartx.containsKey,
    _mountChild: dart.privateName(input_decorator, "_mountChild"),
    _updateRenderObject: dart.privateName(input_decorator, "_updateRenderObject"),
    $keys: dartx.keys,
    decoration: dart.privateName(input_decorator, "_Decorator.decoration"),
    textDirection: dart.privateName(input_decorator, "_Decorator.textDirection"),
    textBaseline: dart.privateName(input_decorator, "_Decorator.textBaseline"),
    textAlignVertical: dart.privateName(input_decorator, "_Decorator.textAlignVertical"),
    isFocused: dart.privateName(input_decorator, "_Decorator.isFocused"),
    expands: dart.privateName(input_decorator, "_Decorator.expands"),
    labelIsFloating: dart.privateName(input_decorator, "_AffixText.labelIsFloating"),
    text$1: dart.privateName(input_decorator, "_AffixText.text"),
    style$3: dart.privateName(input_decorator, "_AffixText.style"),
    child$10: dart.privateName(input_decorator, "_AffixText.child"),
    decoration$1: dart.privateName(input_decorator, "InputDecorator.decoration"),
    baseStyle: dart.privateName(input_decorator, "InputDecorator.baseStyle"),
    textAlign$1: dart.privateName(input_decorator, "InputDecorator.textAlign"),
    textAlignVertical$1: dart.privateName(input_decorator, "InputDecorator.textAlignVertical"),
    isFocused$1: dart.privateName(input_decorator, "InputDecorator.isFocused"),
    isHovering$1: dart.privateName(input_decorator, "InputDecorator.isHovering"),
    expands$1: dart.privateName(input_decorator, "InputDecorator.expands"),
    isEmpty: dart.privateName(input_decorator, "InputDecorator.isEmpty"),
    child$11: dart.privateName(input_decorator, "InputDecorator.child"),
    _labelShouldWithdraw: dart.privateName(input_decorator, "_labelShouldWithdraw"),
    ___InputDecoratorState__floatingLabelController: dart.privateName(input_decorator, "_#_InputDecoratorState#_floatingLabelController"),
    ___InputDecoratorState__floatingLabelController_isSet: dart.privateName(input_decorator, "_#_InputDecoratorState#_floatingLabelController#isSet"),
    ___InputDecoratorState__shakingLabelController: dart.privateName(input_decorator, "_#_InputDecoratorState#_shakingLabelController"),
    ___InputDecoratorState__shakingLabelController_isSet: dart.privateName(input_decorator, "_#_InputDecoratorState#_shakingLabelController#isSet"),
    _borderGap: dart.privateName(input_decorator, "_borderGap"),
    _effectiveDecoration: dart.privateName(input_decorator, "_effectiveDecoration"),
    _floatingLabelController: dart.privateName(input_decorator, "_floatingLabelController"),
    _shakingLabelController: dart.privateName(input_decorator, "_shakingLabelController"),
    _floatingLabelEnabled: dart.privateName(input_decorator, "_floatingLabelEnabled"),
    _getActiveColor: dart.privateName(input_decorator, "_getActiveColor"),
    _getDefaultBorderColor: dart.privateName(input_decorator, "_getDefaultBorderColor"),
    _getFillColor: dart.privateName(input_decorator, "_getFillColor"),
    _getHoverColor: dart.privateName(input_decorator, "_getHoverColor"),
    _getDefaultIconColor: dart.privateName(input_decorator, "_getDefaultIconColor"),
    _hasInlineLabel: dart.privateName(input_decorator, "_hasInlineLabel"),
    _shouldShowLabel: dart.privateName(input_decorator, "_shouldShowLabel"),
    _getInlineStyle: dart.privateName(input_decorator, "_getInlineStyle"),
    _getFloatingLabelStyle: dart.privateName(input_decorator, "_getFloatingLabelStyle"),
    _getHelperStyle: dart.privateName(input_decorator, "_getHelperStyle"),
    _getErrorStyle: dart.privateName(input_decorator, "_getErrorStyle"),
    InputBorder_borderSide: dart.privateName(input_border, "InputBorder.borderSide"),
    UnderlineInputBorder_borderRadius: dart.privateName(input_border, "UnderlineInputBorder.borderRadius"),
    _getDefaultBorder: dart.privateName(input_decorator, "_getDefaultBorder"),
    EdgeInsetsDirectional_bottom: dart.privateName(edge_insets, "EdgeInsetsDirectional.bottom"),
    EdgeInsetsDirectional_end: dart.privateName(edge_insets, "EdgeInsetsDirectional.end"),
    EdgeInsetsDirectional_top: dart.privateName(edge_insets, "EdgeInsetsDirectional.top"),
    EdgeInsetsDirectional_start: dart.privateName(edge_insets, "EdgeInsetsDirectional.start"),
    icon$5: dart.privateName(input_decorator, "InputDecoration.icon"),
    labelText: dart.privateName(input_decorator, "InputDecoration.labelText"),
    labelStyle$3: dart.privateName(input_decorator, "InputDecoration.labelStyle"),
    helperText$1: dart.privateName(input_decorator, "InputDecoration.helperText"),
    helperStyle$1: dart.privateName(input_decorator, "InputDecoration.helperStyle"),
    helperMaxLines$1: dart.privateName(input_decorator, "InputDecoration.helperMaxLines"),
    hintText: dart.privateName(input_decorator, "InputDecoration.hintText"),
    hintStyle: dart.privateName(input_decorator, "InputDecoration.hintStyle"),
    hintTextDirection: dart.privateName(input_decorator, "InputDecoration.hintTextDirection"),
    hintMaxLines: dart.privateName(input_decorator, "InputDecoration.hintMaxLines"),
    errorText$1: dart.privateName(input_decorator, "InputDecoration.errorText"),
    errorStyle$1: dart.privateName(input_decorator, "InputDecoration.errorStyle"),
    errorMaxLines$1: dart.privateName(input_decorator, "InputDecoration.errorMaxLines"),
    floatingLabelBehavior: dart.privateName(input_decorator, "InputDecoration.floatingLabelBehavior"),
    isDense$1: dart.privateName(input_decorator, "InputDecoration.isDense"),
    contentPadding$1: dart.privateName(input_decorator, "InputDecoration.contentPadding"),
    isCollapsed$1: dart.privateName(input_decorator, "InputDecoration.isCollapsed"),
    prefixIcon$1: dart.privateName(input_decorator, "InputDecoration.prefixIcon"),
    prefixIconConstraints: dart.privateName(input_decorator, "InputDecoration.prefixIconConstraints"),
    prefix$1: dart.privateName(input_decorator, "InputDecoration.prefix"),
    prefixText: dart.privateName(input_decorator, "InputDecoration.prefixText"),
    prefixStyle: dart.privateName(input_decorator, "InputDecoration.prefixStyle"),
    suffixIcon$1: dart.privateName(input_decorator, "InputDecoration.suffixIcon"),
    suffix$1: dart.privateName(input_decorator, "InputDecoration.suffix"),
    suffixText: dart.privateName(input_decorator, "InputDecoration.suffixText"),
    suffixStyle: dart.privateName(input_decorator, "InputDecoration.suffixStyle"),
    suffixIconConstraints: dart.privateName(input_decorator, "InputDecoration.suffixIconConstraints"),
    counterText: dart.privateName(input_decorator, "InputDecoration.counterText"),
    counter$1: dart.privateName(input_decorator, "InputDecoration.counter"),
    counterStyle: dart.privateName(input_decorator, "InputDecoration.counterStyle"),
    filled: dart.privateName(input_decorator, "InputDecoration.filled"),
    fillColor$3: dart.privateName(input_decorator, "InputDecoration.fillColor"),
    focusColor$3: dart.privateName(input_decorator, "InputDecoration.focusColor"),
    hoverColor$4: dart.privateName(input_decorator, "InputDecoration.hoverColor"),
    errorBorder: dart.privateName(input_decorator, "InputDecoration.errorBorder"),
    focusedBorder: dart.privateName(input_decorator, "InputDecoration.focusedBorder"),
    focusedErrorBorder: dart.privateName(input_decorator, "InputDecoration.focusedErrorBorder"),
    disabledBorder: dart.privateName(input_decorator, "InputDecoration.disabledBorder"),
    enabledBorder: dart.privateName(input_decorator, "InputDecoration.enabledBorder"),
    border$2: dart.privateName(input_decorator, "InputDecoration.border"),
    enabled: dart.privateName(input_decorator, "InputDecoration.enabled"),
    semanticCounterText: dart.privateName(input_decorator, "InputDecoration.semanticCounterText"),
    alignLabelWithHint$1: dart.privateName(input_decorator, "InputDecoration.alignLabelWithHint"),
    constraints$2: dart.privateName(input_decorator, "InputDecoration.constraints"),
    $join: dartx.join,
    labelStyle$4: dart.privateName(input_decorator, "InputDecorationTheme.labelStyle"),
    helperStyle$2: dart.privateName(input_decorator, "InputDecorationTheme.helperStyle"),
    helperMaxLines$2: dart.privateName(input_decorator, "InputDecorationTheme.helperMaxLines"),
    hintStyle$1: dart.privateName(input_decorator, "InputDecorationTheme.hintStyle"),
    errorStyle$2: dart.privateName(input_decorator, "InputDecorationTheme.errorStyle"),
    errorMaxLines$2: dart.privateName(input_decorator, "InputDecorationTheme.errorMaxLines"),
    floatingLabelBehavior$1: dart.privateName(input_decorator, "InputDecorationTheme.floatingLabelBehavior"),
    isDense$2: dart.privateName(input_decorator, "InputDecorationTheme.isDense"),
    contentPadding$2: dart.privateName(input_decorator, "InputDecorationTheme.contentPadding"),
    isCollapsed$2: dart.privateName(input_decorator, "InputDecorationTheme.isCollapsed"),
    prefixStyle$1: dart.privateName(input_decorator, "InputDecorationTheme.prefixStyle"),
    suffixStyle$1: dart.privateName(input_decorator, "InputDecorationTheme.suffixStyle"),
    counterStyle$1: dart.privateName(input_decorator, "InputDecorationTheme.counterStyle"),
    filled$1: dart.privateName(input_decorator, "InputDecorationTheme.filled"),
    fillColor$4: dart.privateName(input_decorator, "InputDecorationTheme.fillColor"),
    focusColor$4: dart.privateName(input_decorator, "InputDecorationTheme.focusColor"),
    hoverColor$5: dart.privateName(input_decorator, "InputDecorationTheme.hoverColor"),
    errorBorder$1: dart.privateName(input_decorator, "InputDecorationTheme.errorBorder"),
    focusedBorder$1: dart.privateName(input_decorator, "InputDecorationTheme.focusedBorder"),
    focusedErrorBorder$1: dart.privateName(input_decorator, "InputDecorationTheme.focusedErrorBorder"),
    disabledBorder$1: dart.privateName(input_decorator, "InputDecorationTheme.disabledBorder"),
    enabledBorder$1: dart.privateName(input_decorator, "InputDecorationTheme.enabledBorder"),
    border$3: dart.privateName(input_decorator, "InputDecorationTheme.border"),
    alignLabelWithHint$2: dart.privateName(input_decorator, "InputDecorationTheme.alignLabelWithHint"),
    constraints$3: dart.privateName(input_decorator, "InputDecorationTheme.constraints"),
    __InkSplash__radius: dart.privateName(ink_splash, "_#InkSplash#_radius"),
    __InkSplash__radius_isSet: dart.privateName(ink_splash, "_#InkSplash#_radius#isSet"),
    __InkSplash__radiusController: dart.privateName(ink_splash, "_#InkSplash#_radiusController"),
    __InkSplash__radiusController_isSet: dart.privateName(ink_splash, "_#InkSplash#_radiusController#isSet"),
    __InkSplash__alpha: dart.privateName(ink_splash, "_#InkSplash#_alpha"),
    __InkSplash__alpha_isSet: dart.privateName(ink_splash, "_#InkSplash#_alpha#isSet"),
    _alphaController: dart.privateName(ink_splash, "_alphaController"),
    _position$1: dart.privateName(ink_splash, "_position"),
    _borderRadius$1: dart.privateName(ink_splash, "_borderRadius"),
    _customBorder$1: dart.privateName(ink_splash, "_customBorder"),
    _targetRadius$1: dart.privateName(ink_splash, "_targetRadius"),
    _clipCallback$1: dart.privateName(ink_splash, "_clipCallback"),
    _repositionToReferenceBox: dart.privateName(ink_splash, "_repositionToReferenceBox"),
    _textDirection$2: dart.privateName(ink_splash, "_textDirection"),
    _radiusController$1: dart.privateName(ink_splash, "_radiusController"),
    _radius$1: dart.privateName(ink_splash, "_radius"),
    _handleAlphaStatusChanged$1: dart.privateName(ink_splash, "_handleAlphaStatusChanged"),
    _alpha: dart.privateName(ink_splash, "_alpha"),
    $ceilToDouble: dartx.ceilToDouble,
    textStyle$2: dart.privateName(button_style, "ButtonStyle.textStyle"),
    backgroundColor$7: dart.privateName(button_style, "ButtonStyle.backgroundColor"),
    foregroundColor$1: dart.privateName(button_style, "ButtonStyle.foregroundColor"),
    overlayColor$4: dart.privateName(button_style, "ButtonStyle.overlayColor"),
    shadowColor: dart.privateName(button_style, "ButtonStyle.shadowColor"),
    elevation$8: dart.privateName(button_style, "ButtonStyle.elevation"),
    padding$4: dart.privateName(button_style, "ButtonStyle.padding"),
    minimumSize: dart.privateName(button_style, "ButtonStyle.minimumSize"),
    fixedSize: dart.privateName(button_style, "ButtonStyle.fixedSize"),
    maximumSize: dart.privateName(button_style, "ButtonStyle.maximumSize"),
    side: dart.privateName(button_style, "ButtonStyle.side"),
    shape$5: dart.privateName(button_style, "ButtonStyle.shape"),
    mouseCursor$5: dart.privateName(button_style, "ButtonStyle.mouseCursor"),
    visualDensity$3: dart.privateName(button_style, "ButtonStyle.visualDensity"),
    tapTargetSize: dart.privateName(button_style, "ButtonStyle.tapTargetSize"),
    animationDuration: dart.privateName(button_style, "ButtonStyle.animationDuration"),
    enableFeedback$4: dart.privateName(button_style, "ButtonStyle.enableFeedback"),
    alignment$1: dart.privateName(button_style, "ButtonStyle.alignment"),
    splashFactory: dart.privateName(button_style, "ButtonStyle.splashFactory"),
    a$3: dart.privateName(button_style, "_LerpProperties.a"),
    b$3: dart.privateName(button_style, "_LerpProperties.b"),
    t$3: dart.privateName(button_style, "_LerpProperties.t"),
    lerpFunction$3: dart.privateName(button_style, "_LerpProperties.lerpFunction"),
    a$4: dart.privateName(button_style, "_LerpSides.a"),
    b$4: dart.privateName(button_style, "_LerpSides.b"),
    t$4: dart.privateName(button_style, "_LerpSides.t"),
    a$5: dart.privateName(button_style, "_LerpShapes.a"),
    b$5: dart.privateName(button_style, "_LerpShapes.b"),
    t$5: dart.privateName(button_style, "_LerpShapes.t"),
    style$4: dart.privateName(elevated_button_theme, "ElevatedButtonThemeData.style"),
    data$12: dart.privateName(elevated_button_theme, "ElevatedButtonTheme.data"),
    backgroundColor$8: dart.privateName(dialog_theme, "DialogTheme.backgroundColor"),
    elevation$9: dart.privateName(dialog_theme, "DialogTheme.elevation"),
    shape$6: dart.privateName(dialog_theme, "DialogTheme.shape"),
    titleTextStyle: dart.privateName(dialog_theme, "DialogTheme.titleTextStyle"),
    contentTextStyle$1: dart.privateName(dialog_theme, "DialogTheme.contentTextStyle"),
    decoration$2: dart.privateName(data_table_theme, "DataTableThemeData.decoration"),
    dataRowColor: dart.privateName(data_table_theme, "DataTableThemeData.dataRowColor"),
    dataRowHeight: dart.privateName(data_table_theme, "DataTableThemeData.dataRowHeight"),
    dataTextStyle: dart.privateName(data_table_theme, "DataTableThemeData.dataTextStyle"),
    headingRowColor: dart.privateName(data_table_theme, "DataTableThemeData.headingRowColor"),
    headingRowHeight: dart.privateName(data_table_theme, "DataTableThemeData.headingRowHeight"),
    headingTextStyle: dart.privateName(data_table_theme, "DataTableThemeData.headingTextStyle"),
    horizontalMargin: dart.privateName(data_table_theme, "DataTableThemeData.horizontalMargin"),
    columnSpacing: dart.privateName(data_table_theme, "DataTableThemeData.columnSpacing"),
    dividerThickness: dart.privateName(data_table_theme, "DataTableThemeData.dividerThickness"),
    checkboxHorizontalMargin: dart.privateName(data_table_theme, "DataTableThemeData.checkboxHorizontalMargin"),
    a$6: dart.privateName(data_table_theme, "_LerpProperties.a"),
    b$6: dart.privateName(data_table_theme, "_LerpProperties.b"),
    t$6: dart.privateName(data_table_theme, "_LerpProperties.t"),
    lerpFunction$4: dart.privateName(data_table_theme, "_LerpProperties.lerpFunction"),
    data$13: dart.privateName(data_table_theme, "DataTableTheme.data"),
    data$14: dart.privateName(chip_theme, "ChipTheme.data"),
    backgroundColor$9: dart.privateName(chip_theme, "ChipThemeData.backgroundColor"),
    deleteIconColor: dart.privateName(chip_theme, "ChipThemeData.deleteIconColor"),
    disabledColor$2: dart.privateName(chip_theme, "ChipThemeData.disabledColor"),
    selectedColor$2: dart.privateName(chip_theme, "ChipThemeData.selectedColor"),
    secondarySelectedColor: dart.privateName(chip_theme, "ChipThemeData.secondarySelectedColor"),
    shadowColor$1: dart.privateName(chip_theme, "ChipThemeData.shadowColor"),
    selectedShadowColor: dart.privateName(chip_theme, "ChipThemeData.selectedShadowColor"),
    showCheckmark: dart.privateName(chip_theme, "ChipThemeData.showCheckmark"),
    checkmarkColor: dart.privateName(chip_theme, "ChipThemeData.checkmarkColor"),
    labelPadding$2: dart.privateName(chip_theme, "ChipThemeData.labelPadding"),
    padding$5: dart.privateName(chip_theme, "ChipThemeData.padding"),
    side$1: dart.privateName(chip_theme, "ChipThemeData.side"),
    shape$7: dart.privateName(chip_theme, "ChipThemeData.shape"),
    labelStyle$5: dart.privateName(chip_theme, "ChipThemeData.labelStyle"),
    secondaryLabelStyle: dart.privateName(chip_theme, "ChipThemeData.secondaryLabelStyle"),
    brightness: dart.privateName(chip_theme, "ChipThemeData.brightness"),
    elevation$10: dart.privateName(chip_theme, "ChipThemeData.elevation"),
    pressElevation: dart.privateName(chip_theme, "ChipThemeData.pressElevation"),
    mouseCursor$6: dart.privateName(checkbox_theme, "CheckboxThemeData.mouseCursor"),
    fillColor$5: dart.privateName(checkbox_theme, "CheckboxThemeData.fillColor"),
    checkColor: dart.privateName(checkbox_theme, "CheckboxThemeData.checkColor"),
    overlayColor$5: dart.privateName(checkbox_theme, "CheckboxThemeData.overlayColor"),
    splashRadius$3: dart.privateName(checkbox_theme, "CheckboxThemeData.splashRadius"),
    materialTapTargetSize$3: dart.privateName(checkbox_theme, "CheckboxThemeData.materialTapTargetSize"),
    visualDensity$4: dart.privateName(checkbox_theme, "CheckboxThemeData.visualDensity"),
    shape$8: dart.privateName(checkbox_theme, "CheckboxThemeData.shape"),
    side$2: dart.privateName(checkbox_theme, "CheckboxThemeData.side"),
    a$7: dart.privateName(checkbox_theme, "_LerpProperties.a"),
    b$7: dart.privateName(checkbox_theme, "_LerpProperties.b"),
    t$7: dart.privateName(checkbox_theme, "_LerpProperties.t"),
    lerpFunction$5: dart.privateName(checkbox_theme, "_LerpProperties.lerpFunction"),
    data$15: dart.privateName(checkbox_theme, "CheckboxTheme.data"),
    clipBehavior$2: dart.privateName(card_theme, "CardTheme.clipBehavior"),
    color$7: dart.privateName(card_theme, "CardTheme.color"),
    shadowColor$2: dart.privateName(card_theme, "CardTheme.shadowColor"),
    elevation$11: dart.privateName(card_theme, "CardTheme.elevation"),
    margin$1: dart.privateName(card_theme, "CardTheme.margin"),
    shape$9: dart.privateName(card_theme, "CardTheme.shape"),
    onPressed$6: dart.privateName(material_button, "MaterialButton.onPressed"),
    onLongPress$1: dart.privateName(material_button, "MaterialButton.onLongPress"),
    onHighlightChanged: dart.privateName(material_button, "MaterialButton.onHighlightChanged"),
    mouseCursor$7: dart.privateName(material_button, "MaterialButton.mouseCursor"),
    textTheme: dart.privateName(material_button, "MaterialButton.textTheme"),
    textColor$1: dart.privateName(material_button, "MaterialButton.textColor"),
    disabledTextColor$1: dart.privateName(material_button, "MaterialButton.disabledTextColor"),
    color$8: dart.privateName(material_button, "MaterialButton.color"),
    disabledColor$3: dart.privateName(material_button, "MaterialButton.disabledColor"),
    splashColor$3: dart.privateName(material_button, "MaterialButton.splashColor"),
    focusColor$5: dart.privateName(material_button, "MaterialButton.focusColor"),
    hoverColor$6: dart.privateName(material_button, "MaterialButton.hoverColor"),
    highlightColor$2: dart.privateName(material_button, "MaterialButton.highlightColor"),
    elevation$12: dart.privateName(material_button, "MaterialButton.elevation"),
    hoverElevation$1: dart.privateName(material_button, "MaterialButton.hoverElevation"),
    focusElevation$1: dart.privateName(material_button, "MaterialButton.focusElevation"),
    highlightElevation$1: dart.privateName(material_button, "MaterialButton.highlightElevation"),
    disabledElevation$1: dart.privateName(material_button, "MaterialButton.disabledElevation"),
    colorBrightness: dart.privateName(material_button, "MaterialButton.colorBrightness"),
    child$12: dart.privateName(material_button, "MaterialButton.child"),
    padding$6: dart.privateName(material_button, "MaterialButton.padding"),
    visualDensity$5: dart.privateName(material_button, "MaterialButton.visualDensity"),
    shape$10: dart.privateName(material_button, "MaterialButton.shape"),
    clipBehavior$3: dart.privateName(material_button, "MaterialButton.clipBehavior"),
    focusNode$3: dart.privateName(material_button, "MaterialButton.focusNode"),
    autofocus$3: dart.privateName(material_button, "MaterialButton.autofocus"),
    animationDuration$1: dart.privateName(material_button, "MaterialButton.animationDuration"),
    materialTapTargetSize$4: dart.privateName(material_button, "MaterialButton.materialTapTargetSize"),
    minWidth$1: dart.privateName(material_button, "MaterialButton.minWidth"),
    height$1: dart.privateName(material_button, "MaterialButton.height"),
    enableFeedback$5: dart.privateName(material_button, "MaterialButton.enableFeedback"),
    highlightedBorderColor: dart.privateName(outline_button, "OutlineButton.highlightedBorderColor"),
    disabledBorderColor$1: dart.privateName(outline_button, "OutlineButton.disabledBorderColor"),
    borderSide: dart.privateName(outline_button, "OutlineButton.borderSide"),
    onPressed$7: dart.privateName(outline_button, "_OutlineButton.onPressed"),
    onLongPress$2: dart.privateName(outline_button, "_OutlineButton.onLongPress"),
    mouseCursor$8: dart.privateName(outline_button, "_OutlineButton.mouseCursor"),
    brightness$1: dart.privateName(outline_button, "_OutlineButton.brightness"),
    textTheme$1: dart.privateName(outline_button, "_OutlineButton.textTheme"),
    textColor$2: dart.privateName(outline_button, "_OutlineButton.textColor"),
    disabledTextColor$2: dart.privateName(outline_button, "_OutlineButton.disabledTextColor"),
    color$9: dart.privateName(outline_button, "_OutlineButton.color"),
    splashColor$4: dart.privateName(outline_button, "_OutlineButton.splashColor"),
    focusColor$6: dart.privateName(outline_button, "_OutlineButton.focusColor"),
    hoverColor$7: dart.privateName(outline_button, "_OutlineButton.hoverColor"),
    highlightColor$3: dart.privateName(outline_button, "_OutlineButton.highlightColor"),
    highlightElevation$2: dart.privateName(outline_button, "_OutlineButton.highlightElevation"),
    borderSide$1: dart.privateName(outline_button, "_OutlineButton.borderSide"),
    disabledBorderColor$2: dart.privateName(outline_button, "_OutlineButton.disabledBorderColor"),
    highlightedBorderColor$1: dart.privateName(outline_button, "_OutlineButton.highlightedBorderColor"),
    padding$7: dart.privateName(outline_button, "_OutlineButton.padding"),
    visualDensity$6: dart.privateName(outline_button, "_OutlineButton.visualDensity"),
    shape$11: dart.privateName(outline_button, "_OutlineButton.shape"),
    clipBehavior$4: dart.privateName(outline_button, "_OutlineButton.clipBehavior"),
    focusNode$4: dart.privateName(outline_button, "_OutlineButton.focusNode"),
    autofocus$4: dart.privateName(outline_button, "_OutlineButton.autofocus"),
    child$13: dart.privateName(outline_button, "_OutlineButton.child"),
    materialTapTargetSize$5: dart.privateName(outline_button, "_OutlineButton.materialTapTargetSize"),
    ___OutlineButtonState__controller: dart.privateName(outline_button, "_#_OutlineButtonState#_controller"),
    ___OutlineButtonState__controller_isSet: dart.privateName(outline_button, "_#_OutlineButtonState#_controller#isSet"),
    ___OutlineButtonState__fillAnimation: dart.privateName(outline_button, "_#_OutlineButtonState#_fillAnimation"),
    ___OutlineButtonState__fillAnimation_isSet: dart.privateName(outline_button, "_#_OutlineButtonState#_fillAnimation#isSet"),
    ___OutlineButtonState__elevationAnimation: dart.privateName(outline_button, "_#_OutlineButtonState#_elevationAnimation"),
    ___OutlineButtonState__elevationAnimation_isSet: dart.privateName(outline_button, "_#_OutlineButtonState#_elevationAnimation#isSet"),
    _pressed: dart.privateName(outline_button, "_pressed"),
    _controller$4: dart.privateName(outline_button, "_controller"),
    _fillAnimation: dart.privateName(outline_button, "_fillAnimation"),
    _elevationAnimation: dart.privateName(outline_button, "_elevationAnimation"),
    _handleHighlightChanged: dart.privateName(outline_button, "_handleHighlightChanged"),
    _getFillColor$1: dart.privateName(outline_button, "_getFillColor"),
    _outlineColor: dart.privateName(outline_button, "_outlineColor"),
    _getOutline: dart.privateName(outline_button, "_getOutline"),
    _getHighlightElevation: dart.privateName(outline_button, "_getHighlightElevation"),
    shape$12: dart.privateName(outline_button, "_OutlineBorder.shape"),
    side$3: dart.privateName(outline_button, "_OutlineBorder.side"),
    onPressed$8: dart.privateName(button, "RawMaterialButton.onPressed"),
    onLongPress$3: dart.privateName(button, "RawMaterialButton.onLongPress"),
    onHighlightChanged$1: dart.privateName(button, "RawMaterialButton.onHighlightChanged"),
    mouseCursor$9: dart.privateName(button, "RawMaterialButton.mouseCursor"),
    textStyle$3: dart.privateName(button, "RawMaterialButton.textStyle"),
    fillColor$6: dart.privateName(button, "RawMaterialButton.fillColor"),
    focusColor$7: dart.privateName(button, "RawMaterialButton.focusColor"),
    hoverColor$8: dart.privateName(button, "RawMaterialButton.hoverColor"),
    highlightColor$4: dart.privateName(button, "RawMaterialButton.highlightColor"),
    splashColor$5: dart.privateName(button, "RawMaterialButton.splashColor"),
    elevation$13: dart.privateName(button, "RawMaterialButton.elevation"),
    hoverElevation$2: dart.privateName(button, "RawMaterialButton.hoverElevation"),
    focusElevation$2: dart.privateName(button, "RawMaterialButton.focusElevation"),
    highlightElevation$3: dart.privateName(button, "RawMaterialButton.highlightElevation"),
    disabledElevation$2: dart.privateName(button, "RawMaterialButton.disabledElevation"),
    padding$8: dart.privateName(button, "RawMaterialButton.padding"),
    visualDensity$7: dart.privateName(button, "RawMaterialButton.visualDensity"),
    constraints$4: dart.privateName(button, "RawMaterialButton.constraints"),
    shape$13: dart.privateName(button, "RawMaterialButton.shape"),
    animationDuration$2: dart.privateName(button, "RawMaterialButton.animationDuration"),
    child$14: dart.privateName(button, "RawMaterialButton.child"),
    materialTapTargetSize$6: dart.privateName(button, "RawMaterialButton.materialTapTargetSize"),
    focusNode$5: dart.privateName(button, "RawMaterialButton.focusNode"),
    autofocus$5: dart.privateName(button, "RawMaterialButton.autofocus"),
    clipBehavior$5: dart.privateName(button, "RawMaterialButton.clipBehavior"),
    enableFeedback$6: dart.privateName(button, "RawMaterialButton.enableFeedback"),
    VisualDensity_vertical: dart.privateName(theme_data, "VisualDensity.vertical"),
    VisualDensity_horizontal: dart.privateName(theme_data, "VisualDensity.horizontal"),
    _effectiveElevation: dart.privateName(button, "_effectiveElevation"),
    minSize$1: dart.privateName(button, "_InputPadding.minSize"),
    _minSize$1: dart.privateName(button, "_minSize"),
    _computeSize$1: dart.privateName(button, "_computeSize"),
    primary: dart.privateName(color_scheme, "ColorScheme.primary"),
    primaryVariant: dart.privateName(color_scheme, "ColorScheme.primaryVariant"),
    secondary: dart.privateName(color_scheme, "ColorScheme.secondary"),
    secondaryVariant: dart.privateName(color_scheme, "ColorScheme.secondaryVariant"),
    surface: dart.privateName(color_scheme, "ColorScheme.surface"),
    background$1: dart.privateName(color_scheme, "ColorScheme.background"),
    error: dart.privateName(color_scheme, "ColorScheme.error"),
    onPrimary: dart.privateName(color_scheme, "ColorScheme.onPrimary"),
    onSecondary: dart.privateName(color_scheme, "ColorScheme.onSecondary"),
    onSurface: dart.privateName(color_scheme, "ColorScheme.onSurface"),
    onBackground: dart.privateName(color_scheme, "ColorScheme.onBackground"),
    onError: dart.privateName(color_scheme, "ColorScheme.onError"),
    brightness$2: dart.privateName(color_scheme, "ColorScheme.brightness"),
    ColorSwatch__swatch: dart.privateName(colors, "ColorSwatch._swatch"),
    _name$15: dart.privateName(button_theme, "_name"),
    data$16: dart.privateName(button_theme, "ButtonTheme.data"),
    minWidth$2: dart.privateName(button_theme, "ButtonThemeData.minWidth"),
    height$2: dart.privateName(button_theme, "ButtonThemeData.height"),
    textTheme$2: dart.privateName(button_theme, "ButtonThemeData.textTheme")
  };
  var S$0 = {
    layoutBehavior: dart.privateName(button_theme, "ButtonThemeData.layoutBehavior"),
    _padding: dart.privateName(button_theme, "ButtonThemeData._padding"),
    _shape: dart.privateName(button_theme, "ButtonThemeData._shape"),
    alignedDropdown: dart.privateName(button_theme, "ButtonThemeData.alignedDropdown"),
    _buttonColor: dart.privateName(button_theme, "ButtonThemeData._buttonColor"),
    _disabledColor: dart.privateName(button_theme, "ButtonThemeData._disabledColor"),
    _focusColor: dart.privateName(button_theme, "ButtonThemeData._focusColor"),
    _hoverColor: dart.privateName(button_theme, "ButtonThemeData._hoverColor"),
    _highlightColor: dart.privateName(button_theme, "ButtonThemeData._highlightColor"),
    _splashColor: dart.privateName(button_theme, "ButtonThemeData._splashColor"),
    colorScheme: dart.privateName(button_theme, "ButtonThemeData.colorScheme"),
    _materialTapTargetSize: dart.privateName(button_theme, "ButtonThemeData._materialTapTargetSize"),
    _padding$1: dart.privateName(button_theme, "_padding"),
    _shape$1: dart.privateName(button_theme, "_shape"),
    _buttonColor$1: dart.privateName(button_theme, "_buttonColor"),
    _disabledColor$1: dart.privateName(button_theme, "_disabledColor"),
    _focusColor$1: dart.privateName(button_theme, "_focusColor"),
    _hoverColor$1: dart.privateName(button_theme, "_hoverColor"),
    _highlightColor$1: dart.privateName(button_theme, "_highlightColor"),
    _splashColor$1: dart.privateName(button_theme, "_splashColor"),
    _materialTapTargetSize$1: dart.privateName(button_theme, "_materialTapTargetSize"),
    alignment$2: dart.privateName(button_bar_theme, "ButtonBarThemeData.alignment"),
    mainAxisSize: dart.privateName(button_bar_theme, "ButtonBarThemeData.mainAxisSize"),
    buttonTextTheme: dart.privateName(button_bar_theme, "ButtonBarThemeData.buttonTextTheme"),
    buttonMinWidth: dart.privateName(button_bar_theme, "ButtonBarThemeData.buttonMinWidth"),
    buttonHeight: dart.privateName(button_bar_theme, "ButtonBarThemeData.buttonHeight"),
    buttonPadding: dart.privateName(button_bar_theme, "ButtonBarThemeData.buttonPadding"),
    buttonAlignedDropdown: dart.privateName(button_bar_theme, "ButtonBarThemeData.buttonAlignedDropdown"),
    layoutBehavior$1: dart.privateName(button_bar_theme, "ButtonBarThemeData.layoutBehavior"),
    overflowDirection: dart.privateName(button_bar_theme, "ButtonBarThemeData.overflowDirection"),
    data$17: dart.privateName(button_bar_theme, "ButtonBarTheme.data"),
    height$3: dart.privateName(tooltip_theme, "TooltipThemeData.height"),
    padding$9: dart.privateName(tooltip_theme, "TooltipThemeData.padding"),
    margin$2: dart.privateName(tooltip_theme, "TooltipThemeData.margin"),
    verticalOffset: dart.privateName(tooltip_theme, "TooltipThemeData.verticalOffset"),
    preferBelow: dart.privateName(tooltip_theme, "TooltipThemeData.preferBelow"),
    excludeFromSemantics: dart.privateName(tooltip_theme, "TooltipThemeData.excludeFromSemantics"),
    decoration$3: dart.privateName(tooltip_theme, "TooltipThemeData.decoration"),
    textStyle$4: dart.privateName(tooltip_theme, "TooltipThemeData.textStyle"),
    waitDuration: dart.privateName(tooltip_theme, "TooltipThemeData.waitDuration"),
    showDuration: dart.privateName(tooltip_theme, "TooltipThemeData.showDuration"),
    data$18: dart.privateName(tooltip_theme, "TooltipTheme.data"),
    message: dart.privateName(tooltip, "Tooltip.message"),
    height$4: dart.privateName(tooltip, "Tooltip.height"),
    padding$10: dart.privateName(tooltip, "Tooltip.padding"),
    margin$3: dart.privateName(tooltip, "Tooltip.margin"),
    verticalOffset$1: dart.privateName(tooltip, "Tooltip.verticalOffset"),
    preferBelow$1: dart.privateName(tooltip, "Tooltip.preferBelow"),
    excludeFromSemantics$1: dart.privateName(tooltip, "Tooltip.excludeFromSemantics"),
    child$15: dart.privateName(tooltip, "Tooltip.child"),
    decoration$4: dart.privateName(tooltip, "Tooltip.decoration"),
    textStyle$5: dart.privateName(tooltip, "Tooltip.textStyle"),
    waitDuration$1: dart.privateName(tooltip, "Tooltip.waitDuration"),
    showDuration$1: dart.privateName(tooltip, "Tooltip.showDuration"),
    _hideTooltip: dart.privateName(tooltip, "_hideTooltip"),
    ___TooltipState_height: dart.privateName(tooltip, "_#_TooltipState#height"),
    ___TooltipState_height_isSet: dart.privateName(tooltip, "_#_TooltipState#height#isSet"),
    ___TooltipState_padding: dart.privateName(tooltip, "_#_TooltipState#padding"),
    ___TooltipState_padding_isSet: dart.privateName(tooltip, "_#_TooltipState#padding#isSet"),
    ___TooltipState_margin: dart.privateName(tooltip, "_#_TooltipState#margin"),
    ___TooltipState_margin_isSet: dart.privateName(tooltip, "_#_TooltipState#margin#isSet"),
    ___TooltipState_decoration: dart.privateName(tooltip, "_#_TooltipState#decoration"),
    ___TooltipState_decoration_isSet: dart.privateName(tooltip, "_#_TooltipState#decoration#isSet"),
    ___TooltipState_textStyle: dart.privateName(tooltip, "_#_TooltipState#textStyle"),
    ___TooltipState_textStyle_isSet: dart.privateName(tooltip, "_#_TooltipState#textStyle#isSet"),
    ___TooltipState_verticalOffset: dart.privateName(tooltip, "_#_TooltipState#verticalOffset"),
    ___TooltipState_verticalOffset_isSet: dart.privateName(tooltip, "_#_TooltipState#verticalOffset#isSet"),
    ___TooltipState_preferBelow: dart.privateName(tooltip, "_#_TooltipState#preferBelow"),
    ___TooltipState_preferBelow_isSet: dart.privateName(tooltip, "_#_TooltipState#preferBelow#isSet"),
    ___TooltipState_excludeFromSemantics: dart.privateName(tooltip, "_#_TooltipState#excludeFromSemantics"),
    ___TooltipState_excludeFromSemantics_isSet: dart.privateName(tooltip, "_#_TooltipState#excludeFromSemantics#isSet"),
    ___TooltipState__controller: dart.privateName(tooltip, "_#_TooltipState#_controller"),
    ___TooltipState__controller_isSet: dart.privateName(tooltip, "_#_TooltipState#_controller#isSet"),
    _entry: dart.privateName(tooltip, "_entry"),
    _hideTimer: dart.privateName(tooltip, "_hideTimer"),
    _showTimer: dart.privateName(tooltip, "_showTimer"),
    ___TooltipState_showDuration: dart.privateName(tooltip, "_#_TooltipState#showDuration"),
    ___TooltipState_showDuration_isSet: dart.privateName(tooltip, "_#_TooltipState#showDuration#isSet"),
    ___TooltipState_hoverShowDuration: dart.privateName(tooltip, "_#_TooltipState#hoverShowDuration"),
    ___TooltipState_hoverShowDuration_isSet: dart.privateName(tooltip, "_#_TooltipState#hoverShowDuration#isSet"),
    ___TooltipState_waitDuration: dart.privateName(tooltip, "_#_TooltipState#waitDuration"),
    ___TooltipState_waitDuration_isSet: dart.privateName(tooltip, "_#_TooltipState#waitDuration#isSet"),
    ___TooltipState__mouseIsConnected: dart.privateName(tooltip, "_#_TooltipState#_mouseIsConnected"),
    ___TooltipState__mouseIsConnected_isSet: dart.privateName(tooltip, "_#_TooltipState#_mouseIsConnected#isSet"),
    _longPressActivated: dart.privateName(tooltip, "_longPressActivated"),
    _controller$5: dart.privateName(tooltip, "_controller"),
    _mouseIsConnected: dart.privateName(tooltip, "_mouseIsConnected"),
    _handleStatusChanged: dart.privateName(tooltip, "_handleStatusChanged"),
    _handleMouseTrackerChange: dart.privateName(tooltip, "_handleMouseTrackerChange"),
    _handlePointerEvent: dart.privateName(tooltip, "_handlePointerEvent"),
    _getDefaultTooltipHeight: dart.privateName(tooltip, "_getDefaultTooltipHeight"),
    _getDefaultPadding: dart.privateName(tooltip, "_getDefaultPadding"),
    _getDefaultFontSize: dart.privateName(tooltip, "_getDefaultFontSize"),
    _removeEntry: dart.privateName(tooltip, "_removeEntry"),
    _showTooltip: dart.privateName(tooltip, "_showTooltip"),
    _createNewEntry: dart.privateName(tooltip, "_createNewEntry"),
    _handleLongPress: dart.privateName(tooltip, "_handleLongPress"),
    message$1: dart.privateName(tooltip, "_TooltipOverlay.message"),
    height$5: dart.privateName(tooltip, "_TooltipOverlay.height"),
    padding$11: dart.privateName(tooltip, "_TooltipOverlay.padding"),
    margin$4: dart.privateName(tooltip, "_TooltipOverlay.margin"),
    decoration$5: dart.privateName(tooltip, "_TooltipOverlay.decoration"),
    textStyle$6: dart.privateName(tooltip, "_TooltipOverlay.textStyle"),
    animation$6: dart.privateName(tooltip, "_TooltipOverlay.animation"),
    target: dart.privateName(tooltip, "_TooltipOverlay.target"),
    verticalOffset$2: dart.privateName(tooltip, "_TooltipOverlay.verticalOffset"),
    preferBelow$2: dart.privateName(tooltip, "_TooltipOverlay.preferBelow"),
    onEnter: dart.privateName(tooltip, "_TooltipOverlay.onEnter"),
    onExit: dart.privateName(tooltip, "_TooltipOverlay.onExit"),
    _name$16: dart.privateName(bottom_navigation_bar, "_name"),
    items: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.items"),
    onTap$1: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.onTap"),
    currentIndex: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.currentIndex"),
    elevation$14: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.elevation"),
    type: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.type"),
    backgroundColor$10: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.backgroundColor"),
    iconSize$1: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.iconSize"),
    selectedItemColor: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.selectedItemColor"),
    unselectedItemColor: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.unselectedItemColor"),
    selectedIconTheme$2: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.selectedIconTheme"),
    unselectedIconTheme$2: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.unselectedIconTheme"),
    selectedLabelStyle: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.selectedLabelStyle"),
    unselectedLabelStyle$3: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.unselectedLabelStyle"),
    selectedFontSize: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.selectedFontSize"),
    unselectedFontSize: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.unselectedFontSize"),
    showUnselectedLabels: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.showUnselectedLabels"),
    showSelectedLabels: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.showSelectedLabels"),
    mouseCursor$10: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.mouseCursor"),
    enableFeedback$7: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.enableFeedback"),
    $every: dartx.every,
    type$1: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.type"),
    item: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.item"),
    animation$7: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.animation"),
    iconSize$2: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.iconSize"),
    onTap$2: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.onTap"),
    colorTween: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.colorTween"),
    flex: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.flex"),
    selected$1: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.selected"),
    selectedIconTheme$3: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.selectedIconTheme"),
    unselectedIconTheme$3: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.unselectedIconTheme"),
    selectedLabelStyle$1: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.selectedLabelStyle"),
    unselectedLabelStyle$4: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.unselectedLabelStyle"),
    indexLabel: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.indexLabel"),
    showSelectedLabels$1: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.showSelectedLabels"),
    showUnselectedLabels$1: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.showUnselectedLabels"),
    mouseCursor$11: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.mouseCursor"),
    enableFeedback$8: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.enableFeedback"),
    colorTween$1: dart.privateName(bottom_navigation_bar, "_TileIcon.colorTween"),
    animation$8: dart.privateName(bottom_navigation_bar, "_TileIcon.animation"),
    iconSize$3: dart.privateName(bottom_navigation_bar, "_TileIcon.iconSize"),
    selected$2: dart.privateName(bottom_navigation_bar, "_TileIcon.selected"),
    item$1: dart.privateName(bottom_navigation_bar, "_TileIcon.item"),
    selectedIconTheme$4: dart.privateName(bottom_navigation_bar, "_TileIcon.selectedIconTheme"),
    unselectedIconTheme$4: dart.privateName(bottom_navigation_bar, "_TileIcon.unselectedIconTheme"),
    colorTween$2: dart.privateName(bottom_navigation_bar, "_Label.colorTween"),
    animation$9: dart.privateName(bottom_navigation_bar, "_Label.animation"),
    item$2: dart.privateName(bottom_navigation_bar, "_Label.item"),
    selectedLabelStyle$2: dart.privateName(bottom_navigation_bar, "_Label.selectedLabelStyle"),
    unselectedLabelStyle$5: dart.privateName(bottom_navigation_bar, "_Label.unselectedLabelStyle"),
    showSelectedLabels$2: dart.privateName(bottom_navigation_bar, "_Label.showSelectedLabels"),
    showUnselectedLabels$2: dart.privateName(bottom_navigation_bar, "_Label.showUnselectedLabels"),
    _controllers: dart.privateName(bottom_navigation_bar, "_controllers"),
    ___BottomNavigationBarState__animations: dart.privateName(bottom_navigation_bar, "_#_BottomNavigationBarState#_animations"),
    ___BottomNavigationBarState__animations_isSet: dart.privateName(bottom_navigation_bar, "_#_BottomNavigationBarState#_animations#isSet"),
    _circles: dart.privateName(bottom_navigation_bar, "_circles"),
    _backgroundColor$1: dart.privateName(bottom_navigation_bar, "_backgroundColor"),
    _animations: dart.privateName(bottom_navigation_bar, "_animations"),
    _rebuild$1: dart.privateName(bottom_navigation_bar, "_rebuild"),
    _resetState$1: dart.privateName(bottom_navigation_bar, "_resetState"),
    _effectiveType: dart.privateName(bottom_navigation_bar, "_effectiveType"),
    _defaultShowUnselected: dart.privateName(bottom_navigation_bar, "_defaultShowUnselected"),
    _evaluateFlex: dart.privateName(bottom_navigation_bar, "_evaluateFlex"),
    _pushCircle: dart.privateName(bottom_navigation_bar, "_pushCircle"),
    TextStyle_overflow: dart.privateName(text_style, "TextStyle.overflow"),
    TextStyle_fontFeatures: dart.privateName(text_style, "TextStyle.fontFeatures"),
    TextStyle_shadows: dart.privateName(text_style, "TextStyle.shadows"),
    TextStyle_debugLabel: dart.privateName(text_style, "TextStyle.debugLabel"),
    TextStyle_decorationThickness: dart.privateName(text_style, "TextStyle.decorationThickness"),
    TextStyle_decorationStyle: dart.privateName(text_style, "TextStyle.decorationStyle"),
    TextStyle_decorationColor: dart.privateName(text_style, "TextStyle.decorationColor"),
    TextStyle_decoration: dart.privateName(text_style, "TextStyle.decoration"),
    TextStyle_background: dart.privateName(text_style, "TextStyle.background"),
    TextStyle_foreground: dart.privateName(text_style, "TextStyle.foreground"),
    TextStyle_locale: dart.privateName(text_style, "TextStyle.locale"),
    TextStyle_leadingDistribution: dart.privateName(text_style, "TextStyle.leadingDistribution"),
    TextStyle_height: dart.privateName(text_style, "TextStyle.height"),
    TextStyle_textBaseline: dart.privateName(text_style, "TextStyle.textBaseline"),
    TextStyle_wordSpacing: dart.privateName(text_style, "TextStyle.wordSpacing"),
    TextStyle_letterSpacing: dart.privateName(text_style, "TextStyle.letterSpacing"),
    TextStyle_fontStyle: dart.privateName(text_style, "TextStyle.fontStyle"),
    TextStyle_fontWeight: dart.privateName(text_style, "TextStyle.fontWeight"),
    TextStyle_fontSize: dart.privateName(text_style, "TextStyle.fontSize"),
    TextStyle__package: dart.privateName(text_style, "TextStyle._package"),
    TextStyle__fontFamilyFallback: dart.privateName(text_style, "TextStyle._fontFamilyFallback"),
    TextStyle_fontFamily: dart.privateName(text_style, "TextStyle.fontFamily"),
    TextStyle_backgroundColor: dart.privateName(text_style, "TextStyle.backgroundColor"),
    TextStyle_color: dart.privateName(text_style, "TextStyle.color"),
    TextStyle_inherit: dart.privateName(text_style, "TextStyle.inherit"),
    _createTiles: dart.privateName(bottom_navigation_bar, "_createTiles"),
    _createContainer: dart.privateName(bottom_navigation_bar, "_createContainer"),
    ___Circle_controller: dart.privateName(bottom_navigation_bar, "_#_Circle#controller"),
    ___Circle_controller_isSet: dart.privateName(bottom_navigation_bar, "_#_Circle#controller#isSet"),
    ___Circle_animation: dart.privateName(bottom_navigation_bar, "_#_Circle#animation"),
    ___Circle_animation_isSet: dart.privateName(bottom_navigation_bar, "_#_Circle#animation#isSet"),
    $fold: dartx.fold,
    $sublist: dartx.sublist,
    backgroundColor$11: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.backgroundColor"),
    elevation$15: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.elevation"),
    selectedIconTheme$5: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.selectedIconTheme"),
    unselectedIconTheme$5: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.unselectedIconTheme"),
    selectedItemColor$1: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.selectedItemColor"),
    unselectedItemColor$1: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.unselectedItemColor"),
    selectedLabelStyle$3: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.selectedLabelStyle"),
    unselectedLabelStyle$6: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.unselectedLabelStyle"),
    showSelectedLabels$3: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.showSelectedLabels"),
    showUnselectedLabels$3: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.showUnselectedLabels"),
    type$2: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.type"),
    enableFeedback$9: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.enableFeedback"),
    data$19: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarTheme.data"),
    color$10: dart.privateName(bottom_app_bar_theme, "BottomAppBarTheme.color"),
    elevation$16: dart.privateName(bottom_app_bar_theme, "BottomAppBarTheme.elevation"),
    shape$14: dart.privateName(bottom_app_bar_theme, "BottomAppBarTheme.shape"),
    visualDensity$8: dart.privateName(theme_data, "ThemeData.visualDensity"),
    primaryColor: dart.privateName(theme_data, "ThemeData.primaryColor"),
    primaryColorBrightness: dart.privateName(theme_data, "ThemeData.primaryColorBrightness"),
    primaryColorLight: dart.privateName(theme_data, "ThemeData.primaryColorLight"),
    primaryColorDark: dart.privateName(theme_data, "ThemeData.primaryColorDark"),
    canvasColor: dart.privateName(theme_data, "ThemeData.canvasColor"),
    shadowColor$3: dart.privateName(theme_data, "ThemeData.shadowColor"),
    accentColor: dart.privateName(theme_data, "ThemeData.accentColor"),
    accentColorBrightness: dart.privateName(theme_data, "ThemeData.accentColorBrightness"),
    scaffoldBackgroundColor: dart.privateName(theme_data, "ThemeData.scaffoldBackgroundColor"),
    bottomAppBarColor: dart.privateName(theme_data, "ThemeData.bottomAppBarColor"),
    cardColor: dart.privateName(theme_data, "ThemeData.cardColor"),
    dividerColor: dart.privateName(theme_data, "ThemeData.dividerColor"),
    focusColor$8: dart.privateName(theme_data, "ThemeData.focusColor"),
    hoverColor$9: dart.privateName(theme_data, "ThemeData.hoverColor"),
    highlightColor$5: dart.privateName(theme_data, "ThemeData.highlightColor"),
    splashColor$6: dart.privateName(theme_data, "ThemeData.splashColor"),
    splashFactory$1: dart.privateName(theme_data, "ThemeData.splashFactory"),
    selectedRowColor: dart.privateName(theme_data, "ThemeData.selectedRowColor"),
    unselectedWidgetColor: dart.privateName(theme_data, "ThemeData.unselectedWidgetColor"),
    disabledColor$4: dart.privateName(theme_data, "ThemeData.disabledColor"),
    buttonTheme: dart.privateName(theme_data, "ThemeData.buttonTheme"),
    toggleButtonsTheme: dart.privateName(theme_data, "ThemeData.toggleButtonsTheme"),
    buttonColor: dart.privateName(theme_data, "ThemeData.buttonColor"),
    secondaryHeaderColor: dart.privateName(theme_data, "ThemeData.secondaryHeaderColor"),
    textSelectionColor: dart.privateName(theme_data, "ThemeData.textSelectionColor"),
    cursorColor$1: dart.privateName(theme_data, "ThemeData.cursorColor"),
    textSelectionHandleColor: dart.privateName(theme_data, "ThemeData.textSelectionHandleColor"),
    backgroundColor$12: dart.privateName(theme_data, "ThemeData.backgroundColor"),
    dialogBackgroundColor: dart.privateName(theme_data, "ThemeData.dialogBackgroundColor"),
    indicatorColor$1: dart.privateName(theme_data, "ThemeData.indicatorColor"),
    hintColor: dart.privateName(theme_data, "ThemeData.hintColor"),
    errorColor: dart.privateName(theme_data, "ThemeData.errorColor"),
    toggleableActiveColor: dart.privateName(theme_data, "ThemeData.toggleableActiveColor"),
    textTheme$3: dart.privateName(theme_data, "ThemeData.textTheme"),
    primaryTextTheme: dart.privateName(theme_data, "ThemeData.primaryTextTheme"),
    accentTextTheme: dart.privateName(theme_data, "ThemeData.accentTextTheme"),
    inputDecorationTheme$1: dart.privateName(theme_data, "ThemeData.inputDecorationTheme"),
    iconTheme: dart.privateName(theme_data, "ThemeData.iconTheme"),
    primaryIconTheme: dart.privateName(theme_data, "ThemeData.primaryIconTheme"),
    accentIconTheme: dart.privateName(theme_data, "ThemeData.accentIconTheme"),
    sliderTheme: dart.privateName(theme_data, "ThemeData.sliderTheme"),
    tabBarTheme: dart.privateName(theme_data, "ThemeData.tabBarTheme"),
    tooltipTheme: dart.privateName(theme_data, "ThemeData.tooltipTheme"),
    cardTheme: dart.privateName(theme_data, "ThemeData.cardTheme"),
    chipTheme: dart.privateName(theme_data, "ThemeData.chipTheme"),
    platform: dart.privateName(theme_data, "ThemeData.platform"),
    materialTapTargetSize$7: dart.privateName(theme_data, "ThemeData.materialTapTargetSize"),
    applyElevationOverlayColor: dart.privateName(theme_data, "ThemeData.applyElevationOverlayColor"),
    pageTransitionsTheme: dart.privateName(theme_data, "ThemeData.pageTransitionsTheme"),
    appBarTheme: dart.privateName(theme_data, "ThemeData.appBarTheme"),
    scrollbarTheme: dart.privateName(theme_data, "ThemeData.scrollbarTheme"),
    bottomAppBarTheme: dart.privateName(theme_data, "ThemeData.bottomAppBarTheme"),
    colorScheme$1: dart.privateName(theme_data, "ThemeData.colorScheme"),
    snackBarTheme: dart.privateName(theme_data, "ThemeData.snackBarTheme"),
    dialogTheme: dart.privateName(theme_data, "ThemeData.dialogTheme"),
    floatingActionButtonTheme: dart.privateName(theme_data, "ThemeData.floatingActionButtonTheme"),
    navigationRailTheme: dart.privateName(theme_data, "ThemeData.navigationRailTheme"),
    typography: dart.privateName(theme_data, "ThemeData.typography"),
    cupertinoOverrideTheme: dart.privateName(theme_data, "ThemeData.cupertinoOverrideTheme"),
    bottomSheetTheme: dart.privateName(theme_data, "ThemeData.bottomSheetTheme"),
    popupMenuTheme: dart.privateName(theme_data, "ThemeData.popupMenuTheme"),
    bannerTheme: dart.privateName(theme_data, "ThemeData.bannerTheme"),
    dividerTheme: dart.privateName(theme_data, "ThemeData.dividerTheme"),
    buttonBarTheme: dart.privateName(theme_data, "ThemeData.buttonBarTheme"),
    bottomNavigationBarTheme: dart.privateName(theme_data, "ThemeData.bottomNavigationBarTheme"),
    timePickerTheme: dart.privateName(theme_data, "ThemeData.timePickerTheme"),
    textButtonTheme: dart.privateName(theme_data, "ThemeData.textButtonTheme"),
    elevatedButtonTheme: dart.privateName(theme_data, "ThemeData.elevatedButtonTheme"),
    outlinedButtonTheme: dart.privateName(theme_data, "ThemeData.outlinedButtonTheme"),
    textSelectionTheme: dart.privateName(theme_data, "ThemeData.textSelectionTheme"),
    dataTableTheme: dart.privateName(theme_data, "ThemeData.dataTableTheme"),
    checkboxTheme: dart.privateName(theme_data, "ThemeData.checkboxTheme"),
    radioTheme: dart.privateName(theme_data, "ThemeData.radioTheme"),
    switchTheme: dart.privateName(theme_data, "ThemeData.switchTheme"),
    progressIndicatorTheme: dart.privateName(theme_data, "ThemeData.progressIndicatorTheme"),
    fixTextFieldOutlineLabel$1: dart.privateName(theme_data, "ThemeData.fixTextFieldOutlineLabel"),
    useTextSelectionTheme: dart.privateName(theme_data, "ThemeData.useTextSelectionTheme"),
    IconThemeData_size: dart.privateName(icon_theme_data, "IconThemeData.size"),
    IconThemeData__opacity: dart.privateName(icon_theme_data, "IconThemeData._opacity"),
    IconThemeData_color: dart.privateName(icon_theme_data, "IconThemeData.color"),
    AppBarTheme_backwardsCompatibility: dart.privateName(app_bar_theme, "AppBarTheme.backwardsCompatibility"),
    AppBarTheme_systemOverlayStyle: dart.privateName(app_bar_theme, "AppBarTheme.systemOverlayStyle"),
    AppBarTheme_titleTextStyle: dart.privateName(app_bar_theme, "AppBarTheme.titleTextStyle"),
    AppBarTheme_toolbarTextStyle: dart.privateName(app_bar_theme, "AppBarTheme.toolbarTextStyle"),
    AppBarTheme_toolbarHeight: dart.privateName(app_bar_theme, "AppBarTheme.toolbarHeight"),
    AppBarTheme_titleSpacing: dart.privateName(app_bar_theme, "AppBarTheme.titleSpacing"),
    AppBarTheme_centerTitle: dart.privateName(app_bar_theme, "AppBarTheme.centerTitle"),
    AppBarTheme_textTheme: dart.privateName(app_bar_theme, "AppBarTheme.textTheme"),
    AppBarTheme_actionsIconTheme: dart.privateName(app_bar_theme, "AppBarTheme.actionsIconTheme"),
    AppBarTheme_iconTheme: dart.privateName(app_bar_theme, "AppBarTheme.iconTheme"),
    AppBarTheme_shadowColor: dart.privateName(app_bar_theme, "AppBarTheme.shadowColor"),
    AppBarTheme_elevation: dart.privateName(app_bar_theme, "AppBarTheme.elevation"),
    AppBarTheme_foregroundColor: dart.privateName(app_bar_theme, "AppBarTheme.foregroundColor"),
    AppBarTheme_backgroundColor: dart.privateName(app_bar_theme, "AppBarTheme.backgroundColor"),
    AppBarTheme_brightness: dart.privateName(app_bar_theme, "AppBarTheme.brightness"),
    FloatingActionButtonThemeData_enableFeedback: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.enableFeedback"),
    FloatingActionButtonThemeData_shape: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.shape"),
    FloatingActionButtonThemeData_highlightElevation: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.highlightElevation"),
    FloatingActionButtonThemeData_disabledElevation: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.disabledElevation"),
    FloatingActionButtonThemeData_hoverElevation: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.hoverElevation"),
    FloatingActionButtonThemeData_focusElevation: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.focusElevation"),
    FloatingActionButtonThemeData_elevation: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.elevation"),
    FloatingActionButtonThemeData_splashColor: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.splashColor"),
    FloatingActionButtonThemeData_hoverColor: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.hoverColor"),
    FloatingActionButtonThemeData_focusColor: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.focusColor"),
    FloatingActionButtonThemeData_backgroundColor: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.backgroundColor"),
    FloatingActionButtonThemeData_foregroundColor: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.foregroundColor"),
    BottomSheetThemeData_constraints: dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.constraints"),
    BottomSheetThemeData_clipBehavior: dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.clipBehavior"),
    BottomSheetThemeData_shape: dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.shape"),
    BottomSheetThemeData_modalElevation: dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.modalElevation"),
    BottomSheetThemeData_modalBackgroundColor: dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.modalBackgroundColor"),
    BottomSheetThemeData_elevation: dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.elevation"),
    BottomSheetThemeData_backgroundColor: dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.backgroundColor"),
    MaterialBannerThemeData_leadingPadding: dart.privateName(banner_theme, "MaterialBannerThemeData.leadingPadding"),
    MaterialBannerThemeData_padding: dart.privateName(banner_theme, "MaterialBannerThemeData.padding"),
    MaterialBannerThemeData_contentTextStyle: dart.privateName(banner_theme, "MaterialBannerThemeData.contentTextStyle"),
    MaterialBannerThemeData_backgroundColor: dart.privateName(banner_theme, "MaterialBannerThemeData.backgroundColor"),
    DividerThemeData_endIndent: dart.privateName(divider_theme, "DividerThemeData.endIndent"),
    DividerThemeData_indent: dart.privateName(divider_theme, "DividerThemeData.indent"),
    DividerThemeData_thickness: dart.privateName(divider_theme, "DividerThemeData.thickness"),
    DividerThemeData_space: dart.privateName(divider_theme, "DividerThemeData.space"),
    DividerThemeData_color: dart.privateName(divider_theme, "DividerThemeData.color"),
    NoDefaultCupertinoThemeData_scaffoldBackgroundColor: dart.privateName(theme, "NoDefaultCupertinoThemeData.scaffoldBackgroundColor"),
    NoDefaultCupertinoThemeData_barBackgroundColor: dart.privateName(theme, "NoDefaultCupertinoThemeData.barBackgroundColor"),
    NoDefaultCupertinoThemeData_textTheme: dart.privateName(theme, "NoDefaultCupertinoThemeData.textTheme"),
    NoDefaultCupertinoThemeData_primaryContrastingColor: dart.privateName(theme, "NoDefaultCupertinoThemeData.primaryContrastingColor"),
    NoDefaultCupertinoThemeData_primaryColor: dart.privateName(theme, "NoDefaultCupertinoThemeData.primaryColor"),
    NoDefaultCupertinoThemeData_brightness: dart.privateName(theme, "NoDefaultCupertinoThemeData.brightness"),
    CupertinoDynamicColor_darkHighContrastElevatedColor: dart.privateName(colors$0, "CupertinoDynamicColor.darkHighContrastElevatedColor"),
    CupertinoDynamicColor_highContrastElevatedColor: dart.privateName(colors$0, "CupertinoDynamicColor.highContrastElevatedColor"),
    CupertinoDynamicColor_darkElevatedColor: dart.privateName(colors$0, "CupertinoDynamicColor.darkElevatedColor"),
    CupertinoDynamicColor_elevatedColor: dart.privateName(colors$0, "CupertinoDynamicColor.elevatedColor"),
    CupertinoDynamicColor_darkHighContrastColor: dart.privateName(colors$0, "CupertinoDynamicColor.darkHighContrastColor"),
    CupertinoDynamicColor_highContrastColor: dart.privateName(colors$0, "CupertinoDynamicColor.highContrastColor"),
    CupertinoDynamicColor_darkColor: dart.privateName(colors$0, "CupertinoDynamicColor.darkColor"),
    CupertinoDynamicColor_color: dart.privateName(colors$0, "CupertinoDynamicColor.color"),
    CupertinoDynamicColor__debugResolveContext: dart.privateName(colors$0, "CupertinoDynamicColor._debugResolveContext"),
    CupertinoDynamicColor__debugLabel: dart.privateName(colors$0, "CupertinoDynamicColor._debugLabel"),
    CupertinoDynamicColor__effectiveColor: dart.privateName(colors$0, "CupertinoDynamicColor._effectiveColor"),
    _CupertinoTextThemeDefaults_inactiveGray: dart.privateName(theme, "_CupertinoTextThemeDefaults.inactiveGray"),
    _CupertinoTextThemeDefaults_labelColor: dart.privateName(theme, "_CupertinoTextThemeDefaults.labelColor"),
    _CupertinoThemeDefaults_textThemeDefaults: dart.privateName(theme, "_CupertinoThemeDefaults.textThemeDefaults"),
    _CupertinoThemeDefaults_scaffoldBackgroundColor: dart.privateName(theme, "_CupertinoThemeDefaults.scaffoldBackgroundColor"),
    _CupertinoThemeDefaults_barBackgroundColor: dart.privateName(theme, "_CupertinoThemeDefaults.barBackgroundColor"),
    _CupertinoThemeDefaults_primaryContrastingColor: dart.privateName(theme, "_CupertinoThemeDefaults.primaryContrastingColor"),
    _CupertinoThemeDefaults_primaryColor: dart.privateName(theme, "_CupertinoThemeDefaults.primaryColor"),
    _CupertinoThemeDefaults_brightness: dart.privateName(theme, "_CupertinoThemeDefaults.brightness"),
    CupertinoThemeData__defaults: dart.privateName(theme, "CupertinoThemeData._defaults"),
    _materialTheme: dart.privateName(theme_data, "_materialTheme"),
    _cupertinoOverrideTheme: dart.privateName(theme_data, "_cupertinoOverrideTheme"),
    baseTheme: dart.privateName(theme_data, "_IdentityThemeDataCacheKey.baseTheme"),
    localTextGeometry: dart.privateName(theme_data, "_IdentityThemeDataCacheKey.localTextGeometry"),
    _cache: dart.privateName(theme_data, "_cache"),
    _maximumSize: dart.privateName(theme_data, "_maximumSize"),
    $first: dartx.first,
    horizontal: dart.privateName(theme_data, "VisualDensity.horizontal"),
    vertical: dart.privateName(theme_data, "VisualDensity.vertical"),
    _name$17: dart.privateName(box_border, "_name"),
    __InkHighlight__alpha: dart.privateName(ink_highlight, "_#InkHighlight#_alpha"),
    __InkHighlight__alpha_isSet: dart.privateName(ink_highlight, "_#InkHighlight#_alpha#isSet"),
    __InkHighlight__alphaController: dart.privateName(ink_highlight, "_#InkHighlight#_alphaController"),
    __InkHighlight__alphaController_isSet: dart.privateName(ink_highlight, "_#InkHighlight#_alphaController#isSet"),
    _active: dart.privateName(ink_highlight, "_active"),
    _shape$2: dart.privateName(ink_highlight, "_shape"),
    _radius$2: dart.privateName(ink_highlight, "_radius"),
    _borderRadius$2: dart.privateName(ink_highlight, "_borderRadius"),
    _customBorder$2: dart.privateName(ink_highlight, "_customBorder"),
    _textDirection$3: dart.privateName(ink_highlight, "_textDirection"),
    _rectCallback: dart.privateName(ink_highlight, "_rectCallback"),
    _alphaController$1: dart.privateName(ink_highlight, "_alphaController"),
    _handleAlphaStatusChanged$2: dart.privateName(ink_highlight, "_handleAlphaStatusChanged"),
    _alpha$1: dart.privateName(ink_highlight, "_alpha"),
    _paintHighlight: dart.privateName(ink_highlight, "_paintHighlight"),
    SemanticsEvent_type: dart.privateName(semantics_event, "SemanticsEvent.type"),
    state: dart.privateName(ink_well, "_ParentInkResponseProvider.state"),
    child$16: dart.privateName(ink_well, "InkResponse.child"),
    onTap$3: dart.privateName(ink_well, "InkResponse.onTap"),
    onTapDown: dart.privateName(ink_well, "InkResponse.onTapDown"),
    onTapCancel: dart.privateName(ink_well, "InkResponse.onTapCancel"),
    onDoubleTap: dart.privateName(ink_well, "InkResponse.onDoubleTap"),
    onLongPress$4: dart.privateName(ink_well, "InkResponse.onLongPress"),
    onHighlightChanged$2: dart.privateName(ink_well, "InkResponse.onHighlightChanged"),
    onHover: dart.privateName(ink_well, "InkResponse.onHover"),
    mouseCursor$12: dart.privateName(ink_well, "InkResponse.mouseCursor"),
    containedInkWell: dart.privateName(ink_well, "InkResponse.containedInkWell"),
    highlightShape: dart.privateName(ink_well, "InkResponse.highlightShape"),
    radius$1: dart.privateName(ink_well, "InkResponse.radius"),
    borderRadius$1: dart.privateName(ink_well, "InkResponse.borderRadius"),
    customBorder: dart.privateName(ink_well, "InkResponse.customBorder"),
    focusColor$9: dart.privateName(ink_well, "InkResponse.focusColor"),
    hoverColor$10: dart.privateName(ink_well, "InkResponse.hoverColor"),
    highlightColor$6: dart.privateName(ink_well, "InkResponse.highlightColor"),
    overlayColor$6: dart.privateName(ink_well, "InkResponse.overlayColor"),
    splashColor$7: dart.privateName(ink_well, "InkResponse.splashColor"),
    splashFactory$2: dart.privateName(ink_well, "InkResponse.splashFactory"),
    enableFeedback$10: dart.privateName(ink_well, "InkResponse.enableFeedback"),
    excludeFromSemantics$2: dart.privateName(ink_well, "InkResponse.excludeFromSemantics"),
    onFocusChange: dart.privateName(ink_well, "InkResponse.onFocusChange"),
    autofocus$6: dart.privateName(ink_well, "InkResponse.autofocus"),
    focusNode$6: dart.privateName(ink_well, "InkResponse.focusNode"),
    canRequestFocus: dart.privateName(ink_well, "InkResponse.canRequestFocus"),
    child$17: dart.privateName(ink_well, "_InkResponseStateWidget.child"),
    onTap$4: dart.privateName(ink_well, "_InkResponseStateWidget.onTap"),
    onTapDown$1: dart.privateName(ink_well, "_InkResponseStateWidget.onTapDown"),
    onTapCancel$1: dart.privateName(ink_well, "_InkResponseStateWidget.onTapCancel"),
    onDoubleTap$1: dart.privateName(ink_well, "_InkResponseStateWidget.onDoubleTap"),
    onLongPress$5: dart.privateName(ink_well, "_InkResponseStateWidget.onLongPress"),
    onHighlightChanged$3: dart.privateName(ink_well, "_InkResponseStateWidget.onHighlightChanged"),
    onHover$1: dart.privateName(ink_well, "_InkResponseStateWidget.onHover"),
    mouseCursor$13: dart.privateName(ink_well, "_InkResponseStateWidget.mouseCursor"),
    containedInkWell$1: dart.privateName(ink_well, "_InkResponseStateWidget.containedInkWell"),
    highlightShape$1: dart.privateName(ink_well, "_InkResponseStateWidget.highlightShape"),
    radius$2: dart.privateName(ink_well, "_InkResponseStateWidget.radius"),
    borderRadius$2: dart.privateName(ink_well, "_InkResponseStateWidget.borderRadius"),
    customBorder$1: dart.privateName(ink_well, "_InkResponseStateWidget.customBorder"),
    focusColor$10: dart.privateName(ink_well, "_InkResponseStateWidget.focusColor"),
    hoverColor$11: dart.privateName(ink_well, "_InkResponseStateWidget.hoverColor"),
    highlightColor$7: dart.privateName(ink_well, "_InkResponseStateWidget.highlightColor"),
    overlayColor$7: dart.privateName(ink_well, "_InkResponseStateWidget.overlayColor"),
    splashColor$8: dart.privateName(ink_well, "_InkResponseStateWidget.splashColor"),
    splashFactory$3: dart.privateName(ink_well, "_InkResponseStateWidget.splashFactory"),
    enableFeedback$11: dart.privateName(ink_well, "_InkResponseStateWidget.enableFeedback"),
    excludeFromSemantics$3: dart.privateName(ink_well, "_InkResponseStateWidget.excludeFromSemantics"),
    onFocusChange$1: dart.privateName(ink_well, "_InkResponseStateWidget.onFocusChange"),
    autofocus$7: dart.privateName(ink_well, "_InkResponseStateWidget.autofocus"),
    focusNode$7: dart.privateName(ink_well, "_InkResponseStateWidget.focusNode"),
    canRequestFocus$1: dart.privateName(ink_well, "_InkResponseStateWidget.canRequestFocus"),
    parentState: dart.privateName(ink_well, "_InkResponseStateWidget.parentState"),
    getRectCallback: dart.privateName(ink_well, "_InkResponseStateWidget.getRectCallback"),
    debugCheckContext: dart.privateName(ink_well, "_InkResponseStateWidget.debugCheckContext"),
    _name$18: dart.privateName(ink_well, "_name"),
    _splashes: dart.privateName(ink_well, "_splashes"),
    _currentSplash: dart.privateName(ink_well, "_currentSplash"),
    _hovering: dart.privateName(ink_well, "_hovering"),
    _highlights: dart.privateName(ink_well, "_highlights"),
    ___InkResponseState__actionMap: dart.privateName(ink_well, "_#_InkResponseState#_actionMap"),
    ___InkResponseState__actionMap_isSet: dart.privateName(ink_well, "_#_InkResponseState#_actionMap#isSet"),
    _activeChildren: dart.privateName(ink_well, "_activeChildren"),
    _hasFocus: dart.privateName(ink_well, "_hasFocus"),
    _simulateTap: dart.privateName(ink_well, "_simulateTap"),
    _actionMap: dart.privateName(ink_well, "_actionMap"),
    $where: dartx.where,
    _anyChildInkResponsePressed: dart.privateName(ink_well, "_anyChildInkResponsePressed"),
    _startSplash: dart.privateName(ink_well, "_startSplash"),
    _handleTap$1: dart.privateName(ink_well, "_handleTap"),
    _handleLongPress$1: dart.privateName(ink_well, "_handleLongPress"),
    _simulateLongPress: dart.privateName(ink_well, "_simulateLongPress"),
    _handleFocusHighlightModeChange: dart.privateName(ink_well, "_handleFocusHighlightModeChange"),
    _isWidgetEnabled: dart.privateName(ink_well, "_isWidgetEnabled"),
    _updateFocusHighlights: dart.privateName(ink_well, "_updateFocusHighlights"),
    _name$19: dart.privateName(material_state, "_name"),
    _createInkFeature: dart.privateName(ink_well, "_createInkFeature"),
    _name$20: dart.privateName(media_query, "_name"),
    _shouldShowFocus: dart.privateName(ink_well, "_shouldShowFocus"),
    _name$21: dart.privateName(focus_manager, "_name"),
    _handleFocusUpdate: dart.privateName(ink_well, "_handleFocusUpdate"),
    _handleTapDown: dart.privateName(ink_well, "_handleTapDown"),
    _handleTapCancel: dart.privateName(ink_well, "_handleTapCancel"),
    _handleDoubleTap: dart.privateName(ink_well, "_handleDoubleTap"),
    _handleHoverChange: dart.privateName(ink_well, "_handleHoverChange"),
    _handleMouseEnter: dart.privateName(ink_well, "_handleMouseEnter"),
    _handleMouseExit: dart.privateName(ink_well, "_handleMouseExit"),
    _canRequestFocus: dart.privateName(ink_well, "_canRequestFocus"),
    child$18: dart.privateName(ink_decoration, "Ink.child"),
    padding$12: dart.privateName(ink_decoration, "Ink.padding"),
    decoration$6: dart.privateName(ink_decoration, "Ink.decoration"),
    width$1: dart.privateName(ink_decoration, "Ink.width"),
    height$6: dart.privateName(ink_decoration, "Ink.height"),
    _name$22: dart.privateName(decoration_image, "_name"),
    _paddingIncludingDecoration: dart.privateName(ink_decoration, "_paddingIncludingDecoration"),
    _boxKey: dart.privateName(ink_decoration, "_boxKey"),
    _ink: dart.privateName(ink_decoration, "_ink"),
    _handleRemoved: dart.privateName(ink_decoration, "_handleRemoved"),
    _build: dart.privateName(ink_decoration, "_build"),
    _painter$1: dart.privateName(ink_decoration, "_painter"),
    _decoration$1: dart.privateName(ink_decoration, "_decoration")
  };
  var S$1 = {
    _configuration: dart.privateName(ink_decoration, "_configuration"),
    _handleChanged: dart.privateName(ink_decoration, "_handleChanged"),
    _name$23: dart.privateName(list_tile, "_name"),
    dense: dart.privateName(list_tile, "ListTileTheme.dense"),
    shape$15: dart.privateName(list_tile, "ListTileTheme.shape"),
    style$5: dart.privateName(list_tile, "ListTileTheme.style"),
    selectedColor$3: dart.privateName(list_tile, "ListTileTheme.selectedColor"),
    iconColor: dart.privateName(list_tile, "ListTileTheme.iconColor"),
    textColor$3: dart.privateName(list_tile, "ListTileTheme.textColor"),
    contentPadding$3: dart.privateName(list_tile, "ListTileTheme.contentPadding"),
    tileColor: dart.privateName(list_tile, "ListTileTheme.tileColor"),
    selectedTileColor: dart.privateName(list_tile, "ListTileTheme.selectedTileColor"),
    horizontalTitleGap: dart.privateName(list_tile, "ListTileTheme.horizontalTitleGap"),
    minVerticalPadding: dart.privateName(list_tile, "ListTileTheme.minVerticalPadding"),
    minLeadingWidth: dart.privateName(list_tile, "ListTileTheme.minLeadingWidth"),
    enableFeedback$12: dart.privateName(list_tile, "ListTileTheme.enableFeedback"),
    ProxyWidget_child: dart.privateName(framework, "ProxyWidget.child"),
    leading$1: dart.privateName(list_tile, "ListTile.leading"),
    title$1: dart.privateName(list_tile, "ListTile.title"),
    subtitle: dart.privateName(list_tile, "ListTile.subtitle"),
    trailing$1: dart.privateName(list_tile, "ListTile.trailing"),
    isThreeLine: dart.privateName(list_tile, "ListTile.isThreeLine"),
    dense$1: dart.privateName(list_tile, "ListTile.dense"),
    visualDensity$9: dart.privateName(list_tile, "ListTile.visualDensity"),
    shape$16: dart.privateName(list_tile, "ListTile.shape"),
    contentPadding$4: dart.privateName(list_tile, "ListTile.contentPadding"),
    enabled$1: dart.privateName(list_tile, "ListTile.enabled"),
    onTap$5: dart.privateName(list_tile, "ListTile.onTap"),
    onLongPress$6: dart.privateName(list_tile, "ListTile.onLongPress"),
    mouseCursor$14: dart.privateName(list_tile, "ListTile.mouseCursor"),
    selected$3: dart.privateName(list_tile, "ListTile.selected"),
    focusColor$11: dart.privateName(list_tile, "ListTile.focusColor"),
    hoverColor$12: dart.privateName(list_tile, "ListTile.hoverColor"),
    focusNode$8: dart.privateName(list_tile, "ListTile.focusNode"),
    autofocus$8: dart.privateName(list_tile, "ListTile.autofocus"),
    tileColor$1: dart.privateName(list_tile, "ListTile.tileColor"),
    selectedTileColor$1: dart.privateName(list_tile, "ListTile.selectedTileColor"),
    enableFeedback$13: dart.privateName(list_tile, "ListTile.enableFeedback"),
    horizontalTitleGap$1: dart.privateName(list_tile, "ListTile.horizontalTitleGap"),
    minVerticalPadding$1: dart.privateName(list_tile, "ListTile.minVerticalPadding"),
    minLeadingWidth$1: dart.privateName(list_tile, "ListTile.minLeadingWidth"),
    $iterator: dartx.iterator,
    _iconColor: dart.privateName(list_tile, "_iconColor"),
    _textColor: dart.privateName(list_tile, "_textColor"),
    _isDenseLayout: dart.privateName(list_tile, "_isDenseLayout"),
    _titleTextStyle: dart.privateName(list_tile, "_titleTextStyle"),
    _subtitleTextStyle: dart.privateName(list_tile, "_subtitleTextStyle"),
    _trailingAndLeadingTextStyle: dart.privateName(list_tile, "_trailingAndLeadingTextStyle"),
    _tileBackgroundColor: dart.privateName(list_tile, "_tileBackgroundColor"),
    Border_left: dart.privateName(box_border, "Border.left"),
    Border_bottom: dart.privateName(box_border, "Border.bottom"),
    Border_right: dart.privateName(box_border, "Border.right"),
    Border_top: dart.privateName(box_border, "Border.top"),
    leading$2: dart.privateName(list_tile, "_ListTile.leading"),
    title$2: dart.privateName(list_tile, "_ListTile.title"),
    subtitle$1: dart.privateName(list_tile, "_ListTile.subtitle"),
    trailing$2: dart.privateName(list_tile, "_ListTile.trailing"),
    isThreeLine$1: dart.privateName(list_tile, "_ListTile.isThreeLine"),
    isDense$3: dart.privateName(list_tile, "_ListTile.isDense"),
    visualDensity$10: dart.privateName(list_tile, "_ListTile.visualDensity"),
    textDirection$1: dart.privateName(list_tile, "_ListTile.textDirection"),
    titleBaselineType: dart.privateName(list_tile, "_ListTile.titleBaselineType"),
    subtitleBaselineType: dart.privateName(list_tile, "_ListTile.subtitleBaselineType"),
    horizontalTitleGap$2: dart.privateName(list_tile, "_ListTile.horizontalTitleGap"),
    minVerticalPadding$2: dart.privateName(list_tile, "_ListTile.minVerticalPadding"),
    minLeadingWidth$2: dart.privateName(list_tile, "_ListTile.minLeadingWidth"),
    _mountChild$1: dart.privateName(list_tile, "_mountChild"),
    _updateChild$1: dart.privateName(list_tile, "_updateChild"),
    _updateRenderObject$1: dart.privateName(list_tile, "_updateRenderObject"),
    _leading: dart.privateName(list_tile, "_leading"),
    _title: dart.privateName(list_tile, "_title"),
    _subtitle: dart.privateName(list_tile, "_subtitle"),
    _trailing: dart.privateName(list_tile, "_trailing"),
    _isDense: dart.privateName(list_tile, "_isDense"),
    _visualDensity: dart.privateName(list_tile, "_visualDensity"),
    _isThreeLine: dart.privateName(list_tile, "_isThreeLine"),
    _textDirection$4: dart.privateName(list_tile, "_textDirection"),
    _titleBaselineType: dart.privateName(list_tile, "_titleBaselineType"),
    _subtitleBaselineType: dart.privateName(list_tile, "_subtitleBaselineType"),
    _horizontalTitleGap: dart.privateName(list_tile, "_horizontalTitleGap"),
    _minVerticalPadding: dart.privateName(list_tile, "_minVerticalPadding"),
    _minLeadingWidth: dart.privateName(list_tile, "_minLeadingWidth"),
    _children$2: dart.privateName(list_tile, "_children"),
    _effectiveHorizontalTitleGap: dart.privateName(list_tile, "_effectiveHorizontalTitleGap"),
    _defaultTileHeight: dart.privateName(list_tile, "_defaultTileHeight"),
    _name$24: dart.privateName(drawer, "_name"),
    elevation$17: dart.privateName(drawer, "Drawer.elevation"),
    child$19: dart.privateName(drawer, "Drawer.child"),
    semanticLabel: dart.privateName(drawer, "Drawer.semanticLabel"),
    child$20: dart.privateName(drawer, "DrawerController.child"),
    alignment$3: dart.privateName(drawer, "DrawerController.alignment"),
    drawerCallback: dart.privateName(drawer, "DrawerController.drawerCallback"),
    dragStartBehavior$2: dart.privateName(drawer, "DrawerController.dragStartBehavior"),
    scrimColor: dart.privateName(drawer, "DrawerController.scrimColor"),
    enableOpenDragGesture: dart.privateName(drawer, "DrawerController.enableOpenDragGesture"),
    edgeDragWidth: dart.privateName(drawer, "DrawerController.edgeDragWidth"),
    isDrawerOpen: dart.privateName(drawer, "DrawerController.isDrawerOpen"),
    _historyEntry: dart.privateName(drawer, "_historyEntry"),
    _focusScopeNode: dart.privateName(drawer, "_focusScopeNode"),
    __DrawerControllerState__controller: dart.privateName(drawer, "_#DrawerControllerState#_controller"),
    __DrawerControllerState__controller_isSet: dart.privateName(drawer, "_#DrawerControllerState#_controller#isSet"),
    _drawerKey: dart.privateName(drawer, "_drawerKey"),
    _previouslyOpened: dart.privateName(drawer, "_previouslyOpened"),
    __DrawerControllerState__scrimColorTween: dart.privateName(drawer, "_#DrawerControllerState#_scrimColorTween"),
    __DrawerControllerState__scrimColorTween_isSet: dart.privateName(drawer, "_#DrawerControllerState#_scrimColorTween#isSet"),
    _gestureDetectorKey: dart.privateName(drawer, "_gestureDetectorKey"),
    _scrimColorTween: dart.privateName(drawer, "_scrimColorTween"),
    _buildScrimColorTween: dart.privateName(drawer, "_buildScrimColorTween"),
    _controller$6: dart.privateName(drawer, "_controller"),
    _animationChanged: dart.privateName(drawer, "_animationChanged"),
    _animationStatusChanged: dart.privateName(drawer, "_animationStatusChanged"),
    _handleHistoryEntryRemoved: dart.privateName(drawer, "_handleHistoryEntryRemoved"),
    _ensureHistoryEntry: dart.privateName(drawer, "_ensureHistoryEntry"),
    _handleDragDown: dart.privateName(drawer, "_handleDragDown"),
    _handleDragCancel: dart.privateName(drawer, "_handleDragCancel"),
    _width: dart.privateName(drawer, "_width"),
    _move: dart.privateName(drawer, "_move"),
    _settle: dart.privateName(drawer, "_settle"),
    _drawerOuterAlignment: dart.privateName(drawer, "_drawerOuterAlignment"),
    _drawerInnerAlignment: dart.privateName(drawer, "_drawerInnerAlignment"),
    _buildDrawer: dart.privateName(drawer, "_buildDrawer"),
    animationController: dart.privateName(bottom_sheet, "BottomSheet.animationController"),
    onClosing: dart.privateName(bottom_sheet, "BottomSheet.onClosing"),
    builder: dart.privateName(bottom_sheet, "BottomSheet.builder"),
    enableDrag: dart.privateName(bottom_sheet, "BottomSheet.enableDrag"),
    onDragStart: dart.privateName(bottom_sheet, "BottomSheet.onDragStart"),
    onDragEnd: dart.privateName(bottom_sheet, "BottomSheet.onDragEnd"),
    backgroundColor$13: dart.privateName(bottom_sheet, "BottomSheet.backgroundColor"),
    elevation$18: dart.privateName(bottom_sheet, "BottomSheet.elevation"),
    shape$17: dart.privateName(bottom_sheet, "BottomSheet.shape"),
    clipBehavior$6: dart.privateName(bottom_sheet, "BottomSheet.clipBehavior"),
    constraints$5: dart.privateName(bottom_sheet, "BottomSheet.constraints"),
    _childKey: dart.privateName(bottom_sheet, "_childKey"),
    _childHeight: dart.privateName(bottom_sheet, "_childHeight"),
    _dismissUnderway: dart.privateName(bottom_sheet, "_dismissUnderway"),
    _handleDragStart: dart.privateName(bottom_sheet, "_handleDragStart"),
    _handleDragUpdate: dart.privateName(bottom_sheet, "_handleDragUpdate"),
    _handleDragEnd: dart.privateName(bottom_sheet, "_handleDragEnd"),
    route: dart.privateName(bottom_sheet, "_ModalBottomSheet.route"),
    isScrollControlled: dart.privateName(bottom_sheet, "_ModalBottomSheet.isScrollControlled"),
    backgroundColor$14: dart.privateName(bottom_sheet, "_ModalBottomSheet.backgroundColor"),
    elevation$19: dart.privateName(bottom_sheet, "_ModalBottomSheet.elevation"),
    shape$18: dart.privateName(bottom_sheet, "_ModalBottomSheet.shape"),
    clipBehavior$7: dart.privateName(bottom_sheet, "_ModalBottomSheet.clipBehavior"),
    constraints$6: dart.privateName(bottom_sheet, "_ModalBottomSheet.constraints"),
    enableDrag$1: dart.privateName(bottom_sheet, "_ModalBottomSheet.enableDrag"),
    _getRouteLabel: dart.privateName(bottom_sheet, "_getRouteLabel"),
    _animationController: dart.privateName(bottom_sheet, "_animationController"),
    barrierLabel: dart.privateName(bottom_sheet, "_ModalBottomSheetRoute.barrierLabel"),
    startingPoint: dart.privateName(bottom_sheet, "_BottomSheetSuspendedCurve.startingPoint"),
    curve: dart.privateName(bottom_sheet, "_BottomSheetSuspendedCurve.curve"),
    color$11: dart.privateName(divider_theme, "DividerThemeData.color"),
    space: dart.privateName(divider_theme, "DividerThemeData.space"),
    thickness$1: dart.privateName(divider_theme, "DividerThemeData.thickness"),
    indent: dart.privateName(divider_theme, "DividerThemeData.indent"),
    endIndent: dart.privateName(divider_theme, "DividerThemeData.endIndent"),
    data$20: dart.privateName(divider_theme, "DividerTheme.data"),
    height$7: dart.privateName(divider, "Divider.height"),
    thickness$2: dart.privateName(divider, "Divider.thickness"),
    indent$1: dart.privateName(divider, "Divider.indent"),
    endIndent$1: dart.privateName(divider, "Divider.endIndent"),
    color$12: dart.privateName(divider, "Divider.color"),
    width$2: dart.privateName(divider, "VerticalDivider.width"),
    thickness$3: dart.privateName(divider, "VerticalDivider.thickness"),
    indent$2: dart.privateName(divider, "VerticalDivider.indent"),
    endIndent$2: dart.privateName(divider, "VerticalDivider.endIndent"),
    color$13: dart.privateName(divider, "VerticalDivider.color"),
    backgroundColor$15: dart.privateName(banner_theme, "MaterialBannerThemeData.backgroundColor"),
    contentTextStyle$2: dart.privateName(banner_theme, "MaterialBannerThemeData.contentTextStyle"),
    padding$13: dart.privateName(banner_theme, "MaterialBannerThemeData.padding"),
    leadingPadding: dart.privateName(banner_theme, "MaterialBannerThemeData.leadingPadding"),
    data$21: dart.privateName(banner_theme, "MaterialBannerTheme.data"),
    _name$25: dart.privateName(banner, "_name"),
    content$1: dart.privateName(banner, "MaterialBanner.content"),
    contentTextStyle$3: dart.privateName(banner, "MaterialBanner.contentTextStyle"),
    actions: dart.privateName(banner, "MaterialBanner.actions"),
    leading$3: dart.privateName(banner, "MaterialBanner.leading"),
    backgroundColor$16: dart.privateName(banner, "MaterialBanner.backgroundColor"),
    padding$14: dart.privateName(banner, "MaterialBanner.padding"),
    leadingPadding$1: dart.privateName(banner, "MaterialBanner.leadingPadding"),
    forceActionsBelow: dart.privateName(banner, "MaterialBanner.forceActionsBelow"),
    overflowAlignment: dart.privateName(banner, "MaterialBanner.overflowAlignment"),
    animation$10: dart.privateName(banner, "MaterialBanner.animation"),
    onVisible$1: dart.privateName(banner, "MaterialBanner.onVisible"),
    _name$26: dart.privateName(overflow_bar, "_name"),
    _wasVisible$1: dart.privateName(banner, "_wasVisible"),
    _onAnimationStatusChanged$1: dart.privateName(banner, "_onAnimationStatusChanged"),
    _name$27: dart.privateName(scaffold$, "_name"),
    child$21: dart.privateName(scaffold$, "ScaffoldMessenger.child"),
    _scaffoldMessengerState: dart.privateName(scaffold$, "_scaffoldMessengerState"),
    _scaffolds: dart.privateName(scaffold$, "_scaffolds"),
    _materialBanners: dart.privateName(scaffold$, "_materialBanners"),
    _materialBannerController: dart.privateName(scaffold$, "_materialBannerController"),
    _snackBars: dart.privateName(scaffold$, "_snackBars"),
    _snackBarController: dart.privateName(scaffold$, "_snackBarController"),
    _snackBarTimer: dart.privateName(scaffold$, "_snackBarTimer"),
    _accessibleNavigation: dart.privateName(scaffold$, "_accessibleNavigation"),
    _isRoot: dart.privateName(scaffold$, "_isRoot"),
    _updateSnackBar: dart.privateName(scaffold$, "_updateSnackBar"),
    _updateMaterialBanner: dart.privateName(scaffold$, "_updateMaterialBanner"),
    _register: dart.privateName(scaffold$, "_register"),
    _unregister: dart.privateName(scaffold$, "_unregister"),
    _updateScaffolds: dart.privateName(scaffold$, "_updateScaffolds"),
    _handleSnackBarStatusChanged: dart.privateName(scaffold$, "_handleSnackBarStatusChanged"),
    $isEmpty: dartx.isEmpty,
    _completer: dart.privateName(scaffold$, "_completer"),
    _handleMaterialBannerStatusChanged: dart.privateName(scaffold$, "_handleMaterialBannerStatusChanged"),
    _widget: dart.privateName(scaffold$, "_widget"),
    _scaffoldMessengerState$1: dart.privateName(scaffold$, "_ScaffoldMessengerScope._scaffoldMessengerState"),
    floatingActionButtonSize: dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.floatingActionButtonSize"),
    bottomSheetSize: dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.bottomSheetSize"),
    contentBottom: dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.contentBottom"),
    contentTop: dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.contentTop"),
    minInsets: dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.minInsets"),
    minViewPadding: dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.minViewPadding"),
    scaffoldSize: dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.scaffoldSize"),
    snackBarSize: dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.snackBarSize"),
    materialBannerSize: dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.materialBannerSize"),
    textDirection$2: dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.textDirection"),
    begin: dart.privateName(scaffold$, "_TransitionSnapshotFabLocation.begin"),
    end$2: dart.privateName(scaffold$, "_TransitionSnapshotFabLocation.end"),
    animator: dart.privateName(scaffold$, "_TransitionSnapshotFabLocation.animator"),
    progress: dart.privateName(scaffold$, "_TransitionSnapshotFabLocation.progress"),
    bottomNavigationBarTop: dart.privateName(scaffold$, "ScaffoldGeometry.bottomNavigationBarTop"),
    floatingActionButtonArea: dart.privateName(scaffold$, "ScaffoldGeometry.floatingActionButtonArea"),
    _scaleFloatingActionButton: dart.privateName(scaffold$, "_scaleFloatingActionButton"),
    _updateWith: dart.privateName(scaffold$, "_updateWith"),
    bottomWidgetsHeight: dart.privateName(scaffold$, "_BodyBoxConstraints.bottomWidgetsHeight"),
    appBarHeight: dart.privateName(scaffold$, "_BodyBoxConstraints.appBarHeight"),
    body: dart.privateName(scaffold$, "_BodyBuilder.body"),
    extendBody: dart.privateName(scaffold$, "_BodyBuilder.extendBody"),
    extendBodyBehindAppBar: dart.privateName(scaffold$, "_BodyBuilder.extendBodyBehindAppBar"),
    child$22: dart.privateName(scaffold$, "_FloatingActionButtonTransition.child"),
    fabMoveAnimation: dart.privateName(scaffold$, "_FloatingActionButtonTransition.fabMoveAnimation"),
    fabMotionAnimator: dart.privateName(scaffold$, "_FloatingActionButtonTransition.fabMotionAnimator"),
    geometryNotifier: dart.privateName(scaffold$, "_FloatingActionButtonTransition.geometryNotifier"),
    currentController: dart.privateName(scaffold$, "_FloatingActionButtonTransition.currentController"),
    ___FloatingActionButtonTransitionState__previousController: dart.privateName(scaffold$, "_#_FloatingActionButtonTransitionState#_previousController"),
    ___FloatingActionButtonTransitionState__previousController_isSet: dart.privateName(scaffold$, "_#_FloatingActionButtonTransitionState#_previousController#isSet"),
    ___FloatingActionButtonTransitionState__previousScaleAnimation: dart.privateName(scaffold$, "_#_FloatingActionButtonTransitionState#_previousScaleAnimation"),
    ___FloatingActionButtonTransitionState__previousScaleAnimation_isSet: dart.privateName(scaffold$, "_#_FloatingActionButtonTransitionState#_previousScaleAnimation#isSet"),
    ___FloatingActionButtonTransitionState__previousRotationAnimation: dart.privateName(scaffold$, "_#_FloatingActionButtonTransitionState#_previousRotationAnimation"),
    ___FloatingActionButtonTransitionState__previousRotationAnimation_isSet: dart.privateName(scaffold$, "_#_FloatingActionButtonTransitionState#_previousRotationAnimation#isSet"),
    ___FloatingActionButtonTransitionState__currentScaleAnimation: dart.privateName(scaffold$, "_#_FloatingActionButtonTransitionState#_currentScaleAnimation"),
    ___FloatingActionButtonTransitionState__currentScaleAnimation_isSet: dart.privateName(scaffold$, "_#_FloatingActionButtonTransitionState#_currentScaleAnimation#isSet"),
    ___FloatingActionButtonTransitionState__extendedCurrentScaleAnimation: dart.privateName(scaffold$, "_#_FloatingActionButtonTransitionState#_extendedCurrentScaleAnimation"),
    ___FloatingActionButtonTransitionState__extendedCurrentScaleAnimation_isSet: dart.privateName(scaffold$, "_#_FloatingActionButtonTransitionState#_extendedCurrentScaleAnimation#isSet"),
    ___FloatingActionButtonTransitionState__currentRotationAnimation: dart.privateName(scaffold$, "_#_FloatingActionButtonTransitionState#_currentRotationAnimation"),
    ___FloatingActionButtonTransitionState__currentRotationAnimation_isSet: dart.privateName(scaffold$, "_#_FloatingActionButtonTransitionState#_currentRotationAnimation#isSet"),
    _previousChild: dart.privateName(scaffold$, "_previousChild"),
    _previousController: dart.privateName(scaffold$, "_previousController"),
    _previousScaleAnimation: dart.privateName(scaffold$, "_previousScaleAnimation"),
    _previousRotationAnimation: dart.privateName(scaffold$, "_previousRotationAnimation"),
    _currentScaleAnimation: dart.privateName(scaffold$, "_currentScaleAnimation"),
    _extendedCurrentScaleAnimation: dart.privateName(scaffold$, "_extendedCurrentScaleAnimation"),
    _currentRotationAnimation: dart.privateName(scaffold$, "_currentRotationAnimation"),
    _handlePreviousAnimationStatusChanged: dart.privateName(scaffold$, "_handlePreviousAnimationStatusChanged"),
    _updateAnimations: dart.privateName(scaffold$, "_updateAnimations"),
    _updateGeometryScale: dart.privateName(scaffold$, "_updateGeometryScale"),
    _onProgressChanged: dart.privateName(scaffold$, "_onProgressChanged"),
    _isExtendedFloatingActionButton: dart.privateName(scaffold$, "_isExtendedFloatingActionButton"),
    extendBody$1: dart.privateName(scaffold$, "Scaffold.extendBody"),
    extendBodyBehindAppBar$1: dart.privateName(scaffold$, "Scaffold.extendBodyBehindAppBar"),
    appBar: dart.privateName(scaffold$, "Scaffold.appBar"),
    body$1: dart.privateName(scaffold$, "Scaffold.body"),
    floatingActionButton: dart.privateName(scaffold$, "Scaffold.floatingActionButton"),
    floatingActionButtonLocation: dart.privateName(scaffold$, "Scaffold.floatingActionButtonLocation"),
    floatingActionButtonAnimator: dart.privateName(scaffold$, "Scaffold.floatingActionButtonAnimator"),
    persistentFooterButtons: dart.privateName(scaffold$, "Scaffold.persistentFooterButtons"),
    drawer: dart.privateName(scaffold$, "Scaffold.drawer"),
    onDrawerChanged: dart.privateName(scaffold$, "Scaffold.onDrawerChanged"),
    endDrawer: dart.privateName(scaffold$, "Scaffold.endDrawer"),
    onEndDrawerChanged: dart.privateName(scaffold$, "Scaffold.onEndDrawerChanged"),
    drawerScrimColor: dart.privateName(scaffold$, "Scaffold.drawerScrimColor"),
    backgroundColor$17: dart.privateName(scaffold$, "Scaffold.backgroundColor"),
    bottomNavigationBar: dart.privateName(scaffold$, "Scaffold.bottomNavigationBar"),
    bottomSheet: dart.privateName(scaffold$, "Scaffold.bottomSheet"),
    resizeToAvoidBottomInset: dart.privateName(scaffold$, "Scaffold.resizeToAvoidBottomInset"),
    primary$1: dart.privateName(scaffold$, "Scaffold.primary"),
    drawerDragStartBehavior: dart.privateName(scaffold$, "Scaffold.drawerDragStartBehavior"),
    drawerEdgeDragWidth: dart.privateName(scaffold$, "Scaffold.drawerEdgeDragWidth"),
    drawerEnableOpenDragGesture: dart.privateName(scaffold$, "Scaffold.drawerEnableOpenDragGesture"),
    endDrawerEnableOpenDragGesture: dart.privateName(scaffold$, "Scaffold.endDrawerEnableOpenDragGesture"),
    restorationId: dart.privateName(scaffold$, "Scaffold.restorationId"),
    _drawerKey$1: dart.privateName(scaffold$, "_drawerKey"),
    _endDrawerKey: dart.privateName(scaffold$, "_endDrawerKey"),
    _appBarMaxHeight: dart.privateName(scaffold$, "_appBarMaxHeight"),
    _drawerOpened: dart.privateName(scaffold$, "_drawerOpened"),
    _endDrawerOpened: dart.privateName(scaffold$, "_endDrawerOpened"),
    _scaffoldMessenger: dart.privateName(scaffold$, "_scaffoldMessenger"),
    _messengerSnackBar: dart.privateName(scaffold$, "_messengerSnackBar"),
    _messengerMaterialBanner: dart.privateName(scaffold$, "_messengerMaterialBanner"),
    _dismissedBottomSheets: dart.privateName(scaffold$, "_dismissedBottomSheets"),
    _currentBottomSheet: dart.privateName(scaffold$, "_currentBottomSheet"),
    _currentBottomSheetKey: dart.privateName(scaffold$, "_currentBottomSheetKey"),
    __ScaffoldState__floatingActionButtonMoveController: dart.privateName(scaffold$, "_#ScaffoldState#_floatingActionButtonMoveController"),
    __ScaffoldState__floatingActionButtonMoveController_isSet: dart.privateName(scaffold$, "_#ScaffoldState#_floatingActionButtonMoveController#isSet"),
    __ScaffoldState__floatingActionButtonAnimator: dart.privateName(scaffold$, "_#ScaffoldState#_floatingActionButtonAnimator"),
    __ScaffoldState__floatingActionButtonAnimator_isSet: dart.privateName(scaffold$, "_#ScaffoldState#_floatingActionButtonAnimator#isSet"),
    _previousFloatingActionButtonLocation: dart.privateName(scaffold$, "_previousFloatingActionButtonLocation"),
    _floatingActionButtonLocation: dart.privateName(scaffold$, "_floatingActionButtonLocation"),
    __ScaffoldState__floatingActionButtonVisibilityController: dart.privateName(scaffold$, "_#ScaffoldState#_floatingActionButtonVisibilityController"),
    __ScaffoldState__floatingActionButtonVisibilityController_isSet: dart.privateName(scaffold$, "_#ScaffoldState#_floatingActionButtonVisibilityController#isSet"),
    __ScaffoldState__geometryNotifier: dart.privateName(scaffold$, "_#ScaffoldState#_geometryNotifier"),
    __ScaffoldState__geometryNotifier_isSet: dart.privateName(scaffold$, "_#ScaffoldState#_geometryNotifier#isSet"),
    _showBodyScrim: dart.privateName(scaffold$, "_showBodyScrim"),
    _bodyScrimColor: dart.privateName(scaffold$, "_bodyScrimColor"),
    _drawerOpenedCallback: dart.privateName(scaffold$, "_drawerOpenedCallback"),
    _endDrawerOpenedCallback: dart.privateName(scaffold$, "_endDrawerOpenedCallback"),
    _handleSnackBarStatusChange: dart.privateName(scaffold$, "_handleSnackBarStatusChange"),
    _floatingActionButtonVisibilityValue: dart.privateName(scaffold$, "_floatingActionButtonVisibilityValue"),
    _buildBottomSheet: dart.privateName(scaffold$, "_buildBottomSheet"),
    _maybeBuildPersistentBottomSheet: dart.privateName(scaffold$, "_maybeBuildPersistentBottomSheet"),
    _isLocalHistoryEntry: dart.privateName(scaffold$, "_isLocalHistoryEntry"),
    _closeCurrentBottomSheet: dart.privateName(scaffold$, "_closeCurrentBottomSheet"),
    _updatePersistentBottomSheet: dart.privateName(scaffold$, "_updatePersistentBottomSheet"),
    _showFloatingActionButton: dart.privateName(scaffold$, "_showFloatingActionButton"),
    _floatingActionButtonMoveController: dart.privateName(scaffold$, "_floatingActionButtonMoveController"),
    _floatingActionButtonAnimator: dart.privateName(scaffold$, "_floatingActionButtonAnimator"),
    _floatingActionButtonVisibilityController: dart.privateName(scaffold$, "_floatingActionButtonVisibilityController"),
    _moveFloatingActionButton: dart.privateName(scaffold$, "_moveFloatingActionButton"),
    _handleStatusBarTap: dart.privateName(scaffold$, "_handleStatusBarTap"),
    _geometryNotifier: dart.privateName(scaffold$, "_geometryNotifier"),
    _resizeToAvoidBottomInset: dart.privateName(scaffold$, "_resizeToAvoidBottomInset"),
    _addIfNonNull: dart.privateName(scaffold$, "_addIfNonNull"),
    _buildEndDrawer: dart.privateName(scaffold$, "_buildEndDrawer"),
    _buildDrawer$1: dart.privateName(scaffold$, "_buildDrawer"),
    _widget$1: dart.privateName(scaffold$, "ScaffoldFeatureController._widget"),
    _completer$1: dart.privateName(scaffold$, "ScaffoldFeatureController._completer"),
    close: dart.privateName(scaffold$, "ScaffoldFeatureController.close"),
    setState: dart.privateName(scaffold$, "ScaffoldFeatureController.setState"),
    startingPoint$1: dart.privateName(scaffold$, "_BottomSheetSuspendedCurve.startingPoint"),
    curve$1: dart.privateName(scaffold$, "_BottomSheetSuspendedCurve.curve"),
    animationController$1: dart.privateName(scaffold$, "_StandardBottomSheet.animationController"),
    enableDrag$2: dart.privateName(scaffold$, "_StandardBottomSheet.enableDrag"),
    onClosing$1: dart.privateName(scaffold$, "_StandardBottomSheet.onClosing"),
    onDismissed: dart.privateName(scaffold$, "_StandardBottomSheet.onDismissed"),
    builder$1: dart.privateName(scaffold$, "_StandardBottomSheet.builder"),
    isPersistent: dart.privateName(scaffold$, "_StandardBottomSheet.isPersistent"),
    backgroundColor$18: dart.privateName(scaffold$, "_StandardBottomSheet.backgroundColor"),
    elevation$20: dart.privateName(scaffold$, "_StandardBottomSheet.elevation"),
    shape$19: dart.privateName(scaffold$, "_StandardBottomSheet.shape"),
    clipBehavior$8: dart.privateName(scaffold$, "_StandardBottomSheet.clipBehavior"),
    constraints$7: dart.privateName(scaffold$, "_StandardBottomSheet.constraints"),
    _handleStatusChange: dart.privateName(scaffold$, "_handleStatusChange"),
    _handleDragStart$1: dart.privateName(scaffold$, "_handleDragStart"),
    _handleDragEnd$1: dart.privateName(scaffold$, "_handleDragEnd"),
    _wrapBottomSheet: dart.privateName(scaffold$, "_wrapBottomSheet"),
    _isLocalHistoryEntry$1: dart.privateName(scaffold$, "PersistentBottomSheetController._isLocalHistoryEntry"),
    hasDrawer: dart.privateName(scaffold$, "_ScaffoldScope.hasDrawer"),
    geometryNotifier$1: dart.privateName(scaffold$, "_ScaffoldScope.geometryNotifier"),
    _name$28: dart.privateName(material, "_name"),
    child$23: dart.privateName(material, "Material.child"),
    type$3: dart.privateName(material, "Material.type"),
    elevation$21: dart.privateName(material, "Material.elevation"),
    color$14: dart.privateName(material, "Material.color"),
    shadowColor$4: dart.privateName(material, "Material.shadowColor"),
    textStyle$7: dart.privateName(material, "Material.textStyle"),
    shape$20: dart.privateName(material, "Material.shape"),
    borderOnForeground: dart.privateName(material, "Material.borderOnForeground"),
    clipBehavior$9: dart.privateName(material, "Material.clipBehavior"),
    animationDuration$3: dart.privateName(material, "Material.animationDuration"),
    borderRadius$3: dart.privateName(material, "Material.borderRadius"),
    _inkFeatureRenderer: dart.privateName(material, "_inkFeatureRenderer"),
    _getBackgroundColor: dart.privateName(material, "_getBackgroundColor"),
    _didChangeLayout: dart.privateName(material, "_didChangeLayout"),
    _getShape: dart.privateName(material, "_getShape"),
    _inkFeatures: dart.privateName(material, "_inkFeatures"),
    color$15: dart.privateName(material, "_InkFeatures.color"),
    vsync: dart.privateName(material, "_InkFeatures.vsync"),
    absorbHitTest: dart.privateName(material, "_InkFeatures.absorbHitTest"),
    child$24: dart.privateName(material, "_MaterialInterior.child"),
    shape$21: dart.privateName(material, "_MaterialInterior.shape"),
    borderOnForeground$1: dart.privateName(material, "_MaterialInterior.borderOnForeground"),
    clipBehavior$10: dart.privateName(material, "_MaterialInterior.clipBehavior"),
    elevation$22: dart.privateName(material, "_MaterialInterior.elevation"),
    color$16: dart.privateName(material, "_MaterialInterior.color"),
    shadowColor$5: dart.privateName(material, "_MaterialInterior.shadowColor"),
    _elevation$1: dart.privateName(material, "_elevation"),
    _shadowColor: dart.privateName(material, "_shadowColor"),
    _border$1: dart.privateName(material, "_border"),
    child$25: dart.privateName(material, "_ShapeBorderPaint.child"),
    shape$22: dart.privateName(material, "_ShapeBorderPaint.shape"),
    borderOnForeground$2: dart.privateName(material, "_ShapeBorderPaint.borderOnForeground"),
    $modulo: dartx['%'],
    _getDaysInMonth: dart.privateName(material_localizations, "_getDaysInMonth"),
    _formatTwoDigitZeroPad: dart.privateName(material_localizations, "_formatTwoDigitZeroPad"),
    $padLeft: dartx.padLeft,
    $split: dartx.split,
    _formatDayPeriod: dart.privateName(material_localizations, "_formatDayPeriod"),
    data$22: dart.privateName(theme$, "Theme.data"),
    child$26: dart.privateName(theme$, "Theme.child"),
    theme: dart.privateName(theme$, "_InheritedTheme.theme"),
    data$23: dart.privateName(theme$, "AnimatedTheme.data"),
    child$27: dart.privateName(theme$, "AnimatedTheme.child"),
    _data: dart.privateName(theme$, "_data"),
    brightness$3: dart.privateName(app_bar_theme, "AppBarTheme.brightness"),
    backgroundColor$19: dart.privateName(app_bar_theme, "AppBarTheme.backgroundColor"),
    foregroundColor$2: dart.privateName(app_bar_theme, "AppBarTheme.foregroundColor"),
    elevation$23: dart.privateName(app_bar_theme, "AppBarTheme.elevation"),
    shadowColor$6: dart.privateName(app_bar_theme, "AppBarTheme.shadowColor"),
    iconTheme$1: dart.privateName(app_bar_theme, "AppBarTheme.iconTheme"),
    actionsIconTheme: dart.privateName(app_bar_theme, "AppBarTheme.actionsIconTheme"),
    textTheme$4: dart.privateName(app_bar_theme, "AppBarTheme.textTheme"),
    centerTitle$1: dart.privateName(app_bar_theme, "AppBarTheme.centerTitle"),
    titleSpacing: dart.privateName(app_bar_theme, "AppBarTheme.titleSpacing"),
    toolbarHeight: dart.privateName(app_bar_theme, "AppBarTheme.toolbarHeight"),
    toolbarTextStyle: dart.privateName(app_bar_theme, "AppBarTheme.toolbarTextStyle"),
    titleTextStyle$1: dart.privateName(app_bar_theme, "AppBarTheme.titleTextStyle"),
    systemOverlayStyle: dart.privateName(app_bar_theme, "AppBarTheme.systemOverlayStyle"),
    backwardsCompatibility: dart.privateName(app_bar_theme, "AppBarTheme.backwardsCompatibility"),
    toolbarHeight$1: dart.privateName(app_bar, "_ToolbarContainerLayout.toolbarHeight"),
    leading$4: dart.privateName(app_bar, "AppBar.leading"),
    automaticallyImplyLeading: dart.privateName(app_bar, "AppBar.automaticallyImplyLeading"),
    title$3: dart.privateName(app_bar, "AppBar.title"),
    actions$1: dart.privateName(app_bar, "AppBar.actions"),
    flexibleSpace: dart.privateName(app_bar, "AppBar.flexibleSpace"),
    bottom: dart.privateName(app_bar, "AppBar.bottom"),
    elevation$24: dart.privateName(app_bar, "AppBar.elevation"),
    shadowColor$7: dart.privateName(app_bar, "AppBar.shadowColor"),
    shape$23: dart.privateName(app_bar, "AppBar.shape"),
    backgroundColor$20: dart.privateName(app_bar, "AppBar.backgroundColor"),
    foregroundColor$3: dart.privateName(app_bar, "AppBar.foregroundColor"),
    brightness$4: dart.privateName(app_bar, "AppBar.brightness"),
    iconTheme$2: dart.privateName(app_bar, "AppBar.iconTheme"),
    actionsIconTheme$1: dart.privateName(app_bar, "AppBar.actionsIconTheme"),
    textTheme$5: dart.privateName(app_bar, "AppBar.textTheme"),
    primary$2: dart.privateName(app_bar, "AppBar.primary"),
    centerTitle$2: dart.privateName(app_bar, "AppBar.centerTitle"),
    excludeHeaderSemantics: dart.privateName(app_bar, "AppBar.excludeHeaderSemantics"),
    titleSpacing$1: dart.privateName(app_bar, "AppBar.titleSpacing"),
    toolbarOpacity$1: dart.privateName(app_bar, "AppBar.toolbarOpacity"),
    bottomOpacity: dart.privateName(app_bar, "AppBar.bottomOpacity"),
    preferredSize: dart.privateName(app_bar, "AppBar.preferredSize"),
    toolbarHeight$2: dart.privateName(app_bar, "AppBar.toolbarHeight"),
    leadingWidth: dart.privateName(app_bar, "AppBar.leadingWidth"),
    backwardsCompatibility$1: dart.privateName(app_bar, "AppBar.backwardsCompatibility"),
    toolbarTextStyle$1: dart.privateName(app_bar, "AppBar.toolbarTextStyle"),
    titleTextStyle$2: dart.privateName(app_bar, "AppBar.titleTextStyle"),
    systemOverlayStyle$1: dart.privateName(app_bar, "AppBar.systemOverlayStyle"),
    _getEffectiveCenterTitle$1: dart.privateName(app_bar, "_getEffectiveCenterTitle"),
    _scrollNotificationObserver: dart.privateName(app_bar, "_scrollNotificationObserver"),
    _scrolledUnder: dart.privateName(app_bar, "_scrolledUnder"),
    _handleScrollNotification$1: dart.privateName(app_bar, "_handleScrollNotification"),
    _handleDrawerButton: dart.privateName(app_bar, "_handleDrawerButton"),
    _handleDrawerButtonEnd: dart.privateName(app_bar, "_handleDrawerButtonEnd"),
    _resolveColor: dart.privateName(app_bar, "_resolveColor"),
    _systemOverlayStyleForBrightness: dart.privateName(app_bar, "_systemOverlayStyleForBrightness"),
    SemanticsSortKey_name: dart.privateName(semantics, "SemanticsSortKey.name"),
    OrdinalSortKey_order: dart.privateName(semantics, "OrdinalSortKey.order"),
    vsync$1: dart.privateName(app_bar, "_SliverAppBarDelegate.vsync"),
    snapConfiguration: dart.privateName(app_bar, "_SliverAppBarDelegate.snapConfiguration"),
    stretchConfiguration: dart.privateName(app_bar, "_SliverAppBarDelegate.stretchConfiguration"),
    showOnScreenConfiguration: dart.privateName(app_bar, "_SliverAppBarDelegate.showOnScreenConfiguration"),
    _bottomHeight: dart.privateName(app_bar, "_bottomHeight"),
    $toStringAsFixed: dartx.toStringAsFixed,
    leading$5: dart.privateName(app_bar, "SliverAppBar.leading"),
    automaticallyImplyLeading$1: dart.privateName(app_bar, "SliverAppBar.automaticallyImplyLeading"),
    title$4: dart.privateName(app_bar, "SliverAppBar.title"),
    actions$2: dart.privateName(app_bar, "SliverAppBar.actions"),
    flexibleSpace$1: dart.privateName(app_bar, "SliverAppBar.flexibleSpace"),
    bottom$1: dart.privateName(app_bar, "SliverAppBar.bottom"),
    elevation$25: dart.privateName(app_bar, "SliverAppBar.elevation"),
    shadowColor$8: dart.privateName(app_bar, "SliverAppBar.shadowColor"),
    forceElevated: dart.privateName(app_bar, "SliverAppBar.forceElevated"),
    backgroundColor$21: dart.privateName(app_bar, "SliverAppBar.backgroundColor"),
    foregroundColor$4: dart.privateName(app_bar, "SliverAppBar.foregroundColor"),
    brightness$5: dart.privateName(app_bar, "SliverAppBar.brightness"),
    iconTheme$3: dart.privateName(app_bar, "SliverAppBar.iconTheme"),
    actionsIconTheme$2: dart.privateName(app_bar, "SliverAppBar.actionsIconTheme"),
    textTheme$6: dart.privateName(app_bar, "SliverAppBar.textTheme"),
    primary$3: dart.privateName(app_bar, "SliverAppBar.primary"),
    centerTitle$3: dart.privateName(app_bar, "SliverAppBar.centerTitle"),
    excludeHeaderSemantics$1: dart.privateName(app_bar, "SliverAppBar.excludeHeaderSemantics"),
    titleSpacing$2: dart.privateName(app_bar, "SliverAppBar.titleSpacing"),
    collapsedHeight: dart.privateName(app_bar, "SliverAppBar.collapsedHeight"),
    expandedHeight: dart.privateName(app_bar, "SliverAppBar.expandedHeight"),
    floating: dart.privateName(app_bar, "SliverAppBar.floating"),
    pinned: dart.privateName(app_bar, "SliverAppBar.pinned"),
    shape$24: dart.privateName(app_bar, "SliverAppBar.shape"),
    snap: dart.privateName(app_bar, "SliverAppBar.snap"),
    stretch: dart.privateName(app_bar, "SliverAppBar.stretch"),
    stretchTriggerOffset: dart.privateName(app_bar, "SliverAppBar.stretchTriggerOffset"),
    onStretchTrigger: dart.privateName(app_bar, "SliverAppBar.onStretchTrigger"),
    toolbarHeight$3: dart.privateName(app_bar, "SliverAppBar.toolbarHeight"),
    leadingWidth$1: dart.privateName(app_bar, "SliverAppBar.leadingWidth"),
    backwardsCompatibility$2: dart.privateName(app_bar, "SliverAppBar.backwardsCompatibility"),
    toolbarTextStyle$2: dart.privateName(app_bar, "SliverAppBar.toolbarTextStyle"),
    titleTextStyle$3: dart.privateName(app_bar, "SliverAppBar.titleTextStyle"),
    systemOverlayStyle$2: dart.privateName(app_bar, "SliverAppBar.systemOverlayStyle"),
    _snapConfiguration: dart.privateName(app_bar, "_snapConfiguration"),
    _stretchConfiguration: dart.privateName(app_bar, "_stretchConfiguration"),
    _showOnScreenConfiguration: dart.privateName(app_bar, "_showOnScreenConfiguration"),
    PersistentHeaderShowOnScreenConfiguration_maxShowOnScreenExtent: dart.privateName(sliver_persistent_header$, "PersistentHeaderShowOnScreenConfiguration.maxShowOnScreenExtent"),
    PersistentHeaderShowOnScreenConfiguration_minShowOnScreenExtent: dart.privateName(sliver_persistent_header$, "PersistentHeaderShowOnScreenConfiguration.minShowOnScreenExtent"),
    _updateSnapConfiguration: dart.privateName(app_bar, "_updateSnapConfiguration"),
    _updateStretchConfiguration: dart.privateName(app_bar, "_updateStretchConfiguration")
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 8,
        [S.EdgeInsets_right]: 8,
        [S.EdgeInsets_top]: 8,
        [S.EdgeInsets_left]: 8
      });
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [S.Alignment_y]: 0,
        [S.Alignment_x]: 0
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: mouse_cursor.SystemMouseCursor.prototype,
        [S.SystemMouseCursor_kind]: "click"
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: box$.BoxConstraints.prototype,
        [S.BoxConstraints_maxHeight]: 1 / 0,
        [S.BoxConstraints_minHeight]: 48,
        [S.BoxConstraints_maxWidth]: 1 / 0,
        [S.BoxConstraints_minWidth]: 48
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 18,
        [S._Location_line]: 353,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/icon_button.dart"
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 16,
        [S._Location_line]: 350,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/icon_button.dart"
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Padding",
        [S._Location_column]: 14,
        [S._Location_line]: 348,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/icon_button.dart"
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ConstrainedBox",
        [S._Location_column]: 21,
        [S._Location_line]: 346,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/icon_button.dart"
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Tooltip",
        [S._Location_column]: 16,
        [S._Location_line]: 368,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/icon_button.dart"
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "InkResponse",
        [S._Location_column]: 14,
        [S._Location_line]: 377,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/icon_button.dart"
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 12,
        [S._Location_line]: 374,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/icon_button.dart"
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: platform$.TargetPlatform.prototype,
        [S._name]: "TargetPlatform.android",
        index: 0
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: platform$.TargetPlatform.prototype,
        [S._name]: "TargetPlatform.fuchsia",
        index: 1
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: platform$.TargetPlatform.prototype,
        [S._name]: "TargetPlatform.linux",
        index: 3
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: platform$.TargetPlatform.prototype,
        [S._name]: "TargetPlatform.windows",
        index: 5
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: platform$.TargetPlatform.prototype,
        [S._name]: "TargetPlatform.iOS",
        index: 2
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: platform$.TargetPlatform.prototype,
        [S._name]: "TargetPlatform.macOS",
        index: 4
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Icon",
        [S._Location_column]: 41,
        [S._Location_line]: 45,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/back_button.dart"
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "BackButtonIcon",
        [S._Location_column]: 19,
        [S._Location_line]: 99,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/back_button.dart"
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: back_button.BackButtonIcon.prototype,
        [S.Widget__location]: C[19] || CT.C19,
        [S.Widget_key]: null
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "IconButton",
        [S._Location_column]: 12,
        [S._Location_line]: 98,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/back_button.dart"
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Icon",
        [S._Location_column]: 19,
        [S._Location_line]: 153,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/back_button.dart"
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [S.IconData_matchTextDirection]: false,
        [S.IconData_fontPackage]: null,
        [S.IconData_fontFamily]: "MaterialIcons",
        [S.IconData_codePoint]: 57706
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: icon.Icon.prototype,
        [S.Widget__location]: C[22] || CT.C22,
        [S.Widget_key]: null,
        [S.Icon_textDirection]: null,
        [S.Icon_semanticLabel]: null,
        [S.Icon_color]: null,
        [S.Icon_size]: null,
        [S.Icon_icon]: C[23] || CT.C23
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "IconButton",
        [S._Location_column]: 12,
        [S._Location_line]: 152,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/back_button.dart"
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: time.DayPeriod.prototype,
        [S._name$1]: "DayPeriod.am",
        index: 0
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: time.DayPeriod.prototype,
        [S._name$1]: "DayPeriod.pm",
        index: 1
      });
    },
    get C27() {
      return C[27] = dart.constList([C[25] || CT.C25, C[26] || CT.C26], T$.DayPeriodL());
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: time.TimeOfDayFormat.prototype,
        [S._name$1]: "TimeOfDayFormat.HH_colon_mm",
        index: 0
      });
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: time.TimeOfDayFormat.prototype,
        [S._name$1]: "TimeOfDayFormat.HH_dot_mm",
        index: 1
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: time.TimeOfDayFormat.prototype,
        [S._name$1]: "TimeOfDayFormat.frenchCanadian",
        index: 2
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: time.TimeOfDayFormat.prototype,
        [S._name$1]: "TimeOfDayFormat.H_colon_mm",
        index: 3
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: time.TimeOfDayFormat.prototype,
        [S._name$1]: "TimeOfDayFormat.h_colon_mm_space_a",
        index: 4
      });
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: time.TimeOfDayFormat.prototype,
        [S._name$1]: "TimeOfDayFormat.a_space_h_colon_mm",
        index: 5
      });
    },
    get C34() {
      return C[34] = dart.constList([C[28] || CT.C28, C[29] || CT.C29, C[30] || CT.C30, C[31] || CT.C31, C[32] || CT.C32, C[33] || CT.C33], T$.TimeOfDayFormatL());
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: time.HourFormat.prototype,
        [S._name$1]: "HourFormat.HH",
        index: 0
      });
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: time.HourFormat.prototype,
        [S._name$1]: "HourFormat.H",
        index: 1
      });
    },
    get C37() {
      return C[37] = dart.const({
        __proto__: time.HourFormat.prototype,
        [S._name$1]: "HourFormat.h",
        index: 2
      });
    },
    get C38() {
      return C[38] = dart.constList([C[35] || CT.C35, C[36] || CT.C36, C[37] || CT.C37], T$.HourFormatL());
    },
    get C40() {
      return C[40] = dart.const({
        __proto__: ui.Radius.prototype,
        [S.Radius_y]: 0,
        [S.Radius_x]: 0
      });
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [S.BorderRadius_bottomRight]: C[40] || CT.C40,
        [S.BorderRadius_bottomLeft]: C[40] || CT.C40,
        [S.BorderRadius_topRight]: C[40] || CT.C40,
        [S.BorderRadius_topLeft]: C[40] || CT.C40
      });
    },
    get C41() {
      return C[41] = dart.const({
        __proto__: ink_ripple._InkRippleFactory.prototype
      });
    },
    get C43() {
      return C[43] = dart.const({
        __proto__: curves._Linear.prototype
      });
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[43] || CT.C43,
        [S.Interval_end]: 1,
        [S.Interval_begin]: 0.6
      });
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 1000000
      });
    },
    get C45() {
      return C[45] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 75000
      });
    },
    get C46() {
      return C[46] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 225000
      });
    },
    get C47() {
      return C[47] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 375000
      });
    },
    get C48() {
      return C[48] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 22,
        [S._Location_line]: 353,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/button_style_button.dart"
      });
    },
    get C49() {
      return C[49] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Padding",
        [S._Location_column]: 20,
        [S._Location_line]: 351,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/button_style_button.dart"
      });
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "InkWell",
        [S._Location_column]: 16,
        [S._Location_line]: 334,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/button_style_button.dart"
      });
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Material",
        [S._Location_column]: 14,
        [S._Location_line]: 325,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/button_style_button.dart"
      });
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ConstrainedBox",
        [S._Location_column]: 27,
        [S._Location_line]: 323,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/button_style_button.dart"
      });
    },
    get C53() {
      return C[53] = dart.const({
        __proto__: theme_data.MaterialTapTargetSize.prototype,
        [S._name$2]: "MaterialTapTargetSize.padded",
        index: 0
      });
    },
    get C54() {
      return C[54] = dart.const({
        __proto__: theme_data.MaterialTapTargetSize.prototype,
        [S._name$2]: "MaterialTapTargetSize.shrinkWrap",
        index: 1
      });
    },
    get C55() {
      return C[55] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_InputPadding",
        [S._Location_column]: 14,
        [S._Location_line]: 384,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/button_style_button.dart"
      });
    },
    get C56() {
      return C[56] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 12,
        [S._Location_line]: 380,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/button_style_button.dart"
      });
    },
    get C57() {
      return C[57] = dart.fn(layout_helper.ChildLayoutHelper.dryLayoutChild, T$.RenderBoxAndBoxConstraintsToSize());
    },
    get C58() {
      return C[58] = dart.fn(layout_helper.ChildLayoutHelper.layoutChild, T$.RenderBoxAndBoxConstraintsToSize());
    },
    get C59() {
      return C[59] = dart.const({
        __proto__: ui.Clip.prototype,
        [S._name$3]: "Clip.none",
        index: 0
      });
    },
    get C60() {
      return C[60] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 0,
        [S.EdgeInsets_right]: 8,
        [S.EdgeInsets_top]: 0,
        [S.EdgeInsets_left]: 8
      });
    },
    get C61() {
      return C[61] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 0,
        [S.EdgeInsets_right]: 4,
        [S.EdgeInsets_top]: 0,
        [S.EdgeInsets_left]: 4
      });
    },
    get C62() {
      return C[62] = dart.const({
        __proto__: ui.Size.prototype,
        [S.OffsetBase__dy]: 36,
        [S.OffsetBase__dx]: 64
      });
    },
    get C65() {
      return C[65] = dart.const({
        __proto__: borders.BorderStyle.prototype,
        [S._name$4]: "BorderStyle.none",
        index: 0
      });
    },
    get C66() {
      return C[66] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4278190080.0
      });
    },
    get C64() {
      return C[64] = dart.const({
        __proto__: borders.BorderSide.prototype,
        [S.BorderSide_style]: C[65] || CT.C65,
        [S.BorderSide_width]: 0,
        [S.BorderSide_color]: C[66] || CT.C66
      });
    },
    get C68() {
      return C[68] = dart.const({
        __proto__: ui.Radius.prototype,
        [S.Radius_y]: 4,
        [S.Radius_x]: 4
      });
    },
    get C67() {
      return C[67] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [S.BorderRadius_bottomRight]: C[68] || CT.C68,
        [S.BorderRadius_bottomLeft]: C[68] || CT.C68,
        [S.BorderRadius_topRight]: C[68] || CT.C68,
        [S.BorderRadius_topLeft]: C[68] || CT.C68
      });
    },
    get C63() {
      return C[63] = dart.const({
        __proto__: rounded_rectangle_border.RoundedRectangleBorder.prototype,
        [S.OutlinedBorder_side]: C[64] || CT.C64,
        [S.RoundedRectangleBorder_borderRadius]: C[67] || CT.C67
      });
    },
    get C69() {
      return C[69] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_TextButtonWithIconChild",
        [S._Location_column]: 17,
        [S._Location_line]: 438,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/text_button.dart"
      });
    },
    get C70() {
      return C[70] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 32,
        [S._Location_line]: 471,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/text_button.dart"
      });
    },
    get C71() {
      return C[71] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Flexible",
        [S._Location_column]: 54,
        [S._Location_line]: 471,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/text_button.dart"
      });
    },
    get C72() {
      return C[72] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Row",
        [S._Location_column]: 12,
        [S._Location_line]: 469,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/text_button.dart"
      });
    },
    get C73() {
      return C[73] = dart.const({
        __proto__: snack_bar.SnackBarClosedReason.prototype,
        [S._name$5]: "SnackBarClosedReason.action",
        index: 0
      });
    },
    get C74() {
      return C[74] = dart.const({
        __proto__: snack_bar.SnackBarClosedReason.prototype,
        [S._name$5]: "SnackBarClosedReason.dismiss",
        index: 1
      });
    },
    get C75() {
      return C[75] = dart.const({
        __proto__: snack_bar.SnackBarClosedReason.prototype,
        [S._name$5]: "SnackBarClosedReason.swipe",
        index: 2
      });
    },
    get C76() {
      return C[76] = dart.const({
        __proto__: snack_bar.SnackBarClosedReason.prototype,
        [S._name$5]: "SnackBarClosedReason.hide",
        index: 3
      });
    },
    get C77() {
      return C[77] = dart.const({
        __proto__: snack_bar.SnackBarClosedReason.prototype,
        [S._name$5]: "SnackBarClosedReason.remove",
        index: 4
      });
    },
    get C78() {
      return C[78] = dart.const({
        __proto__: snack_bar.SnackBarClosedReason.prototype,
        [S._name$5]: "SnackBarClosedReason.timeout",
        index: 5
      });
    },
    get C79() {
      return C[79] = dart.constList([C[73] || CT.C73, C[74] || CT.C74, C[75] || CT.C75, C[76] || CT.C76, C[77] || CT.C77, C[78] || CT.C78], T$.SnackBarClosedReasonL());
    },
    get C80() {
      return C[80] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Text",
        [S._Location_column]: 14,
        [S._Location_line]: 142,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C81() {
      return C[81] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "TextButton",
        [S._Location_column]: 12,
        [S._Location_line]: 137,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C82() {
      return C[82] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 4000000
      });
    },
    get C83() {
      return C[83] = dart.const({
        __proto__: dismissible.DismissDirection.prototype,
        [S._name$6]: "DismissDirection.down",
        index: 5
      });
    },
    get C84() {
      return C[84] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SnackBar",
        [S._Location_column]: 12,
        [S._Location_line]: 404,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C85() {
      return C[85] = dart.const({
        __proto__: animation.AnimationStatus.prototype,
        [S._name$7]: "AnimationStatus.dismissed",
        index: 0
      });
    },
    get C86() {
      return C[86] = dart.const({
        __proto__: animation.AnimationStatus.prototype,
        [S._name$7]: "AnimationStatus.forward",
        index: 1
      });
    },
    get C87() {
      return C[87] = dart.const({
        __proto__: animation.AnimationStatus.prototype,
        [S._name$7]: "AnimationStatus.reverse",
        index: 2
      });
    },
    get C88() {
      return C[88] = dart.const({
        __proto__: animation.AnimationStatus.prototype,
        [S._name$7]: "AnimationStatus.completed",
        index: 3
      });
    },
    get C89() {
      return C[89] = dart.const({
        __proto__: curves.Threshold.prototype,
        [S.Threshold_threshold]: 0
      });
    },
    get C90() {
      return C[90] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 14,
        [S.EdgeInsets_right]: 0,
        [S.EdgeInsets_top]: 14,
        [S.EdgeInsets_left]: 0
      });
    },
    get C91() {
      return C[91] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DefaultTextStyle",
        [S._Location_column]: 22,
        [S._Location_line]: 546,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C92() {
      return C[92] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 20,
        [S._Location_line]: 544,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C93() {
      return C[93] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Expanded",
        [S._Location_column]: 11,
        [S._Location_line]: 543,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C94() {
      return C[94] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "TextButtonTheme",
        [S._Location_column]: 22,
        [S._Location_line]: 555,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C95() {
      return C[95] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Padding",
        [S._Location_column]: 13,
        [S._Location_line]: 553,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C96() {
      return C[96] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Row",
        [S._Location_column]: 14,
        [S._Location_line]: 540,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C97() {
      return C[97] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Padding",
        [S._Location_column]: 23,
        [S._Location_line]: 538,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C98() {
      return C[98] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SafeArea",
        [S._Location_column]: 18,
        [S._Location_line]: 570,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C99() {
      return C[99] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FadeTransition",
        [S._Location_column]: 15,
        [S._Location_line]: 590,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C100() {
      return C[100] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Theme",
        [S._Location_column]: 14,
        [S._Location_line]: 586,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C101() {
      return C[101] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Material",
        [S._Location_column]: 16,
        [S._Location_line]: 582,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C102() {
      return C[102] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 10,
        [S.EdgeInsets_right]: 0,
        [S.EdgeInsets_top]: 5,
        [S.EdgeInsets_left]: 0
      });
    },
    get C103() {
      return C[103] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 20,
        [S._Location_line]: 602,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C104() {
      return C[104] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 10,
        [S.EdgeInsets_right]: 15,
        [S.EdgeInsets_top]: 5,
        [S.EdgeInsets_left]: 15
      });
    },
    get C105() {
      return C[105] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Padding",
        [S._Location_column]: 20,
        [S._Location_line]: 609,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C106() {
      return C[106] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SafeArea",
        [S._Location_column]: 18,
        [S._Location_line]: 619,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C107() {
      return C[107] = dart.const({
        __proto__: T$.ValueKeyOfStringL().prototype,
        [S.ValueKey_value]: "dismissible"
      });
    },
    get C108() {
      return C[108] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Dismissible",
        [S._Location_column]: 14,
        [S._Location_line]: 632,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C109() {
      return C[109] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 16,
        [S._Location_line]: 626,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C110() {
      return C[110] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FadeTransition",
        [S._Location_column]: 28,
        [S._Location_line]: 647,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C111() {
      return C[111] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 18,
        [S._Location_line]: 655,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C112() {
      return C[112] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedBuilder",
        [S._Location_column]: 28,
        [S._Location_line]: 652,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C113() {
      return C[113] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ClipRect",
        [S._Location_column]: 14,
        [S._Location_line]: 667,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C114() {
      return C[114] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Hero",
        [S._Location_column]: 12,
        [S._Location_line]: 665,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C115() {
      return C[115] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 250000
      });
    },
    get C116() {
      return C[116] = dart.const({
        __proto__: curves.Cubic.prototype,
        [S.Cubic_d]: 1,
        [S.Cubic_c]: 0.2,
        [S.Cubic_b]: 0,
        [S.Cubic_a]: 0.4
      });
    },
    get C117() {
      return C[117] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[116] || CT.C116,
        [S.Interval_end]: 1,
        [S.Interval_begin]: 0.45
      });
    },
    get C118() {
      return C[118] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[116] || CT.C116,
        [S.Interval_end]: 1,
        [S.Interval_begin]: 0.72
      });
    },
    get C119() {
      return C[119] = dart.const({
        __proto__: floating_action_button_location._StartTopFabLocation.prototype
      });
    },
    get C120() {
      return C[120] = dart.const({
        __proto__: floating_action_button_location._MiniStartTopFabLocation.prototype
      });
    },
    get C121() {
      return C[121] = dart.const({
        __proto__: floating_action_button_location._CenterTopFabLocation.prototype
      });
    },
    get C122() {
      return C[122] = dart.const({
        __proto__: floating_action_button_location._MiniCenterTopFabLocation.prototype
      });
    },
    get C123() {
      return C[123] = dart.const({
        __proto__: floating_action_button_location._EndTopFabLocation.prototype
      });
    },
    get C124() {
      return C[124] = dart.const({
        __proto__: floating_action_button_location._MiniEndTopFabLocation.prototype
      });
    },
    get C125() {
      return C[125] = dart.const({
        __proto__: floating_action_button_location._StartFloatFabLocation.prototype
      });
    },
    get C126() {
      return C[126] = dart.const({
        __proto__: floating_action_button_location._MiniStartFloatFabLocation.prototype
      });
    },
    get C127() {
      return C[127] = dart.const({
        __proto__: floating_action_button_location._CenterFloatFabLocation.prototype
      });
    },
    get C128() {
      return C[128] = dart.const({
        __proto__: floating_action_button_location._MiniCenterFloatFabLocation.prototype
      });
    },
    get C129() {
      return C[129] = dart.const({
        __proto__: floating_action_button_location._EndFloatFabLocation.prototype
      });
    },
    get C130() {
      return C[130] = dart.const({
        __proto__: floating_action_button_location._MiniEndFloatFabLocation.prototype
      });
    },
    get C131() {
      return C[131] = dart.const({
        __proto__: floating_action_button_location._StartDockedFabLocation.prototype
      });
    },
    get C132() {
      return C[132] = dart.const({
        __proto__: floating_action_button_location._MiniStartDockedFabLocation.prototype
      });
    },
    get C133() {
      return C[133] = dart.const({
        __proto__: floating_action_button_location._CenterDockedFabLocation.prototype
      });
    },
    get C134() {
      return C[134] = dart.const({
        __proto__: floating_action_button_location._MiniCenterDockedFabLocation.prototype
      });
    },
    get C135() {
      return C[135] = dart.const({
        __proto__: floating_action_button_location._EndDockedFabLocation.prototype
      });
    },
    get C136() {
      return C[136] = dart.const({
        __proto__: floating_action_button_location._MiniEndDockedFabLocation.prototype
      });
    },
    get C137() {
      return C[137] = dart.const({
        __proto__: ui.TextDirection.prototype,
        [S._name$3]: "TextDirection.rtl",
        index: 0
      });
    },
    get C138() {
      return C[138] = dart.const({
        __proto__: ui.TextDirection.prototype,
        [S._name$3]: "TextDirection.ltr",
        index: 1
      });
    },
    get C139() {
      return C[139] = dart.const({
        __proto__: floating_action_button_location._ScalingFabMotionAnimator.prototype
      });
    },
    get C141() {
      return C[141] = dart.const({
        __proto__: curves.Cubic.prototype,
        [S.Cubic_d]: 1,
        [S.Cubic_c]: 0.25,
        [S.Cubic_b]: 0.1,
        [S.Cubic_a]: 0.25
      });
    },
    get C140() {
      return C[140] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[141] || CT.C141,
        [S.Interval_end]: 1,
        [S.Interval_begin]: 0.5
      });
    },
    get C142() {
      return C[142] = dart.const({
        __proto__: curves.Threshold.prototype,
        [S.Threshold_threshold]: 0.5
      });
    },
    get C143() {
      return C[143] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 200000
      });
    },
    get C144() {
      return C[144] = dart.const({
        __proto__: floating_action_button._DefaultHeroTag.prototype
      });
    },
    get C146() {
      return C[146] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 24,
        [S._Location_line]: 209,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C145() {
      return C[145] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[146] || CT.C146,
        [S.Widget_key]: null,
        [S.SingleChildRenderObjectWidget_child]: null,
        [S.SizedBox_height]: null,
        [S.SizedBox_width]: 20
      });
    },
    get C148() {
      return C[148] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 24,
        [S._Location_line]: 211,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C147() {
      return C[147] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[148] || CT.C148,
        [S.Widget_key]: null,
        [S.SingleChildRenderObjectWidget_child]: null,
        [S.SizedBox_height]: null,
        [S.SizedBox_width]: 20
      });
    },
    get C150() {
      return C[150] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 22,
        [S._Location_line]: 214,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C149() {
      return C[149] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[150] || CT.C150,
        [S.Widget_key]: null,
        [S.SingleChildRenderObjectWidget_child]: null,
        [S.SizedBox_height]: null,
        [S.SizedBox_width]: 20
      });
    },
    get C152() {
      return C[152] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 22,
        [S._Location_line]: 216,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C151() {
      return C[151] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[152] || CT.C152,
        [S.Widget_key]: null,
        [S.SingleChildRenderObjectWidget_child]: null,
        [S.SizedBox_height]: null,
        [S.SizedBox_width]: 20
      });
    },
    get C154() {
      return C[154] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 24,
        [S._Location_line]: 218,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C153() {
      return C[153] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[154] || CT.C154,
        [S.Widget_key]: null,
        [S.SingleChildRenderObjectWidget_child]: null,
        [S.SizedBox_height]: null,
        [S.SizedBox_width]: 16
      });
    },
    get C156() {
      return C[156] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 24,
        [S._Location_line]: 220,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C155() {
      return C[155] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[156] || CT.C156,
        [S.Widget_key]: null,
        [S.SingleChildRenderObjectWidget_child]: null,
        [S.SizedBox_height]: null,
        [S.SizedBox_width]: 8
      });
    },
    get C158() {
      return C[158] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 24,
        [S._Location_line]: 222,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C157() {
      return C[157] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[158] || CT.C158,
        [S.Widget_key]: null,
        [S.SingleChildRenderObjectWidget_child]: null,
        [S.SizedBox_height]: null,
        [S.SizedBox_width]: 20
      });
    },
    get C159() {
      return C[159] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Row",
        [S._Location_column]: 17,
        [S._Location_line]: 205,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C160() {
      return C[160] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ChildOverflowBox",
        [S._Location_column]: 16,
        [S._Location_line]: 204,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C161() {
      return C[161] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "RawMaterialButton",
        [S._Location_column]: 21,
        [S._Location_line]: 483,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C162() {
      return C[162] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Tooltip",
        [S._Location_column]: 16,
        [S._Location_line]: 507,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C163() {
      return C[163] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Hero",
        [S._Location_column]: 16,
        [S._Location_line]: 514,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C164() {
      return C[164] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "MergeSemantics",
        [S._Location_column]: 12,
        [S._Location_line]: 520,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C165() {
      return C[165] = dart.const({
        __proto__: circle_border.CircleBorder.prototype,
        [S.OutlinedBorder_side]: C[64] || CT.C64
      });
    },
    get C166() {
      return C[166] = dart.const({
        __proto__: stadium_border.StadiumBorder.prototype,
        [S.OutlinedBorder_side]: C[64] || CT.C64
      });
    },
    get C167() {
      return C[167] = dart.const({
        __proto__: box$.BoxConstraints.prototype,
        [S.BoxConstraints_maxHeight]: 1 / 0,
        [S.BoxConstraints_minHeight]: 0,
        [S.BoxConstraints_maxWidth]: 1 / 0,
        [S.BoxConstraints_minWidth]: 0
      });
    },
    get C168() {
      return C[168] = dart.const({
        __proto__: box$.BoxConstraints.prototype,
        [S.BoxConstraints_maxHeight]: 56,
        [S.BoxConstraints_minHeight]: 56,
        [S.BoxConstraints_maxWidth]: 56,
        [S.BoxConstraints_minWidth]: 56
      });
    },
    get C169() {
      return C[169] = dart.const({
        __proto__: box$.BoxConstraints.prototype,
        [S.BoxConstraints_maxHeight]: 40,
        [S.BoxConstraints_minHeight]: 40,
        [S.BoxConstraints_maxWidth]: 40,
        [S.BoxConstraints_minWidth]: 40
      });
    },
    get C170() {
      return C[170] = dart.const({
        __proto__: box$.BoxConstraints.prototype,
        [S.BoxConstraints_maxHeight]: 48,
        [S.BoxConstraints_minHeight]: 48,
        [S.BoxConstraints_maxWidth]: 1 / 0,
        [S.BoxConstraints_minWidth]: 0
      });
    },
    get C171() {
      return C[171] = dart.const({
        __proto__: flexible_space_bar.CollapseMode.prototype,
        [S._name$8]: "CollapseMode.parallax",
        index: 0
      });
    },
    get C172() {
      return C[172] = dart.const({
        __proto__: flexible_space_bar.CollapseMode.prototype,
        [S._name$8]: "CollapseMode.pin",
        index: 1
      });
    },
    get C173() {
      return C[173] = dart.const({
        __proto__: flexible_space_bar.CollapseMode.prototype,
        [S._name$8]: "CollapseMode.none",
        index: 2
      });
    },
    get C174() {
      return C[174] = dart.constList([C[171] || CT.C171, C[172] || CT.C172, C[173] || CT.C173], T$.CollapseModeL());
    },
    get C175() {
      return C[175] = dart.const({
        __proto__: flexible_space_bar.StretchMode.prototype,
        [S._name$8]: "StretchMode.zoomBackground",
        index: 0
      });
    },
    get C176() {
      return C[176] = dart.const({
        __proto__: flexible_space_bar.StretchMode.prototype,
        [S._name$8]: "StretchMode.blurBackground",
        index: 1
      });
    },
    get C177() {
      return C[177] = dart.const({
        __proto__: flexible_space_bar.StretchMode.prototype,
        [S._name$8]: "StretchMode.fadeTitle",
        index: 2
      });
    },
    get C178() {
      return C[178] = dart.constList([C[175] || CT.C175, C[176] || CT.C176, C[177] || CT.C177], T$.StretchModeL());
    },
    get C179() {
      return C[179] = dart.constList([C[175] || CT.C175], T$.StretchModeL());
    },
    get C180() {
      return C[180] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FlexibleSpaceBarSettings",
        [S._Location_column]: 12,
        [S._Location_line]: 229,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C181() {
      return C[181] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Opacity",
        [S._Location_column]: 20,
        [S._Location_line]: 325,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C182() {
      return C[182] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Positioned",
        [S._Location_column]: 24,
        [S._Location_line]: 320,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C183() {
      return C[183] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 24,
        [S._Location_line]: 344,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C184() {
      return C[184] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "BackdropFilter",
        [S._Location_column]: 22,
        [S._Location_line]: 339,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C185() {
      return C[185] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Positioned",
        [S._Location_column]: 37,
        [S._Location_line]: 338,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C186() {
      return C[186] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 23,
        [S._Location_line]: 366,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C187() {
      return C[187] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Opacity",
        [S._Location_column]: 21,
        [S._Location_line]: 378,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C188() {
      return C[188] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 32,
        [S._Location_line]: 411,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C189() {
      return C[189] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "LayoutBuilder",
        [S._Location_column]: 28,
        [S._Location_line]: 409,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C190() {
      return C[190] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DefaultTextStyle",
        [S._Location_column]: 26,
        [S._Location_line]: 407,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C191() {
      return C[191] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 24,
        [S._Location_line]: 405,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C192() {
      return C[192] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Transform",
        [S._Location_column]: 22,
        [S._Location_line]: 402,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C193() {
      return C[193] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 26,
        [S._Location_line]: 400,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C194() {
      return C[194] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Stack",
        [S._Location_column]: 32,
        [S._Location_line]: 425,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C195() {
      return C[195] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ClipRect",
        [S._Location_column]: 16,
        [S._Location_line]: 425,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C196() {
      return C[196] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "LayoutBuilder",
        [S._Location_column]: 12,
        [S._Location_line]: 287,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C197() {
      return C[197] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ToggleButtonsTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 274,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/toggle_buttons_theme.dart"
      });
    },
    get C198() {
      return C[198] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "TimePickerTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 388,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/time_picker_theme.dart"
      });
    },
    get C199() {
      return C[199] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "TextSelectionTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 164,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/text_selection_theme.dart"
      });
    },
    get C200() {
      return C[200] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "TextButtonTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 119,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/text_button_theme.dart"
      });
    },
    get C201() {
      return C[201] = dart.const({
        __proto__: tabs$.TabBarIndicatorSize.prototype,
        [S._name$9]: "TabBarIndicatorSize.tab",
        index: 0
      });
    },
    get C202() {
      return C[202] = dart.const({
        __proto__: tabs$.TabBarIndicatorSize.prototype,
        [S._name$9]: "TabBarIndicatorSize.label",
        index: 1
      });
    },
    get C203() {
      return C[203] = dart.constList([C[201] || CT.C201, C[202] || CT.C202], T$.TabBarIndicatorSizeL());
    },
    get C204() {
      return C[204] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 10,
        [S.EdgeInsets_right]: 0,
        [S.EdgeInsets_top]: 0,
        [S.EdgeInsets_left]: 0
      });
    },
    get C205() {
      return C[205] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Text",
        [S._Location_column]: 21,
        [S._Location_line]: 108,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C206() {
      return C[206] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 11,
        [S._Location_line]: 129,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C207() {
      return C[207] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Column",
        [S._Location_column]: 15,
        [S._Location_line]: 125,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C208() {
      return C[208] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Center",
        [S._Location_column]: 14,
        [S._Location_line]: 140,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C209() {
      return C[209] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 12,
        [S._Location_line]: 138,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C210() {
      return C[210] = dart.const({
        __proto__: ui.Size.prototype,
        [S.OffsetBase__dy]: 72,
        [S.OffsetBase__dx]: 1 / 0
      });
    },
    get C211() {
      return C[211] = dart.const({
        __proto__: ui.Size.prototype,
        [S.OffsetBase__dy]: 46,
        [S.OffsetBase__dx]: 1 / 0
      });
    },
    get C212() {
      return C[212] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DefaultTextStyle",
        [S._Location_column]: 12,
        [S._Location_line]: 215,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C213() {
      return C[213] = dart.constList([], T$.WidgetL());
    },
    get C214() {
      return C[214] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 0,
        [S.EdgeInsets_right]: 0,
        [S.EdgeInsets_top]: 0,
        [S.EdgeInsets_left]: 0
      });
    },
    get C215() {
      return C[215] = dart.const({
        __proto__: recognizer.DragStartBehavior.prototype,
        [S._name$10]: "DragStartBehavior.start",
        index: 1
      });
    },
    get C216() {
      return C[216] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_TabStyle",
        [S._Location_column]: 12,
        [S._Location_line]: 1176,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C217() {
      return C[217] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 14,
        [S._Location_line]: 1201,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C218() {
      return C[218] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 13,
        [S.EdgeInsets_right]: 0,
        [S.EdgeInsets_top]: 13,
        [S.EdgeInsets_left]: 0
      });
    },
    get C219() {
      return C[219] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 13,
        [S.EdgeInsets_right]: 16,
        [S.EdgeInsets_top]: 13,
        [S.EdgeInsets_left]: 16
      });
    },
    get C220() {
      return C[220] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "KeyedSubtree",
        [S._Location_column]: 18,
        [S._Location_line]: 1228,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C221() {
      return C[221] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Padding",
        [S._Location_column]: 16,
        [S._Location_line]: 1226,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C222() {
      return C[222] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Center",
        [S._Location_column]: 14,
        [S._Location_line]: 1224,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C223() {
      return C[223] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 15,
        [S._Location_line]: 1281,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C224() {
      return C[224] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Stack",
        [S._Location_column]: 18,
        [S._Location_line]: 1278,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C225() {
      return C[225] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Padding",
        [S._Location_column]: 16,
        [S._Location_line]: 1276,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C226() {
      return C[226] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "InkWell",
        [S._Location_column]: 28,
        [S._Location_line]: 1271,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C227() {
      return C[227] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Expanded",
        [S._Location_column]: 30,
        [S._Location_line]: 1290,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C228() {
      return C[228] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_TabLabelBar",
        [S._Location_column]: 16,
        [S._Location_line]: 1302,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C229() {
      return C[229] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_TabStyle",
        [S._Location_column]: 14,
        [S._Location_line]: 1295,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C230() {
      return C[230] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "CustomPaint",
        [S._Location_column]: 21,
        [S._Location_line]: 1293,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C231() {
      return C[231] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SingleChildScrollView",
        [S._Location_column]: 16,
        [S._Location_line]: 1311,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C232() {
      return C[232] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Padding",
        [S._Location_column]: 16,
        [S._Location_line]: 1320,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C233() {
      return C[233] = dart.const({
        __proto__: page_view.PageScrollPhysics.prototype,
        [S.ScrollPhysics_parent]: null
      });
    },
    get C234() {
      return C[234] = dart.const({
        __proto__: scroll_physics.ClampingScrollPhysics.prototype,
        [S.ScrollPhysics_parent]: null
      });
    },
    get C235() {
      return C[235] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "PageView",
        [S._Location_column]: 14,
        [S._Location_line]: 1555,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C236() {
      return C[236] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "NotificationListener",
        [S._Location_column]: 12,
        [S._Location_line]: 1553,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C237() {
      return C[237] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 4,
        [S.EdgeInsets_right]: 4,
        [S.EdgeInsets_top]: 4,
        [S.EdgeInsets_left]: 4
      });
    },
    get C238() {
      return C[238] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 12,
        [S._Location_line]: 1595,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C239() {
      return C[239] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "TabPageSelectorIndicator",
        [S._Location_column]: 12,
        [S._Location_line]: 1677,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C240() {
      return C[240] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Row",
        [S._Location_column]: 18,
        [S._Location_line]: 1712,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C241() {
      return C[241] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 16,
        [S._Location_line]: 1710,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C242() {
      return C[242] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedBuilder",
        [S._Location_column]: 12,
        [S._Location_line]: 1707,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C243() {
      return C[243] = dart.fn(ui.Color.lerp, T$.ColorNAndColorNAnddoubleToColorN());
    },
    get C244() {
      return C[244] = dart.const({
        __proto__: snack_bar_theme.SnackBarBehavior.prototype,
        [S._name$11]: "SnackBarBehavior.fixed",
        index: 0
      });
    },
    get C245() {
      return C[245] = dart.const({
        __proto__: snack_bar_theme.SnackBarBehavior.prototype,
        [S._name$11]: "SnackBarBehavior.floating",
        index: 1
      });
    },
    get C246() {
      return C[246] = dart.constList([C[244] || CT.C244, C[245] || CT.C245], T$.SnackBarBehaviorL());
    },
    get C247() {
      return C[247] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SliderTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 121,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/slider_theme.dart"
      });
    },
    get C248() {
      return C[248] = dart.const({
        __proto__: slider_theme.ShowValueIndicator.prototype,
        [S._name$12]: "ShowValueIndicator.onlyForDiscrete",
        index: 0
      });
    },
    get C249() {
      return C[249] = dart.const({
        __proto__: slider_theme.ShowValueIndicator.prototype,
        [S._name$12]: "ShowValueIndicator.onlyForContinuous",
        index: 1
      });
    },
    get C250() {
      return C[250] = dart.const({
        __proto__: slider_theme.ShowValueIndicator.prototype,
        [S._name$12]: "ShowValueIndicator.always",
        index: 2
      });
    },
    get C251() {
      return C[251] = dart.const({
        __proto__: slider_theme.ShowValueIndicator.prototype,
        [S._name$12]: "ShowValueIndicator.never",
        index: 3
      });
    },
    get C252() {
      return C[252] = dart.constList([C[248] || CT.C248, C[249] || CT.C249, C[250] || CT.C250, C[251] || CT.C251], T$.ShowValueIndicatorL());
    },
    get C253() {
      return C[253] = dart.const({
        __proto__: slider_theme.Thumb.prototype,
        [S._name$12]: "Thumb.start",
        index: 0
      });
    },
    get C254() {
      return C[254] = dart.const({
        __proto__: slider_theme.Thumb.prototype,
        [S._name$12]: "Thumb.end",
        index: 1
      });
    },
    get C255() {
      return C[255] = dart.constList([C[253] || CT.C253, C[254] || CT.C254], T$.ThumbL());
    },
    get C256() {
      return C[256] = dart.const({
        __proto__: slider_theme.RoundSliderOverlayShape.prototype,
        [S.RoundSliderOverlayShape_overlayRadius]: 24
      });
    },
    get C257() {
      return C[257] = dart.const({
        __proto__: slider_theme.RoundSliderTickMarkShape.prototype,
        [S.RoundSliderTickMarkShape_tickMarkRadius]: null
      });
    },
    get C258() {
      return C[258] = dart.const({
        __proto__: slider_theme.RoundSliderThumbShape.prototype,
        [S.RoundSliderThumbShape_pressedElevation]: 6,
        [S.RoundSliderThumbShape_elevation]: 1,
        [S.RoundSliderThumbShape_disabledThumbRadius]: null,
        [S.RoundSliderThumbShape_enabledThumbRadius]: 10
      });
    },
    get C259() {
      return C[259] = dart.const({
        __proto__: slider_theme.RoundedRectSliderTrackShape.prototype
      });
    },
    get C260() {
      return C[260] = dart.const({
        __proto__: slider_theme.PaddleSliderValueIndicatorShape.prototype
      });
    },
    get C261() {
      return C[261] = dart.const({
        __proto__: slider_theme.RoundRangeSliderTickMarkShape.prototype,
        [S.RoundRangeSliderTickMarkShape_tickMarkRadius]: null
      });
    },
    get C262() {
      return C[262] = dart.const({
        __proto__: slider_theme.RoundRangeSliderThumbShape.prototype,
        [S.RoundRangeSliderThumbShape_pressedElevation]: 6,
        [S.RoundRangeSliderThumbShape_elevation]: 1,
        [S.RoundRangeSliderThumbShape_disabledThumbRadius]: null,
        [S.RoundRangeSliderThumbShape_enabledThumbRadius]: 10
      });
    },
    get C263() {
      return C[263] = dart.const({
        __proto__: slider_theme.RoundedRectRangeSliderTrackShape.prototype
      });
    },
    get C264() {
      return C[264] = dart.const({
        __proto__: slider_theme.PaddleRangeSliderValueIndicatorShape.prototype
      });
    },
    get C265() {
      return C[265] = dart.const({
        __proto__: slider_theme.SliderThemeData.prototype,
        [S.thumbSelector]: null,
        [S.minThumbSeparation]: null,
        [S.valueIndicatorTextStyle]: null,
        [S.showValueIndicator]: null,
        [S.rangeValueIndicatorShape]: null,
        [S.rangeTrackShape]: null,
        [S.rangeThumbShape]: null,
        [S.rangeTickMarkShape]: null,
        [S.valueIndicatorShape]: null,
        [S.trackShape]: null,
        [S.thumbShape]: null,
        [S.tickMarkShape]: null,
        [S.overlayShape]: null,
        [S.valueIndicatorColor]: null,
        [S.overlayColor$2]: null,
        [S.disabledThumbColor]: null,
        [S.overlappingShapeStrokeColor]: null,
        [S.thumbColor$1]: null,
        [S.disabledInactiveTickMarkColor]: null,
        [S.disabledActiveTickMarkColor]: null,
        [S.inactiveTickMarkColor]: null,
        [S.activeTickMarkColor]: null,
        [S.disabledInactiveTrackColor]: null,
        [S.disabledActiveTrackColor]: null,
        [S.inactiveTrackColor]: null,
        [S.activeTrackColor]: null,
        [S.trackHeight]: null
      });
    },
    get C266() {
      return C[266] = dart.const({
        __proto__: ui.Offset.prototype,
        [S.OffsetBase__dy]: 0,
        [S.OffsetBase__dx]: 0
      });
    },
    get C267() {
      return C[267] = dart.const({
        __proto__: slider_theme._RectangularSliderValueIndicatorPathPainter.prototype
      });
    },
    get C268() {
      return C[268] = dart.const({
        __proto__: slider_theme._PaddleSliderValueIndicatorPathPainter.prototype
      });
    },
    get C269() {
      return C[269] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4294901760.0
      });
    },
    get C270() {
      return C[270] = dart.const({
        __proto__: ui.Offset.prototype,
        [S.OffsetBase__dy]: -40,
        [S.OffsetBase__dx]: 0
      });
    },
    get C271() {
      return C[271] = dart.fn(ui.lerpDouble, T$.numNAndnumNAnddoubleTodoubleN());
    },
    get C272() {
      return C[272] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ProgressIndicatorTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 180,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/progress_indicator_theme.dart"
      });
    },
    get C273() {
      return C[273] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "PopupMenuTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 167,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/popup_menu_theme.dart"
      });
    },
    get C274() {
      return C[274] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FadeTransition",
        [S._Location_column]: 14,
        [S._Location_line]: 39,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C275() {
      return C[275] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SlideTransition",
        [S._Location_column]: 12,
        [S._Location_line]: 36,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C276() {
      return C[276] = dart.const({
        __proto__: ui.Offset.prototype,
        [S.OffsetBase__dy]: 0.25,
        [S.OffsetBase__dx]: 0
      });
    },
    get C277() {
      return C[277] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "OverflowBox",
        [S._Location_column]: 26,
        [S._Location_line]: 120,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C278() {
      return C[278] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 24,
        [S._Location_line]: 118,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C279() {
      return C[279] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ClipRect",
        [S._Location_column]: 22,
        [S._Location_line]: 117,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C280() {
      return C[280] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 20,
        [S._Location_line]: 114,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C281() {
      return C[281] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FractionalTranslation",
        [S._Location_column]: 20,
        [S._Location_line]: 131,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C282() {
      return C[282] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FractionalTranslation",
        [S._Location_column]: 22,
        [S._Location_line]: 136,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C283() {
      return C[283] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedBuilder",
        [S._Location_column]: 18,
        [S._Location_line]: 129,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C284() {
      return C[284] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedBuilder",
        [S._Location_column]: 16,
        [S._Location_line]: 111,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C285() {
      return C[285] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "LayoutBuilder",
        [S._Location_column]: 12,
        [S._Location_line]: 84,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C286() {
      return C[286] = dart.const({
        __proto__: ui.Offset.prototype,
        [S.OffsetBase__dy]: 0.05,
        [S.OffsetBase__dx]: 0
      });
    },
    get C287() {
      return C[287] = dart.const({
        __proto__: ui.Offset.prototype,
        [S.OffsetBase__dy]: -0.025,
        [S.OffsetBase__dx]: 0
      });
    },
    get C288() {
      return C[288] = dart.const({
        __proto__: curves.Cubic.prototype,
        [S.Cubic_d]: 1,
        [S.Cubic_c]: 0,
        [S.Cubic_b]: 0,
        [S.Cubic_a]: 0.2
      });
    },
    get C289() {
      return C[289] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ZoomEnterTransition",
        [S._Location_column]: 16,
        [S._Location_line]: 212,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C290() {
      return C[290] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ZoomExitTransition",
        [S._Location_column]: 16,
        [S._Location_line]: 222,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C291() {
      return C[291] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ZoomEnterTransition",
        [S._Location_column]: 18,
        [S._Location_line]: 235,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C292() {
      return C[292] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ZoomExitTransition",
        [S._Location_column]: 18,
        [S._Location_line]: 246,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C293() {
      return C[293] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DualTransitionBuilder",
        [S._Location_column]: 14,
        [S._Location_line]: 228,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C294() {
      return C[294] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DualTransitionBuilder",
        [S._Location_column]: 12,
        [S._Location_line]: 205,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C295() {
      return C[295] = dart.const({
        __proto__: curves.Cubic.prototype,
        [S.Cubic_d]: 0.06,
        [S.Cubic_c]: 0.133333,
        [S.Cubic_b]: 0,
        [S.Cubic_a]: 0.05
      });
    },
    get C296() {
      return C[296] = dart.const({
        __proto__: curves.Cubic.prototype,
        [S.Cubic_d]: 1,
        [S.Cubic_c]: 0.25,
        [S.Cubic_b]: 0.82,
        [S.Cubic_a]: 0.208333
      });
    },
    get C297() {
      return C[297] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 16,
        [S._Location_line]: 320,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C298() {
      return C[298] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ScaleTransition",
        [S._Location_column]: 16,
        [S._Location_line]: 327,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C299() {
      return C[299] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FadeTransition",
        [S._Location_column]: 14,
        [S._Location_line]: 325,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C300() {
      return C[300] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedBuilder",
        [S._Location_column]: 12,
        [S._Location_line]: 317,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C301() {
      return C[301] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[43] || CT.C43,
        [S.Interval_end]: 0.25,
        [S.Interval_begin]: 0.125
      });
    },
    get C302() {
      return C[302] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[43] || CT.C43,
        [S.Interval_end]: 0.4175,
        [S.Interval_begin]: 0.2075
      });
    },
    get C303() {
      return C[303] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ScaleTransition",
        [S._Location_column]: 14,
        [S._Location_line]: 377,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C304() {
      return C[304] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FadeTransition",
        [S._Location_column]: 12,
        [S._Location_line]: 375,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C305() {
      return C[305] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[43] || CT.C43,
        [S.Interval_end]: 0.2075,
        [S.Interval_begin]: 0.0825
      });
    },
    get C306() {
      return C[306] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_FadeUpwardsPageTransition",
        [S._Location_column]: 12,
        [S._Location_line]: 448,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C307() {
      return C[307] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_OpenUpwardsPageTransition",
        [S._Location_column]: 12,
        [S._Location_line]: 476,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C308() {
      return C[308] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ZoomPageTransition",
        [S._Location_column]: 12,
        [S._Location_line]: 508,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C309() {
      return C[309] = dart.constMap(T$.TargetPlatformL(), T$.PageTransitionsBuilderL(), []);
    },
    get C311() {
      return C[311] = dart.const({
        __proto__: page_transitions_theme.FadeUpwardsPageTransitionsBuilder.prototype
      });
    },
    get C312() {
      return C[312] = dart.const({
        __proto__: page_transitions_theme.CupertinoPageTransitionsBuilder.prototype
      });
    },
    get C310() {
      return C[310] = dart.constMap(T$.TargetPlatformL(), T$.PageTransitionsBuilderL(), [C[11] || CT.C11, C[311] || CT.C311, C[15] || CT.C15, C[312] || CT.C312, C[12] || CT.C12, C[311] || CT.C311]);
    },
    get C313() {
      return C[313] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "OutlinedButtonTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 119,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/outlined_button_theme.dart"
      });
    },
    get C314() {
      return C[314] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ConstrainedBox",
        [S._Location_column]: 19,
        [S._Location_line]: 474,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C315() {
      return C[315] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_RailDestination",
        [S._Location_column]: 25,
        [S._Location_line]: 489,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C316() {
      return C[316] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ConstrainedBox",
        [S._Location_column]: 25,
        [S._Location_line]: 511,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C317() {
      return C[317] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Column",
        [S._Location_column]: 26,
        [S._Location_line]: 485,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C318() {
      return C[318] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 24,
        [S._Location_line]: 483,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C319() {
      return C[319] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Expanded",
        [S._Location_column]: 15,
        [S._Location_line]: 482,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C320() {
      return C[320] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Column",
        [S._Location_column]: 18,
        [S._Location_line]: 469,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C321() {
      return C[321] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Material",
        [S._Location_column]: 16,
        [S._Location_line]: 466,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C322() {
      return C[322] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 14,
        [S._Location_line]: 464,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C323() {
      return C[323] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ExtendedNavigationRailAnimation",
        [S._Location_column]: 12,
        [S._Location_line]: 462,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C324() {
      return C[324] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "IconTheme",
        [S._Location_column]: 31,
        [S._Location_line]: 622,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C325() {
      return C[325] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DefaultTextStyle",
        [S._Location_column]: 32,
        [S._Location_line]: 626,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C326() {
      return C[326] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 18,
        [S._Location_line]: 636,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C327() {
      return C[327] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 33,
        [S._Location_line]: 633,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C328() {
      return C[328] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Opacity",
        [S._Location_column]: 26,
        [S._Location_line]: 651,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C329() {
      return C[329] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 17,
        [S._Location_line]: 648,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C330() {
      return C[330] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Stack",
        [S._Location_column]: 20,
        [S._Location_line]: 644,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C331() {
      return C[331] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Padding",
        [S._Location_column]: 21,
        [S._Location_line]: 642,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C332() {
      return C[332] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Opacity",
        [S._Location_column]: 30,
        [S._Location_line]: 675,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C333() {
      return C[333] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 21,
        [S._Location_line]: 671,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C334() {
      return C[334] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 21,
        [S._Location_line]: 681,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C335() {
      return C[335] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Row",
        [S._Location_column]: 24,
        [S._Location_line]: 668,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C336() {
      return C[336] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ClipRect",
        [S._Location_column]: 22,
        [S._Location_line]: 667,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C337() {
      return C[337] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ConstrainedBox",
        [S._Location_column]: 20,
        [S._Location_line]: 663,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C338() {
      return C[338] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Padding",
        [S._Location_column]: 21,
        [S._Location_line]: 661,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C339() {
      return C[339] = dart.const({
        __proto__: navigation_rail.NavigationRailLabelType.prototype,
        [S$._name$13]: "NavigationRailLabelType.none",
        index: 0
      });
    },
    get C340() {
      return C[340] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 17,
        [S._Location_line]: 703,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C341() {
      return C[341] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Opacity",
        [S._Location_column]: 26,
        [S._Location_line]: 709,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C342() {
      return C[342] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 17,
        [S._Location_line]: 705,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C343() {
      return C[343] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 17,
        [S._Location_line]: 715,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C344() {
      return C[344] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Column",
        [S._Location_column]: 20,
        [S._Location_line]: 699,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C345() {
      return C[345] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ClipRect",
        [S._Location_column]: 18,
        [S._Location_line]: 698,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C346() {
      return C[346] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 19,
        [S._Location_line]: 692,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C347() {
      return C[347] = dart.const({
        __proto__: navigation_rail.NavigationRailLabelType.prototype,
        [S$._name$13]: "NavigationRailLabelType.selected",
        index: 1
      });
    },
    get C349() {
      return C[349] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 21,
        [S._Location_line]: 730,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C348() {
      return C[348] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[349] || CT.C349,
        [S.Widget_key]: null,
        [S.SingleChildRenderObjectWidget_child]: null,
        [S.SizedBox_height]: 16,
        [S.SizedBox_width]: null
      });
    },
    get C351() {
      return C[351] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 21,
        [S._Location_line]: 733,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C350() {
      return C[350] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[351] || CT.C351,
        [S.Widget_key]: null,
        [S.SingleChildRenderObjectWidget_child]: null,
        [S.SizedBox_height]: 16,
        [S.SizedBox_width]: null
      });
    },
    get C352() {
      return C[352] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Column",
        [S._Location_column]: 18,
        [S._Location_line]: 728,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C353() {
      return C[353] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 19,
        [S._Location_line]: 722,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C354() {
      return C[354] = dart.const({
        __proto__: navigation_rail.NavigationRailLabelType.prototype,
        [S$._name$13]: "NavigationRailLabelType.all",
        index: 2
      });
    },
    get C355() {
      return C[355] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "InkResponse",
        [S._Location_column]: 20,
        [S._Location_line]: 749,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C356() {
      return C[356] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Material",
        [S._Location_column]: 11,
        [S._Location_line]: 746,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C357() {
      return C[357] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 11,
        [S._Location_line]: 760,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C358() {
      return C[358] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Stack",
        [S._Location_column]: 14,
        [S._Location_line]: 744,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C359() {
      return C[359] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 12,
        [S._Location_line]: 741,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C360() {
      return C[360] = dart.constList([C[339] || CT.C339, C[347] || CT.C347, C[354] || CT.C354], T$.NavigationRailLabelTypeL());
    },
    get C362() {
      return C[362] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 32,
        [S._Location_line]: 888,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C361() {
      return C[361] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[362] || CT.C362,
        [S.Widget_key]: null,
        [S.SingleChildRenderObjectWidget_child]: null,
        [S.SizedBox_height]: 8,
        [S.SizedBox_width]: null
      });
    },
    get C363() {
      return C[363] = dart.const({
        __proto__: navigation_rail_theme.NavigationRailThemeData.prototype,
        [S$.labelType$1]: null,
        [S$.groupAlignment$1]: null,
        [S$.selectedIconTheme$1]: null,
        [S$.unselectedIconTheme$1]: null,
        [S$.selectedLabelTextStyle$1]: null,
        [S$.unselectedLabelTextStyle$1]: null,
        [S$.elevation$7]: null,
        [S$.backgroundColor$6]: null
      });
    },
    get C364() {
      return C[364] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "NavigationRailTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 209,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail_theme.dart"
      });
    },
    get C365() {
      return C[365] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "CustomPaint",
        [S._Location_column]: 12,
        [S._Location_line]: 229,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C366() {
      return C[366] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 15000
      });
    },
    get C367() {
      return C[367] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Transform",
        [S._Location_column]: 12,
        [S._Location_line]: 276,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C368() {
      return C[368] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Text",
        [S._Location_column]: 16,
        [S._Location_line]: 378,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C369() {
      return C[369] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Opacity",
        [S._Location_column]: 14,
        [S._Location_line]: 376,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C370() {
      return C[370] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 12,
        [S._Location_line]: 374,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C371() {
      return C[371] = dart.const({
        __proto__: ui.Offset.prototype,
        [S.OffsetBase__dy]: -0.25,
        [S.OffsetBase__dx]: 0
      });
    },
    get C372() {
      return C[372] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Text",
        [S._Location_column]: 18,
        [S._Location_line]: 401,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C373() {
      return C[373] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FractionalTranslation",
        [S._Location_column]: 16,
        [S._Location_line]: 396,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C374() {
      return C[374] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Opacity",
        [S._Location_column]: 14,
        [S._Location_line]: 394,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C375() {
      return C[375] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 12,
        [S._Location_line]: 391,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C376() {
      return C[376] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Opacity",
        [S._Location_column]: 11,
        [S._Location_line]: 444,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C377() {
      return C[377] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Stack",
        [S._Location_column]: 14,
        [S._Location_line]: 442,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C378() {
      return C[378] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Opacity",
        [S._Location_column]: 11,
        [S._Location_line]: 457,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C379() {
      return C[379] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Stack",
        [S._Location_column]: 14,
        [S._Location_line]: 454,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C381() {
      return C[381] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 31,
        [S._Location_line]: 313,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C380() {
      return C[380] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[381] || CT.C381,
        [S.Widget_key]: null,
        [S.SingleChildRenderObjectWidget_child]: null,
        [S.SizedBox_height]: null,
        [S.SizedBox_width]: null
      });
    },
    get C382() {
      return C[382] = dart.const({
        __proto__: input_decorator.FloatingLabelBehavior.prototype,
        [S$._name$14]: "FloatingLabelBehavior.never",
        index: 0
      });
    },
    get C383() {
      return C[383] = dart.const({
        __proto__: input_decorator.FloatingLabelBehavior.prototype,
        [S$._name$14]: "FloatingLabelBehavior.auto",
        index: 1
      });
    },
    get C384() {
      return C[384] = dart.const({
        __proto__: input_decorator.FloatingLabelBehavior.prototype,
        [S$._name$14]: "FloatingLabelBehavior.always",
        index: 2
      });
    },
    get C385() {
      return C[385] = dart.constList([C[382] || CT.C382, C[383] || CT.C383, C[384] || CT.C384], T$.FloatingLabelBehaviorL());
    },
    get C386() {
      return C[386] = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [S$._name$14]: "_DecorationSlot.icon",
        index: 0
      });
    },
    get C387() {
      return C[387] = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [S$._name$14]: "_DecorationSlot.input",
        index: 1
      });
    },
    get C388() {
      return C[388] = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [S$._name$14]: "_DecorationSlot.label",
        index: 2
      });
    },
    get C389() {
      return C[389] = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [S$._name$14]: "_DecorationSlot.hint",
        index: 3
      });
    },
    get C390() {
      return C[390] = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [S$._name$14]: "_DecorationSlot.prefix",
        index: 4
      });
    },
    get C391() {
      return C[391] = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [S$._name$14]: "_DecorationSlot.suffix",
        index: 5
      });
    },
    get C392() {
      return C[392] = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [S$._name$14]: "_DecorationSlot.prefixIcon",
        index: 6
      });
    },
    get C393() {
      return C[393] = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [S$._name$14]: "_DecorationSlot.suffixIcon",
        index: 7
      });
    },
    get C394() {
      return C[394] = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [S$._name$14]: "_DecorationSlot.helperError",
        index: 8
      });
    },
    get C395() {
      return C[395] = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [S$._name$14]: "_DecorationSlot.counter",
        index: 9
      });
    },
    get C396() {
      return C[396] = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [S$._name$14]: "_DecorationSlot.container",
        index: 10
      });
    },
    get C397() {
      return C[397] = dart.constList([C[386] || CT.C386, C[387] || CT.C387, C[388] || CT.C388, C[389] || CT.C389, C[390] || CT.C390, C[391] || CT.C391, C[392] || CT.C392, C[393] || CT.C393, C[394] || CT.C394, C[395] || CT.C395, C[396] || CT.C396], T$._DecorationSlotL());
    },
    get C398() {
      return C[398] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Text",
        [S._Location_column]: 48,
        [S._Location_line]: 1771,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C399() {
      return C[399] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedOpacity",
        [S._Location_column]: 14,
        [S._Location_line]: 1767,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C400() {
      return C[400] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 452984831
      });
    },
    get C401() {
      return C[401] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 234881023
      });
    },
    get C402() {
      return C[402] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 167772160
      });
    },
    get C403() {
      return C[403] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 83886080
      });
    },
    get C404() {
      return C[404] = dart.const({
        __proto__: ui.Brightness.prototype,
        [S._name$3]: "Brightness.dark",
        index: 0
      });
    },
    get C405() {
      return C[405] = dart.const({
        __proto__: ui.Brightness.prototype,
        [S._name$3]: "Brightness.light",
        index: 1
      });
    },
    get C408() {
      return C[408] = dart.const({
        __proto__: borders.BorderStyle.prototype,
        [S._name$4]: "BorderStyle.solid",
        index: 1
      });
    },
    get C407() {
      return C[407] = dart.const({
        __proto__: borders.BorderSide.prototype,
        [S.BorderSide_style]: C[408] || CT.C408,
        [S.BorderSide_width]: 1,
        [S.BorderSide_color]: C[66] || CT.C66
      });
    },
    get C409() {
      return C[409] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [S.BorderRadius_bottomRight]: C[40] || CT.C40,
        [S.BorderRadius_bottomLeft]: C[40] || CT.C40,
        [S.BorderRadius_topRight]: C[68] || CT.C68,
        [S.BorderRadius_topLeft]: C[68] || CT.C68
      });
    },
    get C406() {
      return C[406] = dart.const({
        __proto__: input_border.UnderlineInputBorder.prototype,
        [S$.InputBorder_borderSide]: C[407] || CT.C407,
        [S$.UnderlineInputBorder_borderRadius]: C[409] || CT.C409
      });
    },
    get C410() {
      return C[410] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Text",
        [S._Location_column]: 14,
        [S._Location_line]: 2173,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C411() {
      return C[411] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedOpacity",
        [S._Location_column]: 64,
        [S._Location_line]: 2168,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C412() {
      return C[412] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_BorderContainer",
        [S._Location_column]: 30,
        [S._Location_line]: 2193,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C413() {
      return C[413] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Text",
        [S._Location_column]: 18,
        [S._Location_line]: 2220,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C414() {
      return C[414] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedDefaultTextStyle",
        [S._Location_column]: 16,
        [S._Location_line]: 2214,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C415() {
      return C[415] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedOpacity",
        [S._Location_column]: 14,
        [S._Location_line]: 2210,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C416() {
      return C[416] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_Shaker",
        [S._Location_column]: 66,
        [S._Location_line]: 2208,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C417() {
      return C[417] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_AffixText",
        [S._Location_column]: 7,
        [S._Location_line]: 2230,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C418() {
      return C[418] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_AffixText",
        [S._Location_column]: 7,
        [S._Location_line]: 2238,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C419() {
      return C[419] = dart.const({
        __proto__: edge_insets.EdgeInsetsDirectional.prototype,
        [S$.EdgeInsetsDirectional_bottom]: 0,
        [S$.EdgeInsetsDirectional_end]: 16,
        [S$.EdgeInsetsDirectional_top]: 0,
        [S$.EdgeInsetsDirectional_start]: 0
      });
    },
    get C420() {
      return C[420] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Padding",
        [S._Location_column]: 7,
        [S._Location_line]: 2251,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C421() {
      return C[421] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ConstrainedBox",
        [S._Location_column]: 16,
        [S._Location_line]: 2266,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C422() {
      return C[422] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Center",
        [S._Location_column]: 7,
        [S._Location_line]: 2263,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C423() {
      return C[423] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ConstrainedBox",
        [S._Location_column]: 16,
        [S._Location_line]: 2287,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C424() {
      return C[424] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Center",
        [S._Location_column]: 7,
        [S._Location_line]: 2284,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C425() {
      return C[425] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_HelperError",
        [S._Location_column]: 32,
        [S._Location_line]: 2304,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C426() {
      return C[426] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Text",
        [S._Location_column]: 16,
        [S._Location_line]: 2321,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C427() {
      return C[427] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 17,
        [S._Location_line]: 2318,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C428() {
      return C[428] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 8,
        [S.EdgeInsets_right]: 12,
        [S.EdgeInsets_top]: 8,
        [S.EdgeInsets_left]: 12
      });
    },
    get C429() {
      return C[429] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 12,
        [S.EdgeInsets_right]: 12,
        [S.EdgeInsets_top]: 12,
        [S.EdgeInsets_left]: 12
      });
    },
    get C430() {
      return C[430] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 8,
        [S.EdgeInsets_right]: 0,
        [S.EdgeInsets_top]: 8,
        [S.EdgeInsets_left]: 0
      });
    },
    get C431() {
      return C[431] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 12,
        [S.EdgeInsets_right]: 0,
        [S.EdgeInsets_top]: 12,
        [S.EdgeInsets_left]: 0
      });
    },
    get C432() {
      return C[432] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 12,
        [S.EdgeInsets_right]: 12,
        [S.EdgeInsets_top]: 20,
        [S.EdgeInsets_left]: 12
      });
    },
    get C433() {
      return C[433] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 16,
        [S.EdgeInsets_right]: 12,
        [S.EdgeInsets_top]: 24,
        [S.EdgeInsets_left]: 12
      });
    },
    get C434() {
      return C[434] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_Decorator",
        [S._Location_column]: 34,
        [S._Location_line]: 2362,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C435() {
      return C[435] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ConstrainedBox",
        [S._Location_column]: 14,
        [S._Location_line]: 2395,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C436() {
      return C[436] = dart.const({
        __proto__: input_border._NoInputBorder.prototype,
        [S$.InputBorder_borderSide]: C[64] || CT.C64
      });
    },
    get C437() {
      return C[437] = dart.const({
        __proto__: input_decorator.InputDecorationTheme.prototype,
        [S$.constraints$3]: null,
        [S$.alignLabelWithHint$2]: false,
        [S$.border$3]: null,
        [S$.enabledBorder$1]: null,
        [S$.disabledBorder$1]: null,
        [S$.focusedErrorBorder$1]: null,
        [S$.focusedBorder$1]: null,
        [S$.errorBorder$1]: null,
        [S$.hoverColor$5]: null,
        [S$.focusColor$4]: null,
        [S$.fillColor$4]: null,
        [S$.filled$1]: false,
        [S$.counterStyle$1]: null,
        [S$.suffixStyle$1]: null,
        [S$.prefixStyle$1]: null,
        [S$.isCollapsed$2]: false,
        [S$.contentPadding$2]: null,
        [S$.isDense$2]: false,
        [S$.floatingLabelBehavior$1]: C[383] || CT.C383,
        [S$.errorMaxLines$2]: null,
        [S$.errorStyle$2]: null,
        [S$.hintStyle$1]: null,
        [S$.helperMaxLines$2]: null,
        [S$.helperStyle$2]: null,
        [S$.labelStyle$4]: null
      });
    },
    get C438() {
      return C[438] = dart.const({
        __proto__: ink_splash._InkSplashFactory.prototype
      });
    },
    get C439() {
      return C[439] = dart.fn(text_style.TextStyle.lerp, T$.TextStyleNAndTextStyleNAnddoubleToTextStyleN());
    },
    get C440() {
      return C[440] = dart.fn(edge_insets.EdgeInsetsGeometry.lerp, T$.EdgeInsetsGeometryNAndEdgeInsetsGeometryNAnddoubleToEdgeInsetsGeometryN());
    },
    get C441() {
      return C[441] = dart.fn(ui.Size.lerp, T$.SizeNAndSizeNAnddoubleToSizeN());
    },
    get C442() {
      return C[442] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ElevatedButtonTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 119,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/elevated_button_theme.dart"
      });
    },
    get C443() {
      return C[443] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ChipTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 95,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/chip_theme.dart"
      });
    },
    get C444() {
      return C[444] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "RawMaterialButton",
        [S._Location_column]: 12,
        [S._Location_line]: 157,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/raised_button.dart"
      });
    },
    get C445() {
      return C[445] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "RawMaterialButton",
        [S._Location_column]: 12,
        [S._Location_line]: 403,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/material_button.dart"
      });
    },
    get C447() {
      return C[447] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 20,
        [S._Location_line]: 267,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/raised_button.dart"
      });
    },
    get C446() {
      return C[446] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[447] || CT.C447,
        [S.Widget_key]: null,
        [S.SingleChildRenderObjectWidget_child]: null,
        [S.SizedBox_height]: null,
        [S.SizedBox_width]: 8
      });
    },
    get C448() {
      return C[448] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Row",
        [S._Location_column]: 17,
        [S._Location_line]: 263,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/raised_button.dart"
      });
    },
    get C449() {
      return C[449] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_OutlineButton",
        [S._Location_column]: 12,
        [S._Location_line]: 175,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/outline_button.dart"
      });
    },
    get C451() {
      return C[451] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 20,
        [S._Location_line]: 276,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/outline_button.dart"
      });
    },
    get C450() {
      return C[450] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[451] || CT.C451,
        [S.Widget_key]: null,
        [S.SingleChildRenderObjectWidget_child]: null,
        [S.SizedBox_height]: null,
        [S.SizedBox_width]: 8
      });
    },
    get C452() {
      return C[452] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Row",
        [S._Location_column]: 17,
        [S._Location_line]: 272,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/outline_button.dart"
      });
    },
    get C453() {
      return C[453] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[116] || CT.C116,
        [S.Interval_end]: 0.5,
        [S.Interval_begin]: 0
      });
    },
    get C454() {
      return C[454] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[43] || CT.C43,
        [S.Interval_end]: 0.5,
        [S.Interval_begin]: 0.5
      });
    },
    get C455() {
      return C[455] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[43] || CT.C43,
        [S.Interval_end]: 1,
        [S.Interval_begin]: 1
      });
    },
    get C456() {
      return C[456] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "RaisedButton",
        [S._Location_column]: 16,
        [S._Location_line]: 461,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/outline_button.dart"
      });
    },
    get C457() {
      return C[457] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedBuilder",
        [S._Location_column]: 12,
        [S._Location_line]: 458,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/outline_button.dart"
      });
    },
    get C458() {
      return C[458] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 150000
      });
    },
    get C459() {
      return C[459] = dart.const({
        __proto__: theme_data.VisualDensity.prototype,
        [S$.VisualDensity_vertical]: 0,
        [S$.VisualDensity_horizontal]: 0
      });
    },
    get C460() {
      return C[460] = dart.const({
        __proto__: box$.BoxConstraints.prototype,
        [S.BoxConstraints_maxHeight]: 1 / 0,
        [S.BoxConstraints_minHeight]: 36,
        [S.BoxConstraints_maxWidth]: 1 / 0,
        [S.BoxConstraints_minWidth]: 88
      });
    },
    get C461() {
      return C[461] = dart.const({
        __proto__: rounded_rectangle_border.RoundedRectangleBorder.prototype,
        [S.OutlinedBorder_side]: C[64] || CT.C64,
        [S.RoundedRectangleBorder_borderRadius]: C[39] || CT.C39
      });
    },
    get C462() {
      return C[462] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Center",
        [S._Location_column]: 22,
        [S._Location_line]: 407,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/button.dart"
      });
    },
    get C463() {
      return C[463] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 20,
        [S._Location_line]: 405,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/button.dart"
      });
    },
    get C464() {
      return C[464] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "InkWell",
        [S._Location_column]: 16,
        [S._Location_line]: 387,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/button.dart"
      });
    },
    get C465() {
      return C[465] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Material",
        [S._Location_column]: 14,
        [S._Location_line]: 379,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/button.dart"
      });
    },
    get C466() {
      return C[466] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ConstrainedBox",
        [S._Location_column]: 27,
        [S._Location_line]: 377,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/button.dart"
      });
    },
    get C467() {
      return C[467] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_InputPadding",
        [S._Location_column]: 14,
        [S._Location_line]: 436,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/button.dart"
      });
    },
    get C468() {
      return C[468] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 12,
        [S._Location_line]: 432,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/button.dart"
      });
    },
    get C469() {
      return C[469] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "RawMaterialButton",
        [S._Location_column]: 12,
        [S._Location_line]: 136,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/flat_button.dart"
      });
    },
    get C471() {
      return C[471] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 20,
        [S._Location_line]: 230,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/flat_button.dart"
      });
    },
    get C470() {
      return C[470] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[471] || CT.C471,
        [S.Widget_key]: null,
        [S.SingleChildRenderObjectWidget_child]: null,
        [S.SizedBox_height]: null,
        [S.SizedBox_width]: 8
      });
    },
    get C472() {
      return C[472] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Row",
        [S._Location_column]: 17,
        [S._Location_line]: 226,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/flat_button.dart"
      });
    },
    get C473() {
      return C[473] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4284612846.0
      });
    },
    get C474() {
      return C[474] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4281794739.0
      });
    },
    get C475() {
      return C[475] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4278442694.0
      });
    },
    get C476() {
      return C[476] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4278290310.0
      });
    },
    get C477() {
      return C[477] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4294967295.0
      });
    },
    get C478() {
      return C[478] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4289724448.0
      });
    },
    get C479() {
      return C[479] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4290479868.0
      });
    },
    get C480() {
      return C[480] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4279374354.0
      });
    },
    get C481() {
      return C[481] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4291782265.0
      });
    },
    get C482() {
      return C[482] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4278190266.0
      });
    },
    get C483() {
      return C[483] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4278190216.0
      });
    },
    get C484() {
      return C[484] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4284940281.0
      });
    },
    get C485() {
      return C[485] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4286119936.0
      });
    },
    get C486() {
      return C[486] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4293900287.0
      });
    },
    get C487() {
      return C[487] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4290682623.0
      });
    },
    get C488() {
      return C[488] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4288362317.0
      });
    },
    get C491() {
      return C[491] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4293128957.0
      });
    },
    get C492() {
      return C[492] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4290502395.0
      });
    },
    get C493() {
      return C[493] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4287679225.0
      });
    },
    get C494() {
      return C[494] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4284790262.0
      });
    },
    get C495() {
      return C[495] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4282557941.0
      });
    },
    get C496() {
      return C[496] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4280391411.0
      });
    },
    get C497() {
      return C[497] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4280191205.0
      });
    },
    get C498() {
      return C[498] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4279858898.0
      });
    },
    get C499() {
      return C[499] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4279592384.0
      });
    },
    get C500() {
      return C[500] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4279060385.0
      });
    },
    get C490() {
      return C[490] = dart.constMap(T$.intL(), T$.ColorL(), [50, C[491] || CT.C491, 100, C[492] || CT.C492, 200, C[493] || CT.C493, 300, C[494] || CT.C494, 400, C[495] || CT.C495, 500, C[496] || CT.C496, 600, C[497] || CT.C497, 700, C[498] || CT.C498, 800, C[499] || CT.C499, 900, C[500] || CT.C500]);
    },
    get C489() {
      return C[489] = dart.const({
        __proto__: colors$.MaterialColor.prototype,
        [S.Color_value]: 4280391411.0,
        [S$.ColorSwatch__swatch]: C[490] || CT.C490
      });
    },
    get C501() {
      return C[501] = dart.const({
        __proto__: color_scheme.ColorScheme.prototype,
        [S$.brightness$2]: C[405] || CT.C405,
        [S$.onError]: C[477] || CT.C477,
        [S$.onBackground]: C[66] || CT.C66,
        [S$.onSurface]: C[66] || CT.C66,
        [S$.onSecondary]: C[66] || CT.C66,
        [S$.onPrimary]: C[477] || CT.C477,
        [S$.error]: C[478] || CT.C478,
        [S$.background$1]: C[477] || CT.C477,
        [S$.surface]: C[477] || CT.C477,
        [S$.secondaryVariant]: C[476] || CT.C476,
        [S$.secondary]: C[475] || CT.C475,
        [S$.primaryVariant]: C[474] || CT.C474,
        [S$.primary]: C[473] || CT.C473
      });
    },
    get C502() {
      return C[502] = dart.const({
        __proto__: button_theme.ButtonTextTheme.prototype,
        [S$._name$15]: "ButtonTextTheme.normal",
        index: 0
      });
    },
    get C503() {
      return C[503] = dart.const({
        __proto__: button_theme.ButtonTextTheme.prototype,
        [S$._name$15]: "ButtonTextTheme.accent",
        index: 1
      });
    },
    get C504() {
      return C[504] = dart.const({
        __proto__: button_theme.ButtonTextTheme.prototype,
        [S$._name$15]: "ButtonTextTheme.primary",
        index: 2
      });
    },
    get C505() {
      return C[505] = dart.constList([C[502] || CT.C502, C[503] || CT.C503, C[504] || CT.C504], T$.ButtonTextThemeL());
    },
    get C506() {
      return C[506] = dart.const({
        __proto__: button_theme.ButtonBarLayoutBehavior.prototype,
        [S$._name$15]: "ButtonBarLayoutBehavior.constrained",
        index: 0
      });
    },
    get C507() {
      return C[507] = dart.const({
        __proto__: button_theme.ButtonBarLayoutBehavior.prototype,
        [S$._name$15]: "ButtonBarLayoutBehavior.padded",
        index: 1
      });
    },
    get C508() {
      return C[508] = dart.constList([C[506] || CT.C506, C[507] || CT.C507], T$.ButtonBarLayoutBehaviorL());
    },
    get C509() {
      return C[509] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ButtonTheme",
        [S._Location_column]: 24,
        [S._Location_line]: 161,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/button_theme.dart"
      });
    },
    get C510() {
      return C[510] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 0,
        [S.EdgeInsets_right]: 16,
        [S.EdgeInsets_top]: 0,
        [S.EdgeInsets_left]: 16
      });
    },
    get C511() {
      return C[511] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 0,
        [S.EdgeInsets_right]: 24,
        [S.EdgeInsets_top]: 0,
        [S.EdgeInsets_left]: 24
      });
    },
    get C514() {
      return C[514] = dart.const({
        __proto__: ui.Radius.prototype,
        [S.Radius_y]: 2,
        [S.Radius_x]: 2
      });
    },
    get C513() {
      return C[513] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [S.BorderRadius_bottomRight]: C[514] || CT.C514,
        [S.BorderRadius_bottomLeft]: C[514] || CT.C514,
        [S.BorderRadius_topRight]: C[514] || CT.C514,
        [S.BorderRadius_topLeft]: C[514] || CT.C514
      });
    },
    get C512() {
      return C[512] = dart.const({
        __proto__: rounded_rectangle_border.RoundedRectangleBorder.prototype,
        [S.OutlinedBorder_side]: C[64] || CT.C64,
        [S.RoundedRectangleBorder_borderRadius]: C[513] || CT.C513
      });
    },
    get C515() {
      return C[515] = dart.const({
        __proto__: edge_insets.EdgeInsetsDirectional.prototype,
        [S$.EdgeInsetsDirectional_bottom]: 0,
        [S$.EdgeInsetsDirectional_end]: 16,
        [S$.EdgeInsetsDirectional_top]: 0,
        [S$.EdgeInsetsDirectional_start]: 12
      });
    },
    get C516() {
      return C[516] = dart.const({
        __proto__: button_theme.ButtonThemeData.prototype,
        [S$0._materialTapTargetSize]: null,
        [S$0.colorScheme]: null,
        [S$0._splashColor]: null,
        [S$0._highlightColor]: null,
        [S$0._hoverColor]: null,
        [S$0._focusColor]: null,
        [S$0._disabledColor]: null,
        [S$0._buttonColor]: null,
        [S$0.alignedDropdown]: false,
        [S$0._shape]: null,
        [S$0._padding]: null,
        [S$0.layoutBehavior]: C[507] || CT.C507,
        [S$.textTheme$2]: C[502] || CT.C502,
        [S$.height$2]: 36,
        [S$.minWidth$2]: 88
      });
    },
    get C517() {
      return C[517] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "TooltipTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 247,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tooltip_theme.dart"
      });
    },
    get C518() {
      return C[518] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_TooltipOverlay",
        [S._Location_column]: 14,
        [S._Location_line]: 403,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C519() {
      return C[519] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Directionality",
        [S._Location_column]: 28,
        [S._Location_line]: 401,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C520() {
      return C[520] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 14,
        [S._Location_line]: 516,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C521() {
      return C[521] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "GestureDetector",
        [S._Location_column]: 21,
        [S._Location_line]: 512,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C522() {
      return C[522] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "MouseRegion",
        [S._Location_column]: 16,
        [S._Location_line]: 524,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C523() {
      return C[523] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 1500000
      });
    },
    get C524() {
      return C[524] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 100000
      });
    },
    get C525() {
      return C[525] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 0
      });
    },
    get C526() {
      return C[526] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Text",
        [S._Location_column]: 24,
        [S._Location_line]: 631,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C527() {
      return C[527] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Center",
        [S._Location_column]: 22,
        [S._Location_line]: 628,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C528() {
      return C[528] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 20,
        [S._Location_line]: 624,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C529() {
      return C[529] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DefaultTextStyle",
        [S._Location_column]: 18,
        [S._Location_line]: 622,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C530() {
      return C[530] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ConstrainedBox",
        [S._Location_column]: 16,
        [S._Location_line]: 620,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C531() {
      return C[531] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FadeTransition",
        [S._Location_column]: 14,
        [S._Location_line]: 618,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C532() {
      return C[532] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "IgnorePointer",
        [S._Location_column]: 21,
        [S._Location_line]: 617,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C533() {
      return C[533] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "MouseRegion",
        [S._Location_column]: 16,
        [S._Location_line]: 642,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C534() {
      return C[534] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "CustomSingleChildLayout",
        [S._Location_column]: 14,
        [S._Location_line]: 649,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C535() {
      return C[535] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Positioned",
        [S._Location_column]: 23,
        [S._Location_line]: 648,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C536() {
      return C[536] = dart.const({
        __proto__: bottom_navigation_bar.BottomNavigationBarType.prototype,
        [S$0._name$16]: "BottomNavigationBarType.fixed",
        index: 0
      });
    },
    get C537() {
      return C[537] = dart.const({
        __proto__: bottom_navigation_bar.BottomNavigationBarType.prototype,
        [S$0._name$16]: "BottomNavigationBarType.shifting",
        index: 1
      });
    },
    get C538() {
      return C[538] = dart.constList([C[536] || CT.C536, C[537] || CT.C537], T$.BottomNavigationBarTypeL());
    },
    get C539() {
      return C[539] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_TileIcon",
        [S._Location_column]: 13,
        [S._Location_line]: 567,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C540() {
      return C[540] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_Label",
        [S._Location_column]: 13,
        [S._Location_line]: 576,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C541() {
      return C[541] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Column",
        [S._Location_column]: 16,
        [S._Location_line]: 562,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C542() {
      return C[542] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Padding",
        [S._Location_column]: 14,
        [S._Location_line]: 560,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C543() {
      return C[543] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "InkResponse",
        [S._Location_column]: 21,
        [S._Location_line]: 556,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C544() {
      return C[544] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Tooltip",
        [S._Location_column]: 16,
        [S._Location_line]: 591,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C545() {
      return C[545] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 11,
        [S._Location_line]: 606,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C546() {
      return C[546] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Stack",
        [S._Location_column]: 14,
        [S._Location_line]: 603,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C547() {
      return C[547] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 14,
        [S._Location_line]: 600,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C548() {
      return C[548] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Expanded",
        [S._Location_column]: 12,
        [S._Location_line]: 613,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C549() {
      return C[549] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "IconTheme",
        [S._Location_column]: 14,
        [S._Location_line]: 659,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C550() {
      return C[550] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 12,
        [S._Location_line]: 656,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C551() {
      return C[551] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Text",
        [S._Location_column]: 30,
        [S._Location_line]: 722,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C552() {
      return C[552] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Transform",
        [S._Location_column]: 14,
        [S._Location_line]: 712,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C553() {
      return C[553] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Opacity",
        [S._Location_column]: 14,
        [S._Location_line]: 728,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C554() {
      return C[554] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FadeTransition",
        [S._Location_column]: 14,
        [S._Location_line]: 735,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C555() {
      return C[555] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FadeTransition",
        [S._Location_column]: 14,
        [S._Location_line]: 742,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C556() {
      return C[556] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 14,
        [S._Location_line]: 752,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C557() {
      return C[557] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 12,
        [S._Location_line]: 749,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C558() {
      return C[558] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "MediaQuery",
        [S._Location_column]: 14,
        [S._Location_line]: 759,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C559() {
      return C[559] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [S$0.TextStyle_overflow]: null,
        [S$0.TextStyle_fontFeatures]: null,
        [S$0.TextStyle_shadows]: null,
        [S$0.TextStyle_debugLabel]: null,
        [S$0.TextStyle_decorationThickness]: null,
        [S$0.TextStyle_decorationStyle]: null,
        [S$0.TextStyle_decorationColor]: null,
        [S$0.TextStyle_decoration]: null,
        [S$0.TextStyle_background]: null,
        [S$0.TextStyle_foreground]: null,
        [S$0.TextStyle_locale]: null,
        [S$0.TextStyle_leadingDistribution]: null,
        [S$0.TextStyle_height]: null,
        [S$0.TextStyle_textBaseline]: null,
        [S$0.TextStyle_wordSpacing]: null,
        [S$0.TextStyle_letterSpacing]: null,
        [S$0.TextStyle_fontStyle]: null,
        [S$0.TextStyle_fontWeight]: null,
        [S$0.TextStyle_fontSize]: null,
        [S$0.TextStyle__package]: null,
        [S$0.TextStyle__fontFamilyFallback]: null,
        [S$0.TextStyle_fontFamily]: null,
        [S$0.TextStyle_backgroundColor]: null,
        [S$0.TextStyle_color]: null,
        [S$0.TextStyle_inherit]: true
      });
    },
    get C560() {
      return C[560] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_BottomNavigationTile",
        [S._Location_column]: 17,
        [S._Location_line]: 976,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C561() {
      return C[561] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Row",
        [S._Location_column]: 14,
        [S._Location_line]: 1004,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C562() {
      return C[562] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "MediaQuery",
        [S._Location_column]: 35,
        [S._Location_line]: 1045,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C563() {
      return C[563] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Padding",
        [S._Location_column]: 22,
        [S._Location_line]: 1043,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C564() {
      return C[564] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Material",
        [S._Location_column]: 20,
        [S._Location_line]: 1041,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C565() {
      return C[565] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "CustomPaint",
        [S._Location_column]: 18,
        [S._Location_line]: 1036,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C566() {
      return C[566] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ConstrainedBox",
        [S._Location_column]: 16,
        [S._Location_line]: 1034,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C567() {
      return C[567] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Material",
        [S._Location_column]: 14,
        [S._Location_line]: 1031,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C568() {
      return C[568] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 12,
        [S._Location_line]: 1029,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C569() {
      return C[569] = dart.constList([C[53] || CT.C53, C[54] || CT.C54], T$.MaterialTapTargetSizeL());
    },
    get C570() {
      return C[570] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 536870911
      });
    },
    get C571() {
      return C[571] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 520093696
      });
    },
    get C572() {
      return C[572] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4282549748.0
      });
    },
    get C573() {
      return C[573] = dart.const({
        __proto__: page_transitions_theme.PageTransitionsTheme.prototype,
        [S._builders]: C[309] || CT.C309
      });
    },
    get C574() {
      return C[574] = dart.const({
        __proto__: icon_theme_data.IconThemeData.prototype,
        [S$0.IconThemeData_size]: null,
        [S$0.IconThemeData__opacity]: null,
        [S$0.IconThemeData_color]: C[477] || CT.C477
      });
    },
    get C575() {
      return C[575] = dart.const({
        __proto__: icon_theme_data.IconThemeData.prototype,
        [S$0.IconThemeData_size]: null,
        [S$0.IconThemeData__opacity]: null,
        [S$0.IconThemeData_color]: C[66] || CT.C66
      });
    },
    get C577() {
      return C[577] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 3707764736.0
      });
    },
    get C576() {
      return C[576] = dart.const({
        __proto__: icon_theme_data.IconThemeData.prototype,
        [S$0.IconThemeData_size]: null,
        [S$0.IconThemeData__opacity]: null,
        [S$0.IconThemeData_color]: C[577] || CT.C577
      });
    },
    get C578() {
      return C[578] = dart.const({
        __proto__: toggle_buttons_theme.ToggleButtonsThemeData.prototype,
        [S.borderRadius]: null,
        [S.borderWidth]: null,
        [S.disabledBorderColor]: null,
        [S.selectedBorderColor]: null,
        [S.borderColor]: null,
        [S.hoverColor$2]: null,
        [S.splashColor$2]: null,
        [S.highlightColor$1]: null,
        [S.focusColor$2]: null,
        [S.fillColor]: null,
        [S.disabledColor$1]: null,
        [S.selectedColor]: null,
        [S.color$3]: null,
        [S.constraints$1]: null,
        [S.textStyle]: null
      });
    },
    get C579() {
      return C[579] = dart.const({
        __proto__: tab_bar_theme.TabBarTheme.prototype,
        [S.unselectedLabelStyle$2]: null,
        [S.unselectedLabelColor$2]: null,
        [S.labelStyle$2]: null,
        [S.labelPadding$1]: null,
        [S.labelColor$2]: null,
        [S.indicatorSize$2]: null,
        [S.indicator$1]: null
      });
    },
    get C580() {
      return C[580] = dart.const({
        __proto__: tooltip_theme.TooltipThemeData.prototype,
        [S$0.showDuration]: null,
        [S$0.waitDuration]: null,
        [S$0.textStyle$4]: null,
        [S$0.decoration$3]: null,
        [S$0.excludeFromSemantics]: null,
        [S$0.preferBelow]: null,
        [S$0.verticalOffset]: null,
        [S$0.margin$2]: null,
        [S$0.padding$9]: null,
        [S$0.height$3]: null
      });
    },
    get C581() {
      return C[581] = dart.const({
        __proto__: app_bar_theme.AppBarTheme.prototype,
        [S$0.AppBarTheme_backwardsCompatibility]: null,
        [S$0.AppBarTheme_systemOverlayStyle]: null,
        [S$0.AppBarTheme_titleTextStyle]: null,
        [S$0.AppBarTheme_toolbarTextStyle]: null,
        [S$0.AppBarTheme_toolbarHeight]: null,
        [S$0.AppBarTheme_titleSpacing]: null,
        [S$0.AppBarTheme_centerTitle]: null,
        [S$0.AppBarTheme_textTheme]: null,
        [S$0.AppBarTheme_actionsIconTheme]: null,
        [S$0.AppBarTheme_iconTheme]: null,
        [S$0.AppBarTheme_shadowColor]: null,
        [S$0.AppBarTheme_elevation]: null,
        [S$0.AppBarTheme_foregroundColor]: null,
        [S$0.AppBarTheme_backgroundColor]: null,
        [S$0.AppBarTheme_brightness]: null
      });
    },
    get C582() {
      return C[582] = dart.const({
        __proto__: scrollbar_theme.ScrollbarThemeData.prototype,
        [S.minThumbLength]: null,
        [S.mainAxisMargin]: null,
        [S.crossAxisMargin]: null,
        [S.trackBorderColor]: null,
        [S.trackColor$1]: null,
        [S.thumbColor$2]: null,
        [S.radius]: null,
        [S.interactive]: null,
        [S.isAlwaysShown]: null,
        [S.showTrackOnHover]: null,
        [S.thickness]: null
      });
    },
    get C583() {
      return C[583] = dart.const({
        __proto__: bottom_app_bar_theme.BottomAppBarTheme.prototype,
        [S$0.shape$14]: null,
        [S$0.elevation$16]: null,
        [S$0.color$10]: null
      });
    },
    get C584() {
      return C[584] = dart.const({
        __proto__: card_theme.CardTheme.prototype,
        [S$.shape$9]: null,
        [S$.margin$1]: null,
        [S$.elevation$11]: null,
        [S$.shadowColor$2]: null,
        [S$.color$7]: null,
        [S$.clipBehavior$2]: null
      });
    },
    get C585() {
      return C[585] = dart.const({
        __proto__: dialog_theme.DialogTheme.prototype,
        [S$.contentTextStyle$1]: null,
        [S$.titleTextStyle]: null,
        [S$.shape$6]: null,
        [S$.elevation$9]: null,
        [S$.backgroundColor$8]: null
      });
    },
    get C586() {
      return C[586] = dart.const({
        __proto__: floating_action_button_theme.FloatingActionButtonThemeData.prototype,
        [S$0.FloatingActionButtonThemeData_enableFeedback]: null,
        [S$0.FloatingActionButtonThemeData_shape]: null,
        [S$0.FloatingActionButtonThemeData_highlightElevation]: null,
        [S$0.FloatingActionButtonThemeData_disabledElevation]: null,
        [S$0.FloatingActionButtonThemeData_hoverElevation]: null,
        [S$0.FloatingActionButtonThemeData_focusElevation]: null,
        [S$0.FloatingActionButtonThemeData_elevation]: null,
        [S$0.FloatingActionButtonThemeData_splashColor]: null,
        [S$0.FloatingActionButtonThemeData_hoverColor]: null,
        [S$0.FloatingActionButtonThemeData_focusColor]: null,
        [S$0.FloatingActionButtonThemeData_backgroundColor]: null,
        [S$0.FloatingActionButtonThemeData_foregroundColor]: null
      });
    },
    get C587() {
      return C[587] = dart.const({
        __proto__: snack_bar_theme.SnackBarThemeData.prototype,
        [S.behavior$1]: null,
        [S.shape$3]: null,
        [S.elevation$2]: null,
        [S.contentTextStyle]: null,
        [S.disabledActionTextColor]: null,
        [S.actionTextColor]: null,
        [S.backgroundColor$4]: null
      });
    },
    get C588() {
      return C[588] = dart.const({
        __proto__: bottom_sheet_theme.BottomSheetThemeData.prototype,
        [S$0.BottomSheetThemeData_constraints]: null,
        [S$0.BottomSheetThemeData_clipBehavior]: null,
        [S$0.BottomSheetThemeData_shape]: null,
        [S$0.BottomSheetThemeData_modalElevation]: null,
        [S$0.BottomSheetThemeData_modalBackgroundColor]: null,
        [S$0.BottomSheetThemeData_elevation]: null,
        [S$0.BottomSheetThemeData_backgroundColor]: null
      });
    },
    get C589() {
      return C[589] = dart.const({
        __proto__: popup_menu_theme.PopupMenuThemeData.prototype,
        [S.enableFeedback$3]: null,
        [S.textStyle$1]: null,
        [S.elevation$5]: null,
        [S.shape$4]: null,
        [S.color$6]: null
      });
    },
    get C590() {
      return C[590] = dart.const({
        __proto__: banner_theme.MaterialBannerThemeData.prototype,
        [S$0.MaterialBannerThemeData_leadingPadding]: null,
        [S$0.MaterialBannerThemeData_padding]: null,
        [S$0.MaterialBannerThemeData_contentTextStyle]: null,
        [S$0.MaterialBannerThemeData_backgroundColor]: null
      });
    },
    get C591() {
      return C[591] = dart.const({
        __proto__: divider_theme.DividerThemeData.prototype,
        [S$0.DividerThemeData_endIndent]: null,
        [S$0.DividerThemeData_indent]: null,
        [S$0.DividerThemeData_thickness]: null,
        [S$0.DividerThemeData_space]: null,
        [S$0.DividerThemeData_color]: null
      });
    },
    get C592() {
      return C[592] = dart.const({
        __proto__: button_bar_theme.ButtonBarThemeData.prototype,
        [S$0.overflowDirection]: null,
        [S$0.layoutBehavior$1]: null,
        [S$0.buttonAlignedDropdown]: null,
        [S$0.buttonPadding]: null,
        [S$0.buttonHeight]: null,
        [S$0.buttonMinWidth]: null,
        [S$0.buttonTextTheme]: null,
        [S$0.mainAxisSize]: null,
        [S$0.alignment$2]: null
      });
    },
    get C593() {
      return C[593] = dart.const({
        __proto__: bottom_navigation_bar_theme.BottomNavigationBarThemeData.prototype,
        [S$0.enableFeedback$9]: null,
        [S$0.type$2]: null,
        [S$0.showUnselectedLabels$3]: null,
        [S$0.showSelectedLabels$3]: null,
        [S$0.unselectedLabelStyle$6]: null,
        [S$0.selectedLabelStyle$3]: null,
        [S$0.unselectedItemColor$1]: null,
        [S$0.selectedItemColor$1]: null,
        [S$0.unselectedIconTheme$5]: null,
        [S$0.selectedIconTheme$5]: null,
        [S$0.elevation$15]: null,
        [S$0.backgroundColor$11]: null
      });
    },
    get C594() {
      return C[594] = dart.const({
        __proto__: time_picker_theme.TimePickerThemeData.prototype,
        [S.inputDecorationTheme]: null,
        [S.dayPeriodBorderSide]: null,
        [S.dayPeriodShape]: null,
        [S.hourMinuteShape]: null,
        [S.shape$2]: null,
        [S.helpTextStyle]: null,
        [S.dayPeriodTextStyle]: null,
        [S.hourMinuteTextStyle]: null,
        [S.entryModeIconColor]: null,
        [S.dialTextColor]: null,
        [S.dialBackgroundColor]: null,
        [S.dialHandColor]: null,
        [S.dayPeriodColor]: null,
        [S.dayPeriodTextColor]: null,
        [S.hourMinuteColor]: null,
        [S.hourMinuteTextColor]: null,
        [S.backgroundColor$2]: null
      });
    },
    get C595() {
      return C[595] = dart.const({
        __proto__: text_button_theme.TextButtonThemeData.prototype,
        [S.style$1]: null
      });
    },
    get C596() {
      return C[596] = dart.const({
        __proto__: elevated_button_theme.ElevatedButtonThemeData.prototype,
        [S$.style$4]: null
      });
    },
    get C597() {
      return C[597] = dart.const({
        __proto__: outlined_button_theme.OutlinedButtonThemeData.prototype,
        [S.style$2]: null
      });
    },
    get C598() {
      return C[598] = dart.const({
        __proto__: text_selection_theme.TextSelectionThemeData.prototype,
        [S.selectionHandleColor]: null,
        [S.selectionColor]: null,
        [S.cursorColor]: null
      });
    },
    get C599() {
      return C[599] = dart.const({
        __proto__: data_table_theme.DataTableThemeData.prototype,
        [S$.checkboxHorizontalMargin]: null,
        [S$.dividerThickness]: null,
        [S$.columnSpacing]: null,
        [S$.horizontalMargin]: null,
        [S$.headingTextStyle]: null,
        [S$.headingRowHeight]: null,
        [S$.headingRowColor]: null,
        [S$.dataTextStyle]: null,
        [S$.dataRowHeight]: null,
        [S$.dataRowColor]: null,
        [S$.decoration$2]: null
      });
    },
    get C600() {
      return C[600] = dart.const({
        __proto__: checkbox_theme.CheckboxThemeData.prototype,
        [S$.side$2]: null,
        [S$.shape$8]: null,
        [S$.visualDensity$4]: null,
        [S$.materialTapTargetSize$3]: null,
        [S$.splashRadius$3]: null,
        [S$.overlayColor$5]: null,
        [S$.checkColor]: null,
        [S$.fillColor$5]: null,
        [S$.mouseCursor$6]: null
      });
    },
    get C601() {
      return C[601] = dart.const({
        __proto__: radio_theme.RadioThemeData.prototype,
        [S.visualDensity$1]: null,
        [S.materialTapTargetSize$2]: null,
        [S.splashRadius$2]: null,
        [S.overlayColor$3]: null,
        [S.fillColor$1]: null,
        [S.mouseCursor$4]: null
      });
    },
    get C602() {
      return C[602] = dart.const({
        __proto__: switch_theme.SwitchThemeData.prototype,
        [S.splashRadius$1]: null,
        [S.overlayColor$1]: null,
        [S.mouseCursor$3]: null,
        [S.materialTapTargetSize$1]: null,
        [S.trackColor]: null,
        [S.thumbColor]: null
      });
    },
    get C603() {
      return C[603] = dart.const({
        __proto__: progress_indicator_theme.ProgressIndicatorThemeData.prototype,
        [S.refreshBackgroundColor]: null,
        [S.circularTrackColor]: null,
        [S.linearMinHeight]: null,
        [S.linearTrackColor]: null,
        [S.color$5]: null
      });
    },
    get C608() {
      return C[608] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4285887861.0
      });
    },
    get C609() {
      return C[609] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4288256409.0
      });
    },
    get C607() {
      return C[607] = dart.const({
        __proto__: colors$0.CupertinoDynamicColor.prototype,
        [S.Color_value]: 0,
        [S$0.CupertinoDynamicColor_darkHighContrastElevatedColor]: C[608] || CT.C608,
        [S$0.CupertinoDynamicColor_highContrastElevatedColor]: C[609] || CT.C609,
        [S$0.CupertinoDynamicColor_darkElevatedColor]: C[608] || CT.C608,
        [S$0.CupertinoDynamicColor_elevatedColor]: C[609] || CT.C609,
        [S$0.CupertinoDynamicColor_darkHighContrastColor]: C[608] || CT.C608,
        [S$0.CupertinoDynamicColor_highContrastColor]: C[609] || CT.C609,
        [S$0.CupertinoDynamicColor_darkColor]: C[608] || CT.C608,
        [S$0.CupertinoDynamicColor_color]: C[609] || CT.C609,
        [S$0.CupertinoDynamicColor__debugResolveContext]: null,
        [S$0.CupertinoDynamicColor__debugLabel]: "inactiveGray",
        [S$0.CupertinoDynamicColor__effectiveColor]: C[609] || CT.C609
      });
    },
    get C610() {
      return C[610] = dart.const({
        __proto__: colors$0.CupertinoDynamicColor.prototype,
        [S.Color_value]: 0,
        [S$0.CupertinoDynamicColor_darkHighContrastElevatedColor]: C[477] || CT.C477,
        [S$0.CupertinoDynamicColor_highContrastElevatedColor]: C[66] || CT.C66,
        [S$0.CupertinoDynamicColor_darkElevatedColor]: C[477] || CT.C477,
        [S$0.CupertinoDynamicColor_elevatedColor]: C[66] || CT.C66,
        [S$0.CupertinoDynamicColor_darkHighContrastColor]: C[477] || CT.C477,
        [S$0.CupertinoDynamicColor_highContrastColor]: C[66] || CT.C66,
        [S$0.CupertinoDynamicColor_darkColor]: C[477] || CT.C477,
        [S$0.CupertinoDynamicColor_color]: C[66] || CT.C66,
        [S$0.CupertinoDynamicColor__debugResolveContext]: null,
        [S$0.CupertinoDynamicColor__debugLabel]: "label",
        [S$0.CupertinoDynamicColor__effectiveColor]: C[66] || CT.C66
      });
    },
    get C606() {
      return C[606] = dart.const({
        __proto__: theme._CupertinoTextThemeDefaults.prototype,
        [S$0._CupertinoTextThemeDefaults_inactiveGray]: C[607] || CT.C607,
        [S$0._CupertinoTextThemeDefaults_labelColor]: C[610] || CT.C610
      });
    },
    get C612() {
      return C[612] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4280558630.0
      });
    },
    get C613() {
      return C[613] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4280032286.0
      });
    },
    get C611() {
      return C[611] = dart.const({
        __proto__: colors$0.CupertinoDynamicColor.prototype,
        [S.Color_value]: 0,
        [S$0.CupertinoDynamicColor_darkHighContrastElevatedColor]: C[612] || CT.C612,
        [S$0.CupertinoDynamicColor_highContrastElevatedColor]: C[477] || CT.C477,
        [S$0.CupertinoDynamicColor_darkElevatedColor]: C[613] || CT.C613,
        [S$0.CupertinoDynamicColor_elevatedColor]: C[477] || CT.C477,
        [S$0.CupertinoDynamicColor_darkHighContrastColor]: C[66] || CT.C66,
        [S$0.CupertinoDynamicColor_highContrastColor]: C[477] || CT.C477,
        [S$0.CupertinoDynamicColor_darkColor]: C[66] || CT.C66,
        [S$0.CupertinoDynamicColor_color]: C[477] || CT.C477,
        [S$0.CupertinoDynamicColor__debugResolveContext]: null,
        [S$0.CupertinoDynamicColor__debugLabel]: "systemBackground",
        [S$0.CupertinoDynamicColor__effectiveColor]: C[477] || CT.C477
      });
    },
    get C615() {
      return C[615] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4028439837.0
      });
    },
    get C616() {
      return C[616] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4042914297.0
      });
    },
    get C614() {
      return C[614] = dart.const({
        __proto__: colors$0.CupertinoDynamicColor.prototype,
        [S.Color_value]: 0,
        [S$0.CupertinoDynamicColor_darkHighContrastElevatedColor]: C[615] || CT.C615,
        [S$0.CupertinoDynamicColor_highContrastElevatedColor]: C[616] || CT.C616,
        [S$0.CupertinoDynamicColor_darkElevatedColor]: C[615] || CT.C615,
        [S$0.CupertinoDynamicColor_elevatedColor]: C[616] || CT.C616,
        [S$0.CupertinoDynamicColor_darkHighContrastColor]: C[615] || CT.C615,
        [S$0.CupertinoDynamicColor_highContrastColor]: C[616] || CT.C616,
        [S$0.CupertinoDynamicColor_darkColor]: C[615] || CT.C615,
        [S$0.CupertinoDynamicColor_color]: C[616] || CT.C616,
        [S$0.CupertinoDynamicColor__debugResolveContext]: null,
        [S$0.CupertinoDynamicColor__debugLabel]: null,
        [S$0.CupertinoDynamicColor__effectiveColor]: C[616] || CT.C616
      });
    },
    get C618() {
      return C[618] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4282424575.0
      });
    },
    get C619() {
      return C[619] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4278206685.0
      });
    },
    get C620() {
      return C[620] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4278879487.0
      });
    },
    get C621() {
      return C[621] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4278221567.0
      });
    },
    get C617() {
      return C[617] = dart.const({
        __proto__: colors$0.CupertinoDynamicColor.prototype,
        [S.Color_value]: 0,
        [S$0.CupertinoDynamicColor_darkHighContrastElevatedColor]: C[618] || CT.C618,
        [S$0.CupertinoDynamicColor_highContrastElevatedColor]: C[619] || CT.C619,
        [S$0.CupertinoDynamicColor_darkElevatedColor]: C[620] || CT.C620,
        [S$0.CupertinoDynamicColor_elevatedColor]: C[621] || CT.C621,
        [S$0.CupertinoDynamicColor_darkHighContrastColor]: C[618] || CT.C618,
        [S$0.CupertinoDynamicColor_highContrastColor]: C[619] || CT.C619,
        [S$0.CupertinoDynamicColor_darkColor]: C[620] || CT.C620,
        [S$0.CupertinoDynamicColor_color]: C[621] || CT.C621,
        [S$0.CupertinoDynamicColor__debugResolveContext]: null,
        [S$0.CupertinoDynamicColor__debugLabel]: "systemBlue",
        [S$0.CupertinoDynamicColor__effectiveColor]: C[621] || CT.C621
      });
    },
    get C605() {
      return C[605] = dart.const({
        __proto__: theme._CupertinoThemeDefaults.prototype,
        [S$0._CupertinoThemeDefaults_textThemeDefaults]: C[606] || CT.C606,
        [S$0._CupertinoThemeDefaults_scaffoldBackgroundColor]: C[611] || CT.C611,
        [S$0._CupertinoThemeDefaults_barBackgroundColor]: C[614] || CT.C614,
        [S$0._CupertinoThemeDefaults_primaryContrastingColor]: C[611] || CT.C611,
        [S$0._CupertinoThemeDefaults_primaryColor]: C[617] || CT.C617,
        [S$0._CupertinoThemeDefaults_brightness]: null
      });
    },
    get C604() {
      return C[604] = dart.const({
        __proto__: theme.CupertinoThemeData.prototype,
        [S$0.NoDefaultCupertinoThemeData_scaffoldBackgroundColor]: null,
        [S$0.NoDefaultCupertinoThemeData_barBackgroundColor]: null,
        [S$0.NoDefaultCupertinoThemeData_textTheme]: null,
        [S$0.NoDefaultCupertinoThemeData_primaryContrastingColor]: null,
        [S$0.NoDefaultCupertinoThemeData_primaryColor]: null,
        [S$0.NoDefaultCupertinoThemeData_brightness]: null,
        [S$0.CupertinoThemeData__defaults]: C[605] || CT.C605
      });
    },
    get C622() {
      return C[622] = dart.const({
        __proto__: theme_data.VisualDensity.prototype,
        [S$.VisualDensity_vertical]: -1,
        [S$.VisualDensity_horizontal]: -1
      });
    },
    get C623() {
      return C[623] = dart.const({
        __proto__: theme_data.VisualDensity.prototype,
        [S$.VisualDensity_vertical]: -2,
        [S$.VisualDensity_horizontal]: -2
      });
    },
    get C624() {
      return C[624] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 1723645116
      });
    },
    get C625() {
      return C[625] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 1724434632
      });
    },
    get C626() {
      return C[626] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 1087163596
      });
    },
    get C627() {
      return C[627] = dart.const({
        __proto__: box_border.BoxShape.prototype,
        [S$0._name$17]: "BoxShape.rectangle",
        index: 0
      });
    },
    get C628() {
      return C[628] = dart.const({
        __proto__: box_border.BoxShape.prototype,
        [S$0._name$17]: "BoxShape.circle",
        index: 1
      });
    },
    get C629() {
      return C[629] = dart.const({
        __proto__: semantics_event.TapSemanticEvent.prototype,
        [S$0.SemanticsEvent_type]: "tap"
      });
    },
    get C630() {
      return C[630] = dart.const({
        __proto__: semantics_event.LongPressSemanticsEvent.prototype,
        [S$0.SemanticsEvent_type]: "longPress"
      });
    },
    get C631() {
      return C[631] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_InkResponseStateWidget",
        [S._Location_column]: 12,
        [S._Location_line]: 582,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/ink_well.dart"
      });
    },
    get C632() {
      return C[632] = dart.const({
        __proto__: ink_well._HighlightType.prototype,
        [S$0._name$18]: "_HighlightType.pressed",
        index: 0
      });
    },
    get C633() {
      return C[633] = dart.const({
        __proto__: ink_well._HighlightType.prototype,
        [S$0._name$18]: "_HighlightType.hover",
        index: 1
      });
    },
    get C634() {
      return C[634] = dart.const({
        __proto__: ink_well._HighlightType.prototype,
        [S$0._name$18]: "_HighlightType.focus",
        index: 2
      });
    },
    get C635() {
      return C[635] = dart.constList([C[632] || CT.C632, C[633] || CT.C633, C[634] || CT.C634], T$._HighlightTypeL());
    },
    get C637() {
      return C[637] = dart.const({
        __proto__: material_state.MaterialState.prototype,
        [S$0._name$19]: "MaterialState.focused",
        index: 1
      });
    },
    get C636() {
      return C[636] = dart.constSet(T$.MaterialStateL(), [C[637] || CT.C637]);
    },
    get C639() {
      return C[639] = dart.const({
        __proto__: material_state.MaterialState.prototype,
        [S$0._name$19]: "MaterialState.hovered",
        index: 0
      });
    },
    get C638() {
      return C[638] = dart.constSet(T$.MaterialStateL(), [C[639] || CT.C639]);
    },
    get C640() {
      return C[640] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 50000
      });
    },
    get C642() {
      return C[642] = dart.const({
        __proto__: material_state.MaterialState.prototype,
        [S$0._name$19]: "MaterialState.pressed",
        index: 2
      });
    },
    get C641() {
      return C[641] = dart.constSet(T$.MaterialStateL(), [C[642] || CT.C642]);
    },
    get C643() {
      return C[643] = dart.const({
        __proto__: media_query.NavigationMode.prototype,
        [S$0._name$20]: "NavigationMode.traditional",
        index: 0
      });
    },
    get C644() {
      return C[644] = dart.const({
        __proto__: media_query.NavigationMode.prototype,
        [S$0._name$20]: "NavigationMode.directional",
        index: 1
      });
    },
    get C645() {
      return C[645] = dart.const({
        __proto__: focus_manager.FocusHighlightMode.prototype,
        [S$0._name$21]: "FocusHighlightMode.touch",
        index: 0
      });
    },
    get C646() {
      return C[646] = dart.const({
        __proto__: focus_manager.FocusHighlightMode.prototype,
        [S$0._name$21]: "FocusHighlightMode.traditional",
        index: 1
      });
    },
    get C647() {
      return C[647] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "GestureDetector",
        [S._Location_column]: 22,
        [S._Location_line]: 1103,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/ink_well.dart"
      });
    },
    get C648() {
      return C[648] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 20,
        [S._Location_line]: 1100,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/ink_well.dart"
      });
    },
    get C649() {
      return C[649] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "MouseRegion",
        [S._Location_column]: 18,
        [S._Location_line]: 1096,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/ink_well.dart"
      });
    },
    get C650() {
      return C[650] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Focus",
        [S._Location_column]: 16,
        [S._Location_line]: 1091,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/ink_well.dart"
      });
    },
    get C651() {
      return C[651] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Actions",
        [S._Location_column]: 14,
        [S._Location_line]: 1089,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/ink_well.dart"
      });
    },
    get C652() {
      return C[652] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ParentInkResponseProvider",
        [S._Location_column]: 12,
        [S._Location_line]: 1087,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/ink_well.dart"
      });
    },
    get C653() {
      return C[653] = dart.const({
        __proto__: decoration_image.ImageRepeat.prototype,
        [S$0._name$22]: "ImageRepeat.noRepeat",
        index: 3
      });
    },
    get C654() {
      return C[654] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 28,
        [S._Location_line]: 274,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/ink_decoration.dart"
      });
    },
    get C655() {
      return C[655] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Builder",
        [S._Location_column]: 14,
        [S._Location_line]: 283,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/ink_decoration.dart"
      });
    },
    get C656() {
      return C[656] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Padding",
        [S._Location_column]: 21,
        [S._Location_line]: 280,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/ink_decoration.dart"
      });
    },
    get C657() {
      return C[657] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 16,
        [S._Location_line]: 286,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/ink_decoration.dart"
      });
    },
    get C658() {
      return C[658] = dart.const({
        __proto__: list_tile.ListTileStyle.prototype,
        [S$1._name$23]: "ListTileStyle.list",
        index: 0
      });
    },
    get C659() {
      return C[659] = dart.const({
        __proto__: list_tile.ListTileStyle.prototype,
        [S$1._name$23]: "ListTileStyle.drawer",
        index: 1
      });
    },
    get C660() {
      return C[660] = dart.constList([C[658] || CT.C658, C[659] || CT.C659], T$.ListTileStyleL());
    },
    get C661() {
      return C[661] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ListTileTheme",
        [S._Location_column]: 16,
        [S._Location_line]: 87,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C662() {
      return C[662] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Builder",
        [S._Location_column]: 12,
        [S._Location_line]: 84,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C664() {
      return C[664] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ListTileTheme",
        [S._Location_column]: 28,
        [S._Location_line]: 175,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C666() {
      return C[666] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 49,
        [S._Location_line]: 175,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C665() {
      return C[665] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[666] || CT.C666,
        [S.Widget_key]: null,
        [S.SingleChildRenderObjectWidget_child]: null,
        [S.SizedBox_height]: null,
        [S.SizedBox_width]: null
      });
    },
    get C663() {
      return C[663] = dart.const({
        __proto__: list_tile.ListTileTheme.prototype,
        [S.Widget__location]: C[664] || CT.C664,
        [S.Widget_key]: null,
        [S$1.ProxyWidget_child]: C[665] || CT.C665,
        [S$1.enableFeedback$12]: null,
        [S$1.minLeadingWidth]: null,
        [S$1.minVerticalPadding]: null,
        [S$1.horizontalTitleGap]: null,
        [S$1.selectedTileColor]: null,
        [S$1.tileColor]: null,
        [S$1.contentPadding$3]: null,
        [S$1.textColor$3]: null,
        [S$1.iconColor]: null,
        [S$1.selectedColor$3]: null,
        [S$1.style$5]: C[658] || CT.C658,
        [S$1.shape$15]: null,
        [S$1.dense]: false
      });
    },
    get C667() {
      return C[667] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ListTileTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 180,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C668() {
      return C[668] = dart.const({
        __proto__: list_tile.ListTileControlAffinity.prototype,
        [S$1._name$23]: "ListTileControlAffinity.leading",
        index: 0
      });
    },
    get C669() {
      return C[669] = dart.const({
        __proto__: list_tile.ListTileControlAffinity.prototype,
        [S$1._name$23]: "ListTileControlAffinity.trailing",
        index: 1
      });
    },
    get C670() {
      return C[670] = dart.const({
        __proto__: list_tile.ListTileControlAffinity.prototype,
        [S$1._name$23]: "ListTileControlAffinity.platform",
        index: 2
      });
    },
    get C671() {
      return C[671] = dart.constList([C[668] || CT.C668, C[669] || CT.C669, C[670] || CT.C670], T$.ListTileControlAffinityL());
    },
    get C672() {
      return C[672] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DecoratedBox",
        [S._Location_column]: 13,
        [S._Location_line]: 997,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C673() {
      return C[673] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedDefaultTextStyle",
        [S._Location_column]: 21,
        [S._Location_line]: 1115,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C675() {
      return C[675] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 29,
        [S._Location_line]: 1129,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C674() {
      return C[674] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[675] || CT.C675,
        [S.Widget_key]: null,
        [S.SingleChildRenderObjectWidget_child]: null,
        [S.SizedBox_height]: null,
        [S.SizedBox_width]: null
      });
    },
    get C676() {
      return C[676] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedDefaultTextStyle",
        [S._Location_column]: 30,
        [S._Location_line]: 1126,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C677() {
      return C[677] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedDefaultTextStyle",
        [S._Location_column]: 22,
        [S._Location_line]: 1136,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C678() {
      return C[678] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedDefaultTextStyle",
        [S._Location_column]: 22,
        [S._Location_line]: 1145,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C679() {
      return C[679] = dart.const({
        __proto__: box_border.Border.prototype,
        [S$1.Border_left]: C[64] || CT.C64,
        [S$1.Border_bottom]: C[64] || CT.C64,
        [S$1.Border_right]: C[64] || CT.C64,
        [S$1.Border_top]: C[64] || CT.C64
      });
    },
    get C680() {
      return C[680] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ListTile",
        [S._Location_column]: 20,
        [S._Location_line]: 1192,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C681() {
      return C[681] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SafeArea",
        [S._Location_column]: 18,
        [S._Location_line]: 1188,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C682() {
      return C[682] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Ink",
        [S._Location_column]: 16,
        [S._Location_line]: 1183,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C683() {
      return C[683] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 14,
        [S._Location_line]: 1180,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C684() {
      return C[684] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "InkWell",
        [S._Location_column]: 12,
        [S._Location_line]: 1169,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C685() {
      return C[685] = dart.const({
        __proto__: list_tile._ListTileSlot.prototype,
        [S$1._name$23]: "_ListTileSlot.leading",
        index: 0
      });
    },
    get C686() {
      return C[686] = dart.const({
        __proto__: list_tile._ListTileSlot.prototype,
        [S$1._name$23]: "_ListTileSlot.title",
        index: 1
      });
    },
    get C687() {
      return C[687] = dart.const({
        __proto__: list_tile._ListTileSlot.prototype,
        [S$1._name$23]: "_ListTileSlot.subtitle",
        index: 2
      });
    },
    get C688() {
      return C[688] = dart.const({
        __proto__: list_tile._ListTileSlot.prototype,
        [S$1._name$23]: "_ListTileSlot.trailing",
        index: 3
      });
    },
    get C689() {
      return C[689] = dart.constList([C[685] || CT.C685, C[686] || CT.C686, C[687] || CT.C687, C[688] || CT.C688], T$._ListTileSlotL());
    },
    get C690() {
      return C[690] = dart.const({
        __proto__: drawer.DrawerAlignment.prototype,
        [S$1._name$24]: "DrawerAlignment.start",
        index: 0
      });
    },
    get C691() {
      return C[691] = dart.const({
        __proto__: drawer.DrawerAlignment.prototype,
        [S$1._name$24]: "DrawerAlignment.end",
        index: 1
      });
    },
    get C692() {
      return C[692] = dart.constList([C[690] || CT.C690, C[691] || CT.C691], T$.DrawerAlignmentL());
    },
    get C693() {
      return C[693] = dart.const({
        __proto__: box$.BoxConstraints.prototype,
        [S.BoxConstraints_maxHeight]: 1 / 0,
        [S.BoxConstraints_minHeight]: 1 / 0,
        [S.BoxConstraints_maxWidth]: 304,
        [S.BoxConstraints_minWidth]: 304
      });
    },
    get C694() {
      return C[694] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Material",
        [S._Location_column]: 16,
        [S._Location_line]: 196,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C695() {
      return C[695] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ConstrainedBox",
        [S._Location_column]: 14,
        [S._Location_line]: 194,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C696() {
      return C[696] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 12,
        [S._Location_line]: 189,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C697() {
      return C[697] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 20,
        [S._Location_line]: 548,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C698() {
      return C[698] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "GestureDetector",
        [S._Location_column]: 18,
        [S._Location_line]: 541,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C699() {
      return C[699] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 16,
        [S._Location_line]: 539,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C701() {
      return C[701] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 22,
        [S._Location_line]: 552,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C700() {
      return C[700] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[701] || CT.C701,
        [S.Widget_key]: null,
        [S.SingleChildRenderObjectWidget_child]: null,
        [S.SizedBox_height]: 0,
        [S.SizedBox_width]: 0
      });
    },
    get C702() {
      return C[702] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 32,
        [S._Location_line]: 590,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C703() {
      return C[703] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "MouseRegion",
        [S._Location_column]: 30,
        [S._Location_line]: 588,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C704() {
      return C[704] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 28,
        [S._Location_line]: 586,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C705() {
      return C[705] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "GestureDetector",
        [S._Location_column]: 26,
        [S._Location_line]: 584,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C706() {
      return C[706] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ExcludeSemantics",
        [S._Location_column]: 24,
        [S._Location_line]: 581,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C707() {
      return C[707] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "BlockSemantics",
        [S._Location_column]: 15,
        [S._Location_line]: 580,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C708() {
      return C[708] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FocusScope",
        [S._Location_column]: 28,
        [S._Location_line]: 604,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C709() {
      return C[709] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "RepaintBoundary",
        [S._Location_column]: 26,
        [S._Location_line]: 603,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C710() {
      return C[710] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 24,
        [S._Location_line]: 600,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C711() {
      return C[711] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 15,
        [S._Location_line]: 598,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C712() {
      return C[712] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Stack",
        [S._Location_column]: 18,
        [S._Location_line]: 578,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C713() {
      return C[713] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "RepaintBoundary",
        [S._Location_column]: 16,
        [S._Location_line]: 577,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C714() {
      return C[714] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "GestureDetector",
        [S._Location_column]: 14,
        [S._Location_line]: 569,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C715() {
      return C[715] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ListTileTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 622,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C716() {
      return C[716] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 246000
      });
    },
    get C717() {
      return C[717] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "NotificationListener",
        [S._Location_column]: 14,
        [S._Location_line]: 277,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C718() {
      return C[718] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Material",
        [S._Location_column]: 26,
        [S._Location_line]: 271,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C719() {
      return C[719] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ConstrainedBox",
        [S._Location_column]: 16,
        [S._Location_line]: 287,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C720() {
      return C[720] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 21,
        [S._Location_line]: 284,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C721() {
      return C[721] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "GestureDetector",
        [S._Location_column]: 47,
        [S._Location_line]: 294,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C722() {
      return C[722] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "BottomSheet",
        [S._Location_column]: 14,
        [S._Location_line]: 406,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C723() {
      return C[723] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "CustomSingleChildLayout",
        [S._Location_column]: 20,
        [S._Location_line]: 435,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C724() {
      return C[724] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ClipRect",
        [S._Location_column]: 18,
        [S._Location_line]: 434,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C725() {
      return C[725] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 16,
        [S._Location_line]: 429,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C726() {
      return C[726] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedBuilder",
        [S._Location_column]: 12,
        [S._Location_line]: 404,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C727() {
      return C[727] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ModalBottomSheet",
        [S._Location_column]: 18,
        [S._Location_line]: 514,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C728() {
      return C[728] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Builder",
        [S._Location_column]: 14,
        [S._Location_line]: 511,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C729() {
      return C[729] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "MediaQuery",
        [S._Location_column]: 43,
        [S._Location_line]: 508,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C730() {
      return C[730] = dart.const({
        __proto__: curves.Cubic.prototype,
        [S.Cubic_d]: 1,
        [S.Cubic_c]: 0.355,
        [S.Cubic_b]: 0.61,
        [S.Cubic_a]: 0.215
      });
    },
    get C731() {
      return C[731] = dart.const({
        __proto__: curves.Cubic.prototype,
        [S.Cubic_d]: 1,
        [S.Cubic_c]: 0.2,
        [S.Cubic_b]: 0,
        [S.Cubic_a]: 0
      });
    },
    get C732() {
      return C[732] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DividerTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 169,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/divider_theme.dart"
      });
    },
    get C733() {
      return C[733] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 16,
        [S._Location_line]: 210,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/divider.dart"
      });
    },
    get C734() {
      return C[734] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Center",
        [S._Location_column]: 14,
        [S._Location_line]: 209,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/divider.dart"
      });
    },
    get C735() {
      return C[735] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 12,
        [S._Location_line]: 207,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/divider.dart"
      });
    },
    get C736() {
      return C[736] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 16,
        [S._Location_line]: 353,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/divider.dart"
      });
    },
    get C737() {
      return C[737] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Center",
        [S._Location_column]: 14,
        [S._Location_line]: 352,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/divider.dart"
      });
    },
    get C738() {
      return C[738] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 12,
        [S._Location_line]: 350,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/divider.dart"
      });
    },
    get C739() {
      return C[739] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "MaterialBannerTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 150,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/banner_theme.dart"
      });
    },
    get C740() {
      return C[740] = dart.const({
        __proto__: banner.MaterialBannerClosedReason.prototype,
        [S$1._name$25]: "MaterialBannerClosedReason.dismiss",
        index: 0
      });
    },
    get C741() {
      return C[741] = dart.const({
        __proto__: banner.MaterialBannerClosedReason.prototype,
        [S$1._name$25]: "MaterialBannerClosedReason.swipe",
        index: 1
      });
    },
    get C742() {
      return C[742] = dart.const({
        __proto__: banner.MaterialBannerClosedReason.prototype,
        [S$1._name$25]: "MaterialBannerClosedReason.hide",
        index: 2
      });
    },
    get C743() {
      return C[743] = dart.const({
        __proto__: banner.MaterialBannerClosedReason.prototype,
        [S$1._name$25]: "MaterialBannerClosedReason.remove",
        index: 3
      });
    },
    get C744() {
      return C[744] = dart.constList([C[740] || CT.C740, C[741] || CT.C741, C[742] || CT.C742, C[743] || CT.C743], T$.MaterialBannerClosedReasonL());
    },
    get C745() {
      return C[745] = dart.const({
        __proto__: overflow_bar.OverflowBarAlignment.prototype,
        [S$1._name$26]: "OverflowBarAlignment.end",
        index: 1
      });
    },
    get C746() {
      return C[746] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "MaterialBanner",
        [S._Location_column]: 12,
        [S._Location_line]: 239,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C747() {
      return C[747] = dart.const({
        __proto__: edge_insets.EdgeInsetsDirectional.prototype,
        [S$.EdgeInsetsDirectional_bottom]: 0,
        [S$.EdgeInsetsDirectional_end]: 0,
        [S$.EdgeInsetsDirectional_top]: 2,
        [S$.EdgeInsetsDirectional_start]: 16
      });
    },
    get C748() {
      return C[748] = dart.const({
        __proto__: edge_insets.EdgeInsetsDirectional.prototype,
        [S$.EdgeInsetsDirectional_bottom]: 4,
        [S$.EdgeInsetsDirectional_end]: 16,
        [S$.EdgeInsetsDirectional_top]: 24,
        [S$.EdgeInsetsDirectional_start]: 16
      });
    },
    get C749() {
      return C[749] = dart.const({
        __proto__: box$.BoxConstraints.prototype,
        [S.BoxConstraints_maxHeight]: 1 / 0,
        [S.BoxConstraints_minHeight]: 52,
        [S.BoxConstraints_maxWidth]: 1 / 0,
        [S.BoxConstraints_minWidth]: 0
      });
    },
    get C750() {
      return C[750] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "OverflowBar",
        [S._Location_column]: 14,
        [S._Location_line]: 319,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C751() {
      return C[751] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 30,
        [S._Location_line]: 315,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C752() {
      return C[752] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Padding",
        [S._Location_column]: 19,
        [S._Location_line]: 343,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C753() {
      return C[753] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DefaultTextStyle",
        [S._Location_column]: 26,
        [S._Location_line]: 348,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C754() {
      return C[754] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Expanded",
        [S._Location_column]: 17,
        [S._Location_line]: 347,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C755() {
      return C[755] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Row",
        [S._Location_column]: 20,
        [S._Location_line]: 340,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C756() {
      return C[756] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Padding",
        [S._Location_column]: 11,
        [S._Location_line]: 338,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C758() {
      return C[758] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Divider",
        [S._Location_column]: 17,
        [S._Location_line]: 360,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C757() {
      return C[757] = dart.const({
        __proto__: divider.Divider.prototype,
        [S.Widget__location]: C[758] || CT.C758,
        [S.Widget_key]: null,
        [S$1.color$12]: null,
        [S$1.endIndent$1]: null,
        [S$1.indent$1]: null,
        [S$1.thickness$2]: null,
        [S$1.height$7]: 0
      });
    },
    get C759() {
      return C[759] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Column",
        [S._Location_column]: 14,
        [S._Location_line]: 335,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C760() {
      return C[760] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 29,
        [S._Location_line]: 333,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C761() {
      return C[761] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FadeTransition",
        [S._Location_column]: 13,
        [S._Location_line]: 384,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C762() {
      return C[762] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 22,
        [S._Location_line]: 376,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C763() {
      return C[763] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 18,
        [S._Location_line]: 397,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C764() {
      return C[764] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedBuilder",
        [S._Location_column]: 34,
        [S._Location_line]: 394,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C765() {
      return C[765] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ClipRect",
        [S._Location_column]: 14,
        [S._Location_line]: 408,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C766() {
      return C[766] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Hero",
        [S._Location_column]: 12,
        [S._Location_line]: 407,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C767() {
      return C[767] = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [S$1._name$27]: "_ScaffoldSlot.body",
        index: 0
      });
    },
    get C768() {
      return C[768] = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [S$1._name$27]: "_ScaffoldSlot.appBar",
        index: 1
      });
    },
    get C769() {
      return C[769] = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [S$1._name$27]: "_ScaffoldSlot.bodyScrim",
        index: 2
      });
    },
    get C770() {
      return C[770] = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [S$1._name$27]: "_ScaffoldSlot.bottomSheet",
        index: 3
      });
    },
    get C771() {
      return C[771] = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [S$1._name$27]: "_ScaffoldSlot.snackBar",
        index: 4
      });
    },
    get C772() {
      return C[772] = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [S$1._name$27]: "_ScaffoldSlot.materialBanner",
        index: 5
      });
    },
    get C773() {
      return C[773] = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [S$1._name$27]: "_ScaffoldSlot.persistentFooter",
        index: 6
      });
    },
    get C774() {
      return C[774] = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [S$1._name$27]: "_ScaffoldSlot.bottomNavigationBar",
        index: 7
      });
    },
    get C775() {
      return C[775] = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [S$1._name$27]: "_ScaffoldSlot.floatingActionButton",
        index: 8
      });
    },
    get C776() {
      return C[776] = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [S$1._name$27]: "_ScaffoldSlot.drawer",
        index: 9
      });
    },
    get C777() {
      return C[777] = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [S$1._name$27]: "_ScaffoldSlot.endDrawer",
        index: 10
      });
    },
    get C778() {
      return C[778] = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [S$1._name$27]: "_ScaffoldSlot.statusBar",
        index: 11
      });
    },
    get C779() {
      return C[779] = dart.constList([C[767] || CT.C767, C[768] || CT.C768, C[769] || CT.C769, C[770] || CT.C770, C[771] || CT.C771, C[772] || CT.C772, C[773] || CT.C773, C[774] || CT.C774, C[775] || CT.C775, C[776] || CT.C776, C[777] || CT.C777, C[778] || CT.C778], T$._ScaffoldSlotL());
    },
    get C780() {
      return C[780] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ScaffoldMessengerScope",
        [S._Location_column]: 12,
        [S._Location_line]: 628,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C781() {
      return C[781] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "MediaQuery",
        [S._Location_column]: 16,
        [S._Location_line]: 986,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C782() {
      return C[782] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "LayoutBuilder",
        [S._Location_column]: 12,
        [S._Location_line]: 973,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C783() {
      return C[783] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[43] || CT.C43,
        [S.Interval_end]: 0.1,
        [S.Interval_begin]: 0
      });
    },
    get C784() {
      return C[784] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FadeTransition",
        [S._Location_column]: 13,
        [S._Location_line]: 1413,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C785() {
      return C[785] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "RotationTransition",
        [S._Location_column]: 22,
        [S._Location_line]: 1420,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C786() {
      return C[786] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ScaleTransition",
        [S._Location_column]: 13,
        [S._Location_line]: 1418,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C787() {
      return C[787] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FadeTransition",
        [S._Location_column]: 20,
        [S._Location_line]: 1428,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C788() {
      return C[788] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ScaleTransition",
        [S._Location_column]: 11,
        [S._Location_line]: 1426,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C789() {
      return C[789] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "RotationTransition",
        [S._Location_column]: 20,
        [S._Location_line]: 1436,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C790() {
      return C[790] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ScaleTransition",
        [S._Location_column]: 11,
        [S._Location_line]: 1434,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C791() {
      return C[791] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Stack",
        [S._Location_column]: 12,
        [S._Location_line]: 1408,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C792() {
      return C[792] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "StatefulBuilder",
        [S._Location_column]: 22,
        [S._Location_line]: 2653,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C793() {
      return C[793] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DraggableScrollableActuator",
        [S._Location_column]: 20,
        [S._Location_line]: 2652,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C794() {
      return C[794] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "NotificationListener",
        [S._Location_column]: 18,
        [S._Location_line]: 2650,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C795() {
      return C[795] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_StandardBottomSheet",
        [S._Location_column]: 19,
        [S._Location_line]: 2738,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C796() {
      return C[796] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 300000
      });
    },
    get C797() {
      return C[797] = dart.const({
        __proto__: scaffold$.ScaffoldGeometry.prototype,
        [S$1.floatingActionButtonArea]: null,
        [S$1.bottomNavigationBarTop]: null
      });
    },
    get C798() {
      return C[798] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "MediaQuery",
        [S._Location_column]: 18,
        [S._Location_line]: 3110,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C799() {
      return C[799] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "LayoutId",
        [S._Location_column]: 9,
        [S._Location_line]: 3108,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C800() {
      return C[800] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DrawerController",
        [S._Location_column]: 9,
        [S._Location_line]: 3121,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C801() {
      return C[801] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DrawerController",
        [S._Location_column]: 9,
        [S._Location_line]: 3147,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C802() {
      return C[802] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_BodyBuilder",
        [S._Location_column]: 36,
        [S._Location_line]: 3221,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C803() {
      return C[803] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ModalBarrier",
        [S._Location_column]: 9,
        [S._Location_line]: 3236,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C804() {
      return C[804] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ConstrainedBox",
        [S._Location_column]: 9,
        [S._Location_line]: 3254,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C805() {
      return C[805] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Stack",
        [S._Location_column]: 28,
        [S._Location_line]: 3282,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C806() {
      return C[806] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "OverflowBar",
        [S._Location_column]: 24,
        [S._Location_line]: 3370,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C807() {
      return C[807] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 22,
        [S._Location_line]: 3367,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C808() {
      return C[808] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "IntrinsicHeight",
        [S._Location_column]: 20,
        [S._Location_line]: 3366,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C809() {
      return C[809] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SafeArea",
        [S._Location_column]: 18,
        [S._Location_line]: 3364,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C810() {
      return C[810] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 9,
        [S._Location_line]: 3358,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C811() {
      return C[811] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_FloatingActionButtonTransition",
        [S._Location_column]: 7,
        [S._Location_line]: 3403,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C812() {
      return C[812] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "GestureDetector",
        [S._Location_column]: 11,
        [S._Location_line]: 3422,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C813() {
      return C[813] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "CustomMultiChildLayout",
        [S._Location_column]: 20,
        [S._Location_line]: 3471,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C814() {
      return C[814] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedBuilder",
        [S._Location_column]: 18,
        [S._Location_line]: 3470,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C815() {
      return C[815] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Material",
        [S._Location_column]: 16,
        [S._Location_line]: 3468,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C816() {
      return C[816] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ScrollNotificationObserver",
        [S._Location_column]: 14,
        [S._Location_line]: 3467,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C817() {
      return C[817] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ScaffoldScope",
        [S._Location_column]: 12,
        [S._Location_line]: 3464,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C818() {
      return C[818] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "NotificationListener",
        [S._Location_column]: 15,
        [S._Location_line]: 3673,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C819() {
      return C[819] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 12,
        [S._Location_line]: 3670,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C820() {
      return C[820] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 16,
        [S._Location_line]: 3685,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C821() {
      return C[821] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "BottomSheet",
        [S._Location_column]: 9,
        [S._Location_line]: 3692,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C822() {
      return C[822] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedBuilder",
        [S._Location_column]: 12,
        [S._Location_line]: 3682,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C823() {
      return C[823] = dart.const({
        __proto__: material.MaterialType.prototype,
        [S$1._name$28]: "MaterialType.canvas",
        index: 0
      });
    },
    get C824() {
      return C[824] = dart.const({
        __proto__: material.MaterialType.prototype,
        [S$1._name$28]: "MaterialType.card",
        index: 1
      });
    },
    get C825() {
      return C[825] = dart.const({
        __proto__: material.MaterialType.prototype,
        [S$1._name$28]: "MaterialType.circle",
        index: 2
      });
    },
    get C826() {
      return C[826] = dart.const({
        __proto__: material.MaterialType.prototype,
        [S$1._name$28]: "MaterialType.button",
        index: 3
      });
    },
    get C827() {
      return C[827] = dart.const({
        __proto__: material.MaterialType.prototype,
        [S$1._name$28]: "MaterialType.transparency",
        index: 4
      });
    },
    get C828() {
      return C[828] = dart.constList([C[823] || CT.C823, C[824] || CT.C824, C[825] || CT.C825, C[826] || CT.C826, C[827] || CT.C827], T$.MaterialTypeL());
    },
    get C829() {
      return C[829] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedDefaultTextStyle",
        [S._Location_column]: 18,
        [S._Location_line]: 372,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C830() {
      return C[830] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_InkFeatures",
        [S._Location_column]: 14,
        [S._Location_line]: 384,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C831() {
      return C[831] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "NotificationListener",
        [S._Location_column]: 16,
        [S._Location_line]: 378,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C832() {
      return C[832] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedPhysicalModel",
        [S._Location_column]: 14,
        [S._Location_line]: 403,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C833() {
      return C[833] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_MaterialInterior",
        [S._Location_column]: 12,
        [S._Location_line]: 428,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C834() {
      return C[834] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ShapeBorderPaint",
        [S._Location_column]: 37,
        [S._Location_line]: 447,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C835() {
      return C[835] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ClipPath",
        [S._Location_column]: 12,
        [S._Location_line]: 454,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C836() {
      return C[836] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ShapeBorderPaint",
        [S._Location_column]: 14,
        [S._Location_line]: 792,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C837() {
      return C[837] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "PhysicalShape",
        [S._Location_column]: 12,
        [S._Location_line]: 783,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C838() {
      return C[838] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "CustomPaint",
        [S._Location_column]: 12,
        [S._Location_line]: 814,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C839() {
      return C[839] = dart.constList([31, -1, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], T$.intL());
    },
    get C840() {
      return C[840] = dart.const({
        __proto__: material_localizations.DefaultMaterialLocalizations.prototype
      });
    },
    get C841() {
      return C[841] = dart.constList(["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"], T$.StringL());
    },
    get C842() {
      return C[842] = dart.constList(["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"], T$.StringL());
    },
    get C843() {
      return C[843] = dart.constList(["S", "M", "T", "W", "T", "F", "S"], T$.StringL());
    },
    get C844() {
      return C[844] = dart.constList(["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], T$.StringL());
    },
    get C845() {
      return C[845] = dart.constList(["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], T$.StringL());
    },
    get C846() {
      return C[846] = dart.const({
        __proto__: material_localizations._MaterialLocalizationsDelegate.prototype
      });
    },
    get C847() {
      return C[847] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "IconTheme",
        [S._Location_column]: 16,
        [S._Location_line]: 125,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/theme.dart"
      });
    },
    get C848() {
      return C[848] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "CupertinoTheme",
        [S._Location_column]: 14,
        [S._Location_line]: 118,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/theme.dart"
      });
    },
    get C849() {
      return C[849] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_InheritedTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 116,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/theme.dart"
      });
    },
    get C850() {
      return C[850] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Theme",
        [S._Location_column]: 12,
        [S._Location_line]: 152,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/theme.dart"
      });
    },
    get C851() {
      return C[851] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Theme",
        [S._Location_column]: 12,
        [S._Location_line]: 229,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/theme.dart"
      });
    },
    get C852() {
      return C[852] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[116] || CT.C116,
        [S.Interval_end]: 1,
        [S.Interval_begin]: 0.25
      });
    },
    get C854() {
      return C[854] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Icon",
        [S._Location_column]: 23,
        [S._Location_line]: 914,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C855() {
      return C[855] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [S.IconData_matchTextDirection]: false,
        [S.IconData_fontPackage]: null,
        [S.IconData_fontFamily]: "MaterialIcons",
        [S.IconData_codePoint]: 58332
      });
    },
    get C853() {
      return C[853] = dart.const({
        __proto__: icon.Icon.prototype,
        [S.Widget__location]: C[854] || CT.C854,
        [S.Widget_key]: null,
        [S.Icon_textDirection]: null,
        [S.Icon_semanticLabel]: null,
        [S.Icon_color]: null,
        [S.Icon_size]: null,
        [S.Icon_icon]: C[855] || CT.C855
      });
    },
    get C856() {
      return C[856] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "IconButton",
        [S._Location_column]: 19,
        [S._Location_line]: 913,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C858() {
      return C[858] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "CloseButton",
        [S._Location_column]: 44,
        [S._Location_line]: 921,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C857() {
      return C[857] = dart.const({
        __proto__: back_button.CloseButton.prototype,
        [S.Widget__location]: C[858] || CT.C858,
        [S.Widget_key]: null,
        [S.onPressed$2]: null,
        [S.color$2]: null
      });
    },
    get C860() {
      return C[860] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "BackButton",
        [S._Location_column]: 66,
        [S._Location_line]: 921,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C859() {
      return C[859] = dart.const({
        __proto__: back_button.BackButton.prototype,
        [S.Widget__location]: C[860] || CT.C860,
        [S.Widget_key]: null,
        [S.onPressed$1]: null,
        [S.color$1]: null
      });
    },
    get C861() {
      return C[861] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ConstrainedBox",
        [S._Location_column]: 17,
        [S._Location_line]: 925,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C862() {
      return C[862] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_AppBarTitleBox",
        [S._Location_column]: 15,
        [S._Location_line]: 946,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C863() {
      return C[863] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 17,
        [S._Location_line]: 948,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C864() {
      return C[864] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DefaultTextStyle",
        [S._Location_column]: 15,
        [S._Location_line]: 955,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C865() {
      return C[865] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "MediaQuery",
        [S._Location_column]: 15,
        [S._Location_line]: 968,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C866() {
      return C[866] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Row",
        [S._Location_column]: 17,
        [S._Location_line]: 981,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C868() {
      return C[868] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Icon",
        [S._Location_column]: 21,
        [S._Location_line]: 988,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C867() {
      return C[867] = dart.const({
        __proto__: icon.Icon.prototype,
        [S.Widget__location]: C[868] || CT.C868,
        [S.Widget_key]: null,
        [S.Icon_textDirection]: null,
        [S.Icon_semanticLabel]: null,
        [S.Icon_color]: null,
        [S.Icon_size]: null,
        [S.Icon_icon]: C[855] || CT.C855
      });
    },
    get C869() {
      return C[869] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "IconButton",
        [S._Location_column]: 17,
        [S._Location_line]: 987,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C870() {
      return C[870] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "NavigationToolbar",
        [S._Location_column]: 28,
        [S._Location_line]: 1003,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C871() {
      return C[871] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DefaultTextStyle",
        [S._Location_column]: 18,
        [S._Location_line]: 1018,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C872() {
      return C[872] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "CustomSingleChildLayout",
        [S._Location_column]: 14,
        [S._Location_line]: 1014,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C873() {
      return C[873] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ClipRect",
        [S._Location_column]: 21,
        [S._Location_line]: 1013,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C874() {
      return C[874] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ConstrainedBox",
        [S._Location_column]: 20,
        [S._Location_line]: 1030,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C875() {
      return C[875] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Flexible",
        [S._Location_column]: 11,
        [S._Location_line]: 1029,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C876() {
      return C[876] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Opacity",
        [S._Location_column]: 13,
        [S._Location_line]: 1038,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C877() {
      return C[877] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Column",
        [S._Location_column]: 16,
        [S._Location_line]: 1026,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C878() {
      return C[878] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SafeArea",
        [S._Location_column]: 16,
        [S._Location_line]: 1048,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C879() {
      return C[879] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 14,
        [S._Location_line]: 1055,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C880() {
      return C[880] = dart.const({
        __proto__: semantics.OrdinalSortKey.prototype,
        [S$1.SemanticsSortKey_name]: null,
        [S$1.OrdinalSortKey_order]: 1
      });
    },
    get C881() {
      return C[881] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 11,
        [S._Location_line]: 1064,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C882() {
      return C[882] = dart.const({
        __proto__: semantics.OrdinalSortKey.prototype,
        [S$1.SemanticsSortKey_name]: null,
        [S$1.OrdinalSortKey_order]: 0
      });
    },
    get C883() {
      return C[883] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Material",
        [S._Location_column]: 20,
        [S._Location_line]: 1074,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C884() {
      return C[884] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 11,
        [S._Location_line]: 1069,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C885() {
      return C[885] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Stack",
        [S._Location_column]: 16,
        [S._Location_line]: 1061,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C886() {
      return C[886] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 18,
        [S._Location_line]: 1106,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C887() {
      return C[887] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Material",
        [S._Location_column]: 16,
        [S._Location_line]: 1097,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C888() {
      return C[888] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnnotatedRegion",
        [S._Location_column]: 14,
        [S._Location_line]: 1095,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C889() {
      return C[889] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 12,
        [S._Location_line]: 1093,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C890() {
      return C[890] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 13,
        [S._Location_line]: 1235,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C891() {
      return C[891] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AppBar",
        [S._Location_column]: 14,
        [S._Location_line]: 1229,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C892() {
      return C[892] = dart.const({
        __proto__: sliver_persistent_header$.PersistentHeaderShowOnScreenConfiguration.prototype,
        [S$1.PersistentHeaderShowOnScreenConfiguration_maxShowOnScreenExtent]: 1 / 0,
        [S$1.PersistentHeaderShowOnScreenConfiguration_minShowOnScreenExtent]: 1 / 0
      });
    },
    get C893() {
      return C[893] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SliverPersistentHeader",
        [S._Location_column]: 14,
        [S._Location_line]: 1869,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C894() {
      return C[894] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "MediaQuery",
        [S._Location_column]: 23,
        [S._Location_line]: 1866,
        [S._Location_file]: "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    }
  }, false);
  var C = Array(895).fill(void 0);
  var I = [
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/icon_button.dart",
    "package:flutter/src/material/icon_button.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/back_button.dart",
    "package:flutter/src/material/back_button.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/time.dart",
    "package:flutter/src/material/time.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/ink_ripple.dart",
    "package:flutter/src/material/ink_well.dart",
    "package:flutter/src/material/ink_ripple.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/ink_well.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/material.dart",
    "package:flutter/src/material/material.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/button_style_button.dart",
    "package:flutter/src/material/button_style_button.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/text_button.dart",
    "package:flutter/src/material/text_button.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/snack_bar.dart",
    "package:flutter/src/material/snack_bar.dart",
    "package:flutter/src/material/floating_action_button_location.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/floating_action_button_location.dart",
    "package:flutter/src/material/floating_action_button.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/floating_action_button.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart",
    "package:flutter/src/material/flexible_space_bar.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/toggle_buttons_theme.dart",
    "package:flutter/src/material/toggle_buttons_theme.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/time_picker_theme.dart",
    "package:flutter/src/material/time_picker_theme.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/text_selection_theme.dart",
    "package:flutter/src/material/text_selection_theme.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/text_button_theme.dart",
    "package:flutter/src/material/text_button_theme.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tabs.dart",
    "package:flutter/src/material/tabs.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tab_bar_theme.dart",
    "package:flutter/src/material/tab_bar_theme.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/switch_theme.dart",
    "package:flutter/src/material/switch_theme.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/snack_bar_theme.dart",
    "package:flutter/src/material/snack_bar_theme.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/slider_theme.dart",
    "package:flutter/src/material/slider_theme.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scrollbar_theme.dart",
    "package:flutter/src/material/scrollbar_theme.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/radio_theme.dart",
    "package:flutter/src/material/radio_theme.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/progress_indicator_theme.dart",
    "package:flutter/src/material/progress_indicator_theme.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/popup_menu_theme.dart",
    "package:flutter/src/material/popup_menu_theme.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart",
    "package:flutter/src/material/page_transitions_theme.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/outlined_button_theme.dart",
    "package:flutter/src/material/outlined_button_theme.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail.dart",
    "package:flutter/src/material/navigation_rail.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/navigation_rail_theme.dart",
    "package:flutter/src/material/navigation_rail_theme.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/input_decorator.dart",
    "package:flutter/src/material/input_decorator.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/ink_splash.dart",
    "package:flutter/src/material/ink_splash.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/button_style.dart",
    "package:flutter/src/material/button_style.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/elevated_button_theme.dart",
    "package:flutter/src/material/elevated_button_theme.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/dialog_theme.dart",
    "package:flutter/src/material/dialog_theme.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/data_table_theme.dart",
    "package:flutter/src/material/data_table_theme.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/chip_theme.dart",
    "package:flutter/src/material/chip_theme.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/checkbox_theme.dart",
    "package:flutter/src/material/checkbox_theme.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/card_theme.dart",
    "package:flutter/src/material/card_theme.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/raised_button.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/material_button.dart",
    "package:flutter/src/material/material_button.dart",
    "package:flutter/src/material/raised_button.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/outline_button.dart",
    "package:flutter/src/material/outline_button.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/button.dart",
    "package:flutter/src/material/button.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/flat_button.dart",
    "package:flutter/src/material/flat_button.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/color_scheme.dart",
    "package:flutter/src/material/color_scheme.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/button_theme.dart",
    "package:flutter/src/material/button_theme.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/button_bar_theme.dart",
    "package:flutter/src/material/button_bar_theme.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tooltip_theme.dart",
    "package:flutter/src/material/tooltip_theme.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/tooltip.dart",
    "package:flutter/src/material/tooltip.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart",
    "package:flutter/src/material/bottom_navigation_bar.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_navigation_bar_theme.dart",
    "package:flutter/src/material/bottom_navigation_bar_theme.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_app_bar_theme.dart",
    "package:flutter/src/material/bottom_app_bar_theme.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/theme_data.dart",
    "package:flutter/src/material/theme_data.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/ink_highlight.dart",
    "package:flutter/src/material/ink_highlight.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/feedback.dart",
    "package:flutter/src/material/feedback.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/ink_decoration.dart",
    "package:flutter/src/material/ink_decoration.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/list_tile.dart",
    "package:flutter/src/material/list_tile.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/drawer.dart",
    "package:flutter/src/material/drawer.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/bottom_sheet.dart",
    "package:flutter/src/material/bottom_sheet.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/divider_theme.dart",
    "package:flutter/src/material/divider_theme.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/divider.dart",
    "package:flutter/src/material/divider.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/banner_theme.dart",
    "package:flutter/src/material/banner_theme.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/banner.dart",
    "package:flutter/src/material/banner.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/scaffold.dart",
    "package:flutter/src/material/scaffold.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/elevation_overlay.dart",
    "package:flutter/src/material/elevation_overlay.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/debug.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/material_localizations.dart",
    "package:flutter/src/material/material_localizations.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/theme.dart",
    "package:flutter/src/material/theme.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar_theme.dart",
    "package:flutter/src/material/app_bar_theme.dart",
    "file:///C:/Users/patra/Documents/flutter/packages/flutter/lib/src/material/app_bar.dart",
    "package:flutter/src/material/app_bar.dart"
  ];
  icon_button.IconButton = class IconButton extends framework.StatelessWidget {
    get iconSize() {
      return this[S.iconSize];
    }
    set iconSize(value) {
      super.iconSize = value;
    }
    get visualDensity() {
      return this[S.visualDensity];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get padding() {
      return this[S.padding];
    }
    set padding(value) {
      super.padding = value;
    }
    get alignment() {
      return this[S.alignment];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get splashRadius() {
      return this[S.splashRadius];
    }
    set splashRadius(value) {
      super.splashRadius = value;
    }
    get icon() {
      return this[S.icon];
    }
    set icon(value) {
      super.icon = value;
    }
    get focusColor() {
      return this[S.focusColor];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[S.hoverColor];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get color() {
      return this[S.color];
    }
    set color(value) {
      super.color = value;
    }
    get splashColor() {
      return this[S.splashColor];
    }
    set splashColor(value) {
      super.splashColor = value;
    }
    get highlightColor() {
      return this[S.highlightColor];
    }
    set highlightColor(value) {
      super.highlightColor = value;
    }
    get disabledColor() {
      return this[S.disabledColor];
    }
    set disabledColor(value) {
      super.disabledColor = value;
    }
    get onPressed() {
      return this[S.onPressed];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    get mouseCursor() {
      return this[S.mouseCursor];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get focusNode() {
      return this[S.focusNode];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get autofocus() {
      return this[S.autofocus];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get tooltip() {
      return this[S.tooltip];
    }
    set tooltip(value) {
      super.tooltip = value;
    }
    get enableFeedback() {
      return this[S.enableFeedback];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get constraints() {
      return this[S.constraints];
    }
    set constraints(value) {
      super.constraints = value;
    }
    build(context) {
      let t0, t0$, t0$0, t0$1, t0$2, t0$3, t0$4, t0$5;
      if (context == null) dart.nullFailed(I[0], 329, 29, "context");
      if (!dart.test(debug$0.debugCheckHasMaterial(context))) dart.assertFailed(null, I[0], 330, 12, "debugCheckHasMaterial(context)");
      let theme = theme$.Theme.of(context);
      let currentColor = null;
      if (this.onPressed != null)
        currentColor = this.color;
      else
        currentColor = (t0 = this.disabledColor, t0 == null ? theme.disabledColor : t0);
      let effectiveVisualDensity = (t0$ = this.visualDensity, t0$ == null ? theme.visualDensity : t0$);
      let unadjustedConstraints = (t0$0 = this.constraints, t0$0 == null ? C[3] || CT.C3 : t0$0);
      let adjustedConstraints = effectiveVisualDensity.effectiveConstraints(unadjustedConstraints);
      let result = new basic.ConstrainedBox.new({constraints: adjustedConstraints, child: new basic.Padding.new({padding: this.padding, child: new basic.SizedBox.new({height: this.iconSize, width: this.iconSize, child: new basic.Align.new({alignment: this.alignment, child: icon_theme.IconTheme.merge({data: new icon_theme_data.IconThemeData.new({size: this.iconSize, color: currentColor}), child: this.icon}), $creationLocationd_0dea112b090073317d4: C[4] || CT.C4}), $creationLocationd_0dea112b090073317d4: C[5] || CT.C5}), $creationLocationd_0dea112b090073317d4: C[6] || CT.C6}), $creationLocationd_0dea112b090073317d4: C[7] || CT.C7});
      if (this.tooltip != null) {
        result = new tooltip.Tooltip.new({message: dart.nullCheck(this.tooltip), child: result, $creationLocationd_0dea112b090073317d4: C[8] || CT.C8});
      }
      return new basic.Semantics.new({button: true, enabled: this.onPressed != null, child: new ink_well.InkResponse.new({focusNode: this.focusNode, autofocus: this.autofocus, canRequestFocus: this.onPressed != null, onTap: this.onPressed, mouseCursor: this.mouseCursor, enableFeedback: this.enableFeedback, focusColor: (t0$1 = this.focusColor, t0$1 == null ? theme.focusColor : t0$1), hoverColor: (t0$2 = this.hoverColor, t0$2 == null ? theme.hoverColor : t0$2), highlightColor: (t0$3 = this.highlightColor, t0$3 == null ? theme.highlightColor : t0$3), splashColor: (t0$4 = this.splashColor, t0$4 == null ? theme.splashColor : t0$4), radius: (t0$5 = this.splashRadius, t0$5 == null ? math.max(core.double, 35, (dart.notNull(this.iconSize) + math.min(core.num, this.padding.horizontal, this.padding.vertical)) * 0.7) : t0$5), child: result, $creationLocationd_0dea112b090073317d4: C[9] || CT.C9}), $creationLocationd_0dea112b090073317d4: C[10] || CT.C10});
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[0], 399, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfWidget()).new("icon", this.icon, {showName: false}));
      properties.add(new diagnostics.StringProperty.new("tooltip", this.tooltip, {defaultValue: null, quoted: false}));
      properties.add(new (T$.ObjectFlagPropertyOfVoidTovoid()).new("onPressed", this.onPressed, {ifNull: "disabled"}));
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("disabledColor", this.disabledColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("focusColor", this.focusColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("hoverColor", this.hoverColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("highlightColor", this.highlightColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("splashColor", this.splashColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfFocusNode()).new("focusNode", this.focusNode, {defaultValue: null}));
    }
  };
  (icon_button.IconButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let iconSize = opts && 'iconSize' in opts ? opts.iconSize : 24;
    if (iconSize == null) dart.nullFailed(I[0], 144, 10, "iconSize");
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let padding = opts && 'padding' in opts ? opts.padding : C[0] || CT.C0;
    if (padding == null) dart.nullFailed(I[0], 146, 10, "padding");
    let alignment = opts && 'alignment' in opts ? opts.alignment : C[1] || CT.C1;
    if (alignment == null) dart.nullFailed(I[0], 147, 10, "alignment");
    let splashRadius = opts && 'splashRadius' in opts ? opts.splashRadius : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : C[2] || CT.C2;
    if (mouseCursor == null) dart.nullFailed(I[0], 156, 10, "mouseCursor");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[0], 158, 10, "autofocus");
    let tooltip = opts && 'tooltip' in opts ? opts.tooltip : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : true;
    if (enableFeedback == null) dart.nullFailed(I[0], 160, 10, "enableFeedback");
    let constraints = opts && 'constraints' in opts ? opts.constraints : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    if (icon == null) dart.nullFailed(I[0], 162, 19, "icon");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.iconSize] = iconSize;
    this[S.visualDensity] = visualDensity;
    this[S.padding] = padding;
    this[S.alignment] = alignment;
    this[S.splashRadius] = splashRadius;
    this[S.color] = color;
    this[S.focusColor] = focusColor;
    this[S.hoverColor] = hoverColor;
    this[S.highlightColor] = highlightColor;
    this[S.splashColor] = splashColor;
    this[S.disabledColor] = disabledColor;
    this[S.onPressed] = onPressed;
    this[S.mouseCursor] = mouseCursor;
    this[S.focusNode] = focusNode;
    this[S.autofocus] = autofocus;
    this[S.tooltip] = tooltip;
    this[S.enableFeedback] = enableFeedback;
    this[S.constraints] = constraints;
    this[S.icon] = icon;
    if (!(iconSize != null)) dart.assertFailed(null, I[0], 163, 15, "iconSize != null");
    if (!(padding != null)) dart.assertFailed(null, I[0], 164, 15, "padding != null");
    if (!(alignment != null)) dart.assertFailed(null, I[0], 165, 15, "alignment != null");
    if (!(splashRadius == null || dart.notNull(splashRadius) > 0)) dart.assertFailed(null, I[0], 166, 15, "splashRadius == null || splashRadius > 0");
    if (!(autofocus != null)) dart.assertFailed(null, I[0], 167, 15, "autofocus != null");
    if (!(icon != null)) dart.assertFailed(null, I[0], 168, 15, "icon != null");
    icon_button.IconButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = icon_button.IconButton.prototype;
  dart.addTypeTests(icon_button.IconButton);
  dart.addTypeCaches(icon_button.IconButton);
  dart.setMethodSignature(icon_button.IconButton, () => ({
    __proto__: dart.getMethods(icon_button.IconButton.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(icon_button.IconButton, I[1]);
  dart.setFieldSignature(icon_button.IconButton, () => ({
    __proto__: dart.getFields(icon_button.IconButton.__proto__),
    iconSize: dart.finalFieldType(core.double),
    visualDensity: dart.finalFieldType(dart.nullable(theme_data.VisualDensity)),
    padding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
    alignment: dart.finalFieldType(alignment.AlignmentGeometry),
    splashRadius: dart.finalFieldType(dart.nullable(core.double)),
    icon: dart.finalFieldType(framework.Widget),
    focusColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hoverColor: dart.finalFieldType(dart.nullable(ui.Color)),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    splashColor: dart.finalFieldType(dart.nullable(ui.Color)),
    highlightColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledColor: dart.finalFieldType(dart.nullable(ui.Color)),
    onPressed: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    mouseCursor: dart.finalFieldType(mouse_cursor.MouseCursor),
    focusNode: dart.finalFieldType(dart.nullable(focus_manager.FocusNode)),
    autofocus: dart.finalFieldType(core.bool),
    tooltip: dart.finalFieldType(dart.nullable(core.String)),
    enableFeedback: dart.finalFieldType(core.bool),
    constraints: dart.finalFieldType(dart.nullable(box$.BoxConstraints))
  }));
  dart.defineLazy(icon_button, {
    /*icon_button._kMinButtonSize*/get _kMinButtonSize() {
      return 48;
    }
  }, false);
  back_button.BackButtonIcon = class BackButtonIcon extends framework.StatelessWidget {
    static _getIconData(platform) {
      if (platform == null) dart.nullFailed(I[2], 31, 47, "platform");
      switch (platform) {
        case C[11] || CT.C11:
        case C[12] || CT.C12:
        case C[13] || CT.C13:
        case C[14] || CT.C14:
        {
          return icons.Icons.arrow_back;
        }
        case C[15] || CT.C15:
        case C[16] || CT.C16:
        {
          return icons.Icons.arrow_back_ios;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    build(context) {
      if (context == null) dart.nullFailed(I[2], 45, 29, "context");
      return new icon.Icon.new(back_button.BackButtonIcon._getIconData(theme$.Theme.of(context).platform), {$creationLocationd_0dea112b090073317d4: C[17] || CT.C17});
    }
  };
  (back_button.BackButtonIcon.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    back_button.BackButtonIcon.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = back_button.BackButtonIcon.prototype;
  dart.addTypeTests(back_button.BackButtonIcon);
  dart.addTypeCaches(back_button.BackButtonIcon);
  dart.setMethodSignature(back_button.BackButtonIcon, () => ({
    __proto__: dart.getMethods(back_button.BackButtonIcon.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(back_button.BackButtonIcon, I[3]);
  back_button.BackButton = class BackButton extends framework.StatelessWidget {
    get color() {
      return this[S.color$1];
    }
    set color(value) {
      super.color = value;
    }
    get onPressed() {
      return this[S.onPressed$1];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[2], 96, 29, "context");
      if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, I[2], 97, 12, "debugCheckHasMaterialLocalizations(context)");
      return new icon_button.IconButton.new({icon: C[18] || CT.C18, color: this.color, tooltip: material_localizations.MaterialLocalizations.of(context).backButtonTooltip, onPressed: dart.fn(() => {
          if (this.onPressed != null) {
            dart.nullCheck(this.onPressed)();
          } else {
            navigator$.Navigator.maybePop(T$.ObjectN(), context);
          }
        }, T$.VoidTovoid()), $creationLocationd_0dea112b090073317d4: C[20] || CT.C20});
    }
  };
  (back_button.BackButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.color$1] = color;
    this[S.onPressed$1] = onPressed;
    back_button.BackButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = back_button.BackButton.prototype;
  dart.addTypeTests(back_button.BackButton);
  dart.addTypeCaches(back_button.BackButton);
  dart.setMethodSignature(back_button.BackButton, () => ({
    __proto__: dart.getMethods(back_button.BackButton.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(back_button.BackButton, I[3]);
  dart.setFieldSignature(back_button.BackButton, () => ({
    __proto__: dart.getFields(back_button.BackButton.__proto__),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    onPressed: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [])))
  }));
  back_button.CloseButton = class CloseButton extends framework.StatelessWidget {
    get color() {
      return this[S.color$2];
    }
    set color(value) {
      super.color = value;
    }
    get onPressed() {
      return this[S.onPressed$2];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[2], 150, 29, "context");
      if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, I[2], 151, 12, "debugCheckHasMaterialLocalizations(context)");
      return new icon_button.IconButton.new({icon: C[21] || CT.C21, color: this.color, tooltip: material_localizations.MaterialLocalizations.of(context).closeButtonTooltip, onPressed: dart.fn(() => {
          if (this.onPressed != null) {
            dart.nullCheck(this.onPressed)();
          } else {
            navigator$.Navigator.maybePop(T$.ObjectN(), context);
          }
        }, T$.VoidTovoid()), $creationLocationd_0dea112b090073317d4: C[24] || CT.C24});
    }
  };
  (back_button.CloseButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.color$2] = color;
    this[S.onPressed$2] = onPressed;
    back_button.CloseButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = back_button.CloseButton.prototype;
  dart.addTypeTests(back_button.CloseButton);
  dart.addTypeCaches(back_button.CloseButton);
  dart.setMethodSignature(back_button.CloseButton, () => ({
    __proto__: dart.getMethods(back_button.CloseButton.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(back_button.CloseButton, I[3]);
  dart.setFieldSignature(back_button.CloseButton, () => ({
    __proto__: dart.getFields(back_button.CloseButton.__proto__),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    onPressed: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [])))
  }));
  time.DayPeriod = class DayPeriod extends core.Object {
    toString() {
      return this[S._name$1];
    }
  };
  (time.DayPeriod.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[4], 13, 6, "index");
    if (_name == null) dart.nullFailed(I[4], 13, 6, "_name");
    this.index = index;
    this[S._name$1] = _name;
    ;
  }).prototype = time.DayPeriod.prototype;
  dart.addTypeTests(time.DayPeriod);
  dart.addTypeCaches(time.DayPeriod);
  time.DayPeriod[dart.implements] = () => [core.Enum];
  dart.setLibraryUri(time.DayPeriod, I[5]);
  dart.setFieldSignature(time.DayPeriod, () => ({
    __proto__: dart.getFields(time.DayPeriod.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$1]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(time.DayPeriod, ['toString']);
  time.DayPeriod.am = C[25] || CT.C25;
  time.DayPeriod.pm = C[26] || CT.C26;
  time.DayPeriod.values = C[27] || CT.C27;
  time.TimeOfDay = class TimeOfDay extends core.Object {
    get hour() {
      return this[S.hour];
    }
    set hour(value) {
      super.hour = value;
    }
    get minute() {
      return this[S.minute];
    }
    set minute(value) {
      super.minute = value;
    }
    static now() {
      return new time.TimeOfDay.fromDateTime(new core.DateTime.now());
    }
    replacing(opts) {
      let t0, t0$;
      let hour = opts && 'hour' in opts ? opts.hour : null;
      let minute = opts && 'minute' in opts ? opts.minute : null;
      if (!(hour == null || dart.notNull(hour) >= 0 && dart.notNull(hour) < 24)) dart.assertFailed(null, I[4], 80, 12, "hour == null || (hour >= 0 && hour < hoursPerDay)");
      if (!(minute == null || dart.notNull(minute) >= 0 && dart.notNull(minute) < 60)) dart.assertFailed(null, I[4], 81, 12, "minute == null || (minute >= 0 && minute < minutesPerHour)");
      return new time.TimeOfDay.new({hour: (t0 = hour, t0 == null ? this.hour : t0), minute: (t0$ = minute, t0$ == null ? this.minute : t0$)});
    }
    get period() {
      return dart.notNull(this.hour) < 12 ? time.DayPeriod.am : time.DayPeriod.pm;
    }
    get hourOfPeriod() {
      return this.hour === 0 || this.hour === 12 ? 12 : dart.notNull(this.hour) - dart.notNull(this.periodOffset);
    }
    get periodOffset() {
      return this.period == time.DayPeriod.am ? 0 : 12;
    }
    format(context) {
      if (context == null) dart.nullFailed(I[4], 105, 30, "context");
      if (!dart.test(debug.debugCheckHasMediaQuery(context))) dart.assertFailed(null, I[4], 106, 12, "debugCheckHasMediaQuery(context)");
      if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, I[4], 107, 12, "debugCheckHasMaterialLocalizations(context)");
      let localizations = material_localizations.MaterialLocalizations.of(context);
      return localizations.formatTimeOfDay(this, {alwaysUse24HourFormat: media_query.MediaQuery.of(context).alwaysUse24HourFormat});
    }
    _equals(other) {
      if (other == null) return false;
      return time.TimeOfDay.is(other) && other.hour == this.hour && other.minute == this.minute;
    }
    get hashCode() {
      return ui.hashValues(this.hour, this.minute);
    }
    toString() {
      function _addLeadingZeroIfNeeded(value) {
        if (value == null) dart.nullFailed(I[4], 127, 40, "value");
        if (dart.notNull(value) < 10) return "0" + dart.str(value);
        return dart.toString(value);
      }
      dart.fn(_addLeadingZeroIfNeeded, T$.intToString());
      let hourLabel = _addLeadingZeroIfNeeded(this.hour);
      let minuteLabel = _addLeadingZeroIfNeeded(this.minute);
      return dart.str(dart.wrapType(time.TimeOfDay)) + "(" + dart.str(hourLabel) + ":" + dart.str(minuteLabel) + ")";
    }
  };
  (time.TimeOfDay.new = function(opts) {
    let hour = opts && 'hour' in opts ? opts.hour : null;
    if (hour == null) dart.nullFailed(I[4], 53, 35, "hour");
    let minute = opts && 'minute' in opts ? opts.minute : null;
    if (minute == null) dart.nullFailed(I[4], 53, 55, "minute");
    this[S.hour] = hour;
    this[S.minute] = minute;
    ;
  }).prototype = time.TimeOfDay.prototype;
  (time.TimeOfDay.fromDateTime = function(time) {
    if (time == null) dart.nullFailed(I[4], 59, 35, "time");
    this[S.hour] = time.hour;
    this[S.minute] = time.minute;
    ;
  }).prototype = time.TimeOfDay.prototype;
  dart.addTypeTests(time.TimeOfDay);
  dart.addTypeCaches(time.TimeOfDay);
  dart.setMethodSignature(time.TimeOfDay, () => ({
    __proto__: dart.getMethods(time.TimeOfDay.__proto__),
    replacing: dart.fnType(time.TimeOfDay, [], {hour: dart.nullable(core.int), minute: dart.nullable(core.int)}, {}),
    format: dart.fnType(core.String, [framework.BuildContext])
  }));
  dart.setGetterSignature(time.TimeOfDay, () => ({
    __proto__: dart.getGetters(time.TimeOfDay.__proto__),
    period: time.DayPeriod,
    hourOfPeriod: core.int,
    periodOffset: core.int
  }));
  dart.setLibraryUri(time.TimeOfDay, I[5]);
  dart.setFieldSignature(time.TimeOfDay, () => ({
    __proto__: dart.getFields(time.TimeOfDay.__proto__),
    hour: dart.finalFieldType(core.int),
    minute: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(time.TimeOfDay, ['_equals', 'toString']);
  dart.defineExtensionAccessors(time.TimeOfDay, ['hashCode']);
  dart.defineLazy(time.TimeOfDay, {
    /*time.TimeOfDay.hoursPerDay*/get hoursPerDay() {
      return 24;
    },
    /*time.TimeOfDay.hoursPerPeriod*/get hoursPerPeriod() {
      return 12;
    },
    /*time.TimeOfDay.minutesPerHour*/get minutesPerHour() {
      return 60;
    }
  }, false);
  time.RestorableTimeOfDay = class RestorableTimeOfDay extends restoration_properties.RestorableValue$(time.TimeOfDay) {
    createDefaultValue() {
      return this[S._defaultValue];
    }
    didUpdateValue(oldValue) {
      T$.TimeOfDayN().as(oldValue);
      if (!dart.test(restoration$.debugIsSerializableForRestoration(this.value.hour))) dart.assertFailed(null, I[4], 156, 12, "debugIsSerializableForRestoration(value.hour)");
      if (!dart.test(restoration$.debugIsSerializableForRestoration(this.value.minute))) dart.assertFailed(null, I[4], 157, 12, "debugIsSerializableForRestoration(value.minute)");
      this.notifyListeners();
    }
    fromPrimitives(data) {
      let timeData = T$.ListOfObjectN().as(dart.nullCheck(data));
      return new time.TimeOfDay.new({minute: core.int.as(dart.nullCheck(timeData[S.$_get](0))), hour: core.int.as(dart.nullCheck(timeData[S.$_get](1)))});
    }
    toPrimitives() {
      return T$.JSArrayOfint().of([this.value.minute, this.value.hour]);
    }
  };
  (time.RestorableTimeOfDay.new = function(defaultValue) {
    if (defaultValue == null) dart.nullFailed(I[4], 147, 33, "defaultValue");
    this[S._defaultValue] = defaultValue;
    time.RestorableTimeOfDay.__proto__.new.call(this);
    ;
  }).prototype = time.RestorableTimeOfDay.prototype;
  dart.addTypeTests(time.RestorableTimeOfDay);
  dart.addTypeCaches(time.RestorableTimeOfDay);
  dart.setMethodSignature(time.RestorableTimeOfDay, () => ({
    __proto__: dart.getMethods(time.RestorableTimeOfDay.__proto__),
    createDefaultValue: dart.fnType(time.TimeOfDay, []),
    didUpdateValue: dart.fnType(dart.void, [dart.nullable(core.Object)]),
    fromPrimitives: dart.fnType(time.TimeOfDay, [dart.nullable(core.Object)]),
    toPrimitives: dart.fnType(dart.nullable(core.Object), [])
  }));
  dart.setLibraryUri(time.RestorableTimeOfDay, I[5]);
  dart.setFieldSignature(time.RestorableTimeOfDay, () => ({
    __proto__: dart.getFields(time.RestorableTimeOfDay.__proto__),
    [S._defaultValue]: dart.finalFieldType(time.TimeOfDay)
  }));
  time.TimeOfDayFormat = class TimeOfDayFormat extends core.Object {
    toString() {
      return this[S._name$1];
    }
  };
  (time.TimeOfDayFormat.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[4], 179, 6, "index");
    if (_name == null) dart.nullFailed(I[4], 179, 6, "_name");
    this.index = index;
    this[S._name$1] = _name;
    ;
  }).prototype = time.TimeOfDayFormat.prototype;
  dart.addTypeTests(time.TimeOfDayFormat);
  dart.addTypeCaches(time.TimeOfDayFormat);
  time.TimeOfDayFormat[dart.implements] = () => [core.Enum];
  dart.setLibraryUri(time.TimeOfDayFormat, I[5]);
  dart.setFieldSignature(time.TimeOfDayFormat, () => ({
    __proto__: dart.getFields(time.TimeOfDayFormat.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$1]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(time.TimeOfDayFormat, ['toString']);
  time.TimeOfDayFormat.HH_colon_mm = C[28] || CT.C28;
  time.TimeOfDayFormat.HH_dot_mm = C[29] || CT.C29;
  time.TimeOfDayFormat.frenchCanadian = C[30] || CT.C30;
  time.TimeOfDayFormat.H_colon_mm = C[31] || CT.C31;
  time.TimeOfDayFormat.h_colon_mm_space_a = C[32] || CT.C32;
  time.TimeOfDayFormat.a_space_h_colon_mm = C[33] || CT.C33;
  time.TimeOfDayFormat.values = C[34] || CT.C34;
  time.HourFormat = class HourFormat extends core.Object {
    toString() {
      return this[S._name$1];
    }
  };
  (time.HourFormat.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[4], 227, 6, "index");
    if (_name == null) dart.nullFailed(I[4], 227, 6, "_name");
    this.index = index;
    this[S._name$1] = _name;
    ;
  }).prototype = time.HourFormat.prototype;
  dart.addTypeTests(time.HourFormat);
  dart.addTypeCaches(time.HourFormat);
  time.HourFormat[dart.implements] = () => [core.Enum];
  dart.setLibraryUri(time.HourFormat, I[5]);
  dart.setFieldSignature(time.HourFormat, () => ({
    __proto__: dart.getFields(time.HourFormat.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$1]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(time.HourFormat, ['toString']);
  time.HourFormat.HH = C[35] || CT.C35;
  time.HourFormat.H = C[36] || CT.C36;
  time.HourFormat.h = C[37] || CT.C37;
  time.HourFormat.values = C[38] || CT.C38;
  time.hourFormat = function hourFormat(opts) {
    let of = opts && 'of' in opts ? opts.of : null;
    if (of == null) dart.nullFailed(I[4], 240, 50, "of");
    switch (of) {
      case C[32] || CT.C32:
      case C[33] || CT.C33:
      {
        return time.HourFormat.h;
      }
      case C[31] || CT.C31:
      {
        return time.HourFormat.H;
      }
      case C[29] || CT.C29:
      case C[28] || CT.C28:
      case C[30] || CT.C30:
      {
        return time.HourFormat.HH;
      }
      default:
      {
        dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
      }
    }
  };
  ink_well.InteractiveInkFeatureFactory = class InteractiveInkFeatureFactory extends core.Object {};
  (ink_well.InteractiveInkFeatureFactory.new = function() {
    ;
  }).prototype = ink_well.InteractiveInkFeatureFactory.prototype;
  dart.addTypeTests(ink_well.InteractiveInkFeatureFactory);
  dart.addTypeCaches(ink_well.InteractiveInkFeatureFactory);
  dart.setLibraryUri(ink_well.InteractiveInkFeatureFactory, I[7]);
  ink_ripple._InkRippleFactory = class _InkRippleFactory extends ink_well.InteractiveInkFeatureFactory {
    create(opts) {
      let controller = opts && 'controller' in opts ? opts.controller : null;
      if (controller == null) dart.nullFailed(I[6], 43, 36, "controller");
      let referenceBox = opts && 'referenceBox' in opts ? opts.referenceBox : null;
      if (referenceBox == null) dart.nullFailed(I[6], 44, 24, "referenceBox");
      let position = opts && 'position' in opts ? opts.position : null;
      if (position == null) dart.nullFailed(I[6], 45, 21, "position");
      let color = opts && 'color' in opts ? opts.color : null;
      if (color == null) dart.nullFailed(I[6], 46, 20, "color");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (textDirection == null) dart.nullFailed(I[6], 47, 28, "textDirection");
      let containedInkWell = opts && 'containedInkWell' in opts ? opts.containedInkWell : false;
      if (containedInkWell == null) dart.nullFailed(I[6], 48, 10, "containedInkWell");
      let rectCallback = opts && 'rectCallback' in opts ? opts.rectCallback : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
      let radius = opts && 'radius' in opts ? opts.radius : null;
      let onRemoved = opts && 'onRemoved' in opts ? opts.onRemoved : null;
      return new ink_ripple.InkRipple.new({controller: controller, referenceBox: referenceBox, position: position, color: color, containedInkWell: containedInkWell, rectCallback: rectCallback, borderRadius: borderRadius, customBorder: customBorder, radius: radius, onRemoved: onRemoved, textDirection: textDirection});
    }
  };
  (ink_ripple._InkRippleFactory.new = function() {
    ink_ripple._InkRippleFactory.__proto__.new.call(this);
    ;
  }).prototype = ink_ripple._InkRippleFactory.prototype;
  dart.addTypeTests(ink_ripple._InkRippleFactory);
  dart.addTypeCaches(ink_ripple._InkRippleFactory);
  dart.setMethodSignature(ink_ripple._InkRippleFactory, () => ({
    __proto__: dart.getMethods(ink_ripple._InkRippleFactory.__proto__),
    create: dart.fnType(ink_well.InteractiveInkFeature, [], {borderRadius: dart.nullable(border_radius.BorderRadius), containedInkWell: core.bool, customBorder: dart.nullable(borders.ShapeBorder), onRemoved: dart.nullable(dart.fnType(dart.void, [])), radius: dart.nullable(core.double), rectCallback: dart.nullable(dart.fnType(ui.Rect, []))}, {color: ui.Color, controller: material.MaterialInkController, position: ui.Offset, referenceBox: box$.RenderBox, textDirection: ui.TextDirection})
  }));
  dart.setLibraryUri(ink_ripple._InkRippleFactory, I[8]);
  material.InkFeature = class InkFeature extends core.Object {
    get referenceBox() {
      return this[S.referenceBox];
    }
    set referenceBox(value) {
      super.referenceBox = value;
    }
    get onRemoved() {
      return this[S.onRemoved];
    }
    set onRemoved(value) {
      super.onRemoved = value;
    }
    get controller() {
      return this[S._controller];
    }
    dispose() {
      let t6;
      if (!!dart.test(this[S._debugDisposed])) dart.assertFailed(null, I[10], 625, 12, "!_debugDisposed");
      if (!dart.test(dart.fn(() => {
        this[S._debugDisposed] = true;
        return true;
      }, T$.VoidTobool())())) dart.assertFailed(null, I[10], 626, 12, "() {\r\n      _debugDisposed = true;\r\n      return true;\r\n    }()");
      this[S._controller][S._removeFeature](this);
      t6 = this.onRemoved;
      t6 == null ? null : t6();
    }
    [S._paint](canvas) {
      if (canvas == null) dart.nullFailed(I[10], 634, 22, "canvas");
      if (!dart.test(this.referenceBox.attached)) dart.assertFailed(null, I[10], 635, 12, "referenceBox.attached");
      if (!!dart.test(this[S._debugDisposed])) dart.assertFailed(null, I[10], 636, 12, "!_debugDisposed");
      let descendants = T$.JSArrayOfRenderObject().of([this.referenceBox]);
      let node = this.referenceBox;
      while (!dart.equals(node, this[S._controller])) {
        node = object.RenderObject.as(dart.nullCheck(node.parent));
        descendants[S.$add](node);
      }
      let transform = vector_math_64.Matrix4.identity();
      if (!(dart.notNull(descendants[S.$length]) >= 2)) dart.assertFailed(null, I[10], 646, 12, "descendants.length >= 2");
      for (let index = dart.notNull(descendants[S.$length]) - 1; index > 0; index = index - 1)
        descendants[S.$_get](index).applyPaintTransform(descendants[S.$_get](index - 1), transform);
      this.paintFeature(canvas, transform);
    }
    toString() {
      return diagnostics.describeIdentity(this);
    }
  };
  (material.InkFeature.new = function(opts) {
    let controller = opts && 'controller' in opts ? opts.controller : null;
    if (controller == null) dart.nullFailed(I[10], 600, 36, "controller");
    let referenceBox = opts && 'referenceBox' in opts ? opts.referenceBox : null;
    if (referenceBox == null) dart.nullFailed(I[10], 601, 19, "referenceBox");
    let onRemoved = opts && 'onRemoved' in opts ? opts.onRemoved : null;
    this[S._debugDisposed] = false;
    this[S.referenceBox] = referenceBox;
    this[S.onRemoved] = onRemoved;
    if (!(controller != null)) dart.assertFailed(null, I[10], 603, 15, "controller != null");
    if (!(referenceBox != null)) dart.assertFailed(null, I[10], 604, 15, "referenceBox != null");
    this[S._controller] = material._RenderInkFeatures.as(controller);
    ;
  }).prototype = material.InkFeature.prototype;
  dart.addTypeTests(material.InkFeature);
  dart.addTypeCaches(material.InkFeature);
  dart.setMethodSignature(material.InkFeature, () => ({
    __proto__: dart.getMethods(material.InkFeature.__proto__),
    dispose: dart.fnType(dart.void, []),
    [S._paint]: dart.fnType(dart.void, [ui.Canvas])
  }));
  dart.setGetterSignature(material.InkFeature, () => ({
    __proto__: dart.getGetters(material.InkFeature.__proto__),
    controller: material.MaterialInkController
  }));
  dart.setLibraryUri(material.InkFeature, I[11]);
  dart.setFieldSignature(material.InkFeature, () => ({
    __proto__: dart.getFields(material.InkFeature.__proto__),
    [S._controller]: dart.finalFieldType(material._RenderInkFeatures),
    referenceBox: dart.finalFieldType(box$.RenderBox),
    onRemoved: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    [S._debugDisposed]: dart.fieldType(core.bool)
  }));
  dart.defineExtensionMethods(material.InkFeature, ['toString']);
  ink_well.InteractiveInkFeature = class InteractiveInkFeature extends material.InkFeature {
    confirm() {
    }
    cancel() {
    }
    get color() {
      return this[S._color];
    }
    set color(value) {
      if (value == null) dart.nullFailed(I[9], 62, 19, "value");
      if (dart.equals(value, this[S._color])) return;
      this[S._color] = value;
      this.controller.markNeedsPaint();
    }
    paintInkCircle(opts) {
      let canvas = opts && 'canvas' in opts ? opts.canvas : null;
      if (canvas == null) dart.nullFailed(I[9], 101, 21, "canvas");
      let transform = opts && 'transform' in opts ? opts.transform : null;
      if (transform == null) dart.nullFailed(I[9], 102, 22, "transform");
      let paint = opts && 'paint' in opts ? opts.paint : null;
      if (paint == null) dart.nullFailed(I[9], 103, 20, "paint");
      let center = opts && 'center' in opts ? opts.center : null;
      if (center == null) dart.nullFailed(I[9], 104, 21, "center");
      let radius = opts && 'radius' in opts ? opts.radius : null;
      if (radius == null) dart.nullFailed(I[9], 105, 21, "radius");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : C[39] || CT.C39;
      if (borderRadius == null) dart.nullFailed(I[9], 108, 18, "borderRadius");
      let clipCallback = opts && 'clipCallback' in opts ? opts.clipCallback : null;
      if (!(canvas != null)) dart.assertFailed(null, I[9], 111, 12, "canvas != null");
      if (!(transform != null)) dart.assertFailed(null, I[9], 112, 12, "transform != null");
      if (!(paint != null)) dart.assertFailed(null, I[9], 113, 12, "paint != null");
      if (!(center != null)) dart.assertFailed(null, I[9], 114, 12, "center != null");
      if (!(radius != null)) dart.assertFailed(null, I[9], 115, 12, "radius != null");
      if (!(borderRadius != null)) dart.assertFailed(null, I[9], 116, 12, "borderRadius != null");
      let originOffset = matrix_utils.MatrixUtils.getAsTranslation(transform);
      canvas.save();
      if (originOffset == null) {
        canvas.transform(transform.storage);
      } else {
        canvas.translate(originOffset.dx, originOffset.dy);
      }
      if (clipCallback != null) {
        let rect = clipCallback();
        if (customBorder != null) {
          canvas.clipPath(customBorder.getOuterPath(rect, {textDirection: textDirection}));
        } else if (!dart.equals(borderRadius, border_radius.BorderRadius.zero)) {
          canvas.clipRRect(new ui.RRect.fromRectAndCorners(rect, {topLeft: borderRadius.topLeft, topRight: borderRadius.topRight, bottomLeft: borderRadius.bottomLeft, bottomRight: borderRadius.bottomRight}));
        } else {
          canvas.clipRect(rect);
        }
      }
      canvas.drawCircle(center, radius, paint);
      canvas.restore();
    }
  };
  (ink_well.InteractiveInkFeature.new = function(opts) {
    let controller = opts && 'controller' in opts ? opts.controller : null;
    if (controller == null) dart.nullFailed(I[9], 38, 36, "controller");
    let referenceBox = opts && 'referenceBox' in opts ? opts.referenceBox : null;
    if (referenceBox == null) dart.nullFailed(I[9], 39, 24, "referenceBox");
    let color = opts && 'color' in opts ? opts.color : null;
    if (color == null) dart.nullFailed(I[9], 40, 20, "color");
    let onRemoved = opts && 'onRemoved' in opts ? opts.onRemoved : null;
    if (!(controller != null)) dart.assertFailed(null, I[9], 42, 15, "controller != null");
    if (!(referenceBox != null)) dart.assertFailed(null, I[9], 43, 15, "referenceBox != null");
    this[S._color] = color;
    ink_well.InteractiveInkFeature.__proto__.new.call(this, {controller: controller, referenceBox: referenceBox, onRemoved: onRemoved});
    ;
  }).prototype = ink_well.InteractiveInkFeature.prototype;
  dart.addTypeTests(ink_well.InteractiveInkFeature);
  dart.addTypeCaches(ink_well.InteractiveInkFeature);
  dart.setMethodSignature(ink_well.InteractiveInkFeature, () => ({
    __proto__: dart.getMethods(ink_well.InteractiveInkFeature.__proto__),
    confirm: dart.fnType(dart.void, []),
    cancel: dart.fnType(dart.void, []),
    paintInkCircle: dart.fnType(dart.void, [], {borderRadius: border_radius.BorderRadius, clipCallback: dart.nullable(dart.fnType(ui.Rect, [])), customBorder: dart.nullable(borders.ShapeBorder), textDirection: dart.nullable(ui.TextDirection)}, {canvas: ui.Canvas, center: ui.Offset, paint: ui.Paint, radius: core.double, transform: vector_math_64.Matrix4})
  }));
  dart.setGetterSignature(ink_well.InteractiveInkFeature, () => ({
    __proto__: dart.getGetters(ink_well.InteractiveInkFeature.__proto__),
    color: ui.Color
  }));
  dart.setSetterSignature(ink_well.InteractiveInkFeature, () => ({
    __proto__: dart.getSetters(ink_well.InteractiveInkFeature.__proto__),
    color: ui.Color
  }));
  dart.setLibraryUri(ink_well.InteractiveInkFeature, I[7]);
  dart.setFieldSignature(ink_well.InteractiveInkFeature, () => ({
    __proto__: dart.getFields(ink_well.InteractiveInkFeature.__proto__),
    [S._color]: dart.fieldType(ui.Color)
  }));
  ink_ripple.InkRipple = class InkRipple extends ink_well.InteractiveInkFeature {
    get [S._radius]() {
      let t0;
      return dart.test(this[S.__InkRipple__radius_isSet]) ? (t0 = this[S.__InkRipple__radius], t0) : dart.throw(new _internal.LateError.fieldNI("_radius"));
    }
    set [S._radius](t0) {
      if (t0 == null) dart.nullFailed(I[6], 177, 26, "null");
      this[S.__InkRipple__radius_isSet] = true;
      this[S.__InkRipple__radius] = t0;
    }
    get [S._radiusController]() {
      let t1;
      return dart.test(this[S.__InkRipple__radiusController_isSet]) ? (t1 = this[S.__InkRipple__radiusController], t1) : dart.throw(new _internal.LateError.fieldNI("_radiusController"));
    }
    set [S._radiusController](t1) {
      if (t1 == null) dart.nullFailed(I[6], 178, 28, "null");
      this[S.__InkRipple__radiusController_isSet] = true;
      this[S.__InkRipple__radiusController] = t1;
    }
    get [S._fadeIn]() {
      let t2;
      return dart.test(this[S.__InkRipple__fadeIn_isSet]) ? (t2 = this[S.__InkRipple__fadeIn], t2) : dart.throw(new _internal.LateError.fieldNI("_fadeIn"));
    }
    set [S._fadeIn](t2) {
      if (t2 == null) dart.nullFailed(I[6], 180, 23, "null");
      this[S.__InkRipple__fadeIn_isSet] = true;
      this[S.__InkRipple__fadeIn] = t2;
    }
    get [S._fadeInController]() {
      let t3;
      return dart.test(this[S.__InkRipple__fadeInController_isSet]) ? (t3 = this[S.__InkRipple__fadeInController], t3) : dart.throw(new _internal.LateError.fieldNI("_fadeInController"));
    }
    set [S._fadeInController](t3) {
      if (t3 == null) dart.nullFailed(I[6], 181, 28, "null");
      this[S.__InkRipple__fadeInController_isSet] = true;
      this[S.__InkRipple__fadeInController] = t3;
    }
    get [S._fadeOut]() {
      let t4;
      return dart.test(this[S.__InkRipple__fadeOut_isSet]) ? (t4 = this[S.__InkRipple__fadeOut], t4) : dart.throw(new _internal.LateError.fieldNI("_fadeOut"));
    }
    set [S._fadeOut](t4) {
      if (t4 == null) dart.nullFailed(I[6], 183, 23, "null");
      this[S.__InkRipple__fadeOut_isSet] = true;
      this[S.__InkRipple__fadeOut] = t4;
    }
    get [S._fadeOutController]() {
      let t5;
      return dart.test(this[S.__InkRipple__fadeOutController_isSet]) ? (t5 = this[S.__InkRipple__fadeOutController], t5) : dart.throw(new _internal.LateError.fieldNI("_fadeOutController"));
    }
    set [S._fadeOutController](t5) {
      if (t5 == null) dart.nullFailed(I[6], 184, 28, "null");
      this[S.__InkRipple__fadeOutController_isSet] = true;
      this[S.__InkRipple__fadeOutController] = t5;
    }
    confirm() {
      let t6;
      t6 = this[S._radiusController];
      (() => {
        t6.duration = ink_ripple._kRadiusDuration;
        t6.forward();
        return t6;
      })();
      this[S._fadeInController].forward();
      this[S._fadeOutController].animateTo(1.0, {duration: ink_ripple._kFadeOutDuration});
    }
    cancel() {
      this[S._fadeInController].stop();
      let fadeOutValue = 1.0 - dart.notNull(this[S._fadeInController].value);
      this[S._fadeOutController].value = fadeOutValue;
      if (fadeOutValue < 1.0) this[S._fadeOutController].animateTo(1.0, {duration: ink_ripple._kCancelDuration});
    }
    [S._handleAlphaStatusChanged](status) {
      if (status == null) dart.nullFailed(I[6], 215, 50, "status");
      if (status == animation.AnimationStatus.completed) this.dispose();
    }
    dispose() {
      this[S._radiusController].dispose();
      this[S._fadeInController].dispose();
      this[S._fadeOutController].dispose();
      super.dispose();
    }
    paintFeature(canvas, transform) {
      let t6;
      if (canvas == null) dart.nullFailed(I[6], 229, 28, "canvas");
      if (transform == null) dart.nullFailed(I[6], 229, 44, "transform");
      let alpha = dart.test(this[S._fadeInController].isAnimating) ? this[S._fadeIn].value : this[S._fadeOut].value;
      let paint = (t6 = ui.Paint.new(), (() => {
        t6.color = this.color.withAlpha(alpha);
        return t6;
      })());
      let center = dart.nullCheck(ui.Offset.lerp(this[S._position], this.referenceBox.size.center(ui.Offset.zero), curves.Curves.ease.transform(this[S._radiusController].value)));
      this.paintInkCircle({canvas: canvas, transform: transform, paint: paint, center: center, textDirection: this[S._textDirection], radius: this[S._radius].value, customBorder: this[S._customBorder], borderRadius: this[S._borderRadius], clipCallback: this[S._clipCallback]});
    }
  };
  (ink_ripple.InkRipple.new = function(opts) {
    let t0, t0$, t0$0, t0$1, t0$2;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    if (controller == null) dart.nullFailed(I[6], 110, 36, "controller");
    let referenceBox = opts && 'referenceBox' in opts ? opts.referenceBox : null;
    if (referenceBox == null) dart.nullFailed(I[6], 111, 24, "referenceBox");
    let position = opts && 'position' in opts ? opts.position : null;
    if (position == null) dart.nullFailed(I[6], 112, 21, "position");
    let color = opts && 'color' in opts ? opts.color : null;
    if (color == null) dart.nullFailed(I[6], 113, 20, "color");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    if (textDirection == null) dart.nullFailed(I[6], 114, 28, "textDirection");
    let containedInkWell = opts && 'containedInkWell' in opts ? opts.containedInkWell : false;
    if (containedInkWell == null) dart.nullFailed(I[6], 115, 10, "containedInkWell");
    let rectCallback = opts && 'rectCallback' in opts ? opts.rectCallback : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let onRemoved = opts && 'onRemoved' in opts ? opts.onRemoved : null;
    this[S.__InkRipple__radius] = null;
    this[S.__InkRipple__radius_isSet] = false;
    this[S.__InkRipple__radiusController] = null;
    this[S.__InkRipple__radiusController_isSet] = false;
    this[S.__InkRipple__fadeIn] = null;
    this[S.__InkRipple__fadeIn_isSet] = false;
    this[S.__InkRipple__fadeInController] = null;
    this[S.__InkRipple__fadeInController_isSet] = false;
    this[S.__InkRipple__fadeOut] = null;
    this[S.__InkRipple__fadeOut_isSet] = false;
    this[S.__InkRipple__fadeOutController] = null;
    this[S.__InkRipple__fadeOutController_isSet] = false;
    if (!(color != null)) dart.assertFailed(null, I[6], 121, 15, "color != null");
    if (!(position != null)) dart.assertFailed(null, I[6], 122, 15, "position != null");
    if (!(textDirection != null)) dart.assertFailed(null, I[6], 123, 15, "textDirection != null");
    this[S._position] = position;
    this[S._borderRadius] = (t0 = borderRadius, t0 == null ? border_radius.BorderRadius.zero : t0);
    this[S._customBorder] = customBorder;
    this[S._textDirection] = textDirection;
    this[S._targetRadius] = (t0$ = radius, t0$ == null ? ink_ripple._getTargetRadius(referenceBox, containedInkWell, rectCallback, position) : t0$);
    this[S._clipCallback] = ink_ripple._getClipCallback(referenceBox, containedInkWell, rectCallback);
    ink_ripple.InkRipple.__proto__.new.call(this, {controller: controller, referenceBox: referenceBox, color: color, onRemoved: onRemoved});
    if (!(this[S._borderRadius] != null)) dart.assertFailed(null, I[6], 131, 12, "_borderRadius != null");
    this[S._fadeInController] = (t0$0 = new animation_controller.AnimationController.new({duration: ink_ripple._kFadeInDuration, vsync: controller.vsync}), (() => {
      t0$0.addListener(dart.bind(controller, 'markNeedsPaint'));
      t0$0.forward();
      return t0$0;
    })());
    this[S._fadeIn] = this[S._fadeInController].drive(core.int, new tween.IntTween.new({begin: 0, end: color.alpha}));
    this[S._radiusController] = (t0$1 = new animation_controller.AnimationController.new({duration: ink_ripple._kUnconfirmedRippleDuration, vsync: controller.vsync}), (() => {
      t0$1.addListener(dart.bind(controller, 'markNeedsPaint'));
      t0$1.forward();
      return t0$1;
    })());
    this[S._radius] = this[S._radiusController].drive(core.double, new (T$.TweenOfdouble()).new({begin: dart.notNull(this[S._targetRadius]) * 0.3, end: dart.notNull(this[S._targetRadius]) + 5.0}).chain(ink_ripple.InkRipple._easeCurveTween));
    this[S._fadeOutController] = (t0$2 = new animation_controller.AnimationController.new({duration: ink_ripple._kFadeOutDuration, vsync: controller.vsync}), (() => {
      t0$2.addListener(dart.bind(controller, 'markNeedsPaint'));
      t0$2.addStatusListener(dart.bind(this, S._handleAlphaStatusChanged));
      return t0$2;
    })());
    this[S._fadeOut] = this[S._fadeOutController].drive(core.int, new tween.IntTween.new({begin: color.alpha, end: 0}).chain(ink_ripple.InkRipple._fadeOutIntervalTween));
    controller.addInkFeature(this);
  }).prototype = ink_ripple.InkRipple.prototype;
  dart.addTypeTests(ink_ripple.InkRipple);
  dart.addTypeCaches(ink_ripple.InkRipple);
  dart.setMethodSignature(ink_ripple.InkRipple, () => ({
    __proto__: dart.getMethods(ink_ripple.InkRipple.__proto__),
    [S._handleAlphaStatusChanged]: dart.fnType(dart.void, [animation.AnimationStatus]),
    paintFeature: dart.fnType(dart.void, [ui.Canvas, vector_math_64.Matrix4])
  }));
  dart.setGetterSignature(ink_ripple.InkRipple, () => ({
    __proto__: dart.getGetters(ink_ripple.InkRipple.__proto__),
    [S._radius]: animation.Animation$(core.double),
    [S._radiusController]: animation_controller.AnimationController,
    [S._fadeIn]: animation.Animation$(core.int),
    [S._fadeInController]: animation_controller.AnimationController,
    [S._fadeOut]: animation.Animation$(core.int),
    [S._fadeOutController]: animation_controller.AnimationController
  }));
  dart.setSetterSignature(ink_ripple.InkRipple, () => ({
    __proto__: dart.getSetters(ink_ripple.InkRipple.__proto__),
    [S._radius]: animation.Animation$(core.double),
    [S._radiusController]: animation_controller.AnimationController,
    [S._fadeIn]: animation.Animation$(core.int),
    [S._fadeInController]: animation_controller.AnimationController,
    [S._fadeOut]: animation.Animation$(core.int),
    [S._fadeOutController]: animation_controller.AnimationController
  }));
  dart.setLibraryUri(ink_ripple.InkRipple, I[8]);
  dart.setFieldSignature(ink_ripple.InkRipple, () => ({
    __proto__: dart.getFields(ink_ripple.InkRipple.__proto__),
    [S._position]: dart.finalFieldType(ui.Offset),
    [S._borderRadius]: dart.finalFieldType(border_radius.BorderRadius),
    [S._customBorder]: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    [S._targetRadius]: dart.finalFieldType(core.double),
    [S._clipCallback]: dart.finalFieldType(dart.nullable(dart.fnType(ui.Rect, []))),
    [S._textDirection]: dart.finalFieldType(ui.TextDirection),
    [S.__InkRipple__radius]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
    [S.__InkRipple__radius_isSet]: dart.fieldType(core.bool),
    [S.__InkRipple__radiusController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S.__InkRipple__radiusController_isSet]: dart.fieldType(core.bool),
    [S.__InkRipple__fadeIn]: dart.fieldType(dart.nullable(animation.Animation$(core.int))),
    [S.__InkRipple__fadeIn_isSet]: dart.fieldType(core.bool),
    [S.__InkRipple__fadeInController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S.__InkRipple__fadeInController_isSet]: dart.fieldType(core.bool),
    [S.__InkRipple__fadeOut]: dart.fieldType(dart.nullable(animation.Animation$(core.int))),
    [S.__InkRipple__fadeOut_isSet]: dart.fieldType(core.bool),
    [S.__InkRipple__fadeOutController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S.__InkRipple__fadeOutController_isSet]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(ink_ripple.InkRipple, {
    /*ink_ripple.InkRipple.splashFactory*/get splashFactory() {
      return C[41] || CT.C41;
    },
    /*ink_ripple.InkRipple._easeCurveTween*/get _easeCurveTween() {
      return new tween.CurveTween.new({curve: curves.Curves.ease});
    },
    /*ink_ripple.InkRipple._fadeOutIntervalTween*/get _fadeOutIntervalTween() {
      return new tween.CurveTween.new({curve: C[42] || CT.C42});
    }
  }, false);
  ink_ripple._getClipCallback = function _getClipCallback(referenceBox, containedInkWell, rectCallback) {
    if (referenceBox == null) dart.nullFailed(I[6], 21, 42, "referenceBox");
    if (containedInkWell == null) dart.nullFailed(I[6], 21, 61, "containedInkWell");
    if (rectCallback != null) {
      if (!dart.test(containedInkWell)) dart.assertFailed(null, I[6], 23, 12, "containedInkWell");
      return rectCallback;
    }
    if (dart.test(containedInkWell)) return dart.fn(() => ui.Offset.zero['&'](referenceBox.size), T$.VoidToRect());
    return null;
  };
  ink_ripple._getTargetRadius = function _getTargetRadius(referenceBox, containedInkWell, rectCallback, position) {
    if (referenceBox == null) dart.nullFailed(I[6], 31, 35, "referenceBox");
    if (containedInkWell == null) dart.nullFailed(I[6], 31, 54, "containedInkWell");
    if (position == null) dart.nullFailed(I[6], 31, 107, "position");
    let size = rectCallback != null ? rectCallback().size : referenceBox.size;
    let d1 = size.bottomRight(ui.Offset.zero).distance;
    let d2 = size.topRight(ui.Offset.zero)['-'](size.bottomLeft(ui.Offset.zero)).distance;
    return math.max(core.double, d1, d2) / 2.0;
  };
  dart.defineLazy(ink_ripple, {
    /*ink_ripple._kUnconfirmedRippleDuration*/get _kUnconfirmedRippleDuration() {
      return C[44] || CT.C44;
    },
    /*ink_ripple._kFadeInDuration*/get _kFadeInDuration() {
      return C[45] || CT.C45;
    },
    /*ink_ripple._kRadiusDuration*/get _kRadiusDuration() {
      return C[46] || CT.C46;
    },
    /*ink_ripple._kFadeOutDuration*/get _kFadeOutDuration() {
      return C[47] || CT.C47;
    },
    /*ink_ripple._kCancelDuration*/get _kCancelDuration() {
      return C[45] || CT.C45;
    },
    /*ink_ripple._kFadeOutIntervalStart*/get _kFadeOutIntervalStart() {
      return 0.6;
    }
  }, false);
  button_style_button.ButtonStyleButton = class ButtonStyleButton extends framework.StatefulWidget {
    get onPressed() {
      return this[S.onPressed$3];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    get onLongPress() {
      return this[S.onLongPress];
    }
    set onLongPress(value) {
      super.onLongPress = value;
    }
    get style() {
      return this[S.style];
    }
    set style(value) {
      super.style = value;
    }
    get clipBehavior() {
      return this[S.clipBehavior];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get focusNode() {
      return this[S.focusNode$1];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get autofocus() {
      return this[S.autofocus$1];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get child() {
      return this[S.child];
    }
    set child(value) {
      super.child = value;
    }
    get enabled() {
      return this.onPressed != null || this.onLongPress != null;
    }
    createState() {
      return new button_style_button._ButtonStyleState.new();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[12], 130, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new diagnostics.FlagProperty.new("enabled", {value: this.enabled, ifFalse: "disabled"}));
      properties.add(new (T$.DiagnosticsPropertyOfButtonStyle()).new("style", this.style, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfFocusNode()).new("focusNode", this.focusNode, {defaultValue: null}));
    }
    static allOrNull(T, value) {
      return value == null ? null : material_state.MaterialStateProperty.all(T, value);
    }
    static scaledPadding(geometry1x, geometry2x, geometry3x, textScaleFactor) {
      if (geometry1x == null) dart.nullFailed(I[12], 151, 24, "geometry1x");
      if (geometry2x == null) dart.nullFailed(I[12], 152, 24, "geometry2x");
      if (geometry3x == null) dart.nullFailed(I[12], 153, 24, "geometry3x");
      if (textScaleFactor == null) dart.nullFailed(I[12], 154, 12, "textScaleFactor");
      if (!(geometry1x != null)) dart.assertFailed(null, I[12], 156, 12, "geometry1x != null");
      if (!(geometry2x != null)) dart.assertFailed(null, I[12], 157, 12, "geometry2x != null");
      if (!(geometry3x != null)) dart.assertFailed(null, I[12], 158, 12, "geometry3x != null");
      if (!(textScaleFactor != null)) dart.assertFailed(null, I[12], 159, 12, "textScaleFactor != null");
      if (dart.notNull(textScaleFactor) <= 1) {
        return geometry1x;
      } else if (dart.notNull(textScaleFactor) >= 3) {
        return geometry3x;
      } else if (dart.notNull(textScaleFactor) <= 2) {
        return dart.nullCheck(edge_insets.EdgeInsetsGeometry.lerp(geometry1x, geometry2x, dart.notNull(textScaleFactor) - 1));
      }
      return dart.nullCheck(edge_insets.EdgeInsetsGeometry.lerp(geometry2x, geometry3x, dart.notNull(textScaleFactor) - 2));
    }
  };
  (button_style_button.ButtonStyleButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : null;
    if (autofocus == null) dart.nullFailed(I[12], 38, 19, "autofocus");
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
    if (clipBehavior == null) dart.nullFailed(I[12], 39, 19, "clipBehavior");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.onPressed$3] = onPressed;
    this[S.onLongPress] = onLongPress;
    this[S.style] = style;
    this[S.focusNode$1] = focusNode;
    this[S.autofocus$1] = autofocus;
    this[S.clipBehavior] = clipBehavior;
    this[S.child] = child;
    if (!(autofocus != null)) dart.assertFailed(null, I[12], 41, 15, "autofocus != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, I[12], 42, 15, "clipBehavior != null");
    button_style_button.ButtonStyleButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = button_style_button.ButtonStyleButton.prototype;
  dart.addTypeTests(button_style_button.ButtonStyleButton);
  dart.addTypeCaches(button_style_button.ButtonStyleButton);
  dart.setMethodSignature(button_style_button.ButtonStyleButton, () => ({
    __proto__: dart.getMethods(button_style_button.ButtonStyleButton.__proto__),
    createState: dart.fnType(framework.State$(button_style_button.ButtonStyleButton), [])
  }));
  dart.setGetterSignature(button_style_button.ButtonStyleButton, () => ({
    __proto__: dart.getGetters(button_style_button.ButtonStyleButton.__proto__),
    enabled: core.bool
  }));
  dart.setLibraryUri(button_style_button.ButtonStyleButton, I[13]);
  dart.setFieldSignature(button_style_button.ButtonStyleButton, () => ({
    __proto__: dart.getFields(button_style_button.ButtonStyleButton.__proto__),
    onPressed: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onLongPress: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    style: dart.finalFieldType(dart.nullable(button_style.ButtonStyle)),
    clipBehavior: dart.finalFieldType(ui.Clip),
    focusNode: dart.finalFieldType(dart.nullable(focus_manager.FocusNode)),
    autofocus: dart.finalFieldType(core.bool),
    child: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  const State_MaterialStateMixin$36 = class State_MaterialStateMixin extends framework.State$(button_style_button.ButtonStyleButton) {};
  (State_MaterialStateMixin$36.new = function() {
    material_state_mixin.MaterialStateMixin$(button_style_button.ButtonStyleButton)[dart.mixinNew].call(this);
    State_MaterialStateMixin$36.__proto__.new.call(this);
  }).prototype = State_MaterialStateMixin$36.prototype;
  dart.applyMixin(State_MaterialStateMixin$36, material_state_mixin.MaterialStateMixin$(button_style_button.ButtonStyleButton));
  const State_TickerProviderStateMixin$36 = class State_TickerProviderStateMixin extends State_MaterialStateMixin$36 {};
  (State_TickerProviderStateMixin$36.new = function() {
    ticker_provider.TickerProviderStateMixin$(button_style_button.ButtonStyleButton)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36, ticker_provider.TickerProviderStateMixin$(button_style_button.ButtonStyleButton));
  button_style_button._ButtonStyleState = class _ButtonStyleState extends State_TickerProviderStateMixin$36 {
    initState() {
      super.initState();
      this.setMaterialState(material_state.MaterialState.disabled, !dart.test(this.widget.enabled));
    }
    dispose() {
      let t6;
      t6 = this[S._controller$1];
      t6 == null ? null : t6.dispose();
      super.dispose();
    }
    didUpdateWidget(oldWidget) {
      button_style_button.ButtonStyleButton.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[12], 198, 42, "oldWidget");
      super.didUpdateWidget(oldWidget);
      this.setMaterialState(material_state.MaterialState.disabled, !dart.test(this.widget.enabled));
      if (dart.test(this.isDisabled) && dart.test(this.isPressed)) {
        this.removeMaterialState(material_state.MaterialState.pressed);
      }
    }
    build(context) {
      let t6, t6$, t6$0, t6$1;
      if (context == null) dart.nullFailed(I[12], 211, 29, "context");
      let widgetStyle = this.widget.style;
      let themeStyle = this.widget.themeStyleOf(context);
      let defaultStyle = this.widget.defaultStyleOf(context);
      if (!(defaultStyle != null)) dart.assertFailed(null, I[12], 215, 12, "defaultStyle != null");
      function effectiveValue(T, getProperty) {
        let t6, t6$;
        if (getProperty == null) dart.nullFailed(I[12], 217, 58, "getProperty");
        let widgetValue = getProperty(widgetStyle);
        let themeValue = getProperty(themeStyle);
        let defaultValue = getProperty(defaultStyle);
        t6$ = (t6 = widgetValue, t6 == null ? themeValue : t6);
        return t6$ == null ? defaultValue : t6$;
      }
      dart.fn(effectiveValue, T$.FnToTN());
      const resolve = (T, getProperty) => {
        if (getProperty == null) dart.nullFailed(I[12], 224, 74, "getProperty");
        return effectiveValue(T, dart.fn(style => {
          let t6;
          t6 = getProperty(style);
          return t6 == null ? null : t6.resolve(this.materialStates);
        }, dart.fnType(dart.nullable(T), [T$.ButtonStyleN()])));
      };
      dart.fn(resolve, T$.FnToTN$1());
      let resolvedElevation = resolve(T$.doubleN(), dart.fn(style => {
        let t6;
        t6 = style;
        return t6 == null ? null : t6.elevation;
      }, T$.ButtonStyleNToMaterialStatePropertyNOfdoubleN()));
      let resolvedTextStyle = resolve(T$.TextStyleN(), dart.fn(style => {
        let t6;
        t6 = style;
        return t6 == null ? null : t6.textStyle;
      }, T$.ButtonStyleNToMaterialStatePropertyNOfTextStyleN()));
      let resolvedBackgroundColor = resolve(T$.ColorN(), dart.fn(style => {
        let t6;
        t6 = style;
        return t6 == null ? null : t6.backgroundColor;
      }, T$.ButtonStyleNToMaterialStatePropertyNOfColorN()));
      let resolvedForegroundColor = resolve(T$.ColorN(), dart.fn(style => {
        let t6;
        t6 = style;
        return t6 == null ? null : t6.foregroundColor;
      }, T$.ButtonStyleNToMaterialStatePropertyNOfColorN()));
      let resolvedShadowColor = resolve(T$.ColorN(), dart.fn(style => {
        let t6;
        t6 = style;
        return t6 == null ? null : t6.shadowColor;
      }, T$.ButtonStyleNToMaterialStatePropertyNOfColorN()));
      let resolvedPadding = resolve(T$.EdgeInsetsGeometryN(), dart.fn(style => {
        let t6;
        t6 = style;
        return t6 == null ? null : t6.padding;
      }, T$.ButtonStyleNToMaterialStatePropertyNOfEdgeInsetsGeometryN()));
      let resolvedMinimumSize = resolve(T$.SizeN(), dart.fn(style => {
        let t6;
        t6 = style;
        return t6 == null ? null : t6.minimumSize;
      }, T$.ButtonStyleNToMaterialStatePropertyNOfSizeN()));
      let resolvedFixedSize = resolve(T$.SizeN(), dart.fn(style => {
        let t6;
        t6 = style;
        return t6 == null ? null : t6.fixedSize;
      }, T$.ButtonStyleNToMaterialStatePropertyNOfSizeN()));
      let resolvedMaximumSize = resolve(T$.SizeN(), dart.fn(style => {
        let t6;
        t6 = style;
        return t6 == null ? null : t6.maximumSize;
      }, T$.ButtonStyleNToMaterialStatePropertyNOfSizeN()));
      let resolvedSide = resolve(T$.BorderSideN(), dart.fn(style => {
        let t6;
        t6 = style;
        return t6 == null ? null : t6.side;
      }, T$.ButtonStyleNToMaterialStatePropertyNOfBorderSideN()));
      let resolvedShape = resolve(T$.OutlinedBorderN(), dart.fn(style => {
        let t6;
        t6 = style;
        return t6 == null ? null : t6.shape;
      }, T$.ButtonStyleNToMaterialStatePropertyNOfOutlinedBorderN()));
      let resolvedMouseCursor = new button_style_button._MouseCursor.new(dart.fn(states => {
        if (states == null) dart.nullFailed(I[12], 243, 27, "states");
        return effectiveValue(mouse_cursor.MouseCursor, dart.fn(style => {
          let t7, t6;
          t6 = style;
          return t6 == null ? null : (t7 = t6.mouseCursor, t7 == null ? null : t7.resolve(states));
        }, T$.ButtonStyleNToMouseCursorN()));
      }, T$.SetOfMaterialStateToMouseCursorN()));
      let overlayColor = material_state.MaterialStateProperty.resolveWith(T$.ColorN(), dart.fn(states => {
        if (states == null) dart.nullFailed(I[12], 247, 27, "states");
        return effectiveValue(ui.Color, dart.fn(style => {
          let t7, t6;
          t6 = style;
          return t6 == null ? null : (t7 = t6.overlayColor, t7 == null ? null : t7.resolve(states));
        }, T$.ButtonStyleNToColorN()));
      }, T$.SetOfMaterialStateToColorN()));
      let resolvedVisualDensity = effectiveValue(theme_data.VisualDensity, dart.fn(style => {
        let t6;
        t6 = style;
        return t6 == null ? null : t6.visualDensity;
      }, T$.ButtonStyleNToVisualDensityN()));
      let resolvedTapTargetSize = effectiveValue(theme_data.MaterialTapTargetSize, dart.fn(style => {
        let t6;
        t6 = style;
        return t6 == null ? null : t6.tapTargetSize;
      }, T$.ButtonStyleNToMaterialTapTargetSizeN()));
      let resolvedAnimationDuration = effectiveValue(core.Duration, dart.fn(style => {
        let t6;
        t6 = style;
        return t6 == null ? null : t6.animationDuration;
      }, T$.ButtonStyleNToDurationN()));
      let resolvedEnableFeedback = effectiveValue(core.bool, dart.fn(style => {
        let t6;
        t6 = style;
        return t6 == null ? null : t6.enableFeedback;
      }, T$.ButtonStyleNToboolN()));
      let resolvedAlignment = effectiveValue(alignment.AlignmentGeometry, dart.fn(style => {
        let t6;
        t6 = style;
        return t6 == null ? null : t6.alignment;
      }, T$.ButtonStyleNToAlignmentGeometryN()));
      let densityAdjustment = dart.nullCheck(resolvedVisualDensity).baseSizeAdjustment;
      let resolvedSplashFactory = effectiveValue(ink_well.InteractiveInkFeatureFactory, dart.fn(style => {
        let t6;
        t6 = style;
        return t6 == null ? null : t6.splashFactory;
      }, T$.ButtonStyleNToInteractiveInkFeatureFactoryN()));
      let effectiveConstraints = resolvedVisualDensity.effectiveConstraints(new box$.BoxConstraints.new({minWidth: dart.nullCheck(resolvedMinimumSize).width, minHeight: resolvedMinimumSize.height, maxWidth: dart.nullCheck(resolvedMaximumSize).width, maxHeight: resolvedMaximumSize.height}));
      if (resolvedFixedSize != null) {
        let size = effectiveConstraints.constrain(resolvedFixedSize);
        if (size.width[S.$isFinite]) {
          effectiveConstraints = effectiveConstraints.copyWith({minWidth: size.width, maxWidth: size.width});
        }
        if (size.height[S.$isFinite]) {
          effectiveConstraints = effectiveConstraints.copyWith({minHeight: size.height, maxHeight: size.height});
        }
      }
      let dy = densityAdjustment.dy;
      let dx = math.max(core.double, 0.0, densityAdjustment.dx);
      let padding = dart.nullCheck(resolvedPadding).add(new edge_insets.EdgeInsets.fromLTRB(dx, dy, dx, dy)).clamp(edge_insets.EdgeInsets.zero, edge_insets.EdgeInsetsGeometry.infinity);
      if (dart.test(dart.nullCheck(resolvedAnimationDuration)['>'](core.Duration.zero)) && this[S._elevation] != null && this[S._backgroundColor] != null && this[S._elevation] != resolvedElevation && dart.nullCheck(this[S._backgroundColor]).value != dart.nullCheck(resolvedBackgroundColor).value && dart.nullCheck(this[S._backgroundColor]).opacity === 1 && dart.notNull(resolvedBackgroundColor.opacity) < 1 && resolvedElevation === 0) {
        if (!dart.equals((t6 = this[S._controller$1], t6 == null ? null : t6.duration), resolvedAnimationDuration)) {
          t6$ = this[S._controller$1];
          t6$ == null ? null : t6$.dispose();
          this[S._controller$1] = (t6$0 = new animation_controller.AnimationController.new({duration: resolvedAnimationDuration, vsync: this}), (() => {
            t6$0.addStatusListener(dart.fn(status => {
              if (status == null) dart.nullFailed(I[12], 310, 46, "status");
              if (status == animation.AnimationStatus.completed) {
                this.setState(dart.fn(() => {
                }, T$.VoidTovoid()));
              }
            }, T$.AnimationStatusTovoid()));
            return t6$0;
          })());
        }
        resolvedBackgroundColor = this[S._backgroundColor];
        dart.nullCheck(this[S._controller$1]).value = 0.0;
        dart.nullCheck(this[S._controller$1]).forward();
      }
      this[S._elevation] = resolvedElevation;
      this[S._backgroundColor] = resolvedBackgroundColor;
      let result = new basic.ConstrainedBox.new({constraints: effectiveConstraints, child: new material.Material.new({elevation: dart.nullCheck(resolvedElevation), textStyle: (t6$1 = resolvedTextStyle, t6$1 == null ? null : t6$1.copyWith({color: resolvedForegroundColor})), shape: dart.nullCheck(resolvedShape).copyWith({side: resolvedSide}), color: resolvedBackgroundColor, shadowColor: resolvedShadowColor, type: resolvedBackgroundColor == null ? material.MaterialType.transparency : material.MaterialType.button, animationDuration: resolvedAnimationDuration, clipBehavior: this.widget.clipBehavior, child: new ink_well.InkWell.new({onTap: this.widget.onPressed, onLongPress: this.widget.onLongPress, onHighlightChanged: this.updateMaterialState(material_state.MaterialState.pressed), onHover: this.updateMaterialState(material_state.MaterialState.hovered), mouseCursor: resolvedMouseCursor, enableFeedback: resolvedEnableFeedback, focusNode: this.widget.focusNode, canRequestFocus: this.widget.enabled, onFocusChange: this.updateMaterialState(material_state.MaterialState.focused), autofocus: this.widget.autofocus, splashFactory: resolvedSplashFactory, overlayColor: overlayColor, highlightColor: colors$.Colors.transparent, customBorder: resolvedShape, child: icon_theme.IconTheme.merge({data: new icon_theme_data.IconThemeData.new({color: resolvedForegroundColor}), child: new basic.Padding.new({padding: padding, child: new basic.Align.new({alignment: dart.nullCheck(resolvedAlignment), widthFactor: 1.0, heightFactor: 1.0, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C[48] || CT.C48}), $creationLocationd_0dea112b090073317d4: C[49] || CT.C49})}), $creationLocationd_0dea112b090073317d4: C[50] || CT.C50}), $creationLocationd_0dea112b090073317d4: C[51] || CT.C51}), $creationLocationd_0dea112b090073317d4: C[52] || CT.C52});
      let minSize = null;
      switch (dart.nullCheck(resolvedTapTargetSize)) {
        case C[53] || CT.C53:
        {
          minSize = new ui.Size.new(48 + dart.notNull(densityAdjustment.dx), 48 + dart.notNull(densityAdjustment.dy));
          if (!(dart.notNull(minSize.width) >= 0.0)) dart.assertFailed(null, I[12], 372, 16, "minSize.width >= 0.0");
          if (!(dart.notNull(minSize.height) >= 0.0)) dart.assertFailed(null, I[12], 373, 16, "minSize.height >= 0.0");
          break;
        }
        case C[54] || CT.C54:
        {
          minSize = ui.Size.zero;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      return new basic.Semantics.new({container: true, button: true, enabled: this.widget.enabled, child: new button_style_button._InputPadding.new({minSize: minSize, child: result, $creationLocationd_0dea112b090073317d4: C[55] || CT.C55}), $creationLocationd_0dea112b090073317d4: C[56] || CT.C56});
    }
  };
  (button_style_button._ButtonStyleState.new = function() {
    this[S._controller$1] = null;
    this[S._elevation] = null;
    this[S._backgroundColor] = null;
    button_style_button._ButtonStyleState.__proto__.new.call(this);
    ;
  }).prototype = button_style_button._ButtonStyleState.prototype;
  dart.addTypeTests(button_style_button._ButtonStyleState);
  dart.addTypeCaches(button_style_button._ButtonStyleState);
  dart.setMethodSignature(button_style_button._ButtonStyleState, () => ({
    __proto__: dart.getMethods(button_style_button._ButtonStyleState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(button_style_button._ButtonStyleState, I[13]);
  dart.setFieldSignature(button_style_button._ButtonStyleState, () => ({
    __proto__: dart.getFields(button_style_button._ButtonStyleState.__proto__),
    [S._controller$1]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S._elevation]: dart.fieldType(dart.nullable(core.double)),
    [S._backgroundColor]: dart.fieldType(dart.nullable(ui.Color))
  }));
  button_style_button._MouseCursor = class _MouseCursor extends material_state.MaterialStateMouseCursor {
    get resolveCallback() {
      return this[S.resolveCallback];
    }
    set resolveCallback(value) {
      super.resolveCallback = value;
    }
    resolve(states) {
      let t6;
      if (states == null) dart.nullFailed(I[12], 398, 42, "states");
      return dart.nullCheck((t6 = states, this.resolveCallback(t6)));
    }
    get debugDescription() {
      return "ButtonStyleButton_MouseCursor";
    }
  };
  (button_style_button._MouseCursor.new = function(resolveCallback) {
    if (resolveCallback == null) dart.nullFailed(I[12], 393, 27, "resolveCallback");
    this[S.resolveCallback] = resolveCallback;
    button_style_button._MouseCursor.__proto__.new.call(this);
    ;
  }).prototype = button_style_button._MouseCursor.prototype;
  dart.addTypeTests(button_style_button._MouseCursor);
  dart.addTypeCaches(button_style_button._MouseCursor);
  dart.setMethodSignature(button_style_button._MouseCursor, () => ({
    __proto__: dart.getMethods(button_style_button._MouseCursor.__proto__),
    resolve: dart.fnType(mouse_cursor.MouseCursor, [core.Set$(material_state.MaterialState)])
  }));
  dart.setGetterSignature(button_style_button._MouseCursor, () => ({
    __proto__: dart.getGetters(button_style_button._MouseCursor.__proto__),
    debugDescription: core.String
  }));
  dart.setLibraryUri(button_style_button._MouseCursor, I[13]);
  dart.setFieldSignature(button_style_button._MouseCursor, () => ({
    __proto__: dart.getFields(button_style_button._MouseCursor.__proto__),
    resolveCallback: dart.finalFieldType(dart.fnType(dart.nullable(mouse_cursor.MouseCursor), [core.Set$(material_state.MaterialState)]))
  }));
  button_style_button._InputPadding = class _InputPadding extends framework.SingleChildRenderObjectWidget {
    get minSize() {
      return this[S.minSize];
    }
    set minSize(value) {
      super.minSize = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(I[12], 419, 48, "context");
      return new button_style_button._RenderInputPadding.new(this.minSize);
    }
    updateRenderObject(context, renderObject) {
      if (context == null) dart.nullFailed(I[12], 424, 40, "context");
      button_style_button._RenderInputPadding.as(renderObject);
      if (renderObject == null) dart.nullFailed(I[12], 424, 79, "renderObject");
      renderObject.minSize = this.minSize;
    }
  };
  (button_style_button._InputPadding.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let minSize = opts && 'minSize' in opts ? opts.minSize : null;
    if (minSize == null) dart.nullFailed(I[12], 413, 19, "minSize");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.minSize] = minSize;
    button_style_button._InputPadding.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = button_style_button._InputPadding.prototype;
  dart.addTypeTests(button_style_button._InputPadding);
  dart.addTypeCaches(button_style_button._InputPadding);
  dart.setMethodSignature(button_style_button._InputPadding, () => ({
    __proto__: dart.getMethods(button_style_button._InputPadding.__proto__),
    createRenderObject: dart.fnType(object.RenderObject, [framework.BuildContext])
  }));
  dart.setLibraryUri(button_style_button._InputPadding, I[13]);
  dart.setFieldSignature(button_style_button._InputPadding, () => ({
    __proto__: dart.getFields(button_style_button._InputPadding.__proto__),
    minSize: dart.finalFieldType(ui.Size)
  }));
  button_style_button._RenderInputPadding = class _RenderInputPadding extends shifted_box.RenderShiftedBox {
    get minSize() {
      return this[S._minSize];
    }
    set minSize(value) {
      if (value == null) dart.nullFailed(I[12], 434, 20, "value");
      if (dart.equals(this[S._minSize], value)) return;
      this[S._minSize] = value;
      this.markNeedsLayout();
    }
    computeMinIntrinsicWidth(height) {
      if (height == null) dart.nullFailed(I[12], 442, 42, "height");
      if (this.child != null) return math.max(core.double, dart.nullCheck(this.child).getMinIntrinsicWidth(height), this.minSize.width);
      return 0.0;
    }
    computeMinIntrinsicHeight(width) {
      if (width == null) dart.nullFailed(I[12], 449, 43, "width");
      if (this.child != null) return math.max(core.double, dart.nullCheck(this.child).getMinIntrinsicHeight(width), this.minSize.height);
      return 0.0;
    }
    computeMaxIntrinsicWidth(height) {
      if (height == null) dart.nullFailed(I[12], 456, 42, "height");
      if (this.child != null) return math.max(core.double, dart.nullCheck(this.child).getMaxIntrinsicWidth(height), this.minSize.width);
      return 0.0;
    }
    computeMaxIntrinsicHeight(width) {
      if (width == null) dart.nullFailed(I[12], 463, 43, "width");
      if (this.child != null) return math.max(core.double, dart.nullCheck(this.child).getMaxIntrinsicHeight(width), this.minSize.height);
      return 0.0;
    }
    [S._computeSize](opts) {
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      if (constraints == null) dart.nullFailed(I[12], 469, 46, "constraints");
      let layoutChild = opts && 'layoutChild' in opts ? opts.layoutChild : null;
      if (layoutChild == null) dart.nullFailed(I[12], 469, 82, "layoutChild");
      if (this.child != null) {
        let childSize = layoutChild(dart.nullCheck(this.child), constraints);
        let height = math.max(core.double, childSize.width, this.minSize.width);
        let width = math.max(core.double, childSize.height, this.minSize.height);
        return constraints.constrain(new ui.Size.new(height, width));
      }
      return ui.Size.zero;
    }
    computeDryLayout(constraints) {
      if (constraints == null) dart.nullFailed(I[12], 480, 40, "constraints");
      return this[S._computeSize]({constraints: constraints, layoutChild: C[57] || CT.C57});
    }
    performLayout() {
      this.size = this[S._computeSize]({constraints: this.constraints, layoutChild: C[58] || CT.C58});
      if (this.child != null) {
        let childParentData = box$.BoxParentData.as(dart.nullCheck(dart.nullCheck(this.child).parentData));
        childParentData.offset = alignment.Alignment.center.alongOffset(ui.Offset.as(this.size['-'](dart.nullCheck(this.child).size)));
      }
    }
    hitTest(result, opts) {
      if (result == null) dart.nullFailed(I[12], 500, 33, "result");
      let position = opts && 'position' in opts ? opts.position : null;
      if (position == null) dart.nullFailed(I[12], 500, 59, "position");
      if (dart.test(super.hitTest(result, {position: position}))) {
        return true;
      }
      let center = dart.nullCheck(this.child).size.center(ui.Offset.zero);
      return result.addWithRawTransform({transform: matrix_utils.MatrixUtils.forceToPoint(center), position: center, hitTest: dart.fn((result, position) => {
          if (result == null) dart.nullFailed(I[12], 508, 34, "result");
          if (!dart.equals(position, center)) dart.assertFailed(null, I[12], 509, 16, "position == center");
          return dart.nullCheck(this.child).hitTest(result, {position: center});
        }, T$.BoxHitTestResultAndOffsetNTobool())});
    }
  };
  (button_style_button._RenderInputPadding.new = function(_minSize, child = null) {
    if (_minSize == null) dart.nullFailed(I[12], 430, 28, "_minSize");
    this[S._minSize] = _minSize;
    button_style_button._RenderInputPadding.__proto__.new.call(this, child);
    ;
  }).prototype = button_style_button._RenderInputPadding.prototype;
  dart.addTypeTests(button_style_button._RenderInputPadding);
  dart.addTypeCaches(button_style_button._RenderInputPadding);
  dart.setMethodSignature(button_style_button._RenderInputPadding, () => ({
    __proto__: dart.getMethods(button_style_button._RenderInputPadding.__proto__),
    [S._computeSize]: dart.fnType(ui.Size, [], {}, {constraints: box$.BoxConstraints, layoutChild: dart.fnType(ui.Size, [box$.RenderBox, box$.BoxConstraints])})
  }));
  dart.setGetterSignature(button_style_button._RenderInputPadding, () => ({
    __proto__: dart.getGetters(button_style_button._RenderInputPadding.__proto__),
    minSize: ui.Size
  }));
  dart.setSetterSignature(button_style_button._RenderInputPadding, () => ({
    __proto__: dart.getSetters(button_style_button._RenderInputPadding.__proto__),
    minSize: ui.Size
  }));
  dart.setLibraryUri(button_style_button._RenderInputPadding, I[13]);
  dart.setFieldSignature(button_style_button._RenderInputPadding, () => ({
    __proto__: dart.getFields(button_style_button._RenderInputPadding.__proto__),
    [S._minSize]: dart.fieldType(ui.Size)
  }));
  text_button.TextButton = class TextButton extends button_style_button.ButtonStyleButton {
    static styleFrom(opts) {
      let primary = opts && 'primary' in opts ? opts.primary : null;
      let onSurface = opts && 'onSurface' in opts ? opts.onSurface : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let minimumSize = opts && 'minimumSize' in opts ? opts.minimumSize : null;
      let fixedSize = opts && 'fixedSize' in opts ? opts.fixedSize : null;
      let maximumSize = opts && 'maximumSize' in opts ? opts.maximumSize : null;
      let side = opts && 'side' in opts ? opts.side : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let enabledMouseCursor = opts && 'enabledMouseCursor' in opts ? opts.enabledMouseCursor : null;
      let disabledMouseCursor = opts && 'disabledMouseCursor' in opts ? opts.disabledMouseCursor : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      let tapTargetSize = opts && 'tapTargetSize' in opts ? opts.tapTargetSize : null;
      let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      let alignment = opts && 'alignment' in opts ? opts.alignment : null;
      let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
      let foregroundColor = onSurface == null && primary == null ? null : new text_button._TextButtonDefaultForeground.new(primary, onSurface);
      let overlayColor = primary == null ? null : new text_button._TextButtonDefaultOverlay.new(primary);
      let mouseCursor = enabledMouseCursor == null && disabledMouseCursor == null ? null : new text_button._TextButtonDefaultMouseCursor.new(dart.nullCheck(enabledMouseCursor), dart.nullCheck(disabledMouseCursor));
      return new button_style.ButtonStyle.new({textStyle: button_style_button.ButtonStyleButton.allOrNull(text_style.TextStyle, textStyle), backgroundColor: button_style_button.ButtonStyleButton.allOrNull(ui.Color, backgroundColor), foregroundColor: foregroundColor, overlayColor: overlayColor, shadowColor: button_style_button.ButtonStyleButton.allOrNull(ui.Color, shadowColor), elevation: button_style_button.ButtonStyleButton.allOrNull(core.double, elevation), padding: button_style_button.ButtonStyleButton.allOrNull(edge_insets.EdgeInsetsGeometry, padding), minimumSize: button_style_button.ButtonStyleButton.allOrNull(ui.Size, minimumSize), fixedSize: button_style_button.ButtonStyleButton.allOrNull(ui.Size, fixedSize), maximumSize: button_style_button.ButtonStyleButton.allOrNull(ui.Size, maximumSize), side: button_style_button.ButtonStyleButton.allOrNull(borders.BorderSide, side), shape: button_style_button.ButtonStyleButton.allOrNull(borders.OutlinedBorder, shape), mouseCursor: mouseCursor, visualDensity: visualDensity, tapTargetSize: tapTargetSize, animationDuration: animationDuration, enableFeedback: enableFeedback, alignment: alignment, splashFactory: splashFactory});
    }
    defaultStyleOf(context) {
      let t6, t6$;
      if (context == null) dart.nullFailed(I[14], 319, 43, "context");
      let theme = theme$.Theme.of(context);
      let colorScheme = theme.colorScheme;
      let scaledPadding = button_style_button.ButtonStyleButton.scaledPadding(C[0] || CT.C0, C[60] || CT.C60, C[61] || CT.C61, (t6$ = (t6 = media_query.MediaQuery.maybeOf(context), t6 == null ? null : t6.textScaleFactor), t6$ == null ? 1.0 : t6$));
      return text_button.TextButton.styleFrom({primary: colorScheme.primary, onSurface: colorScheme.onSurface, backgroundColor: colors$.Colors.transparent, shadowColor: theme.shadowColor, elevation: 0.0, textStyle: theme.textTheme.button, padding: scaledPadding, minimumSize: C[62] || CT.C62, maximumSize: ui.Size.infinite, side: null, shape: C[63] || CT.C63, enabledMouseCursor: mouse_cursor.SystemMouseCursors.click, disabledMouseCursor: mouse_cursor.SystemMouseCursors.forbidden, visualDensity: theme.visualDensity, tapTargetSize: theme.materialTapTargetSize, animationDuration: constants.kThemeChangeDuration, enableFeedback: true, alignment: alignment.Alignment.center, splashFactory: ink_ripple.InkRipple.splashFactory});
    }
    themeStyleOf(context) {
      if (context == null) dart.nullFailed(I[14], 356, 42, "context");
      return text_button_theme.TextButtonTheme.of(context).style;
    }
  };
  (text_button.TextButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[14], 132, 10, "autofocus");
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[59] || CT.C59;
    if (clipBehavior == null) dart.nullFailed(I[14], 133, 10, "clipBehavior");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[14], 134, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    text_button.TextButton.__proto__.new.call(this, {key: key, onPressed: onPressed, onLongPress: onLongPress, style: style, focusNode: focusNode, autofocus: autofocus, clipBehavior: clipBehavior, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text_button.TextButton.prototype;
  dart.addTypeTests(text_button.TextButton);
  dart.addTypeCaches(text_button.TextButton);
  dart.setMethodSignature(text_button.TextButton, () => ({
    __proto__: dart.getMethods(text_button.TextButton.__proto__),
    defaultStyleOf: dart.fnType(button_style.ButtonStyle, [framework.BuildContext]),
    themeStyleOf: dart.fnType(dart.nullable(button_style.ButtonStyle), [framework.BuildContext])
  }));
  dart.setLibraryUri(text_button.TextButton, I[15]);
  text_button._TextButtonDefaultForeground = class _TextButtonDefaultForeground extends material_state.MaterialStateProperty$(dart.nullable(ui.Color)) {
    resolve(states) {
      let t6;
      if (states == null) dart.nullFailed(I[14], 369, 37, "states");
      if (dart.test(states.contains(material_state.MaterialState.disabled))) {
        t6 = this.onSurface;
        return t6 == null ? null : t6.withOpacity(0.38);
      }
      return this.primary;
    }
    toString() {
      let t6;
      return "{disabled: " + dart.str((t6 = this.onSurface, t6 == null ? null : t6.withOpacity(0.38))) + ", otherwise: " + dart.str(this.primary) + "}";
    }
  };
  (text_button._TextButtonDefaultForeground.new = function(primary, onSurface) {
    this.primary = primary;
    this.onSurface = onSurface;
    ;
  }).prototype = text_button._TextButtonDefaultForeground.prototype;
  dart.addTypeTests(text_button._TextButtonDefaultForeground);
  dart.addTypeCaches(text_button._TextButtonDefaultForeground);
  dart.setMethodSignature(text_button._TextButtonDefaultForeground, () => ({
    __proto__: dart.getMethods(text_button._TextButtonDefaultForeground.__proto__),
    resolve: dart.fnType(dart.nullable(ui.Color), [core.Set$(material_state.MaterialState)])
  }));
  dart.setLibraryUri(text_button._TextButtonDefaultForeground, I[15]);
  dart.setFieldSignature(text_button._TextButtonDefaultForeground, () => ({
    __proto__: dart.getFields(text_button._TextButtonDefaultForeground.__proto__),
    primary: dart.finalFieldType(dart.nullable(ui.Color)),
    onSurface: dart.finalFieldType(dart.nullable(ui.Color))
  }));
  dart.defineExtensionMethods(text_button._TextButtonDefaultForeground, ['toString']);
  text_button._TextButtonDefaultOverlay = class _TextButtonDefaultOverlay extends material_state.MaterialStateProperty$(dart.nullable(ui.Color)) {
    resolve(states) {
      if (states == null) dart.nullFailed(I[14], 388, 37, "states");
      if (dart.test(states.contains(material_state.MaterialState.hovered))) return this.primary.withOpacity(0.04);
      if (dart.test(states.contains(material_state.MaterialState.focused)) || dart.test(states.contains(material_state.MaterialState.pressed))) return this.primary.withOpacity(0.12);
      return null;
    }
    toString() {
      return "{hovered: " + dart.str(this.primary.withOpacity(0.04)) + ", focused,pressed: " + dart.str(this.primary.withOpacity(0.12)) + ", otherwise: null}";
    }
  };
  (text_button._TextButtonDefaultOverlay.new = function(primary) {
    if (primary == null) dart.nullFailed(I[14], 383, 34, "primary");
    this.primary = primary;
    ;
  }).prototype = text_button._TextButtonDefaultOverlay.prototype;
  dart.addTypeTests(text_button._TextButtonDefaultOverlay);
  dart.addTypeCaches(text_button._TextButtonDefaultOverlay);
  dart.setMethodSignature(text_button._TextButtonDefaultOverlay, () => ({
    __proto__: dart.getMethods(text_button._TextButtonDefaultOverlay.__proto__),
    resolve: dart.fnType(dart.nullable(ui.Color), [core.Set$(material_state.MaterialState)])
  }));
  dart.setLibraryUri(text_button._TextButtonDefaultOverlay, I[15]);
  dart.setFieldSignature(text_button._TextButtonDefaultOverlay, () => ({
    __proto__: dart.getFields(text_button._TextButtonDefaultOverlay.__proto__),
    primary: dart.finalFieldType(ui.Color)
  }));
  dart.defineExtensionMethods(text_button._TextButtonDefaultOverlay, ['toString']);
  const MaterialStateProperty_Diagnosticable$36 = class MaterialStateProperty_Diagnosticable extends material_state.MaterialStateProperty$(mouse_cursor.MouseCursor) {};
  (MaterialStateProperty_Diagnosticable$36.new = function() {
  }).prototype = MaterialStateProperty_Diagnosticable$36.prototype;
  dart.applyMixin(MaterialStateProperty_Diagnosticable$36, diagnostics.Diagnosticable);
  text_button._TextButtonDefaultMouseCursor = class _TextButtonDefaultMouseCursor extends MaterialStateProperty_Diagnosticable$36 {
    resolve(states) {
      if (states == null) dart.nullFailed(I[14], 410, 42, "states");
      if (dart.test(states.contains(material_state.MaterialState.disabled))) return this.disabledCursor;
      return this.enabledCursor;
    }
  };
  (text_button._TextButtonDefaultMouseCursor.new = function(enabledCursor, disabledCursor) {
    if (enabledCursor == null) dart.nullFailed(I[14], 404, 38, "enabledCursor");
    if (disabledCursor == null) dart.nullFailed(I[14], 404, 58, "disabledCursor");
    this.enabledCursor = enabledCursor;
    this.disabledCursor = disabledCursor;
    ;
  }).prototype = text_button._TextButtonDefaultMouseCursor.prototype;
  dart.addTypeTests(text_button._TextButtonDefaultMouseCursor);
  dart.addTypeCaches(text_button._TextButtonDefaultMouseCursor);
  dart.setMethodSignature(text_button._TextButtonDefaultMouseCursor, () => ({
    __proto__: dart.getMethods(text_button._TextButtonDefaultMouseCursor.__proto__),
    resolve: dart.fnType(mouse_cursor.MouseCursor, [core.Set$(material_state.MaterialState)])
  }));
  dart.setLibraryUri(text_button._TextButtonDefaultMouseCursor, I[15]);
  dart.setFieldSignature(text_button._TextButtonDefaultMouseCursor, () => ({
    __proto__: dart.getFields(text_button._TextButtonDefaultMouseCursor.__proto__),
    enabledCursor: dart.finalFieldType(mouse_cursor.MouseCursor),
    disabledCursor: dart.finalFieldType(mouse_cursor.MouseCursor)
  }));
  text_button._TextButtonWithIcon = class _TextButtonWithIcon extends text_button.TextButton {
    defaultStyleOf(context) {
      let t6, t6$;
      if (context == null) dart.nullFailed(I[14], 442, 43, "context");
      let scaledPadding = button_style_button.ButtonStyleButton.scaledPadding(C[0] || CT.C0, C[61] || CT.C61, C[61] || CT.C61, (t6$ = (t6 = media_query.MediaQuery.maybeOf(context), t6 == null ? null : t6.textScaleFactor), t6$ == null ? 1.0 : t6$));
      return super.defaultStyleOf(context).copyWith({padding: material_state.MaterialStateProperty.all(edge_insets.EdgeInsetsGeometry, scaledPadding)});
    }
  };
  (text_button._TextButtonWithIcon.new = function(opts) {
    let t6, t6$;
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    if (icon == null) dart.nullFailed(I[14], 426, 21, "icon");
    let label = opts && 'label' in opts ? opts.label : null;
    if (label == null) dart.nullFailed(I[14], 427, 21, "label");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(icon != null)) dart.assertFailed(null, I[14], 428, 15, "icon != null");
    if (!(label != null)) dart.assertFailed(null, I[14], 429, 15, "label != null");
    text_button._TextButtonWithIcon.__proto__.new.call(this, {key: key, onPressed: onPressed, onLongPress: onLongPress, style: style, focusNode: focusNode, autofocus: (t6 = autofocus, t6 == null ? false : t6), clipBehavior: (t6$ = clipBehavior, t6$ == null ? ui.Clip.none : t6$), child: new text_button._TextButtonWithIconChild.new({icon: icon, label: label, $creationLocationd_0dea112b090073317d4: C[69] || CT.C69}), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text_button._TextButtonWithIcon.prototype;
  dart.addTypeTests(text_button._TextButtonWithIcon);
  dart.addTypeCaches(text_button._TextButtonWithIcon);
  dart.setLibraryUri(text_button._TextButtonWithIcon, I[15]);
  text_button._TextButtonWithIconChild = class _TextButtonWithIconChild extends framework.StatelessWidget {
    get label() {
      return this[S.label];
    }
    set label(value) {
      super.label = value;
    }
    get icon() {
      return this[S.icon$1];
    }
    set icon(value) {
      super.icon = value;
    }
    build(context) {
      let t6, t6$;
      if (context == null) dart.nullFailed(I[14], 466, 29, "context");
      let scale = (t6$ = (t6 = media_query.MediaQuery.maybeOf(context), t6 == null ? null : t6.textScaleFactor), t6$ == null ? 1.0 : t6$);
      let gap = dart.notNull(scale) <= 1 ? 8.0 : dart.nullCheck(ui.lerpDouble(8, 4, math.min(core.double, dart.notNull(scale) - 1, 1.0)));
      return new basic.Row.new({mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([this.icon, new basic.SizedBox.new({width: gap, $creationLocationd_0dea112b090073317d4: C[70] || CT.C70}), new basic.Flexible.new({child: this.label, $creationLocationd_0dea112b090073317d4: C[71] || CT.C71})]), $creationLocationd_0dea112b090073317d4: C[72] || CT.C72});
    }
  };
  (text_button._TextButtonWithIconChild.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let label = opts && 'label' in opts ? opts.label : null;
    if (label == null) dart.nullFailed(I[14], 458, 19, "label");
    let icon = opts && 'icon' in opts ? opts.icon : null;
    if (icon == null) dart.nullFailed(I[14], 459, 19, "icon");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.label] = label;
    this[S.icon$1] = icon;
    text_button._TextButtonWithIconChild.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text_button._TextButtonWithIconChild.prototype;
  dart.addTypeTests(text_button._TextButtonWithIconChild);
  dart.addTypeCaches(text_button._TextButtonWithIconChild);
  dart.setMethodSignature(text_button._TextButtonWithIconChild, () => ({
    __proto__: dart.getMethods(text_button._TextButtonWithIconChild.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(text_button._TextButtonWithIconChild, I[15]);
  dart.setFieldSignature(text_button._TextButtonWithIconChild, () => ({
    __proto__: dart.getFields(text_button._TextButtonWithIconChild.__proto__),
    label: dart.finalFieldType(framework.Widget),
    icon: dart.finalFieldType(framework.Widget)
  }));
  snack_bar.SnackBarClosedReason = class SnackBarClosedReason extends core.Object {
    toString() {
      return this[S._name$5];
    }
  };
  (snack_bar.SnackBarClosedReason.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[16], 48, 6, "index");
    if (_name == null) dart.nullFailed(I[16], 48, 6, "_name");
    this.index = index;
    this[S._name$5] = _name;
    ;
  }).prototype = snack_bar.SnackBarClosedReason.prototype;
  dart.addTypeTests(snack_bar.SnackBarClosedReason);
  dart.addTypeCaches(snack_bar.SnackBarClosedReason);
  snack_bar.SnackBarClosedReason[dart.implements] = () => [core.Enum];
  dart.setLibraryUri(snack_bar.SnackBarClosedReason, I[17]);
  dart.setFieldSignature(snack_bar.SnackBarClosedReason, () => ({
    __proto__: dart.getFields(snack_bar.SnackBarClosedReason.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$5]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(snack_bar.SnackBarClosedReason, ['toString']);
  snack_bar.SnackBarClosedReason.action = C[73] || CT.C73;
  snack_bar.SnackBarClosedReason.dismiss = C[74] || CT.C74;
  snack_bar.SnackBarClosedReason.swipe = C[75] || CT.C75;
  snack_bar.SnackBarClosedReason.hide = C[76] || CT.C76;
  snack_bar.SnackBarClosedReason.remove = C[77] || CT.C77;
  snack_bar.SnackBarClosedReason.timeout = C[78] || CT.C78;
  snack_bar.SnackBarClosedReason.values = C[79] || CT.C79;
  snack_bar.SnackBarAction = class SnackBarAction extends framework.StatefulWidget {
    get textColor() {
      return this[S.textColor];
    }
    set textColor(value) {
      super.textColor = value;
    }
    get disabledTextColor() {
      return this[S.disabledTextColor];
    }
    set disabledTextColor(value) {
      super.disabledTextColor = value;
    }
    get label() {
      return this[S.label$1];
    }
    set label(value) {
      super.label = value;
    }
    get onPressed() {
      return this[S.onPressed$4];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    createState() {
      return new snack_bar._SnackBarActionState.new();
    }
  };
  (snack_bar.SnackBarAction.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let disabledTextColor = opts && 'disabledTextColor' in opts ? opts.disabledTextColor : null;
    let label = opts && 'label' in opts ? opts.label : null;
    if (label == null) dart.nullFailed(I[16], 88, 19, "label");
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    if (onPressed == null) dart.nullFailed(I[16], 89, 19, "onPressed");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.textColor] = textColor;
    this[S.disabledTextColor] = disabledTextColor;
    this[S.label$1] = label;
    this[S.onPressed$4] = onPressed;
    if (!(label != null)) dart.assertFailed(null, I[16], 90, 15, "label != null");
    if (!(onPressed != null)) dart.assertFailed(null, I[16], 91, 15, "onPressed != null");
    snack_bar.SnackBarAction.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = snack_bar.SnackBarAction.prototype;
  dart.addTypeTests(snack_bar.SnackBarAction);
  dart.addTypeCaches(snack_bar.SnackBarAction);
  dart.setMethodSignature(snack_bar.SnackBarAction, () => ({
    __proto__: dart.getMethods(snack_bar.SnackBarAction.__proto__),
    createState: dart.fnType(framework.State$(snack_bar.SnackBarAction), [])
  }));
  dart.setLibraryUri(snack_bar.SnackBarAction, I[17]);
  dart.setFieldSignature(snack_bar.SnackBarAction, () => ({
    __proto__: dart.getFields(snack_bar.SnackBarAction.__proto__),
    textColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledTextColor: dart.finalFieldType(dart.nullable(ui.Color)),
    label: dart.finalFieldType(core.String),
    onPressed: dart.finalFieldType(dart.fnType(dart.void, []))
  }));
  snack_bar._SnackBarActionState = class _SnackBarActionState extends framework.State$(snack_bar.SnackBarAction) {
    [S._handlePressed]() {
      if (dart.test(this[S._haveTriggeredAction])) return;
      this.setState(dart.fn(() => {
        this[S._haveTriggeredAction] = true;
      }, T$.VoidTovoid()));
      this.widget.onPressed();
      scaffold$.Scaffold.of(this.context).hideCurrentSnackBar({reason: snack_bar.SnackBarClosedReason.action});
    }
    build(context) {
      if (context == null) dart.nullFailed(I[16], 129, 29, "context");
      const resolveForegroundColor = states => {
        let t6, t6$;
        if (states == null) dart.nullFailed(I[16], 130, 54, "states");
        let snackBarTheme = theme$.Theme.of(context).snackBarTheme;
        if (dart.test(states.contains(material_state.MaterialState.disabled))) {
          t6 = this.widget.disabledTextColor;
          return t6 == null ? snackBarTheme.disabledActionTextColor : t6;
        }
        t6$ = this.widget.textColor;
        return t6$ == null ? snackBarTheme.actionTextColor : t6$;
      };
      dart.fn(resolveForegroundColor, T$.SetOfMaterialStateToColorN());
      return new text_button.TextButton.new({style: new button_style.ButtonStyle.new({foregroundColor: material_state.MaterialStateProperty.resolveWith(T$.ColorN(), resolveForegroundColor)}), onPressed: dart.test(this[S._haveTriggeredAction]) ? null : dart.bind(this, S._handlePressed), child: new text$.Text.new(this.widget.label, {$creationLocationd_0dea112b090073317d4: C[80] || CT.C80}), $creationLocationd_0dea112b090073317d4: C[81] || CT.C81});
    }
  };
  (snack_bar._SnackBarActionState.new = function() {
    this[S._haveTriggeredAction] = false;
    snack_bar._SnackBarActionState.__proto__.new.call(this);
    ;
  }).prototype = snack_bar._SnackBarActionState.prototype;
  dart.addTypeTests(snack_bar._SnackBarActionState);
  dart.addTypeCaches(snack_bar._SnackBarActionState);
  dart.setMethodSignature(snack_bar._SnackBarActionState, () => ({
    __proto__: dart.getMethods(snack_bar._SnackBarActionState.__proto__),
    [S._handlePressed]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(snack_bar._SnackBarActionState, I[17]);
  dart.setFieldSignature(snack_bar._SnackBarActionState, () => ({
    __proto__: dart.getFields(snack_bar._SnackBarActionState.__proto__),
    [S._haveTriggeredAction]: dart.fieldType(core.bool)
  }));
  snack_bar.SnackBar = class SnackBar extends framework.StatefulWidget {
    get content() {
      return this[S.content];
    }
    set content(value) {
      super.content = value;
    }
    get backgroundColor() {
      return this[S.backgroundColor];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get elevation() {
      return this[S.elevation];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get margin() {
      return this[S.margin];
    }
    set margin(value) {
      super.margin = value;
    }
    get padding() {
      return this[S.padding$1];
    }
    set padding(value) {
      super.padding = value;
    }
    get width() {
      return this[S.width];
    }
    set width(value) {
      super.width = value;
    }
    get shape() {
      return this[S.shape];
    }
    set shape(value) {
      super.shape = value;
    }
    get behavior() {
      return this[S.behavior];
    }
    set behavior(value) {
      super.behavior = value;
    }
    get action() {
      return this[S.action];
    }
    set action(value) {
      super.action = value;
    }
    get duration() {
      return this[S.duration];
    }
    set duration(value) {
      super.duration = value;
    }
    get animation() {
      return this[S.animation];
    }
    set animation(value) {
      super.animation = value;
    }
    get onVisible() {
      return this[S.onVisible];
    }
    set onVisible(value) {
      super.onVisible = value;
    }
    get dismissDirection() {
      return this[S.dismissDirection];
    }
    set dismissDirection(value) {
      super.dismissDirection = value;
    }
    static createAnimationController(opts) {
      let vsync = opts && 'vsync' in opts ? opts.vsync : null;
      if (vsync == null) dart.nullFailed(I[16], 391, 82, "vsync");
      return new animation_controller.AnimationController.new({duration: snack_bar._snackBarTransitionDuration, debugLabel: "SnackBar", vsync: vsync});
    }
    withAnimation(newAnimation, opts) {
      let t6;
      if (newAnimation == null) dart.nullFailed(I[16], 403, 44, "newAnimation");
      let fallbackKey = opts && 'fallbackKey' in opts ? opts.fallbackKey : null;
      return new snack_bar.SnackBar.new({key: (t6 = this.key, t6 == null ? fallbackKey : t6), content: this.content, backgroundColor: this.backgroundColor, elevation: this.elevation, margin: this.margin, padding: this.padding, width: this.width, shape: this.shape, behavior: this.behavior, action: this.action, duration: this.duration, animation: newAnimation, onVisible: this.onVisible, dismissDirection: this.dismissDirection, $creationLocationd_0dea112b090073317d4: C[84] || CT.C84});
    }
    createState() {
      return new snack_bar._SnackBarState.new();
    }
  };
  (snack_bar.SnackBar.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let content = opts && 'content' in opts ? opts.content : null;
    if (content == null) dart.nullFailed(I[16], 243, 19, "content");
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let margin = opts && 'margin' in opts ? opts.margin : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let behavior = opts && 'behavior' in opts ? opts.behavior : null;
    let action = opts && 'action' in opts ? opts.action : null;
    let duration = opts && 'duration' in opts ? opts.duration : C[82] || CT.C82;
    if (duration == null) dart.nullFailed(I[16], 252, 10, "duration");
    let animation = opts && 'animation' in opts ? opts.animation : null;
    let onVisible = opts && 'onVisible' in opts ? opts.onVisible : null;
    let dismissDirection = opts && 'dismissDirection' in opts ? opts.dismissDirection : C[83] || CT.C83;
    if (dismissDirection == null) dart.nullFailed(I[16], 255, 10, "dismissDirection");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.content] = content;
    this[S.backgroundColor] = backgroundColor;
    this[S.elevation] = elevation;
    this[S.margin] = margin;
    this[S.padding$1] = padding;
    this[S.width] = width;
    this[S.shape] = shape;
    this[S.behavior] = behavior;
    this[S.action] = action;
    this[S.duration] = duration;
    this[S.animation] = animation;
    this[S.onVisible] = onVisible;
    this[S.dismissDirection] = dismissDirection;
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[16], 256, 15, "elevation == null || elevation >= 0.0");
    if (!(content != null)) dart.assertFailed(null, I[16], 257, 15, "content != null");
    if (!(width == null || margin == null)) dart.assertFailed("Width and margin can not be used together", I[16], 259, 10, "width == null || margin == null");
    if (!(duration != null)) dart.assertFailed(null, I[16], 262, 15, "duration != null");
    snack_bar.SnackBar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = snack_bar.SnackBar.prototype;
  dart.addTypeTests(snack_bar.SnackBar);
  dart.addTypeCaches(snack_bar.SnackBar);
  dart.setMethodSignature(snack_bar.SnackBar, () => ({
    __proto__: dart.getMethods(snack_bar.SnackBar.__proto__),
    withAnimation: dart.fnType(snack_bar.SnackBar, [animation.Animation$(core.double)], {fallbackKey: dart.nullable(key.Key)}, {}),
    createState: dart.fnType(framework.State$(snack_bar.SnackBar), [])
  }));
  dart.setLibraryUri(snack_bar.SnackBar, I[17]);
  dart.setFieldSignature(snack_bar.SnackBar, () => ({
    __proto__: dart.getFields(snack_bar.SnackBar.__proto__),
    content: dart.finalFieldType(framework.Widget),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    margin: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    width: dart.finalFieldType(dart.nullable(core.double)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    behavior: dart.finalFieldType(dart.nullable(snack_bar_theme.SnackBarBehavior)),
    action: dart.finalFieldType(dart.nullable(snack_bar.SnackBarAction)),
    duration: dart.finalFieldType(core.Duration),
    animation: dart.finalFieldType(dart.nullable(animation.Animation$(core.double))),
    onVisible: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    dismissDirection: dart.finalFieldType(dismissible.DismissDirection)
  }));
  snack_bar._SnackBarState = class _SnackBarState extends framework.State$(snack_bar.SnackBar) {
    initState() {
      super.initState();
      dart.nullCheck(this.widget.animation).addStatusListener(dart.bind(this, S._onAnimationStatusChanged));
    }
    didUpdateWidget(oldWidget) {
      snack_bar.SnackBar.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[16], 436, 33, "oldWidget");
      if (!dart.equals(this.widget.animation, oldWidget.animation)) {
        dart.nullCheck(oldWidget.animation).removeStatusListener(dart.bind(this, S._onAnimationStatusChanged));
        dart.nullCheck(this.widget.animation).addStatusListener(dart.bind(this, S._onAnimationStatusChanged));
      }
      super.didUpdateWidget(oldWidget);
    }
    dispose() {
      dart.nullCheck(this.widget.animation).removeStatusListener(dart.bind(this, S._onAnimationStatusChanged));
      super.dispose();
    }
    [S._onAnimationStatusChanged](animationStatus) {
      if (animationStatus == null) dart.nullFailed(I[16], 450, 50, "animationStatus");
      switch (animationStatus) {
        case C[85] || CT.C85:
        case C[86] || CT.C86:
        case C[87] || CT.C87:
        {
          break;
        }
        case C[88] || CT.C88:
        {
          if (this.widget.onVisible != null && !dart.test(this[S._wasVisible])) {
            dart.nullCheck(this.widget.onVisible)();
          }
          this[S._wasVisible] = true;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    build(context) {
      let t6, t6$, t6$0, t6$1, t6$2, t6$3, t7, t7$, t7$0, t7$1, t7$2, t7$3, t7$4;
      if (context == null) dart.nullFailed(I[16], 465, 29, "context");
      if (!dart.test(debug.debugCheckHasMediaQuery(context))) dart.assertFailed(null, I[16], 466, 12, "debugCheckHasMediaQuery(context)");
      let mediaQueryData = media_query.MediaQuery.of(context);
      if (!(this.widget.animation != null)) dart.assertFailed(null, I[16], 468, 12, "widget.animation != null");
      let theme = theme$.Theme.of(context);
      let colorScheme = theme.colorScheme;
      let snackBarTheme = theme.snackBarTheme;
      let isThemeDark = theme.brightness == ui.Brightness.dark;
      let buttonColor = isThemeDark ? colorScheme.primaryVariant : colorScheme.secondary;
      let brightness = isThemeDark ? ui.Brightness.light : ui.Brightness.dark;
      let themeBackgroundColor = isThemeDark ? colorScheme.onSurface : ui.Color.alphaBlend(colorScheme.onSurface.withOpacity(0.8), colorScheme.surface);
      let inverseTheme = theme.copyWith({colorScheme: new color_scheme.ColorScheme.new({primary: colorScheme.onPrimary, primaryVariant: colorScheme.onPrimary, secondary: buttonColor, secondaryVariant: colorScheme.onSecondary, surface: colorScheme.onSurface, background: themeBackgroundColor, error: colorScheme.onError, onPrimary: colorScheme.primary, onSecondary: colorScheme.secondary, onSurface: colorScheme.surface, onBackground: colorScheme.background, onError: colorScheme.error, brightness: brightness})});
      let contentTextStyle = (t6 = snackBarTheme.contentTextStyle, t6 == null ? theme_data.ThemeData.new({brightness: brightness}).textTheme.subtitle1 : t6);
      let snackBarBehavior = (t6$0 = (t6$ = this.widget.behavior, t6$ == null ? snackBarTheme.behavior : t6$), t6$0 == null ? snack_bar_theme.SnackBarBehavior.fixed : t6$0);
      if (!dart.test(dart.fn(() => {
        if (snackBarBehavior != snack_bar_theme.SnackBarBehavior.floating) {
          const message = parameter => {
            if (parameter == null) dart.nullFailed(I[16], 507, 31, "parameter");
            let prefix = dart.str(parameter) + " can only be used with floating behavior.";
            if (this.widget.behavior != null) {
              return prefix + " SnackBarBehavior.fixed was set in the SnackBar constructor.";
            } else if (snackBarTheme.behavior != null) {
              return prefix + " SnackBarBehavior.fixed was set by the inherited SnackBarThemeData.";
            } else {
              return prefix + " SnackBarBehavior.fixed was set by default.";
            }
          };
          dart.fn(message, T$.StringToString());
          if (!(this.widget.margin == null)) dart.assertFailed(message("Margin"), I[16], 517, 16, "widget.margin == null");
          if (!(this.widget.width == null)) dart.assertFailed(message("Width"), I[16], 518, 16, "widget.width == null");
        }
        return true;
      }, T$.VoidTobool())())) dart.assertFailed(null, I[16], 503, 12, "(){\r\n      // Whether the behavior is set through the constructor or the theme,\r\n      // assert that our other properties are configured properly.\r\n      if (snackBarBehavior != SnackBarBehavior.floating) {\r\n        String message(String parameter) {\r\n          final String prefix = '$parameter can only be used with floating behavior.';\r\n          if (widget.behavior != null) {\r\n            return '$prefix SnackBarBehavior.fixed was set in the SnackBar constructor.';\r\n          } else if (snackBarTheme.behavior != null) {\r\n            return '$prefix SnackBarBehavior.fixed was set by the inherited SnackBarThemeData.';\r\n          } else {\r\n            return '$prefix SnackBarBehavior.fixed was set by default.';\r\n          }\r\n        }\r\n        assert(widget.margin == null, message('Margin'));\r\n        assert(widget.width == null, message('Width'));\r\n      }\r\n      return true;\r\n    }()");
      let isFloatingSnackBar = snackBarBehavior == snack_bar_theme.SnackBarBehavior.floating;
      let horizontalPadding = isFloatingSnackBar ? 16.0 : 24.0;
      let padding = (t6$1 = this.widget.padding, t6$1 == null ? new edge_insets.EdgeInsetsDirectional.only({start: horizontalPadding, end: this.widget.action != null ? 0.0 : horizontalPadding}) : t6$1);
      let actionHorizontalMargin = dart.notNull((t6$3 = (t6$2 = this.widget.padding, t6$2 == null ? null : t6$2.resolve(ui.TextDirection.ltr).right), t6$3 == null ? horizontalPadding : t6$3)) / 2;
      let heightAnimation = new animations.CurvedAnimation.new({parent: dart.nullCheck(this.widget.animation), curve: snack_bar._snackBarHeightCurve});
      let fadeInAnimation = new animations.CurvedAnimation.new({parent: dart.nullCheck(this.widget.animation), curve: snack_bar._snackBarFadeInCurve});
      let fadeOutAnimation = new animations.CurvedAnimation.new({parent: dart.nullCheck(this.widget.animation), curve: snack_bar._snackBarFadeOutCurve, reverseCurve: C[89] || CT.C89});
      let snackBar = new basic.Padding.new({padding: padding, child: new basic.Row.new({crossAxisAlignment: flex.CrossAxisAlignment.center, children: (() => {
            let t6 = T$.JSArrayOfWidget().of([new basic.Expanded.new({child: new container.Container.new({padding: this.widget.padding == null ? C[90] || CT.C90 : null, child: new text$.DefaultTextStyle.new({style: dart.nullCheck(contentTextStyle), child: this.widget.content, $creationLocationd_0dea112b090073317d4: C[91] || CT.C91}), $creationLocationd_0dea112b090073317d4: C[92] || CT.C92}), $creationLocationd_0dea112b090073317d4: C[93] || CT.C93})]);
            if (this.widget.action != null) t6[S.$add](new basic.Padding.new({padding: new edge_insets.EdgeInsets.symmetric({horizontal: actionHorizontalMargin}), child: new text_button_theme.TextButtonTheme.new({data: new text_button_theme.TextButtonThemeData.new({style: text_button.TextButton.styleFrom({primary: buttonColor, padding: new edge_insets.EdgeInsets.symmetric({horizontal: horizontalPadding})})}), child: dart.nullCheck(this.widget.action), $creationLocationd_0dea112b090073317d4: C[94] || CT.C94}), $creationLocationd_0dea112b090073317d4: C[95] || CT.C95}));
            return t6;
          })(), $creationLocationd_0dea112b090073317d4: C[96] || CT.C96}), $creationLocationd_0dea112b090073317d4: C[97] || CT.C97});
      if (!isFloatingSnackBar) {
        snackBar = new safe_area.SafeArea.new({top: false, child: snackBar, $creationLocationd_0dea112b090073317d4: C[98] || CT.C98});
      }
      let elevation = (t7$ = (t7 = this.widget.elevation, t7 == null ? snackBarTheme.elevation : t7), t7$ == null ? 6.0 : t7$);
      let backgroundColor = (t7$1 = (t7$0 = this.widget.backgroundColor, t7$0 == null ? snackBarTheme.backgroundColor : t7$0), t7$1 == null ? inverseTheme.colorScheme.background : t7$1);
      let shape = (t7$3 = (t7$2 = this.widget.shape, t7$2 == null ? snackBarTheme.shape : t7$2), t7$3 == null ? isFloatingSnackBar ? new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(4.0)}) : null : t7$3);
      snackBar = new material.Material.new({shape: shape, elevation: elevation, color: backgroundColor, child: new theme$.Theme.new({data: inverseTheme, child: dart.test(mediaQueryData.accessibleNavigation) ? snackBar : new transitions.FadeTransition.new({opacity: fadeOutAnimation, child: snackBar, $creationLocationd_0dea112b090073317d4: C[99] || CT.C99}), $creationLocationd_0dea112b090073317d4: C[100] || CT.C100}), $creationLocationd_0dea112b090073317d4: C[101] || CT.C101});
      if (isFloatingSnackBar) {
        if (this.widget.width != null) {
          snackBar = new container.Container.new({margin: C[102] || CT.C102, width: this.widget.width, child: snackBar, $creationLocationd_0dea112b090073317d4: C[103] || CT.C103});
        } else {
          snackBar = new basic.Padding.new({padding: (t7$4 = this.widget.margin, t7$4 == null ? C[104] || CT.C104 : t7$4), child: snackBar, $creationLocationd_0dea112b090073317d4: C[105] || CT.C105});
        }
        snackBar = new safe_area.SafeArea.new({top: false, bottom: false, child: snackBar, $creationLocationd_0dea112b090073317d4: C[106] || CT.C106});
      }
      snackBar = new basic.Semantics.new({container: true, liveRegion: true, onDismiss: dart.fn(() => {
          scaffold$.Scaffold.of(context).removeCurrentSnackBar({reason: snack_bar.SnackBarClosedReason.dismiss});
        }, T$.VoidTovoid()), child: new dismissible.Dismissible.new({key: C[107] || CT.C107, direction: this.widget.dismissDirection, resizeDuration: null, onDismissed: dart.fn(direction => {
            if (direction == null) dart.nullFailed(I[16], 636, 40, "direction");
            scaffold$.Scaffold.of(context).removeCurrentSnackBar({reason: snack_bar.SnackBarClosedReason.swipe});
          }, T$.DismissDirectionTovoid()), child: snackBar, $creationLocationd_0dea112b090073317d4: C[108] || CT.C108}), $creationLocationd_0dea112b090073317d4: C[109] || CT.C109});
      let snackBarTransition = null;
      if (dart.test(mediaQueryData.accessibleNavigation)) {
        snackBarTransition = snackBar;
      } else if (isFloatingSnackBar) {
        snackBarTransition = new transitions.FadeTransition.new({opacity: fadeInAnimation, child: snackBar, $creationLocationd_0dea112b090073317d4: C[110] || CT.C110});
      } else {
        snackBarTransition = new transitions.AnimatedBuilder.new({animation: heightAnimation, builder: dart.fn((context, child) => {
            if (context == null) dart.nullFailed(I[16], 654, 32, "context");
            return new basic.Align.new({alignment: alignment.AlignmentDirectional.topStart, heightFactor: heightAnimation.value, child: child, $creationLocationd_0dea112b090073317d4: C[111] || CT.C111});
          }, T$.BuildContextAndWidgetNToAlign()), child: snackBar, $creationLocationd_0dea112b090073317d4: C[112] || CT.C112});
      }
      return new heroes.Hero.new({tag: "<SnackBar Hero tag - " + dart.str(this.widget.content) + ">", child: new basic.ClipRect.new({child: snackBarTransition, $creationLocationd_0dea112b090073317d4: C[113] || CT.C113}), $creationLocationd_0dea112b090073317d4: C[114] || CT.C114});
    }
  };
  (snack_bar._SnackBarState.new = function() {
    this[S._wasVisible] = false;
    snack_bar._SnackBarState.__proto__.new.call(this);
    ;
  }).prototype = snack_bar._SnackBarState.prototype;
  dart.addTypeTests(snack_bar._SnackBarState);
  dart.addTypeCaches(snack_bar._SnackBarState);
  dart.setMethodSignature(snack_bar._SnackBarState, () => ({
    __proto__: dart.getMethods(snack_bar._SnackBarState.__proto__),
    [S._onAnimationStatusChanged]: dart.fnType(dart.void, [animation.AnimationStatus]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(snack_bar._SnackBarState, I[17]);
  dart.setFieldSignature(snack_bar._SnackBarState, () => ({
    __proto__: dart.getFields(snack_bar._SnackBarState.__proto__),
    [S._wasVisible]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(snack_bar, {
    /*snack_bar._singleLineVerticalPadding*/get _singleLineVerticalPadding() {
      return 14;
    },
    /*snack_bar._snackBarTransitionDuration*/get _snackBarTransitionDuration() {
      return C[115] || CT.C115;
    },
    /*snack_bar._snackBarDisplayDuration*/get _snackBarDisplayDuration() {
      return C[82] || CT.C82;
    },
    /*snack_bar._snackBarHeightCurve*/get _snackBarHeightCurve() {
      return C[116] || CT.C116;
    },
    /*snack_bar._snackBarFadeInCurve*/get _snackBarFadeInCurve() {
      return C[117] || CT.C117;
    },
    /*snack_bar._snackBarFadeOutCurve*/get _snackBarFadeOutCurve() {
      return C[118] || CT.C118;
    }
  }, false);
  floating_action_button_location.FloatingActionButtonLocation = class FloatingActionButtonLocation extends core.Object {
    toString() {
      return object$.objectRuntimeType(this, "FloatingActionButtonLocation");
    }
  };
  (floating_action_button_location.FloatingActionButtonLocation.new = function() {
    ;
  }).prototype = floating_action_button_location.FloatingActionButtonLocation.prototype;
  dart.addTypeTests(floating_action_button_location.FloatingActionButtonLocation);
  dart.addTypeCaches(floating_action_button_location.FloatingActionButtonLocation);
  dart.setLibraryUri(floating_action_button_location.FloatingActionButtonLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location.FloatingActionButtonLocation, ['toString']);
  dart.defineLazy(floating_action_button_location.FloatingActionButtonLocation, {
    /*floating_action_button_location.FloatingActionButtonLocation.startTop*/get startTop() {
      return C[119] || CT.C119;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniStartTop*/get miniStartTop() {
      return C[120] || CT.C120;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.centerTop*/get centerTop() {
      return C[121] || CT.C121;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniCenterTop*/get miniCenterTop() {
      return C[122] || CT.C122;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.endTop*/get endTop() {
      return C[123] || CT.C123;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniEndTop*/get miniEndTop() {
      return C[124] || CT.C124;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.startFloat*/get startFloat() {
      return C[125] || CT.C125;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniStartFloat*/get miniStartFloat() {
      return C[126] || CT.C126;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.centerFloat*/get centerFloat() {
      return C[127] || CT.C127;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniCenterFloat*/get miniCenterFloat() {
      return C[128] || CT.C128;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.endFloat*/get endFloat() {
      return C[129] || CT.C129;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniEndFloat*/get miniEndFloat() {
      return C[130] || CT.C130;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.startDocked*/get startDocked() {
      return C[131] || CT.C131;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniStartDocked*/get miniStartDocked() {
      return C[132] || CT.C132;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.centerDocked*/get centerDocked() {
      return C[133] || CT.C133;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniCenterDocked*/get miniCenterDocked() {
      return C[134] || CT.C134;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.endDocked*/get endDocked() {
      return C[135] || CT.C135;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniEndDocked*/get miniEndDocked() {
      return C[136] || CT.C136;
    }
  }, false);
  floating_action_button_location.StandardFabLocation = class StandardFabLocation extends floating_action_button_location.FloatingActionButtonLocation {
    isMini() {
      return false;
    }
    getOffset(scaffoldGeometry) {
      if (scaffoldGeometry == null) dart.nullFailed(I[19], 517, 46, "scaffoldGeometry");
      let adjustment = dart.test(this.isMini()) ? 4 : 0.0;
      return new ui.Offset.new(this.getOffsetX(scaffoldGeometry, adjustment), this.getOffsetY(scaffoldGeometry, adjustment));
    }
    static _leftOffsetX(scaffoldGeometry, adjustment) {
      if (scaffoldGeometry == null) dart.nullFailed(I[19], 526, 56, "scaffoldGeometry");
      if (adjustment == null) dart.nullFailed(I[19], 526, 81, "adjustment");
      return 16 + dart.notNull(scaffoldGeometry.minInsets.left) - dart.notNull(adjustment);
    }
    static _rightOffsetX(scaffoldGeometry, adjustment) {
      if (scaffoldGeometry == null) dart.nullFailed(I[19], 533, 57, "scaffoldGeometry");
      if (adjustment == null) dart.nullFailed(I[19], 533, 82, "adjustment");
      return dart.notNull(scaffoldGeometry.scaffoldSize.width) - 16 - dart.notNull(scaffoldGeometry.minInsets.right) - dart.notNull(scaffoldGeometry.floatingActionButtonSize.width) + dart.notNull(adjustment);
    }
  };
  (floating_action_button_location.StandardFabLocation.new = function() {
    floating_action_button_location.StandardFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location.StandardFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location.StandardFabLocation);
  dart.addTypeCaches(floating_action_button_location.StandardFabLocation);
  dart.setMethodSignature(floating_action_button_location.StandardFabLocation, () => ({
    __proto__: dart.getMethods(floating_action_button_location.StandardFabLocation.__proto__),
    isMini: dart.fnType(core.bool, []),
    getOffset: dart.fnType(ui.Offset, [scaffold$.ScaffoldPrelayoutGeometry])
  }));
  dart.setLibraryUri(floating_action_button_location.StandardFabLocation, I[18]);
  floating_action_button_location.FabTopOffsetY = class FabTopOffsetY extends floating_action_button_location.StandardFabLocation {};
  floating_action_button_location.FabTopOffsetY[dart.mixinOn] = StandardFabLocation => class FabTopOffsetY extends StandardFabLocation {
    getOffsetY(scaffoldGeometry, adjustment) {
      if (scaffoldGeometry == null) dart.nullFailed(I[19], 557, 47, "scaffoldGeometry");
      if (adjustment == null) dart.nullFailed(I[19], 557, 72, "adjustment");
      if (dart.notNull(scaffoldGeometry.contentTop) > dart.notNull(scaffoldGeometry.minViewPadding.top)) {
        let fabHalfHeight = dart.notNull(scaffoldGeometry.floatingActionButtonSize.height) / 2.0;
        return dart.notNull(scaffoldGeometry.contentTop) - fabHalfHeight;
      }
      return scaffoldGeometry.minViewPadding.top;
    }
  };
  dart.addTypeTests(floating_action_button_location.FabTopOffsetY);
  dart.addTypeCaches(floating_action_button_location.FabTopOffsetY);
  floating_action_button_location.FabTopOffsetY[dart.implements] = () => [floating_action_button_location.StandardFabLocation];
  dart.setMethodSignature(floating_action_button_location.FabTopOffsetY, () => ({
    __proto__: dart.getMethods(floating_action_button_location.FabTopOffsetY.__proto__),
    getOffsetY: dart.fnType(core.double, [scaffold$.ScaffoldPrelayoutGeometry, core.double])
  }));
  dart.setLibraryUri(floating_action_button_location.FabTopOffsetY, I[18]);
  floating_action_button_location.FabFloatOffsetY = class FabFloatOffsetY extends floating_action_button_location.StandardFabLocation {};
  floating_action_button_location.FabFloatOffsetY[dart.mixinOn] = StandardFabLocation => class FabFloatOffsetY extends StandardFabLocation {
    getOffsetY(scaffoldGeometry, adjustment) {
      if (scaffoldGeometry == null) dart.nullFailed(I[19], 572, 47, "scaffoldGeometry");
      if (adjustment == null) dart.nullFailed(I[19], 572, 72, "adjustment");
      let contentBottom = scaffoldGeometry.contentBottom;
      let bottomContentHeight = dart.notNull(scaffoldGeometry.scaffoldSize.height) - dart.notNull(contentBottom);
      let bottomSheetHeight = scaffoldGeometry.bottomSheetSize.height;
      let fabHeight = scaffoldGeometry.floatingActionButtonSize.height;
      let snackBarHeight = scaffoldGeometry.snackBarSize.height;
      let safeMargin = math.max(core.double, 16, dart.notNull(scaffoldGeometry.minViewPadding.bottom) - bottomContentHeight + 16);
      let fabY = dart.notNull(contentBottom) - dart.notNull(fabHeight) - safeMargin;
      if (dart.notNull(snackBarHeight) > 0.0) fabY = math.min(core.double, fabY, dart.notNull(contentBottom) - dart.notNull(snackBarHeight) - dart.notNull(fabHeight) - 16);
      if (dart.notNull(bottomSheetHeight) > 0.0) fabY = math.min(core.double, fabY, dart.notNull(contentBottom) - dart.notNull(bottomSheetHeight) - dart.notNull(fabHeight) / 2.0);
      return fabY + dart.notNull(adjustment);
    }
  };
  dart.addTypeTests(floating_action_button_location.FabFloatOffsetY);
  dart.addTypeCaches(floating_action_button_location.FabFloatOffsetY);
  floating_action_button_location.FabFloatOffsetY[dart.implements] = () => [floating_action_button_location.StandardFabLocation];
  dart.setMethodSignature(floating_action_button_location.FabFloatOffsetY, () => ({
    __proto__: dart.getMethods(floating_action_button_location.FabFloatOffsetY.__proto__),
    getOffsetY: dart.fnType(core.double, [scaffold$.ScaffoldPrelayoutGeometry, core.double])
  }));
  dart.setLibraryUri(floating_action_button_location.FabFloatOffsetY, I[18]);
  floating_action_button_location.FabDockedOffsetY = class FabDockedOffsetY extends floating_action_button_location.StandardFabLocation {};
  floating_action_button_location.FabDockedOffsetY[dart.mixinOn] = StandardFabLocation => class FabDockedOffsetY extends StandardFabLocation {
    getOffsetY(scaffoldGeometry, adjustment) {
      if (scaffoldGeometry == null) dart.nullFailed(I[19], 598, 47, "scaffoldGeometry");
      if (adjustment == null) dart.nullFailed(I[19], 598, 72, "adjustment");
      let contentBottom = scaffoldGeometry.contentBottom;
      let contentMargin = dart.notNull(scaffoldGeometry.scaffoldSize.height) - dart.notNull(contentBottom);
      let bottomViewPadding = scaffoldGeometry.minViewPadding.bottom;
      let bottomSheetHeight = scaffoldGeometry.bottomSheetSize.height;
      let fabHeight = scaffoldGeometry.floatingActionButtonSize.height;
      let snackBarHeight = scaffoldGeometry.snackBarSize.height;
      let bottomMinInset = scaffoldGeometry.minInsets.bottom;
      let safeMargin = null;
      if (contentMargin > dart.notNull(bottomMinInset) + dart.notNull(fabHeight) / 2.0) {
        safeMargin = 0.0;
      } else if (bottomMinInset === 0.0) {
        safeMargin = bottomViewPadding;
      } else {
        safeMargin = dart.notNull(fabHeight) / 2.0 + 16;
      }
      let fabY = dart.notNull(contentBottom) - dart.notNull(fabHeight) / 2.0 - dart.notNull(safeMargin);
      if (dart.notNull(snackBarHeight) > 0.0) fabY = math.min(core.double, fabY, dart.notNull(contentBottom) - dart.notNull(snackBarHeight) - dart.notNull(fabHeight) - 16);
      if (dart.notNull(bottomSheetHeight) > 0.0) fabY = math.min(core.double, fabY, dart.notNull(contentBottom) - dart.notNull(bottomSheetHeight) - dart.notNull(fabHeight) / 2.0);
      let maxFabY = dart.notNull(scaffoldGeometry.scaffoldSize.height) - dart.notNull(fabHeight) - dart.notNull(safeMargin);
      return math.min(core.double, maxFabY, fabY);
    }
  };
  dart.addTypeTests(floating_action_button_location.FabDockedOffsetY);
  dart.addTypeCaches(floating_action_button_location.FabDockedOffsetY);
  floating_action_button_location.FabDockedOffsetY[dart.implements] = () => [floating_action_button_location.StandardFabLocation];
  dart.setMethodSignature(floating_action_button_location.FabDockedOffsetY, () => ({
    __proto__: dart.getMethods(floating_action_button_location.FabDockedOffsetY.__proto__),
    getOffsetY: dart.fnType(core.double, [scaffold$.ScaffoldPrelayoutGeometry, core.double])
  }));
  dart.setLibraryUri(floating_action_button_location.FabDockedOffsetY, I[18]);
  floating_action_button_location.FabStartOffsetX = class FabStartOffsetX extends floating_action_button_location.StandardFabLocation {};
  floating_action_button_location.FabStartOffsetX[dart.mixinOn] = StandardFabLocation => class FabStartOffsetX extends StandardFabLocation {
    getOffsetX(scaffoldGeometry, adjustment) {
      if (scaffoldGeometry == null) dart.nullFailed(I[19], 639, 47, "scaffoldGeometry");
      if (adjustment == null) dart.nullFailed(I[19], 639, 72, "adjustment");
      if (!(scaffoldGeometry.textDirection != null)) dart.assertFailed(null, I[19], 640, 12, "scaffoldGeometry.textDirection != null");
      switch (scaffoldGeometry.textDirection) {
        case C[137] || CT.C137:
        {
          return floating_action_button_location.StandardFabLocation._rightOffsetX(scaffoldGeometry, adjustment);
        }
        case C[138] || CT.C138:
        {
          return floating_action_button_location.StandardFabLocation._leftOffsetX(scaffoldGeometry, adjustment);
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
  };
  dart.addTypeTests(floating_action_button_location.FabStartOffsetX);
  dart.addTypeCaches(floating_action_button_location.FabStartOffsetX);
  floating_action_button_location.FabStartOffsetX[dart.implements] = () => [floating_action_button_location.StandardFabLocation];
  dart.setMethodSignature(floating_action_button_location.FabStartOffsetX, () => ({
    __proto__: dart.getMethods(floating_action_button_location.FabStartOffsetX.__proto__),
    getOffsetX: dart.fnType(core.double, [scaffold$.ScaffoldPrelayoutGeometry, core.double])
  }));
  dart.setLibraryUri(floating_action_button_location.FabStartOffsetX, I[18]);
  floating_action_button_location.FabCenterOffsetX = class FabCenterOffsetX extends floating_action_button_location.StandardFabLocation {};
  floating_action_button_location.FabCenterOffsetX[dart.mixinOn] = StandardFabLocation => class FabCenterOffsetX extends StandardFabLocation {
    getOffsetX(scaffoldGeometry, adjustment) {
      if (scaffoldGeometry == null) dart.nullFailed(I[19], 654, 47, "scaffoldGeometry");
      if (adjustment == null) dart.nullFailed(I[19], 654, 72, "adjustment");
      return (dart.notNull(scaffoldGeometry.scaffoldSize.width) - dart.notNull(scaffoldGeometry.floatingActionButtonSize.width)) / 2.0;
    }
  };
  dart.addTypeTests(floating_action_button_location.FabCenterOffsetX);
  dart.addTypeCaches(floating_action_button_location.FabCenterOffsetX);
  floating_action_button_location.FabCenterOffsetX[dart.implements] = () => [floating_action_button_location.StandardFabLocation];
  dart.setMethodSignature(floating_action_button_location.FabCenterOffsetX, () => ({
    __proto__: dart.getMethods(floating_action_button_location.FabCenterOffsetX.__proto__),
    getOffsetX: dart.fnType(core.double, [scaffold$.ScaffoldPrelayoutGeometry, core.double])
  }));
  dart.setLibraryUri(floating_action_button_location.FabCenterOffsetX, I[18]);
  floating_action_button_location.FabEndOffsetX = class FabEndOffsetX extends floating_action_button_location.StandardFabLocation {};
  floating_action_button_location.FabEndOffsetX[dart.mixinOn] = StandardFabLocation => class FabEndOffsetX extends StandardFabLocation {
    getOffsetX(scaffoldGeometry, adjustment) {
      if (scaffoldGeometry == null) dart.nullFailed(I[19], 663, 47, "scaffoldGeometry");
      if (adjustment == null) dart.nullFailed(I[19], 663, 72, "adjustment");
      if (!(scaffoldGeometry.textDirection != null)) dart.assertFailed(null, I[19], 664, 12, "scaffoldGeometry.textDirection != null");
      switch (scaffoldGeometry.textDirection) {
        case C[137] || CT.C137:
        {
          return floating_action_button_location.StandardFabLocation._leftOffsetX(scaffoldGeometry, adjustment);
        }
        case C[138] || CT.C138:
        {
          return floating_action_button_location.StandardFabLocation._rightOffsetX(scaffoldGeometry, adjustment);
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
  };
  dart.addTypeTests(floating_action_button_location.FabEndOffsetX);
  dart.addTypeCaches(floating_action_button_location.FabEndOffsetX);
  floating_action_button_location.FabEndOffsetX[dart.implements] = () => [floating_action_button_location.StandardFabLocation];
  dart.setMethodSignature(floating_action_button_location.FabEndOffsetX, () => ({
    __proto__: dart.getMethods(floating_action_button_location.FabEndOffsetX.__proto__),
    getOffsetX: dart.fnType(core.double, [scaffold$.ScaffoldPrelayoutGeometry, core.double])
  }));
  dart.setLibraryUri(floating_action_button_location.FabEndOffsetX, I[18]);
  floating_action_button_location.FabMiniOffsetAdjustment = class FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  floating_action_button_location.FabMiniOffsetAdjustment[dart.mixinOn] = StandardFabLocation => class FabMiniOffsetAdjustment extends StandardFabLocation {
    isMini() {
      return true;
    }
  };
  dart.addTypeTests(floating_action_button_location.FabMiniOffsetAdjustment);
  dart.addTypeCaches(floating_action_button_location.FabMiniOffsetAdjustment);
  floating_action_button_location.FabMiniOffsetAdjustment[dart.implements] = () => [floating_action_button_location.StandardFabLocation];
  dart.setLibraryUri(floating_action_button_location.FabMiniOffsetAdjustment, I[18]);
  const StandardFabLocation_FabStartOffsetX$36 = class StandardFabLocation_FabStartOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabStartOffsetX$36.new = function() {
    StandardFabLocation_FabStartOffsetX$36.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabStartOffsetX$36.prototype;
  dart.applyMixin(StandardFabLocation_FabStartOffsetX$36, floating_action_button_location.FabStartOffsetX);
  const StandardFabLocation_FabTopOffsetY$36 = class StandardFabLocation_FabTopOffsetY extends StandardFabLocation_FabStartOffsetX$36 {};
  (StandardFabLocation_FabTopOffsetY$36.new = function() {
    StandardFabLocation_FabTopOffsetY$36.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabTopOffsetY$36.prototype;
  dart.applyMixin(StandardFabLocation_FabTopOffsetY$36, floating_action_button_location.FabTopOffsetY);
  floating_action_button_location._StartTopFabLocation = class _StartTopFabLocation extends StandardFabLocation_FabTopOffsetY$36 {
    toString() {
      return "FloatingActionButtonLocation.startTop";
    }
  };
  (floating_action_button_location._StartTopFabLocation.new = function() {
    floating_action_button_location._StartTopFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._StartTopFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._StartTopFabLocation);
  dart.addTypeCaches(floating_action_button_location._StartTopFabLocation);
  dart.setLibraryUri(floating_action_button_location._StartTopFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._StartTopFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36 = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabStartOffsetX$36$ = class StandardFabLocation_FabStartOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36 {};
  (StandardFabLocation_FabStartOffsetX$36$.new = function() {
    StandardFabLocation_FabStartOffsetX$36$.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabStartOffsetX$36$.prototype;
  dart.applyMixin(StandardFabLocation_FabStartOffsetX$36$, floating_action_button_location.FabStartOffsetX);
  const StandardFabLocation_FabTopOffsetY$36$ = class StandardFabLocation_FabTopOffsetY extends StandardFabLocation_FabStartOffsetX$36$ {};
  (StandardFabLocation_FabTopOffsetY$36$.new = function() {
    StandardFabLocation_FabTopOffsetY$36$.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabTopOffsetY$36$.prototype;
  dart.applyMixin(StandardFabLocation_FabTopOffsetY$36$, floating_action_button_location.FabTopOffsetY);
  floating_action_button_location._MiniStartTopFabLocation = class _MiniStartTopFabLocation extends StandardFabLocation_FabTopOffsetY$36$ {
    toString() {
      return "FloatingActionButtonLocation.miniStartTop";
    }
  };
  (floating_action_button_location._MiniStartTopFabLocation.new = function() {
    floating_action_button_location._MiniStartTopFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniStartTopFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniStartTopFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniStartTopFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniStartTopFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._MiniStartTopFabLocation, ['toString']);
  const StandardFabLocation_FabCenterOffsetX$36 = class StandardFabLocation_FabCenterOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabCenterOffsetX$36.new = function() {
    StandardFabLocation_FabCenterOffsetX$36.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabCenterOffsetX$36.prototype;
  dart.applyMixin(StandardFabLocation_FabCenterOffsetX$36, floating_action_button_location.FabCenterOffsetX);
  const StandardFabLocation_FabTopOffsetY$36$0 = class StandardFabLocation_FabTopOffsetY extends StandardFabLocation_FabCenterOffsetX$36 {};
  (StandardFabLocation_FabTopOffsetY$36$0.new = function() {
    StandardFabLocation_FabTopOffsetY$36$0.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabTopOffsetY$36$0.prototype;
  dart.applyMixin(StandardFabLocation_FabTopOffsetY$36$0, floating_action_button_location.FabTopOffsetY);
  floating_action_button_location._CenterTopFabLocation = class _CenterTopFabLocation extends StandardFabLocation_FabTopOffsetY$36$0 {
    toString() {
      return "FloatingActionButtonLocation.centerTop";
    }
  };
  (floating_action_button_location._CenterTopFabLocation.new = function() {
    floating_action_button_location._CenterTopFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._CenterTopFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._CenterTopFabLocation);
  dart.addTypeCaches(floating_action_button_location._CenterTopFabLocation);
  dart.setLibraryUri(floating_action_button_location._CenterTopFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._CenterTopFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36$ = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36$.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36$.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36$.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36$, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabCenterOffsetX$36$ = class StandardFabLocation_FabCenterOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36$ {};
  (StandardFabLocation_FabCenterOffsetX$36$.new = function() {
    StandardFabLocation_FabCenterOffsetX$36$.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabCenterOffsetX$36$.prototype;
  dart.applyMixin(StandardFabLocation_FabCenterOffsetX$36$, floating_action_button_location.FabCenterOffsetX);
  const StandardFabLocation_FabTopOffsetY$36$1 = class StandardFabLocation_FabTopOffsetY extends StandardFabLocation_FabCenterOffsetX$36$ {};
  (StandardFabLocation_FabTopOffsetY$36$1.new = function() {
    StandardFabLocation_FabTopOffsetY$36$1.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabTopOffsetY$36$1.prototype;
  dart.applyMixin(StandardFabLocation_FabTopOffsetY$36$1, floating_action_button_location.FabTopOffsetY);
  floating_action_button_location._MiniCenterTopFabLocation = class _MiniCenterTopFabLocation extends StandardFabLocation_FabTopOffsetY$36$1 {
    toString() {
      return "FloatingActionButtonLocation.miniCenterTop";
    }
  };
  (floating_action_button_location._MiniCenterTopFabLocation.new = function() {
    floating_action_button_location._MiniCenterTopFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniCenterTopFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniCenterTopFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniCenterTopFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniCenterTopFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._MiniCenterTopFabLocation, ['toString']);
  const StandardFabLocation_FabEndOffsetX$36 = class StandardFabLocation_FabEndOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabEndOffsetX$36.new = function() {
    StandardFabLocation_FabEndOffsetX$36.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabEndOffsetX$36.prototype;
  dart.applyMixin(StandardFabLocation_FabEndOffsetX$36, floating_action_button_location.FabEndOffsetX);
  const StandardFabLocation_FabTopOffsetY$36$2 = class StandardFabLocation_FabTopOffsetY extends StandardFabLocation_FabEndOffsetX$36 {};
  (StandardFabLocation_FabTopOffsetY$36$2.new = function() {
    StandardFabLocation_FabTopOffsetY$36$2.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabTopOffsetY$36$2.prototype;
  dart.applyMixin(StandardFabLocation_FabTopOffsetY$36$2, floating_action_button_location.FabTopOffsetY);
  floating_action_button_location._EndTopFabLocation = class _EndTopFabLocation extends StandardFabLocation_FabTopOffsetY$36$2 {
    toString() {
      return "FloatingActionButtonLocation.endTop";
    }
  };
  (floating_action_button_location._EndTopFabLocation.new = function() {
    floating_action_button_location._EndTopFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._EndTopFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._EndTopFabLocation);
  dart.addTypeCaches(floating_action_button_location._EndTopFabLocation);
  dart.setLibraryUri(floating_action_button_location._EndTopFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._EndTopFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36$0 = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36$0.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36$0.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36$0.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36$0, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabEndOffsetX$36$ = class StandardFabLocation_FabEndOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36$0 {};
  (StandardFabLocation_FabEndOffsetX$36$.new = function() {
    StandardFabLocation_FabEndOffsetX$36$.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabEndOffsetX$36$.prototype;
  dart.applyMixin(StandardFabLocation_FabEndOffsetX$36$, floating_action_button_location.FabEndOffsetX);
  const StandardFabLocation_FabTopOffsetY$36$3 = class StandardFabLocation_FabTopOffsetY extends StandardFabLocation_FabEndOffsetX$36$ {};
  (StandardFabLocation_FabTopOffsetY$36$3.new = function() {
    StandardFabLocation_FabTopOffsetY$36$3.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabTopOffsetY$36$3.prototype;
  dart.applyMixin(StandardFabLocation_FabTopOffsetY$36$3, floating_action_button_location.FabTopOffsetY);
  floating_action_button_location._MiniEndTopFabLocation = class _MiniEndTopFabLocation extends StandardFabLocation_FabTopOffsetY$36$3 {
    toString() {
      return "FloatingActionButtonLocation.miniEndTop";
    }
  };
  (floating_action_button_location._MiniEndTopFabLocation.new = function() {
    floating_action_button_location._MiniEndTopFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniEndTopFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniEndTopFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniEndTopFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniEndTopFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._MiniEndTopFabLocation, ['toString']);
  const StandardFabLocation_FabStartOffsetX$36$0 = class StandardFabLocation_FabStartOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabStartOffsetX$36$0.new = function() {
    StandardFabLocation_FabStartOffsetX$36$0.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabStartOffsetX$36$0.prototype;
  dart.applyMixin(StandardFabLocation_FabStartOffsetX$36$0, floating_action_button_location.FabStartOffsetX);
  const StandardFabLocation_FabFloatOffsetY$36 = class StandardFabLocation_FabFloatOffsetY extends StandardFabLocation_FabStartOffsetX$36$0 {};
  (StandardFabLocation_FabFloatOffsetY$36.new = function() {
    StandardFabLocation_FabFloatOffsetY$36.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabFloatOffsetY$36.prototype;
  dart.applyMixin(StandardFabLocation_FabFloatOffsetY$36, floating_action_button_location.FabFloatOffsetY);
  floating_action_button_location._StartFloatFabLocation = class _StartFloatFabLocation extends StandardFabLocation_FabFloatOffsetY$36 {
    toString() {
      return "FloatingActionButtonLocation.startFloat";
    }
  };
  (floating_action_button_location._StartFloatFabLocation.new = function() {
    floating_action_button_location._StartFloatFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._StartFloatFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._StartFloatFabLocation);
  dart.addTypeCaches(floating_action_button_location._StartFloatFabLocation);
  dart.setLibraryUri(floating_action_button_location._StartFloatFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._StartFloatFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36$1 = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36$1.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36$1.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36$1.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36$1, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabStartOffsetX$36$1 = class StandardFabLocation_FabStartOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36$1 {};
  (StandardFabLocation_FabStartOffsetX$36$1.new = function() {
    StandardFabLocation_FabStartOffsetX$36$1.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabStartOffsetX$36$1.prototype;
  dart.applyMixin(StandardFabLocation_FabStartOffsetX$36$1, floating_action_button_location.FabStartOffsetX);
  const StandardFabLocation_FabFloatOffsetY$36$ = class StandardFabLocation_FabFloatOffsetY extends StandardFabLocation_FabStartOffsetX$36$1 {};
  (StandardFabLocation_FabFloatOffsetY$36$.new = function() {
    StandardFabLocation_FabFloatOffsetY$36$.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabFloatOffsetY$36$.prototype;
  dart.applyMixin(StandardFabLocation_FabFloatOffsetY$36$, floating_action_button_location.FabFloatOffsetY);
  floating_action_button_location._MiniStartFloatFabLocation = class _MiniStartFloatFabLocation extends StandardFabLocation_FabFloatOffsetY$36$ {
    toString() {
      return "FloatingActionButtonLocation.miniStartFloat";
    }
  };
  (floating_action_button_location._MiniStartFloatFabLocation.new = function() {
    floating_action_button_location._MiniStartFloatFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniStartFloatFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniStartFloatFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniStartFloatFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniStartFloatFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._MiniStartFloatFabLocation, ['toString']);
  const StandardFabLocation_FabCenterOffsetX$36$0 = class StandardFabLocation_FabCenterOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabCenterOffsetX$36$0.new = function() {
    StandardFabLocation_FabCenterOffsetX$36$0.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabCenterOffsetX$36$0.prototype;
  dart.applyMixin(StandardFabLocation_FabCenterOffsetX$36$0, floating_action_button_location.FabCenterOffsetX);
  const StandardFabLocation_FabFloatOffsetY$36$0 = class StandardFabLocation_FabFloatOffsetY extends StandardFabLocation_FabCenterOffsetX$36$0 {};
  (StandardFabLocation_FabFloatOffsetY$36$0.new = function() {
    StandardFabLocation_FabFloatOffsetY$36$0.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabFloatOffsetY$36$0.prototype;
  dart.applyMixin(StandardFabLocation_FabFloatOffsetY$36$0, floating_action_button_location.FabFloatOffsetY);
  floating_action_button_location._CenterFloatFabLocation = class _CenterFloatFabLocation extends StandardFabLocation_FabFloatOffsetY$36$0 {
    toString() {
      return "FloatingActionButtonLocation.centerFloat";
    }
  };
  (floating_action_button_location._CenterFloatFabLocation.new = function() {
    floating_action_button_location._CenterFloatFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._CenterFloatFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._CenterFloatFabLocation);
  dart.addTypeCaches(floating_action_button_location._CenterFloatFabLocation);
  dart.setLibraryUri(floating_action_button_location._CenterFloatFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._CenterFloatFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36$2 = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36$2.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36$2.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36$2.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36$2, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabCenterOffsetX$36$1 = class StandardFabLocation_FabCenterOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36$2 {};
  (StandardFabLocation_FabCenterOffsetX$36$1.new = function() {
    StandardFabLocation_FabCenterOffsetX$36$1.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabCenterOffsetX$36$1.prototype;
  dart.applyMixin(StandardFabLocation_FabCenterOffsetX$36$1, floating_action_button_location.FabCenterOffsetX);
  const StandardFabLocation_FabFloatOffsetY$36$1 = class StandardFabLocation_FabFloatOffsetY extends StandardFabLocation_FabCenterOffsetX$36$1 {};
  (StandardFabLocation_FabFloatOffsetY$36$1.new = function() {
    StandardFabLocation_FabFloatOffsetY$36$1.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabFloatOffsetY$36$1.prototype;
  dart.applyMixin(StandardFabLocation_FabFloatOffsetY$36$1, floating_action_button_location.FabFloatOffsetY);
  floating_action_button_location._MiniCenterFloatFabLocation = class _MiniCenterFloatFabLocation extends StandardFabLocation_FabFloatOffsetY$36$1 {
    toString() {
      return "FloatingActionButtonLocation.miniCenterFloat";
    }
  };
  (floating_action_button_location._MiniCenterFloatFabLocation.new = function() {
    floating_action_button_location._MiniCenterFloatFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniCenterFloatFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniCenterFloatFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniCenterFloatFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniCenterFloatFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._MiniCenterFloatFabLocation, ['toString']);
  const StandardFabLocation_FabEndOffsetX$36$0 = class StandardFabLocation_FabEndOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabEndOffsetX$36$0.new = function() {
    StandardFabLocation_FabEndOffsetX$36$0.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabEndOffsetX$36$0.prototype;
  dart.applyMixin(StandardFabLocation_FabEndOffsetX$36$0, floating_action_button_location.FabEndOffsetX);
  const StandardFabLocation_FabFloatOffsetY$36$2 = class StandardFabLocation_FabFloatOffsetY extends StandardFabLocation_FabEndOffsetX$36$0 {};
  (StandardFabLocation_FabFloatOffsetY$36$2.new = function() {
    StandardFabLocation_FabFloatOffsetY$36$2.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabFloatOffsetY$36$2.prototype;
  dart.applyMixin(StandardFabLocation_FabFloatOffsetY$36$2, floating_action_button_location.FabFloatOffsetY);
  floating_action_button_location._EndFloatFabLocation = class _EndFloatFabLocation extends StandardFabLocation_FabFloatOffsetY$36$2 {
    toString() {
      return "FloatingActionButtonLocation.endFloat";
    }
  };
  (floating_action_button_location._EndFloatFabLocation.new = function() {
    floating_action_button_location._EndFloatFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._EndFloatFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._EndFloatFabLocation);
  dart.addTypeCaches(floating_action_button_location._EndFloatFabLocation);
  dart.setLibraryUri(floating_action_button_location._EndFloatFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._EndFloatFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36$3 = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36$3.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36$3.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36$3.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36$3, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabEndOffsetX$36$1 = class StandardFabLocation_FabEndOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36$3 {};
  (StandardFabLocation_FabEndOffsetX$36$1.new = function() {
    StandardFabLocation_FabEndOffsetX$36$1.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabEndOffsetX$36$1.prototype;
  dart.applyMixin(StandardFabLocation_FabEndOffsetX$36$1, floating_action_button_location.FabEndOffsetX);
  const StandardFabLocation_FabFloatOffsetY$36$3 = class StandardFabLocation_FabFloatOffsetY extends StandardFabLocation_FabEndOffsetX$36$1 {};
  (StandardFabLocation_FabFloatOffsetY$36$3.new = function() {
    StandardFabLocation_FabFloatOffsetY$36$3.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabFloatOffsetY$36$3.prototype;
  dart.applyMixin(StandardFabLocation_FabFloatOffsetY$36$3, floating_action_button_location.FabFloatOffsetY);
  floating_action_button_location._MiniEndFloatFabLocation = class _MiniEndFloatFabLocation extends StandardFabLocation_FabFloatOffsetY$36$3 {
    toString() {
      return "FloatingActionButtonLocation.miniEndFloat";
    }
  };
  (floating_action_button_location._MiniEndFloatFabLocation.new = function() {
    floating_action_button_location._MiniEndFloatFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniEndFloatFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniEndFloatFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniEndFloatFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniEndFloatFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._MiniEndFloatFabLocation, ['toString']);
  const StandardFabLocation_FabStartOffsetX$36$2 = class StandardFabLocation_FabStartOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabStartOffsetX$36$2.new = function() {
    StandardFabLocation_FabStartOffsetX$36$2.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabStartOffsetX$36$2.prototype;
  dart.applyMixin(StandardFabLocation_FabStartOffsetX$36$2, floating_action_button_location.FabStartOffsetX);
  const StandardFabLocation_FabDockedOffsetY$36 = class StandardFabLocation_FabDockedOffsetY extends StandardFabLocation_FabStartOffsetX$36$2 {};
  (StandardFabLocation_FabDockedOffsetY$36.new = function() {
    StandardFabLocation_FabDockedOffsetY$36.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabDockedOffsetY$36.prototype;
  dart.applyMixin(StandardFabLocation_FabDockedOffsetY$36, floating_action_button_location.FabDockedOffsetY);
  floating_action_button_location._StartDockedFabLocation = class _StartDockedFabLocation extends StandardFabLocation_FabDockedOffsetY$36 {
    toString() {
      return "FloatingActionButtonLocation.startDocked";
    }
  };
  (floating_action_button_location._StartDockedFabLocation.new = function() {
    floating_action_button_location._StartDockedFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._StartDockedFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._StartDockedFabLocation);
  dart.addTypeCaches(floating_action_button_location._StartDockedFabLocation);
  dart.setLibraryUri(floating_action_button_location._StartDockedFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._StartDockedFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36$4 = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36$4.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36$4.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36$4.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36$4, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabStartOffsetX$36$3 = class StandardFabLocation_FabStartOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36$4 {};
  (StandardFabLocation_FabStartOffsetX$36$3.new = function() {
    StandardFabLocation_FabStartOffsetX$36$3.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabStartOffsetX$36$3.prototype;
  dart.applyMixin(StandardFabLocation_FabStartOffsetX$36$3, floating_action_button_location.FabStartOffsetX);
  const StandardFabLocation_FabDockedOffsetY$36$ = class StandardFabLocation_FabDockedOffsetY extends StandardFabLocation_FabStartOffsetX$36$3 {};
  (StandardFabLocation_FabDockedOffsetY$36$.new = function() {
    StandardFabLocation_FabDockedOffsetY$36$.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabDockedOffsetY$36$.prototype;
  dart.applyMixin(StandardFabLocation_FabDockedOffsetY$36$, floating_action_button_location.FabDockedOffsetY);
  floating_action_button_location._MiniStartDockedFabLocation = class _MiniStartDockedFabLocation extends StandardFabLocation_FabDockedOffsetY$36$ {
    toString() {
      return "FloatingActionButtonLocation.miniStartDocked";
    }
  };
  (floating_action_button_location._MiniStartDockedFabLocation.new = function() {
    floating_action_button_location._MiniStartDockedFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniStartDockedFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniStartDockedFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniStartDockedFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniStartDockedFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._MiniStartDockedFabLocation, ['toString']);
  const StandardFabLocation_FabCenterOffsetX$36$2 = class StandardFabLocation_FabCenterOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabCenterOffsetX$36$2.new = function() {
    StandardFabLocation_FabCenterOffsetX$36$2.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabCenterOffsetX$36$2.prototype;
  dart.applyMixin(StandardFabLocation_FabCenterOffsetX$36$2, floating_action_button_location.FabCenterOffsetX);
  const StandardFabLocation_FabDockedOffsetY$36$0 = class StandardFabLocation_FabDockedOffsetY extends StandardFabLocation_FabCenterOffsetX$36$2 {};
  (StandardFabLocation_FabDockedOffsetY$36$0.new = function() {
    StandardFabLocation_FabDockedOffsetY$36$0.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabDockedOffsetY$36$0.prototype;
  dart.applyMixin(StandardFabLocation_FabDockedOffsetY$36$0, floating_action_button_location.FabDockedOffsetY);
  floating_action_button_location._CenterDockedFabLocation = class _CenterDockedFabLocation extends StandardFabLocation_FabDockedOffsetY$36$0 {
    toString() {
      return "FloatingActionButtonLocation.centerDocked";
    }
  };
  (floating_action_button_location._CenterDockedFabLocation.new = function() {
    floating_action_button_location._CenterDockedFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._CenterDockedFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._CenterDockedFabLocation);
  dart.addTypeCaches(floating_action_button_location._CenterDockedFabLocation);
  dart.setLibraryUri(floating_action_button_location._CenterDockedFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._CenterDockedFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36$5 = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36$5.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36$5.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36$5.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36$5, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabCenterOffsetX$36$3 = class StandardFabLocation_FabCenterOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36$5 {};
  (StandardFabLocation_FabCenterOffsetX$36$3.new = function() {
    StandardFabLocation_FabCenterOffsetX$36$3.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabCenterOffsetX$36$3.prototype;
  dart.applyMixin(StandardFabLocation_FabCenterOffsetX$36$3, floating_action_button_location.FabCenterOffsetX);
  const StandardFabLocation_FabDockedOffsetY$36$1 = class StandardFabLocation_FabDockedOffsetY extends StandardFabLocation_FabCenterOffsetX$36$3 {};
  (StandardFabLocation_FabDockedOffsetY$36$1.new = function() {
    StandardFabLocation_FabDockedOffsetY$36$1.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabDockedOffsetY$36$1.prototype;
  dart.applyMixin(StandardFabLocation_FabDockedOffsetY$36$1, floating_action_button_location.FabDockedOffsetY);
  floating_action_button_location._MiniCenterDockedFabLocation = class _MiniCenterDockedFabLocation extends StandardFabLocation_FabDockedOffsetY$36$1 {
    toString() {
      return "FloatingActionButtonLocation.miniCenterDocked";
    }
  };
  (floating_action_button_location._MiniCenterDockedFabLocation.new = function() {
    floating_action_button_location._MiniCenterDockedFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniCenterDockedFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniCenterDockedFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniCenterDockedFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniCenterDockedFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._MiniCenterDockedFabLocation, ['toString']);
  const StandardFabLocation_FabEndOffsetX$36$2 = class StandardFabLocation_FabEndOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabEndOffsetX$36$2.new = function() {
    StandardFabLocation_FabEndOffsetX$36$2.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabEndOffsetX$36$2.prototype;
  dart.applyMixin(StandardFabLocation_FabEndOffsetX$36$2, floating_action_button_location.FabEndOffsetX);
  const StandardFabLocation_FabDockedOffsetY$36$2 = class StandardFabLocation_FabDockedOffsetY extends StandardFabLocation_FabEndOffsetX$36$2 {};
  (StandardFabLocation_FabDockedOffsetY$36$2.new = function() {
    StandardFabLocation_FabDockedOffsetY$36$2.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabDockedOffsetY$36$2.prototype;
  dart.applyMixin(StandardFabLocation_FabDockedOffsetY$36$2, floating_action_button_location.FabDockedOffsetY);
  floating_action_button_location._EndDockedFabLocation = class _EndDockedFabLocation extends StandardFabLocation_FabDockedOffsetY$36$2 {
    toString() {
      return "FloatingActionButtonLocation.endDocked";
    }
  };
  (floating_action_button_location._EndDockedFabLocation.new = function() {
    floating_action_button_location._EndDockedFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._EndDockedFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._EndDockedFabLocation);
  dart.addTypeCaches(floating_action_button_location._EndDockedFabLocation);
  dart.setLibraryUri(floating_action_button_location._EndDockedFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._EndDockedFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36$6 = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36$6.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36$6.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36$6.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36$6, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabEndOffsetX$36$3 = class StandardFabLocation_FabEndOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36$6 {};
  (StandardFabLocation_FabEndOffsetX$36$3.new = function() {
    StandardFabLocation_FabEndOffsetX$36$3.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabEndOffsetX$36$3.prototype;
  dart.applyMixin(StandardFabLocation_FabEndOffsetX$36$3, floating_action_button_location.FabEndOffsetX);
  const StandardFabLocation_FabDockedOffsetY$36$3 = class StandardFabLocation_FabDockedOffsetY extends StandardFabLocation_FabEndOffsetX$36$3 {};
  (StandardFabLocation_FabDockedOffsetY$36$3.new = function() {
    StandardFabLocation_FabDockedOffsetY$36$3.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabDockedOffsetY$36$3.prototype;
  dart.applyMixin(StandardFabLocation_FabDockedOffsetY$36$3, floating_action_button_location.FabDockedOffsetY);
  floating_action_button_location._MiniEndDockedFabLocation = class _MiniEndDockedFabLocation extends StandardFabLocation_FabDockedOffsetY$36$3 {
    toString() {
      return "FloatingActionButtonLocation.miniEndDocked";
    }
  };
  (floating_action_button_location._MiniEndDockedFabLocation.new = function() {
    floating_action_button_location._MiniEndDockedFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniEndDockedFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniEndDockedFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniEndDockedFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniEndDockedFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._MiniEndDockedFabLocation, ['toString']);
  floating_action_button_location.FloatingActionButtonAnimator = class FloatingActionButtonAnimator extends core.Object {
    getAnimationRestart(previousValue) {
      if (previousValue == null) dart.nullFailed(I[19], 917, 37, "previousValue");
      return 0.0;
    }
    toString() {
      return object$.objectRuntimeType(this, "FloatingActionButtonAnimator");
    }
  };
  (floating_action_button_location.FloatingActionButtonAnimator.new = function() {
    ;
  }).prototype = floating_action_button_location.FloatingActionButtonAnimator.prototype;
  dart.addTypeTests(floating_action_button_location.FloatingActionButtonAnimator);
  dart.addTypeCaches(floating_action_button_location.FloatingActionButtonAnimator);
  dart.setMethodSignature(floating_action_button_location.FloatingActionButtonAnimator, () => ({
    __proto__: dart.getMethods(floating_action_button_location.FloatingActionButtonAnimator.__proto__),
    getAnimationRestart: dart.fnType(core.double, [core.double])
  }));
  dart.setLibraryUri(floating_action_button_location.FloatingActionButtonAnimator, I[18]);
  dart.defineExtensionMethods(floating_action_button_location.FloatingActionButtonAnimator, ['toString']);
  dart.defineLazy(floating_action_button_location.FloatingActionButtonAnimator, {
    /*floating_action_button_location.FloatingActionButtonAnimator.scaling*/get scaling() {
      return C[139] || CT.C139;
    }
  }, false);
  floating_action_button_location._ScalingFabMotionAnimator = class _ScalingFabMotionAnimator extends floating_action_button_location.FloatingActionButtonAnimator {
    getOffset(opts) {
      let begin = opts && 'begin' in opts ? opts.begin : null;
      if (begin == null) dart.nullFailed(I[19], 927, 38, "begin");
      let end = opts && 'end' in opts ? opts.end : null;
      if (end == null) dart.nullFailed(I[19], 927, 61, "end");
      let progress = opts && 'progress' in opts ? opts.progress : null;
      if (progress == null) dart.nullFailed(I[19], 927, 82, "progress");
      if (dart.notNull(progress) < 0.5) {
        return begin;
      } else {
        return end;
      }
    }
    getScaleAnimation(opts) {
      let parent = opts && 'parent' in opts ? opts.parent : null;
      if (parent == null) dart.nullFailed(I[19], 936, 68, "parent");
      let curve = C[140] || CT.C140;
      return new (T$._AnimationSwapOfdouble()).new(new animations.ReverseAnimation.new(parent.drive(core.double, new tween.CurveTween.new({curve: curve.flipped}))), parent.drive(core.double, new tween.CurveTween.new({curve: curve})), parent, 0.5);
    }
    getRotationAnimation(opts) {
      let parent = opts && 'parent' in opts ? opts.parent : null;
      if (parent == null) dart.nullFailed(I[19], 958, 71, "parent");
      return new (T$._AnimationSwapOfdouble()).new(parent.drive(core.double, floating_action_button_location._ScalingFabMotionAnimator._rotationTween), new animations.ReverseAnimation.new(parent.drive(core.double, floating_action_button_location._ScalingFabMotionAnimator._thresholdCenterTween)), parent, 0.5);
    }
    getAnimationRestart(previousValue) {
      if (previousValue == null) dart.nullFailed(I[19], 972, 37, "previousValue");
      return math.min(core.double, 1.0 - dart.notNull(previousValue), previousValue);
    }
  };
  (floating_action_button_location._ScalingFabMotionAnimator.new = function() {
    floating_action_button_location._ScalingFabMotionAnimator.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._ScalingFabMotionAnimator.prototype;
  dart.addTypeTests(floating_action_button_location._ScalingFabMotionAnimator);
  dart.addTypeCaches(floating_action_button_location._ScalingFabMotionAnimator);
  dart.setMethodSignature(floating_action_button_location._ScalingFabMotionAnimator, () => ({
    __proto__: dart.getMethods(floating_action_button_location._ScalingFabMotionAnimator.__proto__),
    getOffset: dart.fnType(ui.Offset, [], {}, {begin: ui.Offset, end: ui.Offset, progress: core.double}),
    getScaleAnimation: dart.fnType(animation.Animation$(core.double), [], {}, {parent: animation.Animation$(core.double)}),
    getRotationAnimation: dart.fnType(animation.Animation$(core.double), [], {}, {parent: animation.Animation$(core.double)})
  }));
  dart.setLibraryUri(floating_action_button_location._ScalingFabMotionAnimator, I[18]);
  dart.defineLazy(floating_action_button_location._ScalingFabMotionAnimator, {
    /*floating_action_button_location._ScalingFabMotionAnimator._rotationTween*/get _rotationTween() {
      return new (T$.TweenOfdouble()).new({begin: 1.0 - 0.125 * 2.0, end: 1.0});
    },
    /*floating_action_button_location._ScalingFabMotionAnimator._thresholdCenterTween*/get _thresholdCenterTween() {
      return new tween.CurveTween.new({curve: C[142] || CT.C142});
    }
  }, false);
  const _is__AnimationSwap_default = Symbol('_is__AnimationSwap_default');
  floating_action_button_location._AnimationSwap$ = dart.generic(T => {
    class _AnimationSwap extends animations.CompoundAnimation$(T) {
      get value() {
        return dart.notNull(this.parent.value) < dart.notNull(this.swapThreshold) ? this.first.value : this.next.value;
      }
    }
    (_AnimationSwap.new = function(first, next, parent, swapThreshold) {
      if (first == null) dart.nullFailed(I[19], 984, 31, "first");
      if (next == null) dart.nullFailed(I[19], 984, 51, "next");
      if (parent == null) dart.nullFailed(I[19], 984, 62, "parent");
      if (swapThreshold == null) dart.nullFailed(I[19], 984, 75, "swapThreshold");
      this.parent = parent;
      this.swapThreshold = swapThreshold;
      _AnimationSwap.__proto__.new.call(this, {first: first, next: next});
      ;
    }).prototype = _AnimationSwap.prototype;
    dart.addTypeTests(_AnimationSwap);
    _AnimationSwap.prototype[_is__AnimationSwap_default] = true;
    dart.addTypeCaches(_AnimationSwap);
    dart.setGetterSignature(_AnimationSwap, () => ({
      __proto__: dart.getGetters(_AnimationSwap.__proto__),
      value: T
    }));
    dart.setLibraryUri(_AnimationSwap, I[18]);
    dart.setFieldSignature(_AnimationSwap, () => ({
      __proto__: dart.getFields(_AnimationSwap.__proto__),
      parent: dart.finalFieldType(animation.Animation$(core.double)),
      swapThreshold: dart.finalFieldType(core.double)
    }));
    return _AnimationSwap;
  });
  floating_action_button_location._AnimationSwap = floating_action_button_location._AnimationSwap$();
  dart.addTypeTests(floating_action_button_location._AnimationSwap, _is__AnimationSwap_default);
  dart.defineLazy(floating_action_button_location, {
    /*floating_action_button_location.kFloatingActionButtonMargin*/get kFloatingActionButtonMargin() {
      return 16;
    },
    /*floating_action_button_location.kFloatingActionButtonSegue*/get kFloatingActionButtonSegue() {
      return C[143] || CT.C143;
    },
    /*floating_action_button_location.kFloatingActionButtonTurnInterval*/get kFloatingActionButtonTurnInterval() {
      return 0.125;
    },
    /*floating_action_button_location.kMiniButtonOffsetAdjustment*/get kMiniButtonOffsetAdjustment() {
      return 4;
    }
  }, false);
  floating_action_button._DefaultHeroTag = class _DefaultHeroTag extends core.Object {
    toString() {
      return "<default FloatingActionButton tag>";
    }
  };
  (floating_action_button._DefaultHeroTag.new = function() {
    ;
  }).prototype = floating_action_button._DefaultHeroTag.prototype;
  dart.addTypeTests(floating_action_button._DefaultHeroTag);
  dart.addTypeCaches(floating_action_button._DefaultHeroTag);
  dart.setLibraryUri(floating_action_button._DefaultHeroTag, I[20]);
  dart.defineExtensionMethods(floating_action_button._DefaultHeroTag, ['toString']);
  floating_action_button.FloatingActionButton = class FloatingActionButton extends framework.StatelessWidget {
    get child() {
      return this[S.child$1];
    }
    set child(value) {
      super.child = value;
    }
    get tooltip() {
      return this[S.tooltip$1];
    }
    set tooltip(value) {
      super.tooltip = value;
    }
    get foregroundColor() {
      return this[S.foregroundColor];
    }
    set foregroundColor(value) {
      super.foregroundColor = value;
    }
    get backgroundColor() {
      return this[S.backgroundColor$1];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get focusColor() {
      return this[S.focusColor$1];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[S.hoverColor$1];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get splashColor() {
      return this[S.splashColor$1];
    }
    set splashColor(value) {
      super.splashColor = value;
    }
    get heroTag() {
      return this[S.heroTag];
    }
    set heroTag(value) {
      super.heroTag = value;
    }
    get onPressed() {
      return this[S.onPressed$5];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    get mouseCursor() {
      return this[S.mouseCursor$1];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get elevation() {
      return this[S.elevation$1];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get focusElevation() {
      return this[S.focusElevation];
    }
    set focusElevation(value) {
      super.focusElevation = value;
    }
    get hoverElevation() {
      return this[S.hoverElevation];
    }
    set hoverElevation(value) {
      super.hoverElevation = value;
    }
    get highlightElevation() {
      return this[S.highlightElevation];
    }
    set highlightElevation(value) {
      super.highlightElevation = value;
    }
    get disabledElevation() {
      return this[S.disabledElevation];
    }
    set disabledElevation(value) {
      super.disabledElevation = value;
    }
    get mini() {
      return this[S.mini];
    }
    set mini(value) {
      super.mini = value;
    }
    get shape() {
      return this[S.shape$1];
    }
    set shape(value) {
      super.shape = value;
    }
    get clipBehavior() {
      return this[S.clipBehavior$1];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get isExtended() {
      return this[S.isExtended];
    }
    set isExtended(value) {
      super.isExtended = value;
    }
    get focusNode() {
      return this[S.focusNode$2];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get autofocus() {
      return this[S.autofocus$2];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get materialTapTargetSize() {
      return this[S.materialTapTargetSize];
    }
    set materialTapTargetSize(value) {
      super.materialTapTargetSize = value;
    }
    get enableFeedback() {
      return this[S.enableFeedback$1];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get [S._sizeConstraints$1]() {
      return this[S._sizeConstraints];
    }
    set [S._sizeConstraints$1](value) {
      super[S._sizeConstraints$1] = value;
    }
    build(context) {
      let t7, t7$, t7$0, t7$1, t7$2, t7$3, t7$4, t7$5, t7$6, t7$7, t7$8, t7$9, t7$10, t7$11, t7$12, t7$13, t7$14, t7$15, t7$16, t7$17, t7$18, t7$19, t7$20, t7$21, t7$22;
      if (context == null) dart.nullFailed(I[21], 437, 29, "context");
      let theme = theme$.Theme.of(context);
      let floatingActionButtonTheme = theme.floatingActionButtonTheme;
      let foregroundColor = (t7$ = (t7 = this.foregroundColor, t7 == null ? floatingActionButtonTheme.foregroundColor : t7), t7$ == null ? theme.colorScheme.onSecondary : t7$);
      let backgroundColor = (t7$1 = (t7$0 = this.backgroundColor, t7$0 == null ? floatingActionButtonTheme.backgroundColor : t7$0), t7$1 == null ? theme.colorScheme.secondary : t7$1);
      let focusColor = (t7$3 = (t7$2 = this.focusColor, t7$2 == null ? floatingActionButtonTheme.focusColor : t7$2), t7$3 == null ? theme.focusColor : t7$3);
      let hoverColor = (t7$5 = (t7$4 = this.hoverColor, t7$4 == null ? floatingActionButtonTheme.hoverColor : t7$4), t7$5 == null ? theme.hoverColor : t7$5);
      let splashColor = (t7$7 = (t7$6 = this.splashColor, t7$6 == null ? floatingActionButtonTheme.splashColor : t7$6), t7$7 == null ? theme.splashColor : t7$7);
      let elevation = (t7$9 = (t7$8 = this.elevation, t7$8 == null ? floatingActionButtonTheme.elevation : t7$8), t7$9 == null ? 6 : t7$9);
      let focusElevation = (t7$11 = (t7$10 = this.focusElevation, t7$10 == null ? floatingActionButtonTheme.focusElevation : t7$10), t7$11 == null ? 6 : t7$11);
      let hoverElevation = (t7$13 = (t7$12 = this.hoverElevation, t7$12 == null ? floatingActionButtonTheme.hoverElevation : t7$12), t7$13 == null ? 8 : t7$13);
      let disabledElevation = (t7$15 = (t7$14 = this.disabledElevation, t7$14 == null ? floatingActionButtonTheme.disabledElevation : t7$14), t7$15 == null ? elevation : t7$15);
      let highlightElevation = (t7$17 = (t7$16 = this.highlightElevation, t7$16 == null ? floatingActionButtonTheme.highlightElevation : t7$16), t7$17 == null ? 12 : t7$17);
      let materialTapTargetSize = (t7$18 = this.materialTapTargetSize, t7$18 == null ? theme.materialTapTargetSize : t7$18);
      let enableFeedback = (t7$20 = (t7$19 = this.enableFeedback, t7$19 == null ? floatingActionButtonTheme.enableFeedback : t7$19), t7$20 == null ? true : t7$20);
      let textStyle = dart.nullCheck(theme.textTheme.button).copyWith({color: foregroundColor, letterSpacing: 1.2});
      let shape = (t7$22 = (t7$21 = this.shape, t7$21 == null ? floatingActionButtonTheme.shape : t7$21), t7$22 == null ? dart.test(this.isExtended) ? floating_action_button.FloatingActionButton._defaultExtendedShape : floating_action_button.FloatingActionButton._defaultShape : t7$22);
      let result = new button.RawMaterialButton.new({onPressed: this.onPressed, mouseCursor: this.mouseCursor, elevation: elevation, focusElevation: focusElevation, hoverElevation: hoverElevation, highlightElevation: highlightElevation, disabledElevation: disabledElevation, constraints: this[S._sizeConstraints$1], materialTapTargetSize: materialTapTargetSize, fillColor: backgroundColor, focusColor: focusColor, hoverColor: hoverColor, splashColor: splashColor, textStyle: textStyle, shape: shape, clipBehavior: this.clipBehavior, focusNode: this.focusNode, autofocus: this.autofocus, enableFeedback: enableFeedback, child: this.child, $creationLocationd_0dea112b090073317d4: C[161] || CT.C161});
      if (this.tooltip != null) {
        result = new tooltip.Tooltip.new({message: dart.nullCheck(this.tooltip), child: result, $creationLocationd_0dea112b090073317d4: C[162] || CT.C162});
      }
      if (this.heroTag != null) {
        result = new heroes.Hero.new({tag: dart.nullCheck(this.heroTag), child: result, $creationLocationd_0dea112b090073317d4: C[163] || CT.C163});
      }
      return new basic.MergeSemantics.new({child: result, $creationLocationd_0dea112b090073317d4: C[164] || CT.C164});
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[21], 524, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.ObjectFlagPropertyOfVoidTovoid()).new("onPressed", this.onPressed, {ifNull: "disabled"}));
      properties.add(new diagnostics.StringProperty.new("tooltip", this.tooltip, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("foregroundColor", this.foregroundColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("focusColor", this.focusColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("hoverColor", this.hoverColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("splashColor", this.splashColor, {defaultValue: null}));
      properties.add(new (T$.ObjectFlagPropertyOfObject()).new("heroTag", this.heroTag, {ifPresent: "hero"}));
      properties.add(new diagnostics.DoubleProperty.new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("focusElevation", this.focusElevation, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("hoverElevation", this.hoverElevation, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("highlightElevation", this.highlightElevation, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("disabledElevation", this.disabledElevation, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfFocusNode()).new("focusNode", this.focusNode, {defaultValue: null}));
      properties.add(new diagnostics.FlagProperty.new("isExtended", {value: this.isExtended, ifTrue: "extended"}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialTapTargetSize()).new("materialTapTargetSize", this.materialTapTargetSize, {defaultValue: null}));
    }
  };
  (floating_action_button.FloatingActionButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let tooltip = opts && 'tooltip' in opts ? opts.tooltip : null;
    let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let heroTag = opts && 'heroTag' in opts ? opts.heroTag : C[144] || CT.C144;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let focusElevation = opts && 'focusElevation' in opts ? opts.focusElevation : null;
    let hoverElevation = opts && 'hoverElevation' in opts ? opts.hoverElevation : null;
    let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : null;
    let disabledElevation = opts && 'disabledElevation' in opts ? opts.disabledElevation : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let mini = opts && 'mini' in opts ? opts.mini : false;
    if (mini == null) dart.nullFailed(I[21], 143, 10, "mini");
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[59] || CT.C59;
    if (clipBehavior == null) dart.nullFailed(I[21], 145, 10, "clipBehavior");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[21], 147, 10, "autofocus");
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let isExtended = opts && 'isExtended' in opts ? opts.isExtended : false;
    if (isExtended == null) dart.nullFailed(I[21], 149, 10, "isExtended");
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.child$1] = child;
    this[S.tooltip$1] = tooltip;
    this[S.foregroundColor] = foregroundColor;
    this[S.backgroundColor$1] = backgroundColor;
    this[S.focusColor$1] = focusColor;
    this[S.hoverColor$1] = hoverColor;
    this[S.splashColor$1] = splashColor;
    this[S.heroTag] = heroTag;
    this[S.elevation$1] = elevation;
    this[S.focusElevation] = focusElevation;
    this[S.hoverElevation] = hoverElevation;
    this[S.highlightElevation] = highlightElevation;
    this[S.disabledElevation] = disabledElevation;
    this[S.onPressed$5] = onPressed;
    this[S.mouseCursor$1] = mouseCursor;
    this[S.mini] = mini;
    this[S.shape$1] = shape;
    this[S.clipBehavior$1] = clipBehavior;
    this[S.focusNode$2] = focusNode;
    this[S.autofocus$2] = autofocus;
    this[S.materialTapTargetSize] = materialTapTargetSize;
    this[S.isExtended] = isExtended;
    this[S.enableFeedback$1] = enableFeedback;
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[21], 151, 15, "elevation == null || elevation >= 0.0");
    if (!(focusElevation == null || dart.notNull(focusElevation) >= 0.0)) dart.assertFailed(null, I[21], 152, 15, "focusElevation == null || focusElevation >= 0.0");
    if (!(hoverElevation == null || dart.notNull(hoverElevation) >= 0.0)) dart.assertFailed(null, I[21], 153, 15, "hoverElevation == null || hoverElevation >= 0.0");
    if (!(highlightElevation == null || dart.notNull(highlightElevation) >= 0.0)) dart.assertFailed(null, I[21], 154, 15, "highlightElevation == null || highlightElevation >= 0.0");
    if (!(disabledElevation == null || dart.notNull(disabledElevation) >= 0.0)) dart.assertFailed(null, I[21], 155, 15, "disabledElevation == null || disabledElevation >= 0.0");
    if (!(mini != null)) dart.assertFailed(null, I[21], 156, 15, "mini != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, I[21], 157, 15, "clipBehavior != null");
    if (!(isExtended != null)) dart.assertFailed(null, I[21], 158, 15, "isExtended != null");
    if (!(autofocus != null)) dart.assertFailed(null, I[21], 159, 15, "autofocus != null");
    this[S._sizeConstraints] = dart.test(mini) ? floating_action_button._kMiniSizeConstraints : floating_action_button._kSizeConstraints;
    floating_action_button.FloatingActionButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = floating_action_button.FloatingActionButton.prototype;
  (floating_action_button.FloatingActionButton.extended = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let tooltip = opts && 'tooltip' in opts ? opts.tooltip : null;
    let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let heroTag = opts && 'heroTag' in opts ? opts.heroTag : C[144] || CT.C144;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let focusElevation = opts && 'focusElevation' in opts ? opts.focusElevation : null;
    let hoverElevation = opts && 'hoverElevation' in opts ? opts.hoverElevation : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : null;
    let disabledElevation = opts && 'disabledElevation' in opts ? opts.disabledElevation : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : C[2] || CT.C2;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let isExtended = opts && 'isExtended' in opts ? opts.isExtended : true;
    if (isExtended == null) dart.nullFailed(I[21], 186, 10, "isExtended");
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[59] || CT.C59;
    if (clipBehavior == null) dart.nullFailed(I[21], 188, 10, "clipBehavior");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[21], 190, 10, "autofocus");
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let label = opts && 'label' in opts ? opts.label : null;
    if (label == null) dart.nullFailed(I[21], 192, 21, "label");
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.tooltip$1] = tooltip;
    this[S.foregroundColor] = foregroundColor;
    this[S.backgroundColor$1] = backgroundColor;
    this[S.focusColor$1] = focusColor;
    this[S.hoverColor$1] = hoverColor;
    this[S.heroTag] = heroTag;
    this[S.elevation$1] = elevation;
    this[S.focusElevation] = focusElevation;
    this[S.hoverElevation] = hoverElevation;
    this[S.splashColor$1] = splashColor;
    this[S.highlightElevation] = highlightElevation;
    this[S.disabledElevation] = disabledElevation;
    this[S.onPressed$5] = onPressed;
    this[S.mouseCursor$1] = mouseCursor;
    this[S.shape$1] = shape;
    this[S.isExtended] = isExtended;
    this[S.materialTapTargetSize] = materialTapTargetSize;
    this[S.clipBehavior$1] = clipBehavior;
    this[S.focusNode$2] = focusNode;
    this[S.autofocus$2] = autofocus;
    this[S.enableFeedback$1] = enableFeedback;
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[21], 194, 15, "elevation == null || elevation >= 0.0");
    if (!(focusElevation == null || dart.notNull(focusElevation) >= 0.0)) dart.assertFailed(null, I[21], 195, 15, "focusElevation == null || focusElevation >= 0.0");
    if (!(hoverElevation == null || dart.notNull(hoverElevation) >= 0.0)) dart.assertFailed(null, I[21], 196, 15, "hoverElevation == null || hoverElevation >= 0.0");
    if (!(highlightElevation == null || dart.notNull(highlightElevation) >= 0.0)) dart.assertFailed(null, I[21], 197, 15, "highlightElevation == null || highlightElevation >= 0.0");
    if (!(disabledElevation == null || dart.notNull(disabledElevation) >= 0.0)) dart.assertFailed(null, I[21], 198, 15, "disabledElevation == null || disabledElevation >= 0.0");
    if (!(isExtended != null)) dart.assertFailed(null, I[21], 199, 15, "isExtended != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, I[21], 200, 15, "clipBehavior != null");
    if (!(autofocus != null)) dart.assertFailed(null, I[21], 201, 15, "autofocus != null");
    this[S._sizeConstraints] = floating_action_button._kExtendedSizeConstraints;
    this[S.mini] = false;
    this[S.child$1] = new floating_action_button._ChildOverflowBox.new({child: new basic.Row.new({mainAxisSize: flex.MainAxisSize.min, children: icon == null ? T$.JSArrayOfWidget().of([C[145] || CT.C145, label, C[147] || CT.C147]) : !dart.test(isExtended) ? T$.JSArrayOfWidget().of([C[149] || CT.C149, icon, C[151] || CT.C151]) : T$.JSArrayOfWidget().of([C[153] || CT.C153, icon, C[155] || CT.C155, label, C[157] || CT.C157]), $creationLocationd_0dea112b090073317d4: C[159] || CT.C159}), $creationLocationd_0dea112b090073317d4: C[160] || CT.C160});
    floating_action_button.FloatingActionButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = floating_action_button.FloatingActionButton.prototype;
  dart.addTypeTests(floating_action_button.FloatingActionButton);
  dart.addTypeCaches(floating_action_button.FloatingActionButton);
  dart.setMethodSignature(floating_action_button.FloatingActionButton, () => ({
    __proto__: dart.getMethods(floating_action_button.FloatingActionButton.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(floating_action_button.FloatingActionButton, I[20]);
  dart.setFieldSignature(floating_action_button.FloatingActionButton, () => ({
    __proto__: dart.getFields(floating_action_button.FloatingActionButton.__proto__),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    tooltip: dart.finalFieldType(dart.nullable(core.String)),
    foregroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    focusColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hoverColor: dart.finalFieldType(dart.nullable(ui.Color)),
    splashColor: dart.finalFieldType(dart.nullable(ui.Color)),
    heroTag: dart.finalFieldType(dart.nullable(core.Object)),
    onPressed: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    mouseCursor: dart.finalFieldType(dart.nullable(mouse_cursor.MouseCursor)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    focusElevation: dart.finalFieldType(dart.nullable(core.double)),
    hoverElevation: dart.finalFieldType(dart.nullable(core.double)),
    highlightElevation: dart.finalFieldType(dart.nullable(core.double)),
    disabledElevation: dart.finalFieldType(dart.nullable(core.double)),
    mini: dart.finalFieldType(core.bool),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    clipBehavior: dart.finalFieldType(ui.Clip),
    isExtended: dart.finalFieldType(core.bool),
    focusNode: dart.finalFieldType(dart.nullable(focus_manager.FocusNode)),
    autofocus: dart.finalFieldType(core.bool),
    materialTapTargetSize: dart.finalFieldType(dart.nullable(theme_data.MaterialTapTargetSize)),
    enableFeedback: dart.finalFieldType(dart.nullable(core.bool)),
    [S._sizeConstraints$1]: dart.finalFieldType(box$.BoxConstraints)
  }));
  dart.defineLazy(floating_action_button.FloatingActionButton, {
    /*floating_action_button.FloatingActionButton._defaultElevation*/get _defaultElevation() {
      return 6;
    },
    /*floating_action_button.FloatingActionButton._defaultFocusElevation*/get _defaultFocusElevation() {
      return 6;
    },
    /*floating_action_button.FloatingActionButton._defaultHoverElevation*/get _defaultHoverElevation() {
      return 8;
    },
    /*floating_action_button.FloatingActionButton._defaultHighlightElevation*/get _defaultHighlightElevation() {
      return 12;
    },
    /*floating_action_button.FloatingActionButton._defaultShape*/get _defaultShape() {
      return C[165] || CT.C165;
    },
    /*floating_action_button.FloatingActionButton._defaultExtendedShape*/get _defaultExtendedShape() {
      return C[166] || CT.C166;
    }
  }, false);
  floating_action_button._ChildOverflowBox = class _ChildOverflowBox extends framework.SingleChildRenderObjectWidget {
    createRenderObject(context) {
      if (context == null) dart.nullFailed(I[21], 558, 59, "context");
      return new floating_action_button._RenderChildOverflowBox.new({textDirection: basic.Directionality.of(context)});
    }
    updateRenderObject(context, renderObject) {
      if (context == null) dart.nullFailed(I[21], 565, 40, "context");
      floating_action_button._RenderChildOverflowBox.as(renderObject);
      if (renderObject == null) dart.nullFailed(I[21], 565, 73, "renderObject");
      renderObject.textDirection = basic.Directionality.of(context);
    }
  };
  (floating_action_button._ChildOverflowBox.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    floating_action_button._ChildOverflowBox.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = floating_action_button._ChildOverflowBox.prototype;
  dart.addTypeTests(floating_action_button._ChildOverflowBox);
  dart.addTypeCaches(floating_action_button._ChildOverflowBox);
  dart.setMethodSignature(floating_action_button._ChildOverflowBox, () => ({
    __proto__: dart.getMethods(floating_action_button._ChildOverflowBox.__proto__),
    createRenderObject: dart.fnType(floating_action_button._RenderChildOverflowBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(floating_action_button._ChildOverflowBox, I[20]);
  floating_action_button._RenderChildOverflowBox = class _RenderChildOverflowBox extends shifted_box.RenderAligningShiftedBox {
    computeMinIntrinsicWidth(height) {
      if (height == null) dart.nullFailed(I[21], 577, 42, "height");
      return 0.0;
    }
    computeMinIntrinsicHeight(width) {
      if (width == null) dart.nullFailed(I[21], 580, 43, "width");
      return 0.0;
    }
    computeDryLayout(constraints) {
      if (constraints == null) dart.nullFailed(I[21], 583, 40, "constraints");
      if (this.child != null) {
        let childSize = dart.nullCheck(this.child).getDryLayout(C[167] || CT.C167);
        return new ui.Size.new(math.max(core.double, constraints.minWidth, math.min(core.double, constraints.maxWidth, childSize.width)), math.max(core.double, constraints.minHeight, math.min(core.double, constraints.maxHeight, childSize.height)));
      } else {
        return constraints.biggest;
      }
    }
    performLayout() {
      let constraints = this.constraints;
      if (this.child != null) {
        dart.nullCheck(this.child).layout(C[167] || CT.C167, {parentUsesSize: true});
        this.size = new ui.Size.new(math.max(core.double, constraints.minWidth, math.min(core.double, constraints.maxWidth, dart.nullCheck(this.child).size.width)), math.max(core.double, constraints.minHeight, math.min(core.double, constraints.maxHeight, dart.nullCheck(this.child).size.height)));
        this.alignChild();
      } else {
        this.size = constraints.biggest;
      }
    }
  };
  (floating_action_button._RenderChildOverflowBox.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    floating_action_button._RenderChildOverflowBox.__proto__.new.call(this, {child: child, alignment: alignment.Alignment.center, textDirection: textDirection});
    ;
  }).prototype = floating_action_button._RenderChildOverflowBox.prototype;
  dart.addTypeTests(floating_action_button._RenderChildOverflowBox);
  dart.addTypeCaches(floating_action_button._RenderChildOverflowBox);
  dart.setLibraryUri(floating_action_button._RenderChildOverflowBox, I[20]);
  dart.defineLazy(floating_action_button, {
    /*floating_action_button._kSizeConstraints*/get _kSizeConstraints() {
      return C[168] || CT.C168;
    },
    /*floating_action_button._kMiniSizeConstraints*/get _kMiniSizeConstraints() {
      return C[169] || CT.C169;
    },
    /*floating_action_button._kExtendedSizeConstraints*/get _kExtendedSizeConstraints() {
      return C[170] || CT.C170;
    }
  }, false);
  flexible_space_bar.CollapseMode = class CollapseMode extends core.Object {
    toString() {
      return this[S._name$8];
    }
  };
  (flexible_space_bar.CollapseMode.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[22], 15, 6, "index");
    if (_name == null) dart.nullFailed(I[22], 15, 6, "_name");
    this.index = index;
    this[S._name$8] = _name;
    ;
  }).prototype = flexible_space_bar.CollapseMode.prototype;
  dart.addTypeTests(flexible_space_bar.CollapseMode);
  dart.addTypeCaches(flexible_space_bar.CollapseMode);
  flexible_space_bar.CollapseMode[dart.implements] = () => [core.Enum];
  dart.setLibraryUri(flexible_space_bar.CollapseMode, I[23]);
  dart.setFieldSignature(flexible_space_bar.CollapseMode, () => ({
    __proto__: dart.getFields(flexible_space_bar.CollapseMode.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$8]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(flexible_space_bar.CollapseMode, ['toString']);
  flexible_space_bar.CollapseMode.parallax = C[171] || CT.C171;
  flexible_space_bar.CollapseMode.pin = C[172] || CT.C172;
  flexible_space_bar.CollapseMode.none = C[173] || CT.C173;
  flexible_space_bar.CollapseMode.values = C[174] || CT.C174;
  flexible_space_bar.StretchMode = class StretchMode extends core.Object {
    toString() {
      return this[S._name$8];
    }
  };
  (flexible_space_bar.StretchMode.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[22], 27, 6, "index");
    if (_name == null) dart.nullFailed(I[22], 27, 6, "_name");
    this.index = index;
    this[S._name$8] = _name;
    ;
  }).prototype = flexible_space_bar.StretchMode.prototype;
  dart.addTypeTests(flexible_space_bar.StretchMode);
  dart.addTypeCaches(flexible_space_bar.StretchMode);
  flexible_space_bar.StretchMode[dart.implements] = () => [core.Enum];
  dart.setLibraryUri(flexible_space_bar.StretchMode, I[23]);
  dart.setFieldSignature(flexible_space_bar.StretchMode, () => ({
    __proto__: dart.getFields(flexible_space_bar.StretchMode.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$8]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(flexible_space_bar.StretchMode, ['toString']);
  flexible_space_bar.StretchMode.zoomBackground = C[175] || CT.C175;
  flexible_space_bar.StretchMode.blurBackground = C[176] || CT.C176;
  flexible_space_bar.StretchMode.fadeTitle = C[177] || CT.C177;
  flexible_space_bar.StretchMode.values = C[178] || CT.C178;
  flexible_space_bar.FlexibleSpaceBar = class FlexibleSpaceBar extends framework.StatefulWidget {
    get title() {
      return this[S.title];
    }
    set title(value) {
      super.title = value;
    }
    get background() {
      return this[S.background];
    }
    set background(value) {
      super.background = value;
    }
    get centerTitle() {
      return this[S.centerTitle];
    }
    set centerTitle(value) {
      super.centerTitle = value;
    }
    get collapseMode() {
      return this[S.collapseMode];
    }
    set collapseMode(value) {
      super.collapseMode = value;
    }
    get stretchModes() {
      return this[S.stretchModes];
    }
    set stretchModes(value) {
      super.stretchModes = value;
    }
    get titlePadding() {
      return this[S.titlePadding];
    }
    set titlePadding(value) {
      super.titlePadding = value;
    }
    static createSettings(opts) {
      let t7, t7$, t7$0;
      let toolbarOpacity = opts && 'toolbarOpacity' in opts ? opts.toolbarOpacity : null;
      let minExtent = opts && 'minExtent' in opts ? opts.minExtent : null;
      let maxExtent = opts && 'maxExtent' in opts ? opts.maxExtent : null;
      let isScrolledUnder = opts && 'isScrolledUnder' in opts ? opts.isScrolledUnder : null;
      let currentExtent = opts && 'currentExtent' in opts ? opts.currentExtent : null;
      if (currentExtent == null) dart.nullFailed(I[22], 225, 21, "currentExtent");
      let child = opts && 'child' in opts ? opts.child : null;
      if (child == null) dart.nullFailed(I[22], 226, 21, "child");
      if (!(currentExtent != null)) dart.assertFailed(null, I[22], 228, 12, "currentExtent != null");
      return new flexible_space_bar.FlexibleSpaceBarSettings.new({toolbarOpacity: (t7 = toolbarOpacity, t7 == null ? 1.0 : t7), minExtent: (t7$ = minExtent, t7$ == null ? currentExtent : t7$), maxExtent: (t7$0 = maxExtent, t7$0 == null ? currentExtent : t7$0), isScrolledUnder: isScrolledUnder, currentExtent: currentExtent, child: child, $creationLocationd_0dea112b090073317d4: C[180] || CT.C180});
    }
    createState() {
      return new flexible_space_bar._FlexibleSpaceBarState.new();
    }
  };
  (flexible_space_bar.FlexibleSpaceBar.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let title = opts && 'title' in opts ? opts.title : null;
    let background = opts && 'background' in opts ? opts.background : null;
    let centerTitle = opts && 'centerTitle' in opts ? opts.centerTitle : null;
    let titlePadding = opts && 'titlePadding' in opts ? opts.titlePadding : null;
    let collapseMode = opts && 'collapseMode' in opts ? opts.collapseMode : C[171] || CT.C171;
    if (collapseMode == null) dart.nullFailed(I[22], 159, 10, "collapseMode");
    let stretchModes = opts && 'stretchModes' in opts ? opts.stretchModes : C[179] || CT.C179;
    if (stretchModes == null) dart.nullFailed(I[22], 160, 10, "stretchModes");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.title] = title;
    this[S.background] = background;
    this[S.centerTitle] = centerTitle;
    this[S.titlePadding] = titlePadding;
    this[S.collapseMode] = collapseMode;
    this[S.stretchModes] = stretchModes;
    if (!(collapseMode != null)) dart.assertFailed(null, I[22], 161, 15, "collapseMode != null");
    flexible_space_bar.FlexibleSpaceBar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = flexible_space_bar.FlexibleSpaceBar.prototype;
  dart.addTypeTests(flexible_space_bar.FlexibleSpaceBar);
  dart.addTypeCaches(flexible_space_bar.FlexibleSpaceBar);
  dart.setMethodSignature(flexible_space_bar.FlexibleSpaceBar, () => ({
    __proto__: dart.getMethods(flexible_space_bar.FlexibleSpaceBar.__proto__),
    createState: dart.fnType(framework.State$(flexible_space_bar.FlexibleSpaceBar), [])
  }));
  dart.setLibraryUri(flexible_space_bar.FlexibleSpaceBar, I[23]);
  dart.setFieldSignature(flexible_space_bar.FlexibleSpaceBar, () => ({
    __proto__: dart.getFields(flexible_space_bar.FlexibleSpaceBar.__proto__),
    title: dart.finalFieldType(dart.nullable(framework.Widget)),
    background: dart.finalFieldType(dart.nullable(framework.Widget)),
    centerTitle: dart.finalFieldType(dart.nullable(core.bool)),
    collapseMode: dart.finalFieldType(flexible_space_bar.CollapseMode),
    stretchModes: dart.finalFieldType(core.List$(flexible_space_bar.StretchMode)),
    titlePadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry))
  }));
  flexible_space_bar._FlexibleSpaceBarState = class _FlexibleSpaceBarState extends framework.State$(flexible_space_bar.FlexibleSpaceBar) {
    [S._getEffectiveCenterTitle](theme) {
      if (theme == null) dart.nullFailed(I[22], 244, 43, "theme");
      if (this.widget.centerTitle != null) return dart.nullCheck(this.widget.centerTitle);
      if (!(theme.platform != null)) dart.assertFailed(null, I[22], 247, 12, "theme.platform != null");
      switch (theme.platform) {
        case C[11] || CT.C11:
        case C[12] || CT.C12:
        case C[13] || CT.C13:
        case C[14] || CT.C14:
        {
          return false;
        }
        case C[15] || CT.C15:
        case C[16] || CT.C16:
        {
          return true;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    [S._getTitleAlignment](effectiveCenterTitle) {
      if (effectiveCenterTitle == null) dart.nullFailed(I[22], 260, 37, "effectiveCenterTitle");
      if (dart.test(effectiveCenterTitle)) return alignment.Alignment.bottomCenter;
      let textDirection = basic.Directionality.of(this.context);
      if (!(textDirection != null)) dart.assertFailed(null, I[22], 264, 12, "textDirection != null");
      switch (textDirection) {
        case C[137] || CT.C137:
        {
          return alignment.Alignment.bottomRight;
        }
        case C[138] || CT.C138:
        {
          return alignment.Alignment.bottomLeft;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    [S._getCollapsePadding](t, settings) {
      if (t == null) dart.nullFailed(I[22], 273, 37, "t");
      if (settings == null) dart.nullFailed(I[22], 273, 65, "settings");
      switch (this.widget.collapseMode) {
        case C[172] || CT.C172:
        {
          return -(dart.notNull(settings.maxExtent) - dart.notNull(settings.currentExtent));
        }
        case C[173] || CT.C173:
        {
          return 0.0;
        }
        case C[171] || CT.C171:
        {
          let deltaExtent = dart.notNull(settings.maxExtent) - dart.notNull(settings.minExtent);
          return -dart.notNull(new (T$.TweenOfdouble()).new({begin: 0.0, end: deltaExtent / 4.0}).transform(t));
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    build(context) {
      if (context == null) dart.nullFailed(I[22], 286, 29, "context");
      return new layout_builder.LayoutBuilder.new({builder: dart.fn((context, constraints) => {
          let t7, t7$;
          if (context == null) dart.nullFailed(I[22], 288, 30, "context");
          if (constraints == null) dart.nullFailed(I[22], 288, 54, "constraints");
          let settings = dart.nullCheck(context.dependOnInheritedWidgetOfExactType(flexible_space_bar.FlexibleSpaceBarSettings));
          if (!(settings !== null)) dart.assertFailed("A FlexibleSpaceBar must be wrapped in the widget returned by FlexibleSpaceBar.createSettings().", I[22], 291, 11, "settings != null");
          let children = T$.JSArrayOfWidget().of([]);
          let deltaExtent = dart.notNull(settings.maxExtent) - dart.notNull(settings.minExtent);
          let t = (1.0 - (dart.notNull(settings.currentExtent) - dart.notNull(settings.minExtent)) / deltaExtent)[S.$clamp](0.0, 1.0);
          if (this.widget.background != null) {
            let fadeStart = math.max(core.double, 0.0, 1.0 - 56 / deltaExtent);
            if (!(fadeStart <= 1)) dart.assertFailed(null, I[22], 307, 18, "fadeStart <= fadeEnd");
            let opacity = settings.maxExtent == settings.minExtent ? 1.0 : 1.0 - dart.notNull(new curves.Interval.new(fadeStart, 1).transform(t));
            let height = settings.maxExtent;
            if (dart.test(this.widget.stretchModes[S.$contains](flexible_space_bar.StretchMode.zoomBackground)) && dart.notNull(constraints.maxHeight) > dart.notNull(height)) {
              height = constraints.maxHeight;
            }
            children[S.$add](new basic.Positioned.new({top: this[S._getCollapsePadding](t, settings), left: 0.0, right: 0.0, height: height, child: new basic.Opacity.new({alwaysIncludeSemantics: true, opacity: opacity, child: this.widget.background, $creationLocationd_0dea112b090073317d4: C[181] || CT.C181}), $creationLocationd_0dea112b090073317d4: C[182] || CT.C182}));
            if (dart.test(this.widget.stretchModes[S.$contains](flexible_space_bar.StretchMode.blurBackground)) && dart.notNull(constraints.maxHeight) > dart.notNull(settings.maxExtent)) {
              let blurAmount = (dart.notNull(constraints.maxHeight) - dart.notNull(settings.maxExtent)) / 10;
              children[S.$add](new basic.Positioned.fill({child: new basic.BackdropFilter.new({filter: ui.ImageFilter.blur({sigmaX: blurAmount, sigmaY: blurAmount}), child: new container.Container.new({color: colors$.Colors.transparent, $creationLocationd_0dea112b090073317d4: C[183] || CT.C183}), $creationLocationd_0dea112b090073317d4: C[184] || CT.C184}), $creationLocationd_0dea112b090073317d4: C[185] || CT.C185}));
            }
          }
          if (this.widget.title != null) {
            let theme = theme$.Theme.of(context);
            let title = null;
            switch (theme.platform) {
              case C[15] || CT.C15:
              case C[16] || CT.C16:
              {
                title = this.widget.title;
                break;
              }
              case C[11] || CT.C11:
              case C[12] || CT.C12:
              case C[13] || CT.C13:
              case C[14] || CT.C14:
              {
                title = new basic.Semantics.new({namesRoute: true, child: this.widget.title, $creationLocationd_0dea112b090073317d4: C[186] || CT.C186});
                break;
              }
              default:
              {
                dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
              }
            }
            if (dart.test(this.widget.stretchModes[S.$contains](flexible_space_bar.StretchMode.fadeTitle)) && dart.notNull(constraints.maxHeight) > dart.notNull(settings.maxExtent)) {
              let stretchOpacity = 1 - ((dart.notNull(constraints.maxHeight) - dart.notNull(settings.maxExtent)) / 100)[S.$clamp](0.0, 1.0);
              title = new basic.Opacity.new({opacity: stretchOpacity, child: title, $creationLocationd_0dea112b090073317d4: C[187] || CT.C187});
            }
            let opacity = settings.toolbarOpacity;
            if (dart.notNull(opacity) > 0.0) {
              let titleStyle = dart.nullCheck(theme.primaryTextTheme.headline6);
              titleStyle = titleStyle.copyWith({color: dart.nullCheck(titleStyle.color).withOpacity(opacity)});
              let effectiveCenterTitle = this[S._getEffectiveCenterTitle](theme);
              let padding = (t7 = this.widget.titlePadding, t7 == null ? new edge_insets.EdgeInsetsDirectional.only({start: dart.test(effectiveCenterTitle) ? 0.0 : 72.0, bottom: 16.0}) : t7);
              let scaleValue = new (T$.TweenOfdouble()).new({begin: 1.5, end: 1.0}).transform(t);
              let scaleTransform = (t7$ = vector_math_64.Matrix4.identity(), (() => {
                t7$.scale(scaleValue, scaleValue, 1.0);
                return t7$;
              })());
              let titleAlignment = this[S._getTitleAlignment](effectiveCenterTitle);
              children[S.$add](new container.Container.new({padding: padding, child: new basic.Transform.new({alignment: titleAlignment, transform: scaleTransform, child: new basic.Align.new({alignment: titleAlignment, child: new text$.DefaultTextStyle.new({style: titleStyle, child: new layout_builder.LayoutBuilder.new({builder: dart.fn((context, constraints) => {
                          if (context == null) dart.nullFailed(I[22], 410, 46, "context");
                          if (constraints == null) dart.nullFailed(I[22], 410, 70, "constraints");
                          return new container.Container.new({width: dart.notNull(constraints.maxWidth) / dart.notNull(scaleValue), alignment: titleAlignment, child: title, $creationLocationd_0dea112b090073317d4: C[188] || CT.C188});
                        }, T$.BuildContextAndBoxConstraintsToContainer()), $creationLocationd_0dea112b090073317d4: C[189] || CT.C189}), $creationLocationd_0dea112b090073317d4: C[190] || CT.C190}), $creationLocationd_0dea112b090073317d4: C[191] || CT.C191}), $creationLocationd_0dea112b090073317d4: C[192] || CT.C192}), $creationLocationd_0dea112b090073317d4: C[193] || CT.C193}));
            }
          }
          return new basic.ClipRect.new({child: new basic.Stack.new({children: children, $creationLocationd_0dea112b090073317d4: C[194] || CT.C194}), $creationLocationd_0dea112b090073317d4: C[195] || CT.C195});
        }, T$.BuildContextAndBoxConstraintsToClipRect()), $creationLocationd_0dea112b090073317d4: C[196] || CT.C196});
    }
  };
  (flexible_space_bar._FlexibleSpaceBarState.new = function() {
    flexible_space_bar._FlexibleSpaceBarState.__proto__.new.call(this);
    ;
  }).prototype = flexible_space_bar._FlexibleSpaceBarState.prototype;
  dart.addTypeTests(flexible_space_bar._FlexibleSpaceBarState);
  dart.addTypeCaches(flexible_space_bar._FlexibleSpaceBarState);
  dart.setMethodSignature(flexible_space_bar._FlexibleSpaceBarState, () => ({
    __proto__: dart.getMethods(flexible_space_bar._FlexibleSpaceBarState.__proto__),
    [S._getEffectiveCenterTitle]: dart.fnType(core.bool, [theme_data.ThemeData]),
    [S._getTitleAlignment]: dart.fnType(alignment.Alignment, [core.bool]),
    [S._getCollapsePadding]: dart.fnType(core.double, [core.double, flexible_space_bar.FlexibleSpaceBarSettings]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(flexible_space_bar._FlexibleSpaceBarState, I[23]);
  flexible_space_bar.FlexibleSpaceBarSettings = class FlexibleSpaceBarSettings extends framework.InheritedWidget {
    get toolbarOpacity() {
      return this[S.toolbarOpacity];
    }
    set toolbarOpacity(value) {
      super.toolbarOpacity = value;
    }
    get minExtent() {
      return this[S.minExtent];
    }
    set minExtent(value) {
      super.minExtent = value;
    }
    get maxExtent() {
      return this[S.maxExtent];
    }
    set maxExtent(value) {
      super.maxExtent = value;
    }
    get currentExtent() {
      return this[S.currentExtent];
    }
    set currentExtent(value) {
      super.currentExtent = value;
    }
    get isScrolledUnder() {
      return this[S.isScrolledUnder];
    }
    set isScrolledUnder(value) {
      super.isScrolledUnder = value;
    }
    updateShouldNotify(oldWidget) {
      flexible_space_bar.FlexibleSpaceBarSettings.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[22], 488, 52, "oldWidget");
      return this.toolbarOpacity != oldWidget.toolbarOpacity || this.minExtent != oldWidget.minExtent || this.maxExtent != oldWidget.maxExtent || this.currentExtent != oldWidget.currentExtent || this.isScrolledUnder != oldWidget.isScrolledUnder;
    }
  };
  (flexible_space_bar.FlexibleSpaceBarSettings.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let toolbarOpacity = opts && 'toolbarOpacity' in opts ? opts.toolbarOpacity : null;
    if (toolbarOpacity == null) dart.nullFailed(I[22], 446, 19, "toolbarOpacity");
    let minExtent = opts && 'minExtent' in opts ? opts.minExtent : null;
    if (minExtent == null) dart.nullFailed(I[22], 447, 19, "minExtent");
    let maxExtent = opts && 'maxExtent' in opts ? opts.maxExtent : null;
    if (maxExtent == null) dart.nullFailed(I[22], 448, 19, "maxExtent");
    let currentExtent = opts && 'currentExtent' in opts ? opts.currentExtent : null;
    if (currentExtent == null) dart.nullFailed(I[22], 449, 19, "currentExtent");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[22], 450, 21, "child");
    let isScrolledUnder = opts && 'isScrolledUnder' in opts ? opts.isScrolledUnder : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.toolbarOpacity] = toolbarOpacity;
    this[S.minExtent] = minExtent;
    this[S.maxExtent] = maxExtent;
    this[S.currentExtent] = currentExtent;
    this[S.isScrolledUnder] = isScrolledUnder;
    if (!(toolbarOpacity != null)) dart.assertFailed(null, I[22], 452, 15, "toolbarOpacity != null");
    if (!(minExtent != null && dart.notNull(minExtent) >= 0)) dart.assertFailed(null, I[22], 453, 15, "minExtent != null && minExtent >= 0");
    if (!(maxExtent != null && dart.notNull(maxExtent) >= 0)) dart.assertFailed(null, I[22], 454, 15, "maxExtent != null && maxExtent >= 0");
    if (!(currentExtent != null && dart.notNull(currentExtent) >= 0)) dart.assertFailed(null, I[22], 455, 15, "currentExtent != null && currentExtent >= 0");
    if (!(dart.notNull(toolbarOpacity) >= 0.0)) dart.assertFailed(null, I[22], 456, 15, "toolbarOpacity >= 0.0");
    if (!(dart.notNull(minExtent) <= dart.notNull(maxExtent))) dart.assertFailed(null, I[22], 457, 15, "minExtent <= maxExtent");
    if (!(dart.notNull(minExtent) <= dart.notNull(currentExtent))) dart.assertFailed(null, I[22], 458, 15, "minExtent <= currentExtent");
    if (!(dart.notNull(currentExtent) <= dart.notNull(maxExtent))) dart.assertFailed(null, I[22], 459, 15, "currentExtent <= maxExtent");
    flexible_space_bar.FlexibleSpaceBarSettings.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = flexible_space_bar.FlexibleSpaceBarSettings.prototype;
  dart.addTypeTests(flexible_space_bar.FlexibleSpaceBarSettings);
  dart.addTypeCaches(flexible_space_bar.FlexibleSpaceBarSettings);
  dart.setMethodSignature(flexible_space_bar.FlexibleSpaceBarSettings, () => ({
    __proto__: dart.getMethods(flexible_space_bar.FlexibleSpaceBarSettings.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(flexible_space_bar.FlexibleSpaceBarSettings, I[23]);
  dart.setFieldSignature(flexible_space_bar.FlexibleSpaceBarSettings, () => ({
    __proto__: dart.getFields(flexible_space_bar.FlexibleSpaceBarSettings.__proto__),
    toolbarOpacity: dart.finalFieldType(core.double),
    minExtent: dart.finalFieldType(core.double),
    maxExtent: dart.finalFieldType(core.double),
    currentExtent: dart.finalFieldType(core.double),
    isScrolledUnder: dart.finalFieldType(dart.nullable(core.bool))
  }));
  const Object_Diagnosticable$36 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36.new = function() {
  }).prototype = Object_Diagnosticable$36.prototype;
  dart.applyMixin(Object_Diagnosticable$36, diagnostics.Diagnosticable);
  toggle_buttons_theme.ToggleButtonsThemeData = class ToggleButtonsThemeData extends Object_Diagnosticable$36 {
    get textStyle() {
      return this[S.textStyle];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get constraints() {
      return this[S.constraints$1];
    }
    set constraints(value) {
      super.constraints = value;
    }
    get color() {
      return this[S.color$3];
    }
    set color(value) {
      super.color = value;
    }
    get selectedColor() {
      return this[S.selectedColor];
    }
    set selectedColor(value) {
      super.selectedColor = value;
    }
    get disabledColor() {
      return this[S.disabledColor$1];
    }
    set disabledColor(value) {
      super.disabledColor = value;
    }
    get fillColor() {
      return this[S.fillColor];
    }
    set fillColor(value) {
      super.fillColor = value;
    }
    get focusColor() {
      return this[S.focusColor$2];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get highlightColor() {
      return this[S.highlightColor$1];
    }
    set highlightColor(value) {
      super.highlightColor = value;
    }
    get splashColor() {
      return this[S.splashColor$2];
    }
    set splashColor(value) {
      super.splashColor = value;
    }
    get hoverColor() {
      return this[S.hoverColor$2];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get borderColor() {
      return this[S.borderColor];
    }
    set borderColor(value) {
      super.borderColor = value;
    }
    get selectedBorderColor() {
      return this[S.selectedBorderColor];
    }
    set selectedBorderColor(value) {
      super.selectedBorderColor = value;
    }
    get disabledBorderColor() {
      return this[S.disabledBorderColor];
    }
    set disabledBorderColor(value) {
      super.disabledBorderColor = value;
    }
    get borderWidth() {
      return this[S.borderWidth];
    }
    set borderWidth(value) {
      super.borderWidth = value;
    }
    get borderRadius() {
      return this[S.borderRadius];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    copyWith(opts) {
      let t7, t7$, t7$0, t7$1, t7$2, t7$3, t7$4, t7$5, t7$6, t7$7, t7$8, t7$9, t7$10, t7$11, t7$12;
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
      let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
      let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
      let borderColor = opts && 'borderColor' in opts ? opts.borderColor : null;
      let selectedBorderColor = opts && 'selectedBorderColor' in opts ? opts.selectedBorderColor : null;
      let disabledBorderColor = opts && 'disabledBorderColor' in opts ? opts.disabledBorderColor : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let borderWidth = opts && 'borderWidth' in opts ? opts.borderWidth : null;
      return new toggle_buttons_theme.ToggleButtonsThemeData.new({textStyle: (t7 = textStyle, t7 == null ? this.textStyle : t7), constraints: (t7$ = constraints, t7$ == null ? this.constraints : t7$), color: (t7$0 = color, t7$0 == null ? this.color : t7$0), selectedColor: (t7$1 = selectedColor, t7$1 == null ? this.selectedColor : t7$1), disabledColor: (t7$2 = disabledColor, t7$2 == null ? this.disabledColor : t7$2), fillColor: (t7$3 = fillColor, t7$3 == null ? this.fillColor : t7$3), focusColor: (t7$4 = focusColor, t7$4 == null ? this.focusColor : t7$4), highlightColor: (t7$5 = highlightColor, t7$5 == null ? this.highlightColor : t7$5), hoverColor: (t7$6 = hoverColor, t7$6 == null ? this.hoverColor : t7$6), splashColor: (t7$7 = splashColor, t7$7 == null ? this.splashColor : t7$7), borderColor: (t7$8 = borderColor, t7$8 == null ? this.borderColor : t7$8), selectedBorderColor: (t7$9 = selectedBorderColor, t7$9 == null ? this.selectedBorderColor : t7$9), disabledBorderColor: (t7$10 = disabledBorderColor, t7$10 == null ? this.disabledBorderColor : t7$10), borderRadius: (t7$11 = borderRadius, t7$11 == null ? this.borderRadius : t7$11), borderWidth: (t7$12 = borderWidth, t7$12 == null ? this.borderWidth : t7$12)});
    }
    static lerp(a, b, t) {
      let t7, t7$, t7$0, t7$1, t7$2, t7$3, t7$4, t7$5, t7$6, t7$7, t7$8, t7$9, t7$10, t7$11, t7$12, t7$13, t7$14, t7$15, t7$16, t7$17, t7$18, t7$19, t7$20, t7$21, t7$22, t7$23, t7$24, t7$25, t7$26, t7$27;
      if (t == null) dart.nullFailed(I[24], 149, 100, "t");
      if (!(t != null)) dart.assertFailed(null, I[24], 150, 13, "t != null");
      if (a == null && b == null) return null;
      return new toggle_buttons_theme.ToggleButtonsThemeData.new({textStyle: text_style.TextStyle.lerp((t7 = a, t7 == null ? null : t7.textStyle), (t7$ = b, t7$ == null ? null : t7$.textStyle), t), constraints: box$.BoxConstraints.lerp((t7$0 = a, t7$0 == null ? null : t7$0.constraints), (t7$1 = b, t7$1 == null ? null : t7$1.constraints), t), color: ui.Color.lerp((t7$2 = a, t7$2 == null ? null : t7$2.color), (t7$3 = b, t7$3 == null ? null : t7$3.color), t), selectedColor: ui.Color.lerp((t7$4 = a, t7$4 == null ? null : t7$4.selectedColor), (t7$5 = b, t7$5 == null ? null : t7$5.selectedColor), t), disabledColor: ui.Color.lerp((t7$6 = a, t7$6 == null ? null : t7$6.disabledColor), (t7$7 = b, t7$7 == null ? null : t7$7.disabledColor), t), fillColor: ui.Color.lerp((t7$8 = a, t7$8 == null ? null : t7$8.fillColor), (t7$9 = b, t7$9 == null ? null : t7$9.fillColor), t), focusColor: ui.Color.lerp((t7$10 = a, t7$10 == null ? null : t7$10.focusColor), (t7$11 = b, t7$11 == null ? null : t7$11.focusColor), t), highlightColor: ui.Color.lerp((t7$12 = a, t7$12 == null ? null : t7$12.highlightColor), (t7$13 = b, t7$13 == null ? null : t7$13.highlightColor), t), hoverColor: ui.Color.lerp((t7$14 = a, t7$14 == null ? null : t7$14.hoverColor), (t7$15 = b, t7$15 == null ? null : t7$15.hoverColor), t), splashColor: ui.Color.lerp((t7$16 = a, t7$16 == null ? null : t7$16.splashColor), (t7$17 = b, t7$17 == null ? null : t7$17.splashColor), t), borderColor: ui.Color.lerp((t7$18 = a, t7$18 == null ? null : t7$18.borderColor), (t7$19 = b, t7$19 == null ? null : t7$19.borderColor), t), selectedBorderColor: ui.Color.lerp((t7$20 = a, t7$20 == null ? null : t7$20.selectedBorderColor), (t7$21 = b, t7$21 == null ? null : t7$21.selectedBorderColor), t), disabledBorderColor: ui.Color.lerp((t7$22 = a, t7$22 == null ? null : t7$22.disabledBorderColor), (t7$23 = b, t7$23 == null ? null : t7$23.disabledBorderColor), t), borderRadius: border_radius.BorderRadius.lerp((t7$24 = a, t7$24 == null ? null : t7$24.borderRadius), (t7$25 = b, t7$25 == null ? null : t7$25.borderRadius), t), borderWidth: ui.lerpDouble((t7$26 = a, t7$26 == null ? null : t7$26.borderWidth), (t7$27 = b, t7$27 == null ? null : t7$27.borderWidth), t)});
    }
    get hashCode() {
      return ui.hashValues(this.textStyle, this.constraints, this.color, this.selectedColor, this.disabledColor, this.fillColor, this.focusColor, this.highlightColor, this.hoverColor, this.splashColor, this.borderColor, this.selectedBorderColor, this.disabledBorderColor, this.borderRadius, this.borderWidth);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return toggle_buttons_theme.ToggleButtonsThemeData.is(other) && dart.equals(other.textStyle, this.textStyle) && dart.equals(other.constraints, this.constraints) && dart.equals(other.color, this.color) && dart.equals(other.selectedColor, this.selectedColor) && dart.equals(other.disabledColor, this.disabledColor) && dart.equals(other.fillColor, this.fillColor) && dart.equals(other.focusColor, this.focusColor) && dart.equals(other.highlightColor, this.highlightColor) && dart.equals(other.hoverColor, this.hoverColor) && dart.equals(other.splashColor, this.splashColor) && dart.equals(other.borderColor, this.borderColor) && dart.equals(other.selectedBorderColor, this.selectedBorderColor) && dart.equals(other.disabledBorderColor, this.disabledBorderColor) && dart.equals(other.borderRadius, this.borderRadius) && other.borderWidth == this.borderWidth;
    }
    debugFillProperties(properties) {
      let t7;
      if (properties == null) dart.nullFailed(I[24], 218, 56, "properties");
      super.debugFillProperties(properties);
      t7 = this.textStyle;
      t7 == null ? null : t7.debugFillProperties(properties, {prefix: "textStyle."});
      properties.add(new (T$.DiagnosticsPropertyOfBoxConstraints()).new("constraints", this.constraints, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("selectedColor", this.selectedColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("disabledColor", this.disabledColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("fillColor", this.fillColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("focusColor", this.focusColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("highlightColor", this.highlightColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("hoverColor", this.hoverColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("splashColor", this.splashColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("borderColor", this.borderColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("selectedBorderColor", this.selectedBorderColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("disabledBorderColor", this.disabledBorderColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfBorderRadius()).new("borderRadius", this.borderRadius, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("borderWidth", this.borderWidth, {defaultValue: null}));
    }
  };
  (toggle_buttons_theme.ToggleButtonsThemeData.new = function(opts) {
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let constraints = opts && 'constraints' in opts ? opts.constraints : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let borderColor = opts && 'borderColor' in opts ? opts.borderColor : null;
    let selectedBorderColor = opts && 'selectedBorderColor' in opts ? opts.selectedBorderColor : null;
    let disabledBorderColor = opts && 'disabledBorderColor' in opts ? opts.disabledBorderColor : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let borderWidth = opts && 'borderWidth' in opts ? opts.borderWidth : null;
    this[S.textStyle] = textStyle;
    this[S.constraints$1] = constraints;
    this[S.color$3] = color;
    this[S.selectedColor] = selectedColor;
    this[S.disabledColor$1] = disabledColor;
    this[S.fillColor] = fillColor;
    this[S.focusColor$2] = focusColor;
    this[S.highlightColor$1] = highlightColor;
    this[S.hoverColor$2] = hoverColor;
    this[S.splashColor$2] = splashColor;
    this[S.borderColor] = borderColor;
    this[S.selectedBorderColor] = selectedBorderColor;
    this[S.disabledBorderColor] = disabledBorderColor;
    this[S.borderRadius] = borderRadius;
    this[S.borderWidth] = borderWidth;
    ;
  }).prototype = toggle_buttons_theme.ToggleButtonsThemeData.prototype;
  dart.addTypeTests(toggle_buttons_theme.ToggleButtonsThemeData);
  dart.addTypeCaches(toggle_buttons_theme.ToggleButtonsThemeData);
  dart.setMethodSignature(toggle_buttons_theme.ToggleButtonsThemeData, () => ({
    __proto__: dart.getMethods(toggle_buttons_theme.ToggleButtonsThemeData.__proto__),
    copyWith: dart.fnType(toggle_buttons_theme.ToggleButtonsThemeData, [], {borderColor: dart.nullable(ui.Color), borderRadius: dart.nullable(border_radius.BorderRadius), borderWidth: dart.nullable(core.double), color: dart.nullable(ui.Color), constraints: dart.nullable(box$.BoxConstraints), disabledBorderColor: dart.nullable(ui.Color), disabledColor: dart.nullable(ui.Color), fillColor: dart.nullable(ui.Color), focusColor: dart.nullable(ui.Color), highlightColor: dart.nullable(ui.Color), hoverColor: dart.nullable(ui.Color), selectedBorderColor: dart.nullable(ui.Color), selectedColor: dart.nullable(ui.Color), splashColor: dart.nullable(ui.Color), textStyle: dart.nullable(text_style.TextStyle)}, {})
  }));
  dart.setLibraryUri(toggle_buttons_theme.ToggleButtonsThemeData, I[25]);
  dart.setFieldSignature(toggle_buttons_theme.ToggleButtonsThemeData, () => ({
    __proto__: dart.getFields(toggle_buttons_theme.ToggleButtonsThemeData.__proto__),
    textStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    constraints: dart.finalFieldType(dart.nullable(box$.BoxConstraints)),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    selectedColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledColor: dart.finalFieldType(dart.nullable(ui.Color)),
    fillColor: dart.finalFieldType(dart.nullable(ui.Color)),
    focusColor: dart.finalFieldType(dart.nullable(ui.Color)),
    highlightColor: dart.finalFieldType(dart.nullable(ui.Color)),
    splashColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hoverColor: dart.finalFieldType(dart.nullable(ui.Color)),
    borderColor: dart.finalFieldType(dart.nullable(ui.Color)),
    selectedBorderColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledBorderColor: dart.finalFieldType(dart.nullable(ui.Color)),
    borderWidth: dart.finalFieldType(dart.nullable(core.double)),
    borderRadius: dart.finalFieldType(dart.nullable(border_radius.BorderRadius))
  }));
  dart.defineExtensionMethods(toggle_buttons_theme.ToggleButtonsThemeData, ['_equals']);
  dart.defineExtensionAccessors(toggle_buttons_theme.ToggleButtonsThemeData, ['hashCode']);
  toggle_buttons_theme.ToggleButtonsTheme = class ToggleButtonsTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S.data];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t7, t7$;
      if (context == null) dart.nullFailed(I[24], 267, 49, "context");
      let toggleButtonsTheme = context.dependOnInheritedWidgetOfExactType(toggle_buttons_theme.ToggleButtonsTheme);
      t7$ = (t7 = toggleButtonsTheme, t7 == null ? null : t7.data);
      return t7$ == null ? theme$.Theme.of(context).toggleButtonsTheme : t7$;
    }
    wrap(context, child) {
      if (context == null) dart.nullFailed(I[24], 273, 28, "context");
      if (child == null) dart.nullFailed(I[24], 273, 44, "child");
      return new toggle_buttons_theme.ToggleButtonsTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[197] || CT.C197});
    }
    updateShouldNotify(oldWidget) {
      toggle_buttons_theme.ToggleButtonsTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[24], 278, 46, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (toggle_buttons_theme.ToggleButtonsTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[24], 250, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[24], 251, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.data] = data;
    if (!(data != null)) dart.assertFailed(null, I[24], 252, 15, "data != null");
    toggle_buttons_theme.ToggleButtonsTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = toggle_buttons_theme.ToggleButtonsTheme.prototype;
  dart.addTypeTests(toggle_buttons_theme.ToggleButtonsTheme);
  dart.addTypeCaches(toggle_buttons_theme.ToggleButtonsTheme);
  dart.setMethodSignature(toggle_buttons_theme.ToggleButtonsTheme, () => ({
    __proto__: dart.getMethods(toggle_buttons_theme.ToggleButtonsTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(toggle_buttons_theme.ToggleButtonsTheme, I[25]);
  dart.setFieldSignature(toggle_buttons_theme.ToggleButtonsTheme, () => ({
    __proto__: dart.getFields(toggle_buttons_theme.ToggleButtonsTheme.__proto__),
    data: dart.finalFieldType(toggle_buttons_theme.ToggleButtonsThemeData)
  }));
  const Object_Diagnosticable$36$ = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$.new = function() {
  }).prototype = Object_Diagnosticable$36$.prototype;
  dart.applyMixin(Object_Diagnosticable$36$, diagnostics.Diagnosticable);
  time_picker_theme.TimePickerThemeData = class TimePickerThemeData extends Object_Diagnosticable$36$ {
    get backgroundColor() {
      return this[S.backgroundColor$2];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get hourMinuteTextColor() {
      return this[S.hourMinuteTextColor];
    }
    set hourMinuteTextColor(value) {
      super.hourMinuteTextColor = value;
    }
    get hourMinuteColor() {
      return this[S.hourMinuteColor];
    }
    set hourMinuteColor(value) {
      super.hourMinuteColor = value;
    }
    get dayPeriodTextColor() {
      return this[S.dayPeriodTextColor];
    }
    set dayPeriodTextColor(value) {
      super.dayPeriodTextColor = value;
    }
    get dayPeriodColor() {
      return this[S.dayPeriodColor];
    }
    set dayPeriodColor(value) {
      super.dayPeriodColor = value;
    }
    get dialHandColor() {
      return this[S.dialHandColor];
    }
    set dialHandColor(value) {
      super.dialHandColor = value;
    }
    get dialBackgroundColor() {
      return this[S.dialBackgroundColor];
    }
    set dialBackgroundColor(value) {
      super.dialBackgroundColor = value;
    }
    get dialTextColor() {
      return this[S.dialTextColor];
    }
    set dialTextColor(value) {
      super.dialTextColor = value;
    }
    get entryModeIconColor() {
      return this[S.entryModeIconColor];
    }
    set entryModeIconColor(value) {
      super.entryModeIconColor = value;
    }
    get hourMinuteTextStyle() {
      return this[S.hourMinuteTextStyle];
    }
    set hourMinuteTextStyle(value) {
      super.hourMinuteTextStyle = value;
    }
    get dayPeriodTextStyle() {
      return this[S.dayPeriodTextStyle];
    }
    set dayPeriodTextStyle(value) {
      super.dayPeriodTextStyle = value;
    }
    get helpTextStyle() {
      return this[S.helpTextStyle];
    }
    set helpTextStyle(value) {
      super.helpTextStyle = value;
    }
    get shape() {
      return this[S.shape$2];
    }
    set shape(value) {
      super.shape = value;
    }
    get hourMinuteShape() {
      return this[S.hourMinuteShape];
    }
    set hourMinuteShape(value) {
      super.hourMinuteShape = value;
    }
    get dayPeriodShape() {
      return this[S.dayPeriodShape];
    }
    set dayPeriodShape(value) {
      super.dayPeriodShape = value;
    }
    get dayPeriodBorderSide() {
      return this[S.dayPeriodBorderSide];
    }
    set dayPeriodBorderSide(value) {
      super.dayPeriodBorderSide = value;
    }
    get inputDecorationTheme() {
      return this[S.inputDecorationTheme];
    }
    set inputDecorationTheme(value) {
      super.inputDecorationTheme = value;
    }
    copyWith(opts) {
      let t7, t7$, t7$0, t7$1, t7$2, t7$3, t7$4, t7$5, t7$6, t7$7, t7$8, t7$9, t7$10, t7$11, t7$12, t7$13, t7$14;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let hourMinuteTextColor = opts && 'hourMinuteTextColor' in opts ? opts.hourMinuteTextColor : null;
      let hourMinuteColor = opts && 'hourMinuteColor' in opts ? opts.hourMinuteColor : null;
      let dayPeriodTextColor = opts && 'dayPeriodTextColor' in opts ? opts.dayPeriodTextColor : null;
      let dayPeriodColor = opts && 'dayPeriodColor' in opts ? opts.dayPeriodColor : null;
      let dialHandColor = opts && 'dialHandColor' in opts ? opts.dialHandColor : null;
      let dialBackgroundColor = opts && 'dialBackgroundColor' in opts ? opts.dialBackgroundColor : null;
      let dialTextColor = opts && 'dialTextColor' in opts ? opts.dialTextColor : null;
      let entryModeIconColor = opts && 'entryModeIconColor' in opts ? opts.entryModeIconColor : null;
      let hourMinuteTextStyle = opts && 'hourMinuteTextStyle' in opts ? opts.hourMinuteTextStyle : null;
      let dayPeriodTextStyle = opts && 'dayPeriodTextStyle' in opts ? opts.dayPeriodTextStyle : null;
      let helpTextStyle = opts && 'helpTextStyle' in opts ? opts.helpTextStyle : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let hourMinuteShape = opts && 'hourMinuteShape' in opts ? opts.hourMinuteShape : null;
      let dayPeriodShape = opts && 'dayPeriodShape' in opts ? opts.dayPeriodShape : null;
      let dayPeriodBorderSide = opts && 'dayPeriodBorderSide' in opts ? opts.dayPeriodBorderSide : null;
      let inputDecorationTheme = opts && 'inputDecorationTheme' in opts ? opts.inputDecorationTheme : null;
      return new time_picker_theme.TimePickerThemeData.new({backgroundColor: (t7 = backgroundColor, t7 == null ? this.backgroundColor : t7), hourMinuteTextColor: (t7$ = hourMinuteTextColor, t7$ == null ? this.hourMinuteTextColor : t7$), hourMinuteColor: (t7$0 = hourMinuteColor, t7$0 == null ? this.hourMinuteColor : t7$0), dayPeriodTextColor: (t7$1 = dayPeriodTextColor, t7$1 == null ? this.dayPeriodTextColor : t7$1), dayPeriodColor: (t7$2 = dayPeriodColor, t7$2 == null ? this.dayPeriodColor : t7$2), dialHandColor: (t7$3 = dialHandColor, t7$3 == null ? this.dialHandColor : t7$3), dialBackgroundColor: (t7$4 = dialBackgroundColor, t7$4 == null ? this.dialBackgroundColor : t7$4), dialTextColor: (t7$5 = dialTextColor, t7$5 == null ? this.dialTextColor : t7$5), entryModeIconColor: (t7$6 = entryModeIconColor, t7$6 == null ? this.entryModeIconColor : t7$6), hourMinuteTextStyle: (t7$7 = hourMinuteTextStyle, t7$7 == null ? this.hourMinuteTextStyle : t7$7), dayPeriodTextStyle: (t7$8 = dayPeriodTextStyle, t7$8 == null ? this.dayPeriodTextStyle : t7$8), helpTextStyle: (t7$9 = helpTextStyle, t7$9 == null ? this.helpTextStyle : t7$9), shape: (t7$10 = shape, t7$10 == null ? this.shape : t7$10), hourMinuteShape: (t7$11 = hourMinuteShape, t7$11 == null ? this.hourMinuteShape : t7$11), dayPeriodShape: (t7$12 = dayPeriodShape, t7$12 == null ? this.dayPeriodShape : t7$12), dayPeriodBorderSide: (t7$13 = dayPeriodBorderSide, t7$13 == null ? this.dayPeriodBorderSide : t7$13), inputDecorationTheme: (t7$14 = inputDecorationTheme, t7$14 == null ? this.inputDecorationTheme : t7$14)});
    }
    static lerp(a, b, t) {
      let t7, t7$, t7$0, t7$1, t7$2, t7$3, t7$4, t7$5, t7$6, t7$7, t7$8, t7$9, t7$10, t7$11, t7$12, t7$13, t7$14, t7$15, t7$16, t7$17, t7$18, t7$19, t7$20, t7$21, t7$22, t7$23, t7$24, t7$25, t7$26, t7$27, t7$28, t7$29, t7$30, t7$31, t7$32, t7$33, t7$34, t7$35;
      if (t == null) dart.nullFailed(I[26], 246, 90, "t");
      if (!(t != null)) dart.assertFailed(null, I[26], 247, 12, "t != null");
      let lerpedBorderSide = null;
      if ((t7 = a, t7 == null ? null : t7.dayPeriodBorderSide) == null && (t7$ = b, t7$ == null ? null : t7$.dayPeriodBorderSide) == null) {
        lerpedBorderSide = null;
      } else if ((t7$0 = a, t7$0 == null ? null : t7$0.dayPeriodBorderSide) == null) {
        lerpedBorderSide = (t7$1 = b, t7$1 == null ? null : t7$1.dayPeriodBorderSide);
      } else if ((t7$2 = b, t7$2 == null ? null : t7$2.dayPeriodBorderSide) == null) {
        lerpedBorderSide = (t7$3 = a, t7$3 == null ? null : t7$3.dayPeriodBorderSide);
      } else {
        lerpedBorderSide = borders.BorderSide.lerp(dart.nullCheck(dart.nullCheck(a).dayPeriodBorderSide), dart.nullCheck(dart.nullCheck(b).dayPeriodBorderSide), t);
      }
      return new time_picker_theme.TimePickerThemeData.new({backgroundColor: ui.Color.lerp((t7$4 = a, t7$4 == null ? null : t7$4.backgroundColor), (t7$5 = b, t7$5 == null ? null : t7$5.backgroundColor), t), hourMinuteTextColor: ui.Color.lerp((t7$6 = a, t7$6 == null ? null : t7$6.hourMinuteTextColor), (t7$7 = b, t7$7 == null ? null : t7$7.hourMinuteTextColor), t), hourMinuteColor: ui.Color.lerp((t7$8 = a, t7$8 == null ? null : t7$8.hourMinuteColor), (t7$9 = b, t7$9 == null ? null : t7$9.hourMinuteColor), t), dayPeriodTextColor: ui.Color.lerp((t7$10 = a, t7$10 == null ? null : t7$10.dayPeriodTextColor), (t7$11 = b, t7$11 == null ? null : t7$11.dayPeriodTextColor), t), dayPeriodColor: ui.Color.lerp((t7$12 = a, t7$12 == null ? null : t7$12.dayPeriodColor), (t7$13 = b, t7$13 == null ? null : t7$13.dayPeriodColor), t), dialHandColor: ui.Color.lerp((t7$14 = a, t7$14 == null ? null : t7$14.dialHandColor), (t7$15 = b, t7$15 == null ? null : t7$15.dialHandColor), t), dialBackgroundColor: ui.Color.lerp((t7$16 = a, t7$16 == null ? null : t7$16.dialBackgroundColor), (t7$17 = b, t7$17 == null ? null : t7$17.dialBackgroundColor), t), dialTextColor: ui.Color.lerp((t7$18 = a, t7$18 == null ? null : t7$18.dialTextColor), (t7$19 = b, t7$19 == null ? null : t7$19.dialTextColor), t), entryModeIconColor: ui.Color.lerp((t7$20 = a, t7$20 == null ? null : t7$20.entryModeIconColor), (t7$21 = b, t7$21 == null ? null : t7$21.entryModeIconColor), t), hourMinuteTextStyle: text_style.TextStyle.lerp((t7$22 = a, t7$22 == null ? null : t7$22.hourMinuteTextStyle), (t7$23 = b, t7$23 == null ? null : t7$23.hourMinuteTextStyle), t), dayPeriodTextStyle: text_style.TextStyle.lerp((t7$24 = a, t7$24 == null ? null : t7$24.dayPeriodTextStyle), (t7$25 = b, t7$25 == null ? null : t7$25.dayPeriodTextStyle), t), helpTextStyle: text_style.TextStyle.lerp((t7$26 = a, t7$26 == null ? null : t7$26.helpTextStyle), (t7$27 = b, t7$27 == null ? null : t7$27.helpTextStyle), t), shape: borders.ShapeBorder.lerp((t7$28 = a, t7$28 == null ? null : t7$28.shape), (t7$29 = b, t7$29 == null ? null : t7$29.shape), t), hourMinuteShape: borders.ShapeBorder.lerp((t7$30 = a, t7$30 == null ? null : t7$30.hourMinuteShape), (t7$31 = b, t7$31 == null ? null : t7$31.hourMinuteShape), t), dayPeriodShape: T$.OutlinedBorderN().as(borders.ShapeBorder.lerp((t7$32 = a, t7$32 == null ? null : t7$32.dayPeriodShape), (t7$33 = b, t7$33 == null ? null : t7$33.dayPeriodShape), t)), dayPeriodBorderSide: lerpedBorderSide, inputDecorationTheme: dart.notNull(t) < 0.5 ? (t7$34 = a, t7$34 == null ? null : t7$34.inputDecorationTheme) : (t7$35 = b, t7$35 == null ? null : t7$35.inputDecorationTheme)});
    }
    get hashCode() {
      return ui.hashValues(this.backgroundColor, this.hourMinuteTextColor, this.hourMinuteColor, this.dayPeriodTextColor, this.dayPeriodColor, this.dialHandColor, this.dialBackgroundColor, this.dialTextColor, this.entryModeIconColor, this.hourMinuteTextStyle, this.dayPeriodTextStyle, this.helpTextStyle, this.shape, this.hourMinuteShape, this.dayPeriodShape, this.dayPeriodBorderSide, this.inputDecorationTheme);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return time_picker_theme.TimePickerThemeData.is(other) && dart.equals(other.backgroundColor, this.backgroundColor) && dart.equals(other.hourMinuteTextColor, this.hourMinuteTextColor) && dart.equals(other.hourMinuteColor, this.hourMinuteColor) && dart.equals(other.dayPeriodTextColor, this.dayPeriodTextColor) && dart.equals(other.dayPeriodColor, this.dayPeriodColor) && dart.equals(other.dialHandColor, this.dialHandColor) && dart.equals(other.dialBackgroundColor, this.dialBackgroundColor) && dart.equals(other.dialTextColor, this.dialTextColor) && dart.equals(other.entryModeIconColor, this.entryModeIconColor) && dart.equals(other.hourMinuteTextStyle, this.hourMinuteTextStyle) && dart.equals(other.dayPeriodTextStyle, this.dayPeriodTextStyle) && dart.equals(other.helpTextStyle, this.helpTextStyle) && dart.equals(other.shape, this.shape) && dart.equals(other.hourMinuteShape, this.hourMinuteShape) && dart.equals(other.dayPeriodShape, this.dayPeriodShape) && dart.equals(other.dayPeriodBorderSide, this.dayPeriodBorderSide) && dart.equals(other.inputDecorationTheme, this.inputDecorationTheme);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[26], 331, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("hourMinuteTextColor", this.hourMinuteTextColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("hourMinuteColor", this.hourMinuteColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("dayPeriodTextColor", this.dayPeriodTextColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("dayPeriodColor", this.dayPeriodColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("dialHandColor", this.dialHandColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("dialBackgroundColor", this.dialBackgroundColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("dialTextColor", this.dialTextColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("entryModeIconColor", this.entryModeIconColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("hourMinuteTextStyle", this.hourMinuteTextStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("dayPeriodTextStyle", this.dayPeriodTextStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("helpTextStyle", this.helpTextStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("hourMinuteShape", this.hourMinuteShape, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("dayPeriodShape", this.dayPeriodShape, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfBorderSide()).new("dayPeriodBorderSide", this.dayPeriodBorderSide, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfInputDecorationTheme()).new("inputDecorationTheme", this.inputDecorationTheme, {defaultValue: null}));
    }
  };
  (time_picker_theme.TimePickerThemeData.new = function(opts) {
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let hourMinuteTextColor = opts && 'hourMinuteTextColor' in opts ? opts.hourMinuteTextColor : null;
    let hourMinuteColor = opts && 'hourMinuteColor' in opts ? opts.hourMinuteColor : null;
    let dayPeriodTextColor = opts && 'dayPeriodTextColor' in opts ? opts.dayPeriodTextColor : null;
    let dayPeriodColor = opts && 'dayPeriodColor' in opts ? opts.dayPeriodColor : null;
    let dialHandColor = opts && 'dialHandColor' in opts ? opts.dialHandColor : null;
    let dialBackgroundColor = opts && 'dialBackgroundColor' in opts ? opts.dialBackgroundColor : null;
    let dialTextColor = opts && 'dialTextColor' in opts ? opts.dialTextColor : null;
    let entryModeIconColor = opts && 'entryModeIconColor' in opts ? opts.entryModeIconColor : null;
    let hourMinuteTextStyle = opts && 'hourMinuteTextStyle' in opts ? opts.hourMinuteTextStyle : null;
    let dayPeriodTextStyle = opts && 'dayPeriodTextStyle' in opts ? opts.dayPeriodTextStyle : null;
    let helpTextStyle = opts && 'helpTextStyle' in opts ? opts.helpTextStyle : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let hourMinuteShape = opts && 'hourMinuteShape' in opts ? opts.hourMinuteShape : null;
    let dayPeriodShape = opts && 'dayPeriodShape' in opts ? opts.dayPeriodShape : null;
    let dayPeriodBorderSide = opts && 'dayPeriodBorderSide' in opts ? opts.dayPeriodBorderSide : null;
    let inputDecorationTheme = opts && 'inputDecorationTheme' in opts ? opts.inputDecorationTheme : null;
    this[S.backgroundColor$2] = backgroundColor;
    this[S.hourMinuteTextColor] = hourMinuteTextColor;
    this[S.hourMinuteColor] = hourMinuteColor;
    this[S.dayPeriodTextColor] = dayPeriodTextColor;
    this[S.dayPeriodColor] = dayPeriodColor;
    this[S.dialHandColor] = dialHandColor;
    this[S.dialBackgroundColor] = dialBackgroundColor;
    this[S.dialTextColor] = dialTextColor;
    this[S.entryModeIconColor] = entryModeIconColor;
    this[S.hourMinuteTextStyle] = hourMinuteTextStyle;
    this[S.dayPeriodTextStyle] = dayPeriodTextStyle;
    this[S.helpTextStyle] = helpTextStyle;
    this[S.shape$2] = shape;
    this[S.hourMinuteShape] = hourMinuteShape;
    this[S.dayPeriodShape] = dayPeriodShape;
    this[S.dayPeriodBorderSide] = dayPeriodBorderSide;
    this[S.inputDecorationTheme] = inputDecorationTheme;
    ;
  }).prototype = time_picker_theme.TimePickerThemeData.prototype;
  dart.addTypeTests(time_picker_theme.TimePickerThemeData);
  dart.addTypeCaches(time_picker_theme.TimePickerThemeData);
  dart.setMethodSignature(time_picker_theme.TimePickerThemeData, () => ({
    __proto__: dart.getMethods(time_picker_theme.TimePickerThemeData.__proto__),
    copyWith: dart.fnType(time_picker_theme.TimePickerThemeData, [], {backgroundColor: dart.nullable(ui.Color), dayPeriodBorderSide: dart.nullable(borders.BorderSide), dayPeriodColor: dart.nullable(ui.Color), dayPeriodShape: dart.nullable(borders.OutlinedBorder), dayPeriodTextColor: dart.nullable(ui.Color), dayPeriodTextStyle: dart.nullable(text_style.TextStyle), dialBackgroundColor: dart.nullable(ui.Color), dialHandColor: dart.nullable(ui.Color), dialTextColor: dart.nullable(ui.Color), entryModeIconColor: dart.nullable(ui.Color), helpTextStyle: dart.nullable(text_style.TextStyle), hourMinuteColor: dart.nullable(ui.Color), hourMinuteShape: dart.nullable(borders.ShapeBorder), hourMinuteTextColor: dart.nullable(ui.Color), hourMinuteTextStyle: dart.nullable(text_style.TextStyle), inputDecorationTheme: dart.nullable(input_decorator.InputDecorationTheme), shape: dart.nullable(borders.ShapeBorder)}, {})
  }));
  dart.setLibraryUri(time_picker_theme.TimePickerThemeData, I[27]);
  dart.setFieldSignature(time_picker_theme.TimePickerThemeData, () => ({
    __proto__: dart.getFields(time_picker_theme.TimePickerThemeData.__proto__),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hourMinuteTextColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hourMinuteColor: dart.finalFieldType(dart.nullable(ui.Color)),
    dayPeriodTextColor: dart.finalFieldType(dart.nullable(ui.Color)),
    dayPeriodColor: dart.finalFieldType(dart.nullable(ui.Color)),
    dialHandColor: dart.finalFieldType(dart.nullable(ui.Color)),
    dialBackgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    dialTextColor: dart.finalFieldType(dart.nullable(ui.Color)),
    entryModeIconColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hourMinuteTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    dayPeriodTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    helpTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    hourMinuteShape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    dayPeriodShape: dart.finalFieldType(dart.nullable(borders.OutlinedBorder)),
    dayPeriodBorderSide: dart.finalFieldType(dart.nullable(borders.BorderSide)),
    inputDecorationTheme: dart.finalFieldType(dart.nullable(input_decorator.InputDecorationTheme))
  }));
  dart.defineExtensionMethods(time_picker_theme.TimePickerThemeData, ['_equals']);
  dart.defineExtensionAccessors(time_picker_theme.TimePickerThemeData, ['hashCode']);
  time_picker_theme.TimePickerTheme = class TimePickerTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S.data$1];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t7, t7$;
      if (context == null) dart.nullFailed(I[26], 381, 46, "context");
      let timePickerTheme = context.dependOnInheritedWidgetOfExactType(time_picker_theme.TimePickerTheme);
      t7$ = (t7 = timePickerTheme, t7 == null ? null : t7.data);
      return t7$ == null ? theme$.Theme.of(context).timePickerTheme : t7$;
    }
    wrap(context, child) {
      if (context == null) dart.nullFailed(I[26], 387, 28, "context");
      if (child == null) dart.nullFailed(I[26], 387, 44, "child");
      return new time_picker_theme.TimePickerTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[198] || CT.C198});
    }
    updateShouldNotify(oldWidget) {
      time_picker_theme.TimePickerTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[26], 392, 43, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (time_picker_theme.TimePickerTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[26], 363, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[26], 364, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.data$1] = data;
    if (!(data != null)) dart.assertFailed(null, I[26], 365, 15, "data != null");
    time_picker_theme.TimePickerTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = time_picker_theme.TimePickerTheme.prototype;
  dart.addTypeTests(time_picker_theme.TimePickerTheme);
  dart.addTypeCaches(time_picker_theme.TimePickerTheme);
  dart.setMethodSignature(time_picker_theme.TimePickerTheme, () => ({
    __proto__: dart.getMethods(time_picker_theme.TimePickerTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(time_picker_theme.TimePickerTheme, I[27]);
  dart.setFieldSignature(time_picker_theme.TimePickerTheme, () => ({
    __proto__: dart.getFields(time_picker_theme.TimePickerTheme.__proto__),
    data: dart.finalFieldType(time_picker_theme.TimePickerThemeData)
  }));
  const Object_Diagnosticable$36$0 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$0.new = function() {
  }).prototype = Object_Diagnosticable$36$0.prototype;
  dart.applyMixin(Object_Diagnosticable$36$0, diagnostics.Diagnosticable);
  text_selection_theme.TextSelectionThemeData = class TextSelectionThemeData extends Object_Diagnosticable$36$0 {
    get cursorColor() {
      return this[S.cursorColor];
    }
    set cursorColor(value) {
      super.cursorColor = value;
    }
    get selectionColor() {
      return this[S.selectionColor];
    }
    set selectionColor(value) {
      super.selectionColor = value;
    }
    get selectionHandleColor() {
      return this[S.selectionHandleColor];
    }
    set selectionHandleColor(value) {
      super.selectionHandleColor = value;
    }
    copyWith(opts) {
      let t7, t7$, t7$0;
      let cursorColor = opts && 'cursorColor' in opts ? opts.cursorColor : null;
      let selectionColor = opts && 'selectionColor' in opts ? opts.selectionColor : null;
      let selectionHandleColor = opts && 'selectionHandleColor' in opts ? opts.selectionHandleColor : null;
      return new text_selection_theme.TextSelectionThemeData.new({cursorColor: (t7 = cursorColor, t7 == null ? this.cursorColor : t7), selectionColor: (t7$ = selectionColor, t7$ == null ? this.selectionColor : t7$), selectionHandleColor: (t7$0 = selectionHandleColor, t7$0 == null ? this.selectionHandleColor : t7$0)});
    }
    static lerp(a, b, t) {
      let t7, t7$, t7$0, t7$1, t7$2, t7$3;
      if (t == null) dart.nullFailed(I[28], 72, 100, "t");
      if (a == null && b == null) return null;
      if (!(t != null)) dart.assertFailed(null, I[28], 75, 12, "t != null");
      return new text_selection_theme.TextSelectionThemeData.new({cursorColor: ui.Color.lerp((t7 = a, t7 == null ? null : t7.cursorColor), (t7$ = b, t7$ == null ? null : t7$.cursorColor), t), selectionColor: ui.Color.lerp((t7$0 = a, t7$0 == null ? null : t7$0.selectionColor), (t7$1 = b, t7$1 == null ? null : t7$1.selectionColor), t), selectionHandleColor: ui.Color.lerp((t7$2 = a, t7$2 == null ? null : t7$2.selectionHandleColor), (t7$3 = b, t7$3 == null ? null : t7$3.selectionHandleColor), t)});
    }
    get hashCode() {
      return ui.hashValues(this.cursorColor, this.selectionColor, this.selectionHandleColor);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return text_selection_theme.TextSelectionThemeData.is(other) && dart.equals(other.cursorColor, this.cursorColor) && dart.equals(other.selectionColor, this.selectionColor) && dart.equals(other.selectionHandleColor, this.selectionHandleColor);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[28], 105, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("cursorColor", this.cursorColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("selectionColor", this.selectionColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("selectionHandleColor", this.selectionHandleColor, {defaultValue: null}));
    }
  };
  (text_selection_theme.TextSelectionThemeData.new = function(opts) {
    let cursorColor = opts && 'cursorColor' in opts ? opts.cursorColor : null;
    let selectionColor = opts && 'selectionColor' in opts ? opts.selectionColor : null;
    let selectionHandleColor = opts && 'selectionHandleColor' in opts ? opts.selectionHandleColor : null;
    this[S.cursorColor] = cursorColor;
    this[S.selectionColor] = selectionColor;
    this[S.selectionHandleColor] = selectionHandleColor;
    ;
  }).prototype = text_selection_theme.TextSelectionThemeData.prototype;
  dart.addTypeTests(text_selection_theme.TextSelectionThemeData);
  dart.addTypeCaches(text_selection_theme.TextSelectionThemeData);
  dart.setMethodSignature(text_selection_theme.TextSelectionThemeData, () => ({
    __proto__: dart.getMethods(text_selection_theme.TextSelectionThemeData.__proto__),
    copyWith: dart.fnType(text_selection_theme.TextSelectionThemeData, [], {cursorColor: dart.nullable(ui.Color), selectionColor: dart.nullable(ui.Color), selectionHandleColor: dart.nullable(ui.Color)}, {})
  }));
  dart.setLibraryUri(text_selection_theme.TextSelectionThemeData, I[29]);
  dart.setFieldSignature(text_selection_theme.TextSelectionThemeData, () => ({
    __proto__: dart.getFields(text_selection_theme.TextSelectionThemeData.__proto__),
    cursorColor: dart.finalFieldType(dart.nullable(ui.Color)),
    selectionColor: dart.finalFieldType(dart.nullable(ui.Color)),
    selectionHandleColor: dart.finalFieldType(dart.nullable(ui.Color))
  }));
  dart.defineExtensionMethods(text_selection_theme.TextSelectionThemeData, ['_equals']);
  dart.defineExtensionAccessors(text_selection_theme.TextSelectionThemeData, ['hashCode']);
  text_selection_theme.TextSelectionTheme = class TextSelectionTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S.data$2];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t7, t7$;
      if (context == null) dart.nullFailed(I[28], 157, 49, "context");
      let selectionTheme = context.dependOnInheritedWidgetOfExactType(text_selection_theme.TextSelectionTheme);
      t7$ = (t7 = selectionTheme, t7 == null ? null : t7.data);
      return t7$ == null ? theme$.Theme.of(context).textSelectionTheme : t7$;
    }
    wrap(context, child) {
      if (context == null) dart.nullFailed(I[28], 163, 28, "context");
      if (child == null) dart.nullFailed(I[28], 163, 44, "child");
      return new text_selection_theme.TextSelectionTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[199] || CT.C199});
    }
    updateShouldNotify(oldWidget) {
      text_selection_theme.TextSelectionTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[28], 168, 46, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (text_selection_theme.TextSelectionTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[28], 141, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[28], 142, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.data$2] = data;
    if (!(data != null)) dart.assertFailed(null, I[28], 143, 15, "data != null");
    text_selection_theme.TextSelectionTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text_selection_theme.TextSelectionTheme.prototype;
  dart.addTypeTests(text_selection_theme.TextSelectionTheme);
  dart.addTypeCaches(text_selection_theme.TextSelectionTheme);
  dart.setMethodSignature(text_selection_theme.TextSelectionTheme, () => ({
    __proto__: dart.getMethods(text_selection_theme.TextSelectionTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(text_selection_theme.TextSelectionTheme, I[29]);
  dart.setFieldSignature(text_selection_theme.TextSelectionTheme, () => ({
    __proto__: dart.getFields(text_selection_theme.TextSelectionTheme.__proto__),
    data: dart.finalFieldType(text_selection_theme.TextSelectionThemeData)
  }));
  const Object_Diagnosticable$36$1 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$1.new = function() {
  }).prototype = Object_Diagnosticable$36$1.prototype;
  dart.applyMixin(Object_Diagnosticable$36$1, diagnostics.Diagnosticable);
  text_button_theme.TextButtonThemeData = class TextButtonThemeData extends Object_Diagnosticable$36$1 {
    get style() {
      return this[S.style$1];
    }
    set style(value) {
      super.style = value;
    }
    static lerp(a, b, t) {
      let t7, t7$;
      if (t == null) dart.nullFailed(I[30], 48, 91, "t");
      if (!(t != null)) dart.assertFailed(null, I[30], 49, 13, "t != null");
      if (a == null && b == null) return null;
      return new text_button_theme.TextButtonThemeData.new({style: button_style.ButtonStyle.lerp((t7 = a, t7 == null ? null : t7.style), (t7$ = b, t7$ == null ? null : t7$.style), t)});
    }
    get hashCode() {
      return dart.hashCode(this.style);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return text_button_theme.TextButtonThemeData.is(other) && dart.equals(other.style, this.style);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[30], 72, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfButtonStyle()).new("style", this.style, {defaultValue: null}));
    }
  };
  (text_button_theme.TextButtonThemeData.new = function(opts) {
    let style = opts && 'style' in opts ? opts.style : null;
    this[S.style$1] = style;
    ;
  }).prototype = text_button_theme.TextButtonThemeData.prototype;
  dart.addTypeTests(text_button_theme.TextButtonThemeData);
  dart.addTypeCaches(text_button_theme.TextButtonThemeData);
  dart.setLibraryUri(text_button_theme.TextButtonThemeData, I[31]);
  dart.setFieldSignature(text_button_theme.TextButtonThemeData, () => ({
    __proto__: dart.getFields(text_button_theme.TextButtonThemeData.__proto__),
    style: dart.finalFieldType(dart.nullable(button_style.ButtonStyle))
  }));
  dart.defineExtensionMethods(text_button_theme.TextButtonThemeData, ['_equals']);
  dart.defineExtensionAccessors(text_button_theme.TextButtonThemeData, ['hashCode']);
  text_button_theme.TextButtonTheme = class TextButtonTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S.data$3];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t7, t7$;
      if (context == null) dart.nullFailed(I[30], 112, 46, "context");
      let buttonTheme = context.dependOnInheritedWidgetOfExactType(text_button_theme.TextButtonTheme);
      t7$ = (t7 = buttonTheme, t7 == null ? null : t7.data);
      return t7$ == null ? theme$.Theme.of(context).textButtonTheme : t7$;
    }
    wrap(context, child) {
      if (context == null) dart.nullFailed(I[30], 118, 28, "context");
      if (child == null) dart.nullFailed(I[30], 118, 44, "child");
      return new text_button_theme.TextButtonTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[200] || CT.C200});
    }
    updateShouldNotify(oldWidget) {
      text_button_theme.TextButtonTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[30], 123, 43, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (text_button_theme.TextButtonTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[30], 95, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[30], 96, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.data$3] = data;
    if (!(data != null)) dart.assertFailed(null, I[30], 97, 15, "data != null");
    text_button_theme.TextButtonTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text_button_theme.TextButtonTheme.prototype;
  dart.addTypeTests(text_button_theme.TextButtonTheme);
  dart.addTypeCaches(text_button_theme.TextButtonTheme);
  dart.setMethodSignature(text_button_theme.TextButtonTheme, () => ({
    __proto__: dart.getMethods(text_button_theme.TextButtonTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(text_button_theme.TextButtonTheme, I[31]);
  dart.setFieldSignature(text_button_theme.TextButtonTheme, () => ({
    __proto__: dart.getFields(text_button_theme.TextButtonTheme.__proto__),
    data: dart.finalFieldType(text_button_theme.TextButtonThemeData)
  }));
  tabs$.TabBarIndicatorSize = class TabBarIndicatorSize extends core.Object {
    toString() {
      return this[S._name$9];
    }
  };
  (tabs$.TabBarIndicatorSize.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[32], 37, 6, "index");
    if (_name == null) dart.nullFailed(I[32], 37, 6, "_name");
    this.index = index;
    this[S._name$9] = _name;
    ;
  }).prototype = tabs$.TabBarIndicatorSize.prototype;
  dart.addTypeTests(tabs$.TabBarIndicatorSize);
  dart.addTypeCaches(tabs$.TabBarIndicatorSize);
  tabs$.TabBarIndicatorSize[dart.implements] = () => [core.Enum];
  dart.setLibraryUri(tabs$.TabBarIndicatorSize, I[33]);
  dart.setFieldSignature(tabs$.TabBarIndicatorSize, () => ({
    __proto__: dart.getFields(tabs$.TabBarIndicatorSize.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$9]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(tabs$.TabBarIndicatorSize, ['toString']);
  tabs$.TabBarIndicatorSize.tab = C[201] || CT.C201;
  tabs$.TabBarIndicatorSize.label = C[202] || CT.C202;
  tabs$.TabBarIndicatorSize.values = C[203] || CT.C203;
  tabs$.Tab = class Tab extends framework.StatelessWidget {
    get text() {
      return this[S.text];
    }
    set text(value) {
      super.text = value;
    }
    get child() {
      return this[S.child$2];
    }
    set child(value) {
      super.child = value;
    }
    get icon() {
      return this[S.icon$2];
    }
    set icon(value) {
      super.icon = value;
    }
    get iconMargin() {
      return this[S.iconMargin];
    }
    set iconMargin(value) {
      super.iconMargin = value;
    }
    get height() {
      return this[S.height];
    }
    set height(value) {
      super.height = value;
    }
    [S._buildLabelText]() {
      let t7;
      t7 = this.child;
      return t7 == null ? new text$.Text.new(dart.nullCheck(this.text), {softWrap: false, overflow: text_painter.TextOverflow.fade, $creationLocationd_0dea112b090073317d4: C[205] || CT.C205}) : t7;
    }
    build(context) {
      let t7;
      if (context == null) dart.nullFailed(I[32], 112, 29, "context");
      if (!dart.test(debug$0.debugCheckHasMaterial(context))) dart.assertFailed(null, I[32], 113, 12, "debugCheckHasMaterial(context)");
      let calculatedHeight = null;
      let label = null;
      if (this.icon == null) {
        calculatedHeight = 46;
        label = this[S._buildLabelText]();
      } else if (this.text == null && this.child == null) {
        calculatedHeight = 46;
        label = dart.nullCheck(this.icon);
      } else {
        calculatedHeight = 72;
        label = new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.center, crossAxisAlignment: flex.CrossAxisAlignment.center, children: T$.JSArrayOfWidget().of([new container.Container.new({margin: this.iconMargin, child: this.icon, $creationLocationd_0dea112b090073317d4: C[206] || CT.C206}), this[S._buildLabelText]()]), $creationLocationd_0dea112b090073317d4: C[207] || CT.C207});
      }
      return new basic.SizedBox.new({height: (t7 = this.height, t7 == null ? calculatedHeight : t7), child: new basic.Center.new({widthFactor: 1.0, child: label, $creationLocationd_0dea112b090073317d4: C[208] || CT.C208}), $creationLocationd_0dea112b090073317d4: C[209] || CT.C209});
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[32], 148, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new diagnostics.StringProperty.new("text", this.text, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfWidget()).new("icon", this.icon, {defaultValue: null}));
    }
    get preferredSize() {
      if (this.height != null)
        return new ui.Size.fromHeight(dart.nullCheck(this.height));
      else if ((this.text != null || this.child != null) && this.icon != null)
        return C[210] || CT.C210;
      else
        return C[211] || CT.C211;
    }
  };
  (tabs$.Tab.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let text = opts && 'text' in opts ? opts.text : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let iconMargin = opts && 'iconMargin' in opts ? opts.iconMargin : C[204] || CT.C204;
    if (iconMargin == null) dart.nullFailed(I[32], 72, 10, "iconMargin");
    let height = opts && 'height' in opts ? opts.height : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.text] = text;
    this[S.icon$2] = icon;
    this[S.iconMargin] = iconMargin;
    this[S.height] = height;
    this[S.child$2] = child;
    if (!(text != null || child != null || icon != null)) dart.assertFailed(null, I[32], 75, 15, "text != null || child != null || icon != null");
    if (!(text == null || child == null)) dart.assertFailed(null, I[32], 76, 15, "text == null || child == null");
    tabs$.Tab.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tabs$.Tab.prototype;
  dart.addTypeTests(tabs$.Tab);
  dart.addTypeCaches(tabs$.Tab);
  tabs$.Tab[dart.implements] = () => [preferred_size.PreferredSizeWidget];
  dart.setMethodSignature(tabs$.Tab, () => ({
    __proto__: dart.getMethods(tabs$.Tab.__proto__),
    [S._buildLabelText]: dart.fnType(framework.Widget, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(tabs$.Tab, () => ({
    __proto__: dart.getGetters(tabs$.Tab.__proto__),
    preferredSize: ui.Size
  }));
  dart.setLibraryUri(tabs$.Tab, I[33]);
  dart.setFieldSignature(tabs$.Tab, () => ({
    __proto__: dart.getFields(tabs$.Tab.__proto__),
    text: dart.finalFieldType(dart.nullable(core.String)),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    icon: dart.finalFieldType(dart.nullable(framework.Widget)),
    iconMargin: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
    height: dart.finalFieldType(dart.nullable(core.double))
  }));
  tabs$._TabStyle = class _TabStyle extends transitions.AnimatedWidget {
    get labelStyle() {
      return this[S.labelStyle];
    }
    set labelStyle(value) {
      super.labelStyle = value;
    }
    get unselectedLabelStyle() {
      return this[S.unselectedLabelStyle];
    }
    set unselectedLabelStyle(value) {
      super.unselectedLabelStyle = value;
    }
    get selected() {
      return this[S.selected];
    }
    set selected(value) {
      super.selected = value;
    }
    get labelColor() {
      return this[S.labelColor];
    }
    set labelColor(value) {
      super.labelColor = value;
    }
    get unselectedLabelColor() {
      return this[S.unselectedLabelColor];
    }
    set unselectedLabelColor(value) {
      super.unselectedLabelColor = value;
    }
    get child() {
      return this[S.child$3];
    }
    set child(value) {
      super.child = value;
    }
    build(context) {
      let t7, t7$, t7$0, t7$1, t7$2, t7$3, t7$4, t7$5, t7$6;
      if (context == null) dart.nullFailed(I[32], 185, 29, "context");
      let themeData = theme$.Theme.of(context);
      let tabBarTheme = tab_bar_theme.TabBarTheme.of(context);
      let animation = T$.AnimationOfdouble().as(this.listenable);
      let defaultStyle = (t7$ = (t7 = this.labelStyle, t7 == null ? tabBarTheme.labelStyle : t7), t7$ == null ? dart.nullCheck(themeData.primaryTextTheme.bodyText1) : t7$).copyWith({inherit: true});
      let defaultUnselectedStyle = (t7$2 = (t7$1 = (t7$0 = this.unselectedLabelStyle, t7$0 == null ? tabBarTheme.unselectedLabelStyle : t7$0), t7$1 == null ? this.labelStyle : t7$1), t7$2 == null ? dart.nullCheck(themeData.primaryTextTheme.bodyText1) : t7$2).copyWith({inherit: true});
      let textStyle = dart.test(this.selected) ? dart.nullCheck(text_style.TextStyle.lerp(defaultStyle, defaultUnselectedStyle, animation.value)) : dart.nullCheck(text_style.TextStyle.lerp(defaultUnselectedStyle, defaultStyle, animation.value));
      let selectedColor = (t7$4 = (t7$3 = this.labelColor, t7$3 == null ? tabBarTheme.labelColor : t7$3), t7$4 == null ? dart.nullCheck(dart.nullCheck(themeData.primaryTextTheme.bodyText1).color) : t7$4);
      let unselectedColor = (t7$6 = (t7$5 = this.unselectedLabelColor, t7$5 == null ? tabBarTheme.unselectedLabelColor : t7$5), t7$6 == null ? selectedColor.withAlpha(178) : t7$6);
      let color = dart.test(this.selected) ? dart.nullCheck(ui.Color.lerp(selectedColor, unselectedColor, animation.value)) : dart.nullCheck(ui.Color.lerp(unselectedColor, selectedColor, animation.value));
      return new text$.DefaultTextStyle.new({style: textStyle.copyWith({color: color}), child: icon_theme.IconTheme.merge({data: new icon_theme_data.IconThemeData.new({size: 24.0, color: color}), child: this.child}), $creationLocationd_0dea112b090073317d4: C[212] || CT.C212});
    }
  };
  (tabs$._TabStyle.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    if (animation == null) dart.nullFailed(I[32], 168, 32, "animation");
    let selected = opts && 'selected' in opts ? opts.selected : null;
    if (selected == null) dart.nullFailed(I[32], 169, 19, "selected");
    let labelColor = opts && 'labelColor' in opts ? opts.labelColor : null;
    let unselectedLabelColor = opts && 'unselectedLabelColor' in opts ? opts.unselectedLabelColor : null;
    let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
    let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[32], 174, 19, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.selected] = selected;
    this[S.labelColor] = labelColor;
    this[S.unselectedLabelColor] = unselectedLabelColor;
    this[S.labelStyle] = labelStyle;
    this[S.unselectedLabelStyle] = unselectedLabelStyle;
    this[S.child$3] = child;
    tabs$._TabStyle.__proto__.new.call(this, {key: key, listenable: animation, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tabs$._TabStyle.prototype;
  dart.addTypeTests(tabs$._TabStyle);
  dart.addTypeCaches(tabs$._TabStyle);
  dart.setMethodSignature(tabs$._TabStyle, () => ({
    __proto__: dart.getMethods(tabs$._TabStyle.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(tabs$._TabStyle, I[33]);
  dart.setFieldSignature(tabs$._TabStyle, () => ({
    __proto__: dart.getFields(tabs$._TabStyle.__proto__),
    labelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    unselectedLabelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    selected: dart.finalFieldType(core.bool),
    labelColor: dart.finalFieldType(dart.nullable(ui.Color)),
    unselectedLabelColor: dart.finalFieldType(dart.nullable(ui.Color)),
    child: dart.finalFieldType(framework.Widget)
  }));
  tabs$._TabLabelBarRenderer = class _TabLabelBarRenderer extends flex.RenderFlex {
    performLayout() {
      let t9, t8, t7;
      super.performLayout();
      let child = this.firstChild;
      let xOffsets = T$.JSArrayOfdouble().of([]);
      while (child != null) {
        let childParentData = flex.FlexParentData.as(dart.nullCheck(child.parentData));
        xOffsets[S.$add](childParentData.offset.dx);
        if (!dart.equals(child.parentData, childParentData)) dart.assertFailed(null, I[32], 266, 14, "child.parentData == childParentData");
        child = childParentData.nextSibling;
      }
      if (!(this.textDirection != null)) dart.assertFailed(null, I[32], 269, 12, "textDirection != null");
      switch (dart.nullCheck(this.textDirection)) {
        case C[137] || CT.C137:
        {
          xOffsets[S.$insert](0, this.size.width);
          break;
        }
        case C[138] || CT.C138:
        {
          xOffsets[S.$add](this.size.width);
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      t7 = xOffsets;
      t8 = dart.nullCheck(this.textDirection);
      t9 = this.size.width;
      this.onPerformLayout(t7, t8, t9);
    }
  };
  (tabs$._TabLabelBarRenderer.new = function(opts) {
    let children = opts && 'children' in opts ? opts.children : null;
    let direction = opts && 'direction' in opts ? opts.direction : null;
    if (direction == null) dart.nullFailed(I[32], 233, 19, "direction");
    let mainAxisSize = opts && 'mainAxisSize' in opts ? opts.mainAxisSize : null;
    if (mainAxisSize == null) dart.nullFailed(I[32], 234, 27, "mainAxisSize");
    let mainAxisAlignment = opts && 'mainAxisAlignment' in opts ? opts.mainAxisAlignment : null;
    if (mainAxisAlignment == null) dart.nullFailed(I[32], 235, 32, "mainAxisAlignment");
    let crossAxisAlignment = opts && 'crossAxisAlignment' in opts ? opts.crossAxisAlignment : null;
    if (crossAxisAlignment == null) dart.nullFailed(I[32], 236, 33, "crossAxisAlignment");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    if (textDirection == null) dart.nullFailed(I[32], 237, 28, "textDirection");
    let verticalDirection = opts && 'verticalDirection' in opts ? opts.verticalDirection : null;
    if (verticalDirection == null) dart.nullFailed(I[32], 238, 32, "verticalDirection");
    let onPerformLayout = opts && 'onPerformLayout' in opts ? opts.onPerformLayout : null;
    if (onPerformLayout == null) dart.nullFailed(I[32], 239, 19, "onPerformLayout");
    this.onPerformLayout = onPerformLayout;
    if (!(onPerformLayout != null)) dart.assertFailed(null, I[32], 240, 15, "onPerformLayout != null");
    if (!(textDirection != null)) dart.assertFailed(null, I[32], 241, 15, "textDirection != null");
    tabs$._TabLabelBarRenderer.__proto__.new.call(this, {children: children, direction: direction, mainAxisSize: mainAxisSize, mainAxisAlignment: mainAxisAlignment, crossAxisAlignment: crossAxisAlignment, textDirection: textDirection, verticalDirection: verticalDirection});
    ;
  }).prototype = tabs$._TabLabelBarRenderer.prototype;
  dart.addTypeTests(tabs$._TabLabelBarRenderer);
  dart.addTypeCaches(tabs$._TabLabelBarRenderer);
  dart.setLibraryUri(tabs$._TabLabelBarRenderer, I[33]);
  dart.setFieldSignature(tabs$._TabLabelBarRenderer, () => ({
    __proto__: dart.getFields(tabs$._TabLabelBarRenderer.__proto__),
    onPerformLayout: dart.fieldType(dart.fnType(dart.void, [core.List$(core.double), ui.TextDirection, core.double]))
  }));
  tabs$._TabLabelBar = class _TabLabelBar extends basic.Flex {
    createRenderObject(context) {
      if (context == null) dart.nullFailed(I[32], 303, 46, "context");
      return new tabs$._TabLabelBarRenderer.new({direction: this.direction, mainAxisAlignment: this.mainAxisAlignment, mainAxisSize: this.mainAxisSize, crossAxisAlignment: this.crossAxisAlignment, textDirection: dart.nullCheck(this.getEffectiveTextDirection(context)), verticalDirection: this.verticalDirection, onPerformLayout: this.onPerformLayout});
    }
    updateRenderObject(context, renderObject) {
      if (context == null) dart.nullFailed(I[32], 316, 40, "context");
      tabs$._TabLabelBarRenderer.as(renderObject);
      if (renderObject == null) dart.nullFailed(I[32], 316, 70, "renderObject");
      super.updateRenderObject(context, renderObject);
      renderObject.onPerformLayout = this.onPerformLayout;
    }
  };
  (tabs$._TabLabelBar.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let children = opts && 'children' in opts ? opts.children : C[213] || CT.C213;
    if (children == null) dart.nullFailed(I[32], 288, 18, "children");
    let onPerformLayout = opts && 'onPerformLayout' in opts ? opts.onPerformLayout : null;
    if (onPerformLayout == null) dart.nullFailed(I[32], 289, 19, "onPerformLayout");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this.onPerformLayout = onPerformLayout;
    tabs$._TabLabelBar.__proto__.new.call(this, {key: key, children: children, direction: basic_types.Axis.horizontal, mainAxisSize: flex.MainAxisSize.max, mainAxisAlignment: flex.MainAxisAlignment.start, crossAxisAlignment: flex.CrossAxisAlignment.center, verticalDirection: basic_types.VerticalDirection.down, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tabs$._TabLabelBar.prototype;
  dart.addTypeTests(tabs$._TabLabelBar);
  dart.addTypeCaches(tabs$._TabLabelBar);
  dart.setLibraryUri(tabs$._TabLabelBar, I[33]);
  dart.setFieldSignature(tabs$._TabLabelBar, () => ({
    __proto__: dart.getFields(tabs$._TabLabelBar.__proto__),
    onPerformLayout: dart.finalFieldType(dart.fnType(dart.void, [core.List$(core.double), ui.TextDirection, core.double]))
  }));
  tabs$._IndicatorPainter = class _IndicatorPainter extends custom_paint.CustomPainter {
    markNeedsPaint() {
      this[S._needsPaint] = true;
    }
    dispose() {
      let t7;
      t7 = this[S._painter];
      t7 == null ? null : t7.dispose();
    }
    saveTabOffsets(tabOffsets, textDirection) {
      this[S._currentTabOffsets] = tabOffsets;
      this[S._currentTextDirection] = textDirection;
    }
    get maxTabIndex() {
      return dart.notNull(dart.nullCheck(this[S._currentTabOffsets])[S.$length]) - 2;
    }
    centerOf(tabIndex) {
      if (tabIndex == null) dart.nullFailed(I[32], 383, 23, "tabIndex");
      if (!(this[S._currentTabOffsets] != null)) dart.assertFailed(null, I[32], 384, 12, "_currentTabOffsets != null");
      if (!dart.test(dart.nullCheck(this[S._currentTabOffsets])[S.$isNotEmpty])) dart.assertFailed(null, I[32], 385, 12, "_currentTabOffsets!.isNotEmpty");
      if (!(dart.notNull(tabIndex) >= 0)) dart.assertFailed(null, I[32], 386, 12, "tabIndex >= 0");
      if (!(dart.notNull(tabIndex) <= dart.notNull(this.maxTabIndex))) dart.assertFailed(null, I[32], 387, 12, "tabIndex <= maxTabIndex");
      return (dart.notNull(dart.nullCheck(this[S._currentTabOffsets])[S.$_get](tabIndex)) + dart.notNull(dart.nullCheck(this[S._currentTabOffsets])[S.$_get](dart.notNull(tabIndex) + 1))) / 2.0;
    }
    indicatorRect(tabBarSize, tabIndex) {
      if (tabBarSize == null) dart.nullFailed(I[32], 391, 27, "tabBarSize");
      if (tabIndex == null) dart.nullFailed(I[32], 391, 43, "tabIndex");
      if (!(this[S._currentTabOffsets] != null)) dart.assertFailed(null, I[32], 392, 12, "_currentTabOffsets != null");
      if (!(this[S._currentTextDirection] != null)) dart.assertFailed(null, I[32], 393, 12, "_currentTextDirection != null");
      if (!dart.test(dart.nullCheck(this[S._currentTabOffsets])[S.$isNotEmpty])) dart.assertFailed(null, I[32], 394, 12, "_currentTabOffsets!.isNotEmpty");
      if (!(dart.notNull(tabIndex) >= 0)) dart.assertFailed(null, I[32], 395, 12, "tabIndex >= 0");
      if (!(dart.notNull(tabIndex) <= dart.notNull(this.maxTabIndex))) dart.assertFailed(null, I[32], 396, 12, "tabIndex <= maxTabIndex");
      let tabLeft = null;
      let tabRight = null;
      switch (dart.nullCheck(this[S._currentTextDirection])) {
        case C[137] || CT.C137:
        {
          tabLeft = dart.nullCheck(this[S._currentTabOffsets])[S.$_get](dart.notNull(tabIndex) + 1);
          tabRight = dart.nullCheck(this[S._currentTabOffsets])[S.$_get](tabIndex);
          break;
        }
        case C[138] || CT.C138:
        {
          tabLeft = dart.nullCheck(this[S._currentTabOffsets])[S.$_get](tabIndex);
          tabRight = dart.nullCheck(this[S._currentTabOffsets])[S.$_get](dart.notNull(tabIndex) + 1);
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      if (this.indicatorSize == tabs$.TabBarIndicatorSize.label) {
        let tabWidth = dart.nullCheck(dart.nullCheck(this.tabKeys[S.$_get](tabIndex).currentContext).size).width;
        let delta = (dart.notNull(tabRight) - dart.notNull(tabLeft) - dart.notNull(tabWidth)) / 2.0;
        tabLeft = dart.notNull(tabLeft) + delta;
        tabRight = dart.notNull(tabRight) - delta;
      }
      let insets = this.indicatorPadding.resolve(this[S._currentTextDirection]);
      let rect = new ui.Rect.fromLTWH(tabLeft, 0.0, dart.notNull(tabRight) - dart.notNull(tabLeft), tabBarSize.height);
      if (!dart.test(rect.size['>='](insets.collapsedSize))) {
        dart.throw(assertions.FlutterError.new("indicatorPadding insets should be less than Tab Size\n" + "Rect Size : " + dart.str(rect.size) + ", Insets: " + dart.str(dart.toString(insets))));
      }
      return insets.deflateRect(rect);
    }
    paint(canvas, size) {
      if (canvas == null) dart.nullFailed(I[32], 429, 21, "canvas");
      if (size == null) dart.nullFailed(I[32], 429, 34, "size");
      this[S._needsPaint] = false;
      this[S._painter] == null ? this[S._painter] = this.indicator.createBoxPainter(dart.bind(this, 'markNeedsPaint')) : null;
      let index = this.controller.index[S.$toDouble]();
      let value = dart.nullCheck(this.controller.animation).value;
      let ltr = index > dart.notNull(value);
      let from = (ltr ? value[S.$floor]() : value[S.$ceil]())[S.$clamp](0, this.maxTabIndex);
      let to = (ltr ? from + 1 : from - 1)[S.$clamp](0, this.maxTabIndex);
      let fromRect = this.indicatorRect(size, from);
      let toRect = this.indicatorRect(size, to);
      this[S._currentRect] = ui.Rect.lerp(fromRect, toRect, (dart.notNull(value) - from)[S.$abs]());
      if (!(this[S._currentRect] != null)) dart.assertFailed(null, I[32], 441, 12, "_currentRect != null");
      let configuration = new image_provider.ImageConfiguration.new({size: dart.nullCheck(this[S._currentRect]).size, textDirection: this[S._currentTextDirection]});
      dart.nullCheck(this[S._painter]).paint(canvas, dart.nullCheck(this[S._currentRect]).topLeft, configuration);
    }
    shouldRepaint(old) {
      tabs$._IndicatorPainter.as(old);
      if (old == null) dart.nullFailed(I[32], 451, 40, "old");
      return dart.test(this[S._needsPaint]) || !dart.equals(this.controller, old.controller) || !dart.equals(this.indicator, old.indicator) || this.tabKeys[S.$length] != old.tabKeys[S.$length] || !dart.test(collections.listEquals(core.double, this[S._currentTabOffsets], old[S._currentTabOffsets])) || this[S._currentTextDirection] != old[S._currentTextDirection];
    }
  };
  (tabs$._IndicatorPainter.new = function(opts) {
    let controller = opts && 'controller' in opts ? opts.controller : null;
    if (controller == null) dart.nullFailed(I[32], 338, 19, "controller");
    let indicator = opts && 'indicator' in opts ? opts.indicator : null;
    if (indicator == null) dart.nullFailed(I[32], 339, 19, "indicator");
    let indicatorSize = opts && 'indicatorSize' in opts ? opts.indicatorSize : null;
    let tabKeys = opts && 'tabKeys' in opts ? opts.tabKeys : null;
    if (tabKeys == null) dart.nullFailed(I[32], 341, 19, "tabKeys");
    let old = opts && 'old' in opts ? opts.old : null;
    let indicatorPadding = opts && 'indicatorPadding' in opts ? opts.indicatorPadding : null;
    if (indicatorPadding == null) dart.nullFailed(I[32], 343, 19, "indicatorPadding");
    this[S._currentTabOffsets] = null;
    this[S._currentTextDirection] = null;
    this[S._currentRect] = null;
    this[S._painter] = null;
    this[S._needsPaint] = false;
    this.controller = controller;
    this.indicator = indicator;
    this.indicatorSize = indicatorSize;
    this.tabKeys = tabKeys;
    this.indicatorPadding = indicatorPadding;
    if (!(controller != null)) dart.assertFailed(null, I[32], 344, 15, "controller != null");
    if (!(indicator != null)) dart.assertFailed(null, I[32], 345, 15, "indicator != null");
    tabs$._IndicatorPainter.__proto__.new.call(this, {repaint: controller.animation});
    if (old != null) this.saveTabOffsets(old[S._currentTabOffsets], old[S._currentTextDirection]);
  }).prototype = tabs$._IndicatorPainter.prototype;
  dart.addTypeTests(tabs$._IndicatorPainter);
  dart.addTypeCaches(tabs$._IndicatorPainter);
  dart.setMethodSignature(tabs$._IndicatorPainter, () => ({
    __proto__: dart.getMethods(tabs$._IndicatorPainter.__proto__),
    markNeedsPaint: dart.fnType(dart.void, []),
    dispose: dart.fnType(dart.void, []),
    saveTabOffsets: dart.fnType(dart.void, [dart.nullable(core.List$(core.double)), dart.nullable(ui.TextDirection)]),
    centerOf: dart.fnType(core.double, [core.int]),
    indicatorRect: dart.fnType(ui.Rect, [ui.Size, core.int]),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Size]),
    shouldRepaint: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(tabs$._IndicatorPainter, () => ({
    __proto__: dart.getGetters(tabs$._IndicatorPainter.__proto__),
    maxTabIndex: core.int
  }));
  dart.setLibraryUri(tabs$._IndicatorPainter, I[33]);
  dart.setFieldSignature(tabs$._IndicatorPainter, () => ({
    __proto__: dart.getFields(tabs$._IndicatorPainter.__proto__),
    controller: dart.finalFieldType(tab_controller.TabController),
    indicator: dart.finalFieldType(decoration.Decoration),
    indicatorSize: dart.finalFieldType(dart.nullable(tabs$.TabBarIndicatorSize)),
    indicatorPadding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
    tabKeys: dart.finalFieldType(core.List$(framework.GlobalKey$(framework.State$(framework.StatefulWidget)))),
    [S._currentTabOffsets]: dart.fieldType(dart.nullable(core.List$(core.double))),
    [S._currentTextDirection]: dart.fieldType(dart.nullable(ui.TextDirection)),
    [S._currentRect]: dart.fieldType(dart.nullable(ui.Rect)),
    [S._painter]: dart.fieldType(dart.nullable(decoration.BoxPainter)),
    [S._needsPaint]: dart.fieldType(core.bool)
  }));
  const Animation_AnimationWithParentMixin$36 = class Animation_AnimationWithParentMixin extends animation.Animation$(core.double) {};
  (Animation_AnimationWithParentMixin$36.new = function() {
    Animation_AnimationWithParentMixin$36.__proto__.new.call(this);
  }).prototype = Animation_AnimationWithParentMixin$36.prototype;
  dart.applyMixin(Animation_AnimationWithParentMixin$36, animations.AnimationWithParentMixin$(core.double));
  tabs$._ChangeAnimation = class _ChangeAnimation extends Animation_AnimationWithParentMixin$36 {
    get parent() {
      return dart.nullCheck(this.controller.animation);
    }
    removeStatusListener(listener) {
      if (listener == null) dart.nullFailed(I[32], 470, 53, "listener");
      if (this.controller.animation != null) super.removeStatusListener(listener);
    }
    removeListener(listener) {
      if (listener == null) dart.nullFailed(I[32], 476, 36, "listener");
      if (this.controller.animation != null) super.removeListener(listener);
    }
    get value() {
      return tabs$._indexChangeProgress(this.controller);
    }
  };
  (tabs$._ChangeAnimation.new = function(controller) {
    if (controller == null) dart.nullFailed(I[32], 462, 25, "controller");
    this.controller = controller;
    tabs$._ChangeAnimation.__proto__.new.call(this);
    ;
  }).prototype = tabs$._ChangeAnimation.prototype;
  dart.addTypeTests(tabs$._ChangeAnimation);
  dart.addTypeCaches(tabs$._ChangeAnimation);
  dart.setGetterSignature(tabs$._ChangeAnimation, () => ({
    __proto__: dart.getGetters(tabs$._ChangeAnimation.__proto__),
    parent: animation.Animation$(core.double),
    value: core.double
  }));
  dart.setLibraryUri(tabs$._ChangeAnimation, I[33]);
  dart.setFieldSignature(tabs$._ChangeAnimation, () => ({
    __proto__: dart.getFields(tabs$._ChangeAnimation.__proto__),
    controller: dart.finalFieldType(tab_controller.TabController)
  }));
  const Animation_AnimationWithParentMixin$36$ = class Animation_AnimationWithParentMixin extends animation.Animation$(core.double) {};
  (Animation_AnimationWithParentMixin$36$.new = function() {
    Animation_AnimationWithParentMixin$36$.__proto__.new.call(this);
  }).prototype = Animation_AnimationWithParentMixin$36$.prototype;
  dart.applyMixin(Animation_AnimationWithParentMixin$36$, animations.AnimationWithParentMixin$(core.double));
  tabs$._DragAnimation = class _DragAnimation extends Animation_AnimationWithParentMixin$36$ {
    get parent() {
      return dart.nullCheck(this.controller.animation);
    }
    removeStatusListener(listener) {
      if (listener == null) dart.nullFailed(I[32], 495, 53, "listener");
      if (this.controller.animation != null) super.removeStatusListener(listener);
    }
    removeListener(listener) {
      if (listener == null) dart.nullFailed(I[32], 501, 36, "listener");
      if (this.controller.animation != null) super.removeListener(listener);
    }
    get value() {
      if (!!dart.test(this.controller.indexIsChanging)) dart.assertFailed(null, I[32], 508, 12, "!controller.indexIsChanging");
      let controllerMaxValue = (dart.notNull(this.controller.length) - 1)[S.$toDouble]();
      let controllerValue = dart.nullCheck(this.controller.animation).value[S.$clamp](0.0, controllerMaxValue);
      return (controllerValue - this.index[S.$toDouble]())[S.$abs]()[S.$clamp](0.0, 1.0);
    }
  };
  (tabs$._DragAnimation.new = function(controller, index) {
    if (controller == null) dart.nullFailed(I[32], 486, 23, "controller");
    if (index == null) dart.nullFailed(I[32], 486, 40, "index");
    this.controller = controller;
    this.index = index;
    tabs$._DragAnimation.__proto__.new.call(this);
    ;
  }).prototype = tabs$._DragAnimation.prototype;
  dart.addTypeTests(tabs$._DragAnimation);
  dart.addTypeCaches(tabs$._DragAnimation);
  dart.setGetterSignature(tabs$._DragAnimation, () => ({
    __proto__: dart.getGetters(tabs$._DragAnimation.__proto__),
    parent: animation.Animation$(core.double),
    value: core.double
  }));
  dart.setLibraryUri(tabs$._DragAnimation, I[33]);
  dart.setFieldSignature(tabs$._DragAnimation, () => ({
    __proto__: dart.getFields(tabs$._DragAnimation.__proto__),
    controller: dart.finalFieldType(tab_controller.TabController),
    index: dart.finalFieldType(core.int)
  }));
  tabs$._TabBarScrollPosition = class _TabBarScrollPosition extends scroll_position_with_single_context.ScrollPositionWithSingleContext {
    applyContentDimensions(minScrollExtent, maxScrollExtent) {
      if (minScrollExtent == null) dart.nullFailed(I[32], 537, 38, "minScrollExtent");
      if (maxScrollExtent == null) dart.nullFailed(I[32], 537, 62, "maxScrollExtent");
      let result = true;
      if (this[S._initialViewportDimensionWasZero] !== true) {
        if (!(this.viewportDimension != null)) dart.assertFailed(null, I[32], 547, 14, "viewportDimension != null");
        this[S._initialViewportDimensionWasZero] = this.viewportDimension !== 0.0;
        this.correctPixels(this.tabBar[S._initialScrollOffset](this.viewportDimension, minScrollExtent, maxScrollExtent));
        result = false;
      }
      return dart.test(super.applyContentDimensions(minScrollExtent, maxScrollExtent)) && result;
    }
  };
  (tabs$._TabBarScrollPosition.new = function(opts) {
    let physics = opts && 'physics' in opts ? opts.physics : null;
    if (physics == null) dart.nullFailed(I[32], 521, 28, "physics");
    let context = opts && 'context' in opts ? opts.context : null;
    if (context == null) dart.nullFailed(I[32], 522, 28, "context");
    let oldPosition = opts && 'oldPosition' in opts ? opts.oldPosition : null;
    let tabBar = opts && 'tabBar' in opts ? opts.tabBar : null;
    if (tabBar == null) dart.nullFailed(I[32], 524, 19, "tabBar");
    this[S._initialViewportDimensionWasZero] = null;
    this.tabBar = tabBar;
    tabs$._TabBarScrollPosition.__proto__.new.call(this, {physics: physics, context: context, initialPixels: null, oldPosition: oldPosition});
    ;
  }).prototype = tabs$._TabBarScrollPosition.prototype;
  dart.addTypeTests(tabs$._TabBarScrollPosition);
  dart.addTypeCaches(tabs$._TabBarScrollPosition);
  dart.setLibraryUri(tabs$._TabBarScrollPosition, I[33]);
  dart.setFieldSignature(tabs$._TabBarScrollPosition, () => ({
    __proto__: dart.getFields(tabs$._TabBarScrollPosition.__proto__),
    tabBar: dart.finalFieldType(tabs$._TabBarState),
    [S._initialViewportDimensionWasZero]: dart.fieldType(dart.nullable(core.bool))
  }));
  tabs$._TabBarScrollController = class _TabBarScrollController extends scroll_controller.ScrollController {
    createScrollPosition(physics, context, oldPosition) {
      if (physics == null) dart.nullFailed(I[32], 564, 53, "physics");
      if (context == null) dart.nullFailed(I[32], 564, 76, "context");
      return new tabs$._TabBarScrollPosition.new({physics: physics, context: context, oldPosition: oldPosition, tabBar: this.tabBar});
    }
  };
  (tabs$._TabBarScrollController.new = function(tabBar) {
    if (tabBar == null) dart.nullFailed(I[32], 559, 32, "tabBar");
    this.tabBar = tabBar;
    tabs$._TabBarScrollController.__proto__.new.call(this);
    ;
  }).prototype = tabs$._TabBarScrollController.prototype;
  dart.addTypeTests(tabs$._TabBarScrollController);
  dart.addTypeCaches(tabs$._TabBarScrollController);
  dart.setLibraryUri(tabs$._TabBarScrollController, I[33]);
  dart.setFieldSignature(tabs$._TabBarScrollController, () => ({
    __proto__: dart.getFields(tabs$._TabBarScrollController.__proto__),
    tabBar: dart.finalFieldType(tabs$._TabBarState)
  }));
  tabs$.TabBar = class TabBar extends framework.StatefulWidget {
    get tabs() {
      return this[S.tabs];
    }
    set tabs(value) {
      super.tabs = value;
    }
    get controller() {
      return this[S.controller];
    }
    set controller(value) {
      super.controller = value;
    }
    get isScrollable() {
      return this[S.isScrollable];
    }
    set isScrollable(value) {
      super.isScrollable = value;
    }
    get padding() {
      return this[S.padding$2];
    }
    set padding(value) {
      super.padding = value;
    }
    get indicatorColor() {
      return this[S.indicatorColor];
    }
    set indicatorColor(value) {
      super.indicatorColor = value;
    }
    get indicatorWeight() {
      return this[S.indicatorWeight];
    }
    set indicatorWeight(value) {
      super.indicatorWeight = value;
    }
    get indicatorPadding() {
      return this[S.indicatorPadding];
    }
    set indicatorPadding(value) {
      super.indicatorPadding = value;
    }
    get indicator() {
      return this[S.indicator];
    }
    set indicator(value) {
      super.indicator = value;
    }
    get automaticIndicatorColorAdjustment() {
      return this[S.automaticIndicatorColorAdjustment];
    }
    set automaticIndicatorColorAdjustment(value) {
      super.automaticIndicatorColorAdjustment = value;
    }
    get indicatorSize() {
      return this[S.indicatorSize];
    }
    set indicatorSize(value) {
      super.indicatorSize = value;
    }
    get labelColor() {
      return this[S.labelColor$1];
    }
    set labelColor(value) {
      super.labelColor = value;
    }
    get unselectedLabelColor() {
      return this[S.unselectedLabelColor$1];
    }
    set unselectedLabelColor(value) {
      super.unselectedLabelColor = value;
    }
    get labelStyle() {
      return this[S.labelStyle$1];
    }
    set labelStyle(value) {
      super.labelStyle = value;
    }
    get labelPadding() {
      return this[S.labelPadding];
    }
    set labelPadding(value) {
      super.labelPadding = value;
    }
    get unselectedLabelStyle() {
      return this[S.unselectedLabelStyle$1];
    }
    set unselectedLabelStyle(value) {
      super.unselectedLabelStyle = value;
    }
    get overlayColor() {
      return this[S.overlayColor];
    }
    set overlayColor(value) {
      super.overlayColor = value;
    }
    get dragStartBehavior() {
      return this[S.dragStartBehavior];
    }
    set dragStartBehavior(value) {
      super.dragStartBehavior = value;
    }
    get mouseCursor() {
      return this[S.mouseCursor$2];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get enableFeedback() {
      return this[S.enableFeedback$2];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get onTap() {
      return this[S.onTap];
    }
    set onTap(value) {
      super.onTap = value;
    }
    get physics() {
      return this[S.physics];
    }
    set physics(value) {
      super.physics = value;
    }
    get preferredSize() {
      let maxHeight = 46;
      for (let item of this.tabs) {
        if (preferred_size.PreferredSizeWidget.is(item)) {
          let itemHeight = item.preferredSize.height;
          maxHeight = math.max(core.double, itemHeight, maxHeight);
        }
      }
      return new ui.Size.fromHeight(maxHeight + dart.notNull(this.indicatorWeight));
    }
    get tabHasTextAndIcon() {
      for (let item of this.tabs) {
        if (preferred_size.PreferredSizeWidget.is(item)) {
          if (item.preferredSize.height === 72) return true;
        }
      }
      return false;
    }
    createState() {
      return new tabs$._TabBarState.new();
    }
  };
  (tabs$.TabBar.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let tabs = opts && 'tabs' in opts ? opts.tabs : null;
    if (tabs == null) dart.nullFailed(I[32], 710, 19, "tabs");
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let isScrollable = opts && 'isScrollable' in opts ? opts.isScrollable : false;
    if (isScrollable == null) dart.nullFailed(I[32], 712, 10, "isScrollable");
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let indicatorColor = opts && 'indicatorColor' in opts ? opts.indicatorColor : null;
    let automaticIndicatorColorAdjustment = opts && 'automaticIndicatorColorAdjustment' in opts ? opts.automaticIndicatorColorAdjustment : true;
    if (automaticIndicatorColorAdjustment == null) dart.nullFailed(I[32], 715, 10, "automaticIndicatorColorAdjustment");
    let indicatorWeight = opts && 'indicatorWeight' in opts ? opts.indicatorWeight : 2;
    if (indicatorWeight == null) dart.nullFailed(I[32], 716, 10, "indicatorWeight");
    let indicatorPadding = opts && 'indicatorPadding' in opts ? opts.indicatorPadding : C[214] || CT.C214;
    if (indicatorPadding == null) dart.nullFailed(I[32], 717, 10, "indicatorPadding");
    let indicator = opts && 'indicator' in opts ? opts.indicator : null;
    let indicatorSize = opts && 'indicatorSize' in opts ? opts.indicatorSize : null;
    let labelColor = opts && 'labelColor' in opts ? opts.labelColor : null;
    let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
    let labelPadding = opts && 'labelPadding' in opts ? opts.labelPadding : null;
    let unselectedLabelColor = opts && 'unselectedLabelColor' in opts ? opts.unselectedLabelColor : null;
    let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[215] || CT.C215;
    if (dragStartBehavior == null) dart.nullFailed(I[32], 725, 10, "dragStartBehavior");
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.tabs] = tabs;
    this[S.controller] = controller;
    this[S.isScrollable] = isScrollable;
    this[S.padding$2] = padding;
    this[S.indicatorColor] = indicatorColor;
    this[S.automaticIndicatorColorAdjustment] = automaticIndicatorColorAdjustment;
    this[S.indicatorWeight] = indicatorWeight;
    this[S.indicatorPadding] = indicatorPadding;
    this[S.indicator] = indicator;
    this[S.indicatorSize] = indicatorSize;
    this[S.labelColor$1] = labelColor;
    this[S.labelStyle$1] = labelStyle;
    this[S.labelPadding] = labelPadding;
    this[S.unselectedLabelColor$1] = unselectedLabelColor;
    this[S.unselectedLabelStyle$1] = unselectedLabelStyle;
    this[S.dragStartBehavior] = dragStartBehavior;
    this[S.overlayColor] = overlayColor;
    this[S.mouseCursor$2] = mouseCursor;
    this[S.enableFeedback$2] = enableFeedback;
    this[S.onTap] = onTap;
    this[S.physics] = physics;
    if (!(tabs != null)) dart.assertFailed(null, I[32], 731, 15, "tabs != null");
    if (!(isScrollable != null)) dart.assertFailed(null, I[32], 732, 15, "isScrollable != null");
    if (!(dragStartBehavior != null)) dart.assertFailed(null, I[32], 733, 15, "dragStartBehavior != null");
    if (!(indicator != null || indicatorWeight != null && dart.notNull(indicatorWeight) > 0.0)) dart.assertFailed(null, I[32], 734, 15, "indicator != null || (indicatorWeight != null && indicatorWeight > 0.0)");
    if (!(indicator != null || indicatorPadding != null)) dart.assertFailed(null, I[32], 735, 15, "indicator != null || (indicatorPadding != null)");
    tabs$.TabBar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tabs$.TabBar.prototype;
  dart.addTypeTests(tabs$.TabBar);
  dart.addTypeCaches(tabs$.TabBar);
  tabs$.TabBar[dart.implements] = () => [preferred_size.PreferredSizeWidget];
  dart.setMethodSignature(tabs$.TabBar, () => ({
    __proto__: dart.getMethods(tabs$.TabBar.__proto__),
    createState: dart.fnType(framework.State$(tabs$.TabBar), [])
  }));
  dart.setGetterSignature(tabs$.TabBar, () => ({
    __proto__: dart.getGetters(tabs$.TabBar.__proto__),
    preferredSize: ui.Size,
    tabHasTextAndIcon: core.bool
  }));
  dart.setLibraryUri(tabs$.TabBar, I[33]);
  dart.setFieldSignature(tabs$.TabBar, () => ({
    __proto__: dart.getFields(tabs$.TabBar.__proto__),
    tabs: dart.finalFieldType(core.List$(framework.Widget)),
    controller: dart.finalFieldType(dart.nullable(tab_controller.TabController)),
    isScrollable: dart.finalFieldType(core.bool),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    indicatorColor: dart.finalFieldType(dart.nullable(ui.Color)),
    indicatorWeight: dart.finalFieldType(core.double),
    indicatorPadding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
    indicator: dart.finalFieldType(dart.nullable(decoration.Decoration)),
    automaticIndicatorColorAdjustment: dart.finalFieldType(core.bool),
    indicatorSize: dart.finalFieldType(dart.nullable(tabs$.TabBarIndicatorSize)),
    labelColor: dart.finalFieldType(dart.nullable(ui.Color)),
    unselectedLabelColor: dart.finalFieldType(dart.nullable(ui.Color)),
    labelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    labelPadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    unselectedLabelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    overlayColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    dragStartBehavior: dart.finalFieldType(recognizer.DragStartBehavior),
    mouseCursor: dart.finalFieldType(dart.nullable(mouse_cursor.MouseCursor)),
    enableFeedback: dart.finalFieldType(dart.nullable(core.bool)),
    onTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.int]))),
    physics: dart.finalFieldType(dart.nullable(scroll_physics.ScrollPhysics))
  }));
  tabs$._TabBarState = class _TabBarState extends framework.State$(tabs$.TabBar) {
    get [S._tabStripWidth]() {
      let t7;
      return dart.test(this[S.___TabBarState__tabStripWidth_isSet]) ? (t7 = this[S.___TabBarState__tabStripWidth], t7) : dart.throw(new _internal.LateError.fieldNI("_tabStripWidth"));
    }
    set [S._tabStripWidth](t7) {
      if (t7 == null) dart.nullFailed(I[32], 959, 15, "null");
      this[S.___TabBarState__tabStripWidth_isSet] = true;
      this[S.___TabBarState__tabStripWidth] = t7;
    }
    get [S._tabKeys]() {
      let t8;
      return dart.test(this[S.___TabBarState__tabKeys_isSet]) ? (t8 = this[S.___TabBarState__tabKeys], t8) : dart.throw(new _internal.LateError.fieldNI("_tabKeys"));
    }
    set [S._tabKeys](t8) {
      if (t8 == null) dart.nullFailed(I[32], 960, 24, "null");
      this[S.___TabBarState__tabKeys_isSet] = true;
      this[S.___TabBarState__tabKeys] = t8;
    }
    initState() {
      super.initState();
      this[S._tabKeys] = this.widget.tabs[S.$map](T$.GlobalKeyOfStateOfStatefulWidget(), dart.fn(tab => {
        if (tab == null) dart.nullFailed(I[32], 967, 40, "tab");
        return T$.GlobalKeyOfStateOfStatefulWidget().new();
      }, T$.WidgetToGlobalKeyOfStateOfStatefulWidget()))[S.$toList]();
    }
    get [S._indicator]() {
      let t9, t10, t9$;
      if (this.widget.indicator != null) return dart.nullCheck(this.widget.indicator);
      let tabBarTheme = tab_bar_theme.TabBarTheme.of(this.context);
      if (tabBarTheme.indicator != null) return dart.nullCheck(tabBarTheme.indicator);
      let color = (t9 = this.widget.indicatorColor, t9 == null ? theme$.Theme.of(this.context).indicatorColor : t9);
      if (dart.test(this.widget.automaticIndicatorColorAdjustment) && color.value == (t9$ = material.Material.of(this.context), t9$ == null ? null : (t10 = t9$.color, t10 == null ? null : t10.value))) color = colors$.Colors.white;
      return new tab_indicator.UnderlineTabIndicator.new({borderSide: new borders.BorderSide.new({width: this.widget.indicatorWeight, color: color})});
    }
    get [S._controllerIsValid]() {
      let t9;
      return (t9 = this[S._controller$2], t9 == null ? null : t9.animation) != null;
    }
    [S._updateTabController]() {
      let t9;
      let newController = (t9 = this.widget.controller, t9 == null ? tab_controller.DefaultTabController.of(this.context) : t9);
      if (!dart.test(dart.fn(() => {
        if (newController == null) {
          dart.throw(assertions.FlutterError.new("No TabController for " + dart.str(dart.runtimeType(this.widget)) + ".\n" + "When creating a " + dart.str(dart.runtimeType(this.widget)) + ", you must either provide an explicit " + "TabController using the \"controller\" property, or you must ensure that there " + "is a DefaultTabController above the " + dart.str(dart.runtimeType(this.widget)) + ".\n" + "In this case, there was neither an explicit controller nor a default controller."));
        }
        return true;
      }, T$.VoidTobool())())) dart.assertFailed(null, I[32], 1010, 12, "() {\r\n      if (newController == null) {\r\n        throw FlutterError(\r\n          'No TabController for ${widget.runtimeType}.\\n'\r\n          'When creating a ${widget.runtimeType}, you must either provide an explicit '\r\n          'TabController using the \"controller\" property, or you must ensure that there '\r\n          'is a DefaultTabController above the ${widget.runtimeType}.\\n'\r\n          'In this case, there was neither an explicit controller nor a default controller.',\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      if (dart.equals(newController, this[S._controller$2])) return;
      if (dart.test(this[S._controllerIsValid])) {
        dart.nullCheck(dart.nullCheck(this[S._controller$2]).animation).removeListener(dart.bind(this, S._handleTabControllerAnimationTick));
        dart.nullCheck(this[S._controller$2]).removeListener(dart.bind(this, S._handleTabControllerTick));
      }
      this[S._controller$2] = newController;
      if (this[S._controller$2] != null) {
        dart.nullCheck(dart.nullCheck(this[S._controller$2]).animation).addListener(dart.bind(this, S._handleTabControllerAnimationTick));
        dart.nullCheck(this[S._controller$2]).addListener(dart.bind(this, S._handleTabControllerTick));
        this[S._currentIndex] = dart.nullCheck(this[S._controller$2]).index;
      }
    }
    [S._initIndicatorPainter]() {
      let t9;
      this[S._indicatorPainter] = !dart.test(this[S._controllerIsValid]) ? null : new tabs$._IndicatorPainter.new({controller: dart.nullCheck(this[S._controller$2]), indicator: this[S._indicator], indicatorSize: (t9 = this.widget.indicatorSize, t9 == null ? tab_bar_theme.TabBarTheme.of(this.context).indicatorSize : t9), indicatorPadding: this.widget.indicatorPadding, tabKeys: this[S._tabKeys], old: this[S._indicatorPainter]});
    }
    didChangeDependencies() {
      super.didChangeDependencies();
      if (!dart.test(debug$0.debugCheckHasMaterial(this.context))) dart.assertFailed(null, I[32], 1052, 12, "debugCheckHasMaterial(context)");
      this[S._updateTabController]();
      this[S._initIndicatorPainter]();
    }
    didUpdateWidget(oldWidget) {
      tabs$.TabBar.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[32], 1058, 31, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.controller, oldWidget.controller)) {
        this[S._updateTabController]();
        this[S._initIndicatorPainter]();
      } else if (!dart.equals(this.widget.indicatorColor, oldWidget.indicatorColor) || this.widget.indicatorWeight != oldWidget.indicatorWeight || this.widget.indicatorSize != oldWidget.indicatorSize || !dart.equals(this.widget.indicator, oldWidget.indicator)) {
        this[S._initIndicatorPainter]();
      }
      if (dart.notNull(this.widget.tabs[S.$length]) > dart.notNull(oldWidget.tabs[S.$length])) {
        let delta = dart.notNull(this.widget.tabs[S.$length]) - dart.notNull(oldWidget.tabs[S.$length]);
        this[S._tabKeys][S.$addAll](T$.ListOfGlobalKeyOfStateOfStatefulWidget().generate(delta, dart.fn(n => {
          if (n == null) dart.nullFailed(I[32], 1072, 60, "n");
          return T$.GlobalKeyOfStateOfStatefulWidget().new();
        }, T$.intToGlobalKeyOfStateOfStatefulWidget())));
      } else if (dart.notNull(this.widget.tabs[S.$length]) < dart.notNull(oldWidget.tabs[S.$length])) {
        this[S._tabKeys][S.$removeRange](this.widget.tabs[S.$length], oldWidget.tabs[S.$length]);
      }
    }
    dispose() {
      dart.nullCheck(this[S._indicatorPainter]).dispose();
      if (dart.test(this[S._controllerIsValid])) {
        dart.nullCheck(dart.nullCheck(this[S._controller$2]).animation).removeListener(dart.bind(this, S._handleTabControllerAnimationTick));
        dart.nullCheck(this[S._controller$2]).removeListener(dart.bind(this, S._handleTabControllerTick));
      }
      this[S._controller$2] = null;
      super.dispose();
    }
    get maxTabIndex() {
      return dart.nullCheck(this[S._indicatorPainter]).maxTabIndex;
    }
    [S._tabScrollOffset](index, viewportWidth, minExtent, maxExtent) {
      if (index == null) dart.nullFailed(I[32], 1092, 31, "index");
      if (viewportWidth == null) dart.nullFailed(I[32], 1092, 45, "viewportWidth");
      if (minExtent == null) dart.nullFailed(I[32], 1092, 67, "minExtent");
      if (maxExtent == null) dart.nullFailed(I[32], 1092, 85, "maxExtent");
      if (!dart.test(this.widget.isScrollable)) return 0.0;
      let tabCenter = dart.nullCheck(this[S._indicatorPainter]).centerOf(index);
      switch (basic.Directionality.of(this.context)) {
        case C[137] || CT.C137:
        {
          tabCenter = dart.notNull(this[S._tabStripWidth]) - dart.notNull(tabCenter);
          break;
        }
        case C[138] || CT.C138:
        {
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      return (dart.notNull(tabCenter) - dart.notNull(viewportWidth) / 2.0)[S.$clamp](minExtent, maxExtent);
    }
    [S._tabCenteredScrollOffset](index) {
      if (index == null) dart.nullFailed(I[32], 1106, 39, "index");
      let position = dart.nullCheck(this[S._scrollController]).position;
      return this[S._tabScrollOffset](index, position.viewportDimension, position.minScrollExtent, position.maxScrollExtent);
    }
    [S._initialScrollOffset](viewportWidth, minExtent, maxExtent) {
      if (viewportWidth == null) dart.nullFailed(I[32], 1111, 38, "viewportWidth");
      if (minExtent == null) dart.nullFailed(I[32], 1111, 60, "minExtent");
      if (maxExtent == null) dart.nullFailed(I[32], 1111, 78, "maxExtent");
      return this[S._tabScrollOffset](dart.nullCheck(this[S._currentIndex]), viewportWidth, minExtent, maxExtent);
    }
    [S._scrollToCurrentIndex]() {
      let offset = this[S._tabCenteredScrollOffset](dart.nullCheck(this[S._currentIndex]));
      dart.nullCheck(this[S._scrollController]).animateTo(offset, {duration: constants.kTabScrollDuration, curve: curves.Curves.ease});
    }
    [S._scrollToControllerValue]() {
      let t9, t9$;
      let leadingPosition = dart.nullCheck(this[S._currentIndex]) > 0 ? this[S._tabCenteredScrollOffset](dart.nullCheck(this[S._currentIndex]) - 1) : null;
      let middlePosition = this[S._tabCenteredScrollOffset](dart.nullCheck(this[S._currentIndex]));
      let trailingPosition = dart.nullCheck(this[S._currentIndex]) < dart.notNull(this.maxTabIndex) ? this[S._tabCenteredScrollOffset](dart.nullCheck(this[S._currentIndex]) + 1) : null;
      let index = dart.nullCheck(this[S._controller$2]).index[S.$toDouble]();
      let value = dart.nullCheck(dart.nullCheck(this[S._controller$2]).animation).value;
      let offset = null;
      if (value === index - 1.0)
        offset = (t9 = leadingPosition, t9 == null ? middlePosition : t9);
      else if (value === index + 1.0)
        offset = (t9$ = trailingPosition, t9$ == null ? middlePosition : t9$);
      else if (value === index)
        offset = middlePosition;
      else if (dart.notNull(value) < index)
        offset = leadingPosition == null ? middlePosition : dart.nullCheck(ui.lerpDouble(middlePosition, leadingPosition, index - dart.notNull(value)));
      else
        offset = trailingPosition == null ? middlePosition : dart.nullCheck(ui.lerpDouble(middlePosition, trailingPosition, dart.notNull(value) - index));
      dart.nullCheck(this[S._scrollController]).jumpTo(offset);
    }
    [S._handleTabControllerAnimationTick]() {
      if (!dart.test(this.mounted)) dart.assertFailed(null, I[32], 1143, 12, "mounted");
      if (!dart.test(dart.nullCheck(this[S._controller$2]).indexIsChanging) && dart.test(this.widget.isScrollable)) {
        this[S._currentIndex] = dart.nullCheck(this[S._controller$2]).index;
        this[S._scrollToControllerValue]();
      }
    }
    [S._handleTabControllerTick]() {
      if (dart.nullCheck(this[S._controller$2]).index != this[S._currentIndex]) {
        this[S._currentIndex] = dart.nullCheck(this[S._controller$2]).index;
        if (dart.test(this.widget.isScrollable)) this[S._scrollToCurrentIndex]();
      }
      this.setState(dart.fn(() => {
      }, T$.VoidTovoid()));
    }
    [S._saveTabOffsets](tabOffsets, textDirection, width) {
      let t9;
      if (tabOffsets == null) dart.nullFailed(I[32], 1164, 37, "tabOffsets");
      if (textDirection == null) dart.nullFailed(I[32], 1164, 63, "textDirection");
      if (width == null) dart.nullFailed(I[32], 1164, 85, "width");
      this[S._tabStripWidth] = width;
      t9 = this[S._indicatorPainter];
      t9 == null ? null : t9.saveTabOffsets(tabOffsets, textDirection);
    }
    [S._handleTap](index) {
      let t9;
      if (index == null) dart.nullFailed(I[32], 1169, 23, "index");
      if (!(dart.notNull(index) >= 0 && dart.notNull(index) < dart.notNull(this.widget.tabs[S.$length]))) dart.assertFailed(null, I[32], 1170, 12, "index >= 0 && index < widget.tabs.length");
      dart.nullCheck(this[S._controller$2]).animateTo(index);
      t9 = this.widget.onTap;
      t9 == null ? null : t9(index);
    }
    [S._buildStyledTab](child, selected, animation) {
      if (child == null) dart.nullFailed(I[32], 1175, 33, "child");
      if (selected == null) dart.nullFailed(I[32], 1175, 45, "selected");
      if (animation == null) dart.nullFailed(I[32], 1175, 73, "animation");
      return new tabs$._TabStyle.new({animation: animation, selected: selected, labelColor: this.widget.labelColor, unselectedLabelColor: this.widget.unselectedLabelColor, labelStyle: this.widget.labelStyle, unselectedLabelStyle: this.widget.unselectedLabelStyle, child: child, $creationLocationd_0dea112b090073317d4: C[216] || CT.C216});
    }
    build(context) {
      let t9, t9$;
      if (context == null) dart.nullFailed(I[32], 1188, 29, "context");
      if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, I[32], 1189, 12, "debugCheckHasMaterialLocalizations(context)");
      if (!dart.test(dart.fn(() => {
        if (dart.nullCheck(this[S._controller$2]).length != this.widget.tabs[S.$length]) {
          dart.throw(assertions.FlutterError.new("Controller's length property (" + dart.str(dart.nullCheck(this[S._controller$2]).length) + ") does not match the " + "number of tabs (" + dart.str(this.widget.tabs[S.$length]) + ") present in TabBar's tabs property."));
        }
        return true;
      }, T$.VoidTobool())())) dart.assertFailed(null, I[32], 1190, 12, "() {\r\n      if (_controller!.length != widget.tabs.length) {\r\n        throw FlutterError(\r\n          \"Controller's length property (${_controller!.length}) does not match the \"\r\n          \"number of tabs (${widget.tabs.length}) present in TabBar's tabs property.\",\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      let localizations = material_localizations.MaterialLocalizations.of(context);
      if (dart.nullCheck(this[S._controller$2]).length === 0) {
        return new container.Container.new({height: 46 + dart.notNull(this.widget.indicatorWeight), $creationLocationd_0dea112b090073317d4: C[217] || CT.C217});
      }
      let tabBarTheme = tab_bar_theme.TabBarTheme.of(context);
      let wrappedTabs = T$.ListOfWidget().generate(this.widget.tabs[S.$length], dart.fn(index => {
        let t9, t9$, t9$0, t9$1;
        if (index == null) dart.nullFailed(I[32], 1208, 85, "index");
        let adjustedPadding = null;
        if (preferred_size.PreferredSizeWidget.is(this.widget.tabs[S.$_get](index))) {
          let tab = preferred_size.PreferredSizeWidget.as(this.widget.tabs[S.$_get](index));
          if (dart.test(this.widget.tabHasTextAndIcon) && tab.preferredSize.height === 46) {
            if (this.widget.labelPadding != null || tabBarTheme.labelPadding != null) {
              adjustedPadding = (t9 = this.widget.labelPadding, t9 == null ? dart.nullCheck(tabBarTheme.labelPadding) : t9).add(C[218] || CT.C218);
            } else {
              adjustedPadding = C[219] || CT.C219;
            }
          }
        }
        return new basic.Center.new({heightFactor: 1.0, child: new basic.Padding.new({padding: (t9$1 = (t9$0 = (t9$ = adjustedPadding, t9$ == null ? this.widget.labelPadding : t9$), t9$0 == null ? tabBarTheme.labelPadding : t9$0), t9$1 == null ? constants.kTabLabelPadding : t9$1), child: new basic.KeyedSubtree.new({key: this[S._tabKeys][S.$_get](index), child: this.widget.tabs[S.$_get](index), $creationLocationd_0dea112b090073317d4: C[220] || CT.C220}), $creationLocationd_0dea112b090073317d4: C[221] || CT.C221}), $creationLocationd_0dea112b090073317d4: C[222] || CT.C222});
      }, T$.intToCenter()));
      if (this[S._controller$2] != null) {
        let previousIndex = dart.nullCheck(this[S._controller$2]).previousIndex;
        if (dart.test(dart.nullCheck(this[S._controller$2]).indexIsChanging)) {
          if (!(this[S._currentIndex] != previousIndex)) dart.assertFailed(null, I[32], 1244, 16, "_currentIndex != previousIndex");
          let animation = new tabs$._ChangeAnimation.new(dart.nullCheck(this[S._controller$2]));
          wrappedTabs[S.$_set](dart.nullCheck(this[S._currentIndex]), this[S._buildStyledTab](wrappedTabs[S.$_get](dart.nullCheck(this[S._currentIndex])), true, animation));
          wrappedTabs[S.$_set](previousIndex, this[S._buildStyledTab](wrappedTabs[S.$_get](previousIndex), false, animation));
        } else {
          let tabIndex = dart.nullCheck(this[S._currentIndex]);
          let centerAnimation = new tabs$._DragAnimation.new(dart.nullCheck(this[S._controller$2]), tabIndex);
          wrappedTabs[S.$_set](tabIndex, this[S._buildStyledTab](wrappedTabs[S.$_get](tabIndex), true, centerAnimation));
          if (dart.nullCheck(this[S._currentIndex]) > 0) {
            let tabIndex = dart.nullCheck(this[S._currentIndex]) - 1;
            let previousAnimation = new animations.ReverseAnimation.new(new tabs$._DragAnimation.new(dart.nullCheck(this[S._controller$2]), tabIndex));
            wrappedTabs[S.$_set](tabIndex, this[S._buildStyledTab](wrappedTabs[S.$_get](tabIndex), false, previousAnimation));
          }
          if (dart.nullCheck(this[S._currentIndex]) < dart.notNull(this.widget.tabs[S.$length]) - 1) {
            let tabIndex = dart.nullCheck(this[S._currentIndex]) + 1;
            let nextAnimation = new animations.ReverseAnimation.new(new tabs$._DragAnimation.new(dart.nullCheck(this[S._controller$2]), tabIndex));
            wrappedTabs[S.$_set](tabIndex, this[S._buildStyledTab](wrappedTabs[S.$_get](tabIndex), false, nextAnimation));
          }
        }
      }
      let tabCount = this.widget.tabs[S.$length];
      for (let index = 0; index < dart.notNull(tabCount); index = index + 1) {
        wrappedTabs[S.$_set](index, new ink_well.InkWell.new({mouseCursor: (t9 = this.widget.mouseCursor, t9 == null ? mouse_cursor.SystemMouseCursors.click : t9), onTap: dart.fn(() => {
            this[S._handleTap](index);
          }, T$.VoidTovoid()), enableFeedback: (t9$ = this.widget.enableFeedback, t9$ == null ? true : t9$), overlayColor: this.widget.overlayColor, child: new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({bottom: this.widget.indicatorWeight}), child: new basic.Stack.new({children: T$.JSArrayOfWidget().of([wrappedTabs[S.$_get](index), new basic.Semantics.new({selected: index === this[S._currentIndex], label: localizations.tabLabel({tabIndex: index + 1, tabCount: tabCount}), $creationLocationd_0dea112b090073317d4: C[223] || CT.C223})]), $creationLocationd_0dea112b090073317d4: C[224] || CT.C224}), $creationLocationd_0dea112b090073317d4: C[225] || CT.C225}), $creationLocationd_0dea112b090073317d4: C[226] || CT.C226}));
        if (!dart.test(this.widget.isScrollable)) wrappedTabs[S.$_set](index, new basic.Expanded.new({child: wrappedTabs[S.$_get](index), $creationLocationd_0dea112b090073317d4: C[227] || CT.C227}));
      }
      let tabBar = new basic.CustomPaint.new({painter: this[S._indicatorPainter], child: new tabs$._TabStyle.new({animation: animations.kAlwaysDismissedAnimation, selected: false, labelColor: this.widget.labelColor, unselectedLabelColor: this.widget.unselectedLabelColor, labelStyle: this.widget.labelStyle, unselectedLabelStyle: this.widget.unselectedLabelStyle, child: new tabs$._TabLabelBar.new({onPerformLayout: dart.bind(this, S._saveTabOffsets), children: wrappedTabs, $creationLocationd_0dea112b090073317d4: C[228] || CT.C228}), $creationLocationd_0dea112b090073317d4: C[229] || CT.C229}), $creationLocationd_0dea112b090073317d4: C[230] || CT.C230});
      if (dart.test(this.widget.isScrollable)) {
        this[S._scrollController] == null ? this[S._scrollController] = new tabs$._TabBarScrollController.new(this) : null;
        tabBar = new single_child_scroll_view.SingleChildScrollView.new({dragStartBehavior: this.widget.dragStartBehavior, scrollDirection: basic_types.Axis.horizontal, controller: this[S._scrollController], padding: this.widget.padding, physics: this.widget.physics, child: tabBar, $creationLocationd_0dea112b090073317d4: C[231] || CT.C231});
      } else if (this.widget.padding != null) {
        tabBar = new basic.Padding.new({padding: dart.nullCheck(this.widget.padding), child: tabBar, $creationLocationd_0dea112b090073317d4: C[232] || CT.C232});
      }
      return tabBar;
    }
  };
  (tabs$._TabBarState.new = function() {
    this[S._scrollController] = null;
    this[S._controller$2] = null;
    this[S._indicatorPainter] = null;
    this[S._currentIndex] = null;
    this[S.___TabBarState__tabStripWidth] = null;
    this[S.___TabBarState__tabStripWidth_isSet] = false;
    this[S.___TabBarState__tabKeys] = null;
    this[S.___TabBarState__tabKeys_isSet] = false;
    tabs$._TabBarState.__proto__.new.call(this);
    ;
  }).prototype = tabs$._TabBarState.prototype;
  dart.addTypeTests(tabs$._TabBarState);
  dart.addTypeCaches(tabs$._TabBarState);
  dart.setMethodSignature(tabs$._TabBarState, () => ({
    __proto__: dart.getMethods(tabs$._TabBarState.__proto__),
    [S._updateTabController]: dart.fnType(dart.void, []),
    [S._initIndicatorPainter]: dart.fnType(dart.void, []),
    [S._tabScrollOffset]: dart.fnType(core.double, [core.int, core.double, core.double, core.double]),
    [S._tabCenteredScrollOffset]: dart.fnType(core.double, [core.int]),
    [S._initialScrollOffset]: dart.fnType(core.double, [core.double, core.double, core.double]),
    [S._scrollToCurrentIndex]: dart.fnType(dart.void, []),
    [S._scrollToControllerValue]: dart.fnType(dart.void, []),
    [S._handleTabControllerAnimationTick]: dart.fnType(dart.void, []),
    [S._handleTabControllerTick]: dart.fnType(dart.void, []),
    [S._saveTabOffsets]: dart.fnType(dart.void, [core.List$(core.double), ui.TextDirection, core.double]),
    [S._handleTap]: dart.fnType(dart.void, [core.int]),
    [S._buildStyledTab]: dart.fnType(framework.Widget, [framework.Widget, core.bool, animation.Animation$(core.double)]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(tabs$._TabBarState, () => ({
    __proto__: dart.getGetters(tabs$._TabBarState.__proto__),
    [S._tabStripWidth]: core.double,
    [S._tabKeys]: core.List$(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [S._indicator]: decoration.Decoration,
    [S._controllerIsValid]: core.bool,
    maxTabIndex: core.int
  }));
  dart.setSetterSignature(tabs$._TabBarState, () => ({
    __proto__: dart.getSetters(tabs$._TabBarState.__proto__),
    [S._tabStripWidth]: core.double,
    [S._tabKeys]: core.List$(framework.GlobalKey$(framework.State$(framework.StatefulWidget)))
  }));
  dart.setLibraryUri(tabs$._TabBarState, I[33]);
  dart.setFieldSignature(tabs$._TabBarState, () => ({
    __proto__: dart.getFields(tabs$._TabBarState.__proto__),
    [S._scrollController]: dart.fieldType(dart.nullable(scroll_controller.ScrollController)),
    [S._controller$2]: dart.fieldType(dart.nullable(tab_controller.TabController)),
    [S._indicatorPainter]: dart.fieldType(dart.nullable(tabs$._IndicatorPainter)),
    [S._currentIndex]: dart.fieldType(dart.nullable(core.int)),
    [S.___TabBarState__tabStripWidth]: dart.fieldType(dart.nullable(core.double)),
    [S.___TabBarState__tabStripWidth_isSet]: dart.fieldType(core.bool),
    [S.___TabBarState__tabKeys]: dart.fieldType(dart.nullable(core.List$(framework.GlobalKey$(framework.State$(framework.StatefulWidget))))),
    [S.___TabBarState__tabKeys_isSet]: dart.fieldType(core.bool)
  }));
  tabs$.TabBarView = class TabBarView extends framework.StatefulWidget {
    get controller() {
      return this[S.controller$1];
    }
    set controller(value) {
      super.controller = value;
    }
    get children() {
      return this[S.children];
    }
    set children(value) {
      super.children = value;
    }
    get physics() {
      return this[S.physics$1];
    }
    set physics(value) {
      super.physics = value;
    }
    get dragStartBehavior() {
      return this[S.dragStartBehavior$1];
    }
    set dragStartBehavior(value) {
      super.dragStartBehavior = value;
    }
    createState() {
      return new tabs$._TabBarViewState.new();
    }
  };
  (tabs$.TabBarView.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let children = opts && 'children' in opts ? opts.children : null;
    if (children == null) dart.nullFailed(I[32], 1350, 19, "children");
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[215] || CT.C215;
    if (dragStartBehavior == null) dart.nullFailed(I[32], 1353, 10, "dragStartBehavior");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.children] = children;
    this[S.controller$1] = controller;
    this[S.physics$1] = physics;
    this[S.dragStartBehavior$1] = dragStartBehavior;
    if (!(children != null)) dart.assertFailed(null, I[32], 1354, 15, "children != null");
    if (!(dragStartBehavior != null)) dart.assertFailed(null, I[32], 1355, 15, "dragStartBehavior != null");
    tabs$.TabBarView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tabs$.TabBarView.prototype;
  dart.addTypeTests(tabs$.TabBarView);
  dart.addTypeCaches(tabs$.TabBarView);
  dart.setMethodSignature(tabs$.TabBarView, () => ({
    __proto__: dart.getMethods(tabs$.TabBarView.__proto__),
    createState: dart.fnType(framework.State$(tabs$.TabBarView), [])
  }));
  dart.setLibraryUri(tabs$.TabBarView, I[33]);
  dart.setFieldSignature(tabs$.TabBarView, () => ({
    __proto__: dart.getFields(tabs$.TabBarView.__proto__),
    controller: dart.finalFieldType(dart.nullable(tab_controller.TabController)),
    children: dart.finalFieldType(core.List$(framework.Widget)),
    physics: dart.finalFieldType(dart.nullable(scroll_physics.ScrollPhysics)),
    dragStartBehavior: dart.finalFieldType(recognizer.DragStartBehavior)
  }));
  tabs$._TabBarViewState = class _TabBarViewState extends framework.State$(tabs$.TabBarView) {
    get [S._pageController]() {
      let t9;
      return dart.test(this[S.___TabBarViewState__pageController_isSet]) ? (t9 = this[S.___TabBarViewState__pageController], t9) : dart.throw(new _internal.LateError.fieldNI("_pageController"));
    }
    set [S._pageController](t9) {
      if (t9 == null) dart.nullFailed(I[32], 1390, 23, "null");
      this[S.___TabBarViewState__pageController_isSet] = true;
      this[S.___TabBarViewState__pageController] = t9;
    }
    get [S._children]() {
      let t10;
      return dart.test(this[S.___TabBarViewState__children_isSet]) ? (t10 = this[S.___TabBarViewState__children], t10) : dart.throw(new _internal.LateError.fieldNI("_children"));
    }
    set [S._children](t10) {
      if (t10 == null) dart.nullFailed(I[32], 1391, 21, "null");
      this[S.___TabBarViewState__children_isSet] = true;
      this[S.___TabBarViewState__children] = t10;
    }
    get [S._childrenWithKey]() {
      let t11;
      return dart.test(this[S.___TabBarViewState__childrenWithKey_isSet]) ? (t11 = this[S.___TabBarViewState__childrenWithKey], t11) : dart.throw(new _internal.LateError.fieldNI("_childrenWithKey"));
    }
    set [S._childrenWithKey](t11) {
      if (t11 == null) dart.nullFailed(I[32], 1392, 21, "null");
      this[S.___TabBarViewState__childrenWithKey_isSet] = true;
      this[S.___TabBarViewState__childrenWithKey] = t11;
    }
    get [S._controllerIsValid]() {
      let t12;
      return (t12 = this[S._controller$2], t12 == null ? null : t12.animation) != null;
    }
    [S._updateTabController]() {
      let t12;
      let newController = (t12 = this.widget.controller, t12 == null ? tab_controller.DefaultTabController.of(this.context) : t12);
      if (!dart.test(dart.fn(() => {
        if (newController == null) {
          dart.throw(assertions.FlutterError.new("No TabController for " + dart.str(dart.runtimeType(this.widget)) + ".\n" + "When creating a " + dart.str(dart.runtimeType(this.widget)) + ", you must either provide an explicit " + "TabController using the \"controller\" property, or you must ensure that there " + "is a DefaultTabController above the " + dart.str(dart.runtimeType(this.widget)) + ".\n" + "In this case, there was neither an explicit controller nor a default controller."));
        }
        return true;
      }, T$.VoidTobool())())) dart.assertFailed(null, I[32], 1403, 12, "() {\r\n      if (newController == null) {\r\n        throw FlutterError(\r\n          'No TabController for ${widget.runtimeType}.\\n'\r\n          'When creating a ${widget.runtimeType}, you must either provide an explicit '\r\n          'TabController using the \"controller\" property, or you must ensure that there '\r\n          'is a DefaultTabController above the ${widget.runtimeType}.\\n'\r\n          'In this case, there was neither an explicit controller nor a default controller.',\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      if (dart.equals(newController, this[S._controller$2])) return;
      if (dart.test(this[S._controllerIsValid])) dart.nullCheck(dart.nullCheck(this[S._controller$2]).animation).removeListener(dart.bind(this, S._handleTabControllerAnimationTick));
      this[S._controller$2] = newController;
      if (this[S._controller$2] != null) dart.nullCheck(dart.nullCheck(this[S._controller$2]).animation).addListener(dart.bind(this, S._handleTabControllerAnimationTick));
    }
    initState() {
      super.initState();
      this[S._updateChildren]();
    }
    didChangeDependencies() {
      let t12, t12$;
      super.didChangeDependencies();
      this[S._updateTabController]();
      this[S._currentIndex] = (t12 = this[S._controller$2], t12 == null ? null : t12.index);
      this[S._pageController] = new page_view.PageController.new({initialPage: (t12$ = this[S._currentIndex], t12$ == null ? 0 : t12$)});
    }
    didUpdateWidget(oldWidget) {
      tabs$.TabBarView.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[32], 1441, 35, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.controller, oldWidget.controller)) this[S._updateTabController]();
      if (!dart.equals(this.widget.children, oldWidget.children) && this[S._warpUnderwayCount] === 0) this[S._updateChildren]();
    }
    dispose() {
      if (dart.test(this[S._controllerIsValid])) dart.nullCheck(dart.nullCheck(this[S._controller$2]).animation).removeListener(dart.bind(this, S._handleTabControllerAnimationTick));
      this[S._controller$2] = null;
      super.dispose();
    }
    [S._updateChildren]() {
      this[S._children] = this.widget.children;
      this[S._childrenWithKey] = basic.KeyedSubtree.ensureUniqueKeysForList(this.widget.children);
    }
    [S._handleTabControllerAnimationTick]() {
      if (dart.notNull(this[S._warpUnderwayCount]) > 0 || !dart.test(dart.nullCheck(this[S._controller$2]).indexIsChanging)) return;
      if (dart.nullCheck(this[S._controller$2]).index != this[S._currentIndex]) {
        this[S._currentIndex] = dart.nullCheck(this[S._controller$2]).index;
        this[S._warpToCurrentIndex]();
      }
    }
    [S._warpToCurrentIndex]() {
      return async.async(dart.void, (function* _warpToCurrentIndex() {
        if (!dart.test(this.mounted)) return T$.FutureOfvoid().value();
        if (this[S._pageController].page === dart.nullCheck(this[S._currentIndex])[S.$toDouble]()) return T$.FutureOfvoid().value();
        let previousIndex = dart.nullCheck(this[S._controller$2]).previousIndex;
        if ((dart.nullCheck(this[S._currentIndex]) - dart.notNull(previousIndex))[S.$abs]() === 1) {
          this[S._warpUnderwayCount] = dart.notNull(this[S._warpUnderwayCount]) + 1;
          yield this[S._pageController].animateToPage(dart.nullCheck(this[S._currentIndex]), {duration: constants.kTabScrollDuration, curve: curves.Curves.ease});
          this[S._warpUnderwayCount] = dart.notNull(this[S._warpUnderwayCount]) - 1;
          return T$.FutureOfvoid().value();
        }
        if (!((dart.nullCheck(this[S._currentIndex]) - dart.notNull(previousIndex))[S.$abs]() > 1)) dart.assertFailed(null, I[32], 1488, 12, "(_currentIndex! - previousIndex).abs() > 1");
        let initialPage = dart.nullCheck(this[S._currentIndex]) > dart.notNull(previousIndex) ? dart.nullCheck(this[S._currentIndex]) - 1 : dart.nullCheck(this[S._currentIndex]) + 1;
        let originalChildren = this[S._childrenWithKey];
        this.setState(dart.fn(() => {
          this[S._warpUnderwayCount] = dart.notNull(this[S._warpUnderwayCount]) + 1;
          this[S._childrenWithKey] = T$.ListOfWidget().from(this[S._childrenWithKey], {growable: false});
          let temp = this[S._childrenWithKey][S.$_get](initialPage);
          this[S._childrenWithKey][S.$_set](initialPage, this[S._childrenWithKey][S.$_get](previousIndex));
          this[S._childrenWithKey][S.$_set](previousIndex, temp);
        }, T$.VoidTovoid()));
        this[S._pageController].jumpToPage(initialPage);
        yield this[S._pageController].animateToPage(dart.nullCheck(this[S._currentIndex]), {duration: constants.kTabScrollDuration, curve: curves.Curves.ease});
        if (!dart.test(this.mounted)) return T$.FutureOfvoid().value();
        this.setState(dart.fn(() => {
          this[S._warpUnderwayCount] = dart.notNull(this[S._warpUnderwayCount]) - 1;
          if (!dart.equals(this.widget.children, this[S._children])) {
            this[S._updateChildren]();
          } else {
            this[S._childrenWithKey] = originalChildren;
          }
        }, T$.VoidTovoid()));
      }).bind(this));
    }
    [S._handleScrollNotification](notification) {
      if (notification == null) dart.nullFailed(I[32], 1517, 53, "notification");
      if (dart.notNull(this[S._warpUnderwayCount]) > 0) return false;
      if (notification.depth !== 0) return false;
      this[S._warpUnderwayCount] = dart.notNull(this[S._warpUnderwayCount]) + 1;
      if (scroll_notification.ScrollUpdateNotification.is(notification) && !dart.test(dart.nullCheck(this[S._controller$2]).indexIsChanging)) {
        if ((dart.nullCheck(this[S._pageController].page) - dart.notNull(dart.nullCheck(this[S._controller$2]).index))[S.$abs]() > 1.0) {
          dart.nullCheck(this[S._controller$2]).index = dart.nullCheck(this[S._pageController].page)[S.$floor]();
          this[S._currentIndex] = dart.nullCheck(this[S._controller$2]).index;
        }
        dart.nullCheck(this[S._controller$2]).offset = (dart.nullCheck(this[S._pageController].page) - dart.notNull(dart.nullCheck(this[S._controller$2]).index))[S.$clamp](-1.0, 1.0);
      } else if (scroll_notification.ScrollEndNotification.is(notification)) {
        dart.nullCheck(this[S._controller$2]).index = dart.nullCheck(this[S._pageController].page)[S.$round]();
        this[S._currentIndex] = dart.nullCheck(this[S._controller$2]).index;
        if (!dart.test(dart.nullCheck(this[S._controller$2]).indexIsChanging)) dart.nullCheck(this[S._controller$2]).offset = (dart.nullCheck(this[S._pageController].page) - dart.notNull(dart.nullCheck(this[S._controller$2]).index))[S.$clamp](-1.0, 1.0);
      }
      this[S._warpUnderwayCount] = dart.notNull(this[S._warpUnderwayCount]) - 1;
      return false;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[32], 1543, 29, "context");
      if (!dart.test(dart.fn(() => {
        if (dart.nullCheck(this[S._controller$2]).length != this.widget.children[S.$length]) {
          dart.throw(assertions.FlutterError.new("Controller's length property (" + dart.str(dart.nullCheck(this[S._controller$2]).length) + ") does not match the " + "number of tabs (" + dart.str(this.widget.children[S.$length]) + ") present in TabBar's tabs property."));
        }
        return true;
      }, T$.VoidTobool())())) dart.assertFailed(null, I[32], 1544, 12, "() {\r\n      if (_controller!.length != widget.children.length) {\r\n        throw FlutterError(\r\n          \"Controller's length property (${_controller!.length}) does not match the \"\r\n          \"number of tabs (${widget.children.length}) present in TabBar's tabs property.\",\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      return new (T$.NotificationListenerOfScrollNotification()).new({onNotification: dart.bind(this, S._handleScrollNotification), child: new page_view.PageView.new({dragStartBehavior: this.widget.dragStartBehavior, controller: this[S._pageController], physics: this.widget.physics == null ? (C[233] || CT.C233).applyTo(C[234] || CT.C234) : (C[233] || CT.C233).applyTo(this.widget.physics), children: this[S._childrenWithKey], $creationLocationd_0dea112b090073317d4: C[235] || CT.C235}), $creationLocationd_0dea112b090073317d4: C[236] || CT.C236});
    }
  };
  (tabs$._TabBarViewState.new = function() {
    this[S._controller$2] = null;
    this[S.___TabBarViewState__pageController] = null;
    this[S.___TabBarViewState__pageController_isSet] = false;
    this[S.___TabBarViewState__children] = null;
    this[S.___TabBarViewState__children_isSet] = false;
    this[S.___TabBarViewState__childrenWithKey] = null;
    this[S.___TabBarViewState__childrenWithKey_isSet] = false;
    this[S._currentIndex] = null;
    this[S._warpUnderwayCount] = 0;
    tabs$._TabBarViewState.__proto__.new.call(this);
    ;
  }).prototype = tabs$._TabBarViewState.prototype;
  dart.addTypeTests(tabs$._TabBarViewState);
  dart.addTypeCaches(tabs$._TabBarViewState);
  dart.setMethodSignature(tabs$._TabBarViewState, () => ({
    __proto__: dart.getMethods(tabs$._TabBarViewState.__proto__),
    [S._updateTabController]: dart.fnType(dart.void, []),
    [S._updateChildren]: dart.fnType(dart.void, []),
    [S._handleTabControllerAnimationTick]: dart.fnType(dart.void, []),
    [S._warpToCurrentIndex]: dart.fnType(async.Future$(dart.void), []),
    [S._handleScrollNotification]: dart.fnType(core.bool, [scroll_notification.ScrollNotification]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(tabs$._TabBarViewState, () => ({
    __proto__: dart.getGetters(tabs$._TabBarViewState.__proto__),
    [S._pageController]: page_view.PageController,
    [S._children]: core.List$(framework.Widget),
    [S._childrenWithKey]: core.List$(framework.Widget),
    [S._controllerIsValid]: core.bool
  }));
  dart.setSetterSignature(tabs$._TabBarViewState, () => ({
    __proto__: dart.getSetters(tabs$._TabBarViewState.__proto__),
    [S._pageController]: page_view.PageController,
    [S._children]: core.List$(framework.Widget),
    [S._childrenWithKey]: core.List$(framework.Widget)
  }));
  dart.setLibraryUri(tabs$._TabBarViewState, I[33]);
  dart.setFieldSignature(tabs$._TabBarViewState, () => ({
    __proto__: dart.getFields(tabs$._TabBarViewState.__proto__),
    [S._controller$2]: dart.fieldType(dart.nullable(tab_controller.TabController)),
    [S.___TabBarViewState__pageController]: dart.fieldType(dart.nullable(page_view.PageController)),
    [S.___TabBarViewState__pageController_isSet]: dart.fieldType(core.bool),
    [S.___TabBarViewState__children]: dart.fieldType(dart.nullable(core.List$(framework.Widget))),
    [S.___TabBarViewState__children_isSet]: dart.fieldType(core.bool),
    [S.___TabBarViewState__childrenWithKey]: dart.fieldType(dart.nullable(core.List$(framework.Widget))),
    [S.___TabBarViewState__childrenWithKey_isSet]: dart.fieldType(core.bool),
    [S._currentIndex]: dart.fieldType(dart.nullable(core.int)),
    [S._warpUnderwayCount]: dart.fieldType(core.int)
  }));
  tabs$.TabPageSelectorIndicator = class TabPageSelectorIndicator extends framework.StatelessWidget {
    get backgroundColor() {
      return this[S.backgroundColor$3];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get borderColor() {
      return this[S.borderColor$1];
    }
    set borderColor(value) {
      super.borderColor = value;
    }
    get size() {
      return this[S.size];
    }
    set size(value) {
      super.size = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[32], 1594, 29, "context");
      return new container.Container.new({width: this.size, height: this.size, margin: C[237] || CT.C237, decoration: new box_decoration.BoxDecoration.new({color: this.backgroundColor, border: box_border.Border.all({color: this.borderColor}), shape: box_border.BoxShape.circle}), $creationLocationd_0dea112b090073317d4: C[238] || CT.C238});
    }
  };
  (tabs$.TabPageSelectorIndicator.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    if (backgroundColor == null) dart.nullFailed(I[32], 1576, 19, "backgroundColor");
    let borderColor = opts && 'borderColor' in opts ? opts.borderColor : null;
    if (borderColor == null) dart.nullFailed(I[32], 1577, 19, "borderColor");
    let size = opts && 'size' in opts ? opts.size : null;
    if (size == null) dart.nullFailed(I[32], 1578, 19, "size");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.backgroundColor$3] = backgroundColor;
    this[S.borderColor$1] = borderColor;
    this[S.size] = size;
    if (!(backgroundColor != null)) dart.assertFailed(null, I[32], 1579, 15, "backgroundColor != null");
    if (!(borderColor != null)) dart.assertFailed(null, I[32], 1580, 15, "borderColor != null");
    if (!(size != null)) dart.assertFailed(null, I[32], 1581, 15, "size != null");
    tabs$.TabPageSelectorIndicator.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tabs$.TabPageSelectorIndicator.prototype;
  dart.addTypeTests(tabs$.TabPageSelectorIndicator);
  dart.addTypeCaches(tabs$.TabPageSelectorIndicator);
  dart.setMethodSignature(tabs$.TabPageSelectorIndicator, () => ({
    __proto__: dart.getMethods(tabs$.TabPageSelectorIndicator.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(tabs$.TabPageSelectorIndicator, I[33]);
  dart.setFieldSignature(tabs$.TabPageSelectorIndicator, () => ({
    __proto__: dart.getFields(tabs$.TabPageSelectorIndicator.__proto__),
    backgroundColor: dart.finalFieldType(ui.Color),
    borderColor: dart.finalFieldType(ui.Color),
    size: dart.finalFieldType(core.double)
  }));
  tabs$.TabPageSelector = class TabPageSelector extends framework.StatelessWidget {
    get controller() {
      return this[S.controller$2];
    }
    set controller(value) {
      super.controller = value;
    }
    get indicatorSize() {
      return this[S.indicatorSize$1];
    }
    set indicatorSize(value) {
      super.indicatorSize = value;
    }
    get color() {
      return this[S.color$4];
    }
    set color(value) {
      super.color = value;
    }
    get selectedColor() {
      return this[S.selectedColor$1];
    }
    set selectedColor(value) {
      super.selectedColor = value;
    }
    [S._buildTabIndicator](tabIndex, tabController, selectedColorTween, previousColorTween) {
      if (tabIndex == null) dart.nullFailed(I[32], 1648, 9, "tabIndex");
      if (tabController == null) dart.nullFailed(I[32], 1649, 19, "tabController");
      if (selectedColorTween == null) dart.nullFailed(I[32], 1650, 16, "selectedColorTween");
      if (previousColorTween == null) dart.nullFailed(I[32], 1651, 16, "previousColorTween");
      let background = null;
      if (dart.test(tabController.indexIsChanging)) {
        let t = 1.0 - dart.notNull(tabs$._indexChangeProgress(tabController));
        if (tabController.index == tabIndex)
          background = dart.nullCheck(selectedColorTween.lerp(t));
        else if (tabController.previousIndex == tabIndex)
          background = dart.nullCheck(previousColorTween.lerp(t));
        else
          background = dart.nullCheck(selectedColorTween.begin);
      } else {
        let offset = tabController.offset;
        if (tabController.index == tabIndex) {
          background = dart.nullCheck(selectedColorTween.lerp(1.0 - offset[S.$abs]()));
        } else if (tabController.index === dart.notNull(tabIndex) - 1 && dart.notNull(offset) > 0.0) {
          background = dart.nullCheck(selectedColorTween.lerp(offset));
        } else if (tabController.index === dart.notNull(tabIndex) + 1 && dart.notNull(offset) < 0.0) {
          background = dart.nullCheck(selectedColorTween.lerp(-dart.notNull(offset)));
        } else {
          background = dart.nullCheck(selectedColorTween.begin);
        }
      }
      return new tabs$.TabPageSelectorIndicator.new({backgroundColor: background, borderColor: dart.nullCheck(selectedColorTween.end), size: this.indicatorSize, $creationLocationd_0dea112b090073317d4: C[239] || CT.C239});
    }
    build(context) {
      let t12, t12$, t12$0;
      if (context == null) dart.nullFailed(I[32], 1685, 29, "context");
      let fixColor = (t12 = this.color, t12 == null ? colors$.Colors.transparent : t12);
      let fixSelectedColor = (t12$ = this.selectedColor, t12$ == null ? theme$.Theme.of(context).colorScheme.secondary : t12$);
      let selectedColorTween = new tween.ColorTween.new({begin: fixColor, end: fixSelectedColor});
      let previousColorTween = new tween.ColorTween.new({begin: fixSelectedColor, end: fixColor});
      let tabController = (t12$0 = this.controller, t12$0 == null ? tab_controller.DefaultTabController.of(context) : t12$0);
      if (!dart.test(dart.fn(() => {
        if (tabController == null) {
          dart.throw(assertions.FlutterError.new("No TabController for " + dart.str(this[S.$runtimeType]) + ".\n" + "When creating a " + dart.str(this[S.$runtimeType]) + ", you must either provide an explicit TabController " + "using the \"controller\" property, or you must ensure that there is a " + "DefaultTabController above the " + dart.str(this[S.$runtimeType]) + ".\n" + "In this case, there was neither an explicit controller nor a default controller."));
        }
        return true;
      }, T$.VoidTobool())())) dart.assertFailed(null, I[32], 1691, 12, "() {\r\n      if (tabController == null) {\r\n        throw FlutterError(\r\n          'No TabController for $runtimeType.\\n'\r\n          'When creating a $runtimeType, you must either provide an explicit TabController '\r\n          'using the \"controller\" property, or you must ensure that there is a '\r\n          'DefaultTabController above the $runtimeType.\\n'\r\n          'In this case, there was neither an explicit controller nor a default controller.',\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      let animation = new animations.CurvedAnimation.new({parent: dart.nullCheck(dart.nullCheck(tabController).animation), curve: curves.Curves.fastOutSlowIn});
      return new transitions.AnimatedBuilder.new({animation: animation, builder: dart.fn((context, child) => {
          if (context == null) dart.nullFailed(I[32], 1709, 30, "context");
          return new basic.Semantics.new({label: "Page " + dart.str(dart.notNull(tabController.index) + 1) + " of " + dart.str(tabController.length), child: new basic.Row.new({mainAxisSize: flex.MainAxisSize.min, children: T$.ListOfWidget().generate(tabController.length, dart.fn(tabIndex => {
                if (tabIndex == null) dart.nullFailed(I[32], 1714, 72, "tabIndex");
                return this[S._buildTabIndicator](tabIndex, tabController, selectedColorTween, previousColorTween);
              }, T$.intToWidget()))[S.$toList](), $creationLocationd_0dea112b090073317d4: C[240] || CT.C240}), $creationLocationd_0dea112b090073317d4: C[241] || CT.C241});
        }, T$.BuildContextAndWidgetNToSemantics()), $creationLocationd_0dea112b090073317d4: C[242] || CT.C242});
    }
  };
  (tabs$.TabPageSelector.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let indicatorSize = opts && 'indicatorSize' in opts ? opts.indicatorSize : 12;
    if (indicatorSize == null) dart.nullFailed(I[32], 1620, 10, "indicatorSize");
    let color = opts && 'color' in opts ? opts.color : null;
    let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.controller$2] = controller;
    this[S.indicatorSize$1] = indicatorSize;
    this[S.color$4] = color;
    this[S.selectedColor$1] = selectedColor;
    if (!(indicatorSize != null && dart.notNull(indicatorSize) > 0.0)) dart.assertFailed(null, I[32], 1623, 15, "indicatorSize != null && indicatorSize > 0.0");
    tabs$.TabPageSelector.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tabs$.TabPageSelector.prototype;
  dart.addTypeTests(tabs$.TabPageSelector);
  dart.addTypeCaches(tabs$.TabPageSelector);
  dart.setMethodSignature(tabs$.TabPageSelector, () => ({
    __proto__: dart.getMethods(tabs$.TabPageSelector.__proto__),
    [S._buildTabIndicator]: dart.fnType(framework.Widget, [core.int, tab_controller.TabController, tween.ColorTween, tween.ColorTween]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(tabs$.TabPageSelector, I[33]);
  dart.setFieldSignature(tabs$.TabPageSelector, () => ({
    __proto__: dart.getFields(tabs$.TabPageSelector.__proto__),
    controller: dart.finalFieldType(dart.nullable(tab_controller.TabController)),
    indicatorSize: dart.finalFieldType(core.double),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    selectedColor: dart.finalFieldType(dart.nullable(ui.Color))
  }));
  tabs$._indexChangeProgress = function _indexChangeProgress(controller) {
    if (controller == null) dart.nullFailed(I[32], 322, 43, "controller");
    let controllerValue = dart.nullCheck(controller.animation).value;
    let previousIndex = controller.previousIndex[S.$toDouble]();
    let currentIndex = controller.index[S.$toDouble]();
    if (!dart.test(controller.indexIsChanging)) return (currentIndex - dart.notNull(controllerValue))[S.$abs]()[S.$clamp](0.0, 1.0);
    return (dart.notNull(controllerValue) - currentIndex)[S.$abs]() / (currentIndex - previousIndex)[S.$abs]();
  };
  dart.defineLazy(tabs$, {
    /*tabs$._kTabHeight*/get _kTabHeight() {
      return 46;
    },
    /*tabs$._kTextAndIconTabHeight*/get _kTextAndIconTabHeight() {
      return 72;
    }
  }, false);
  const Object_Diagnosticable$36$2 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$2.new = function() {
  }).prototype = Object_Diagnosticable$36$2.prototype;
  dart.applyMixin(Object_Diagnosticable$36$2, diagnostics.Diagnosticable);
  tab_bar_theme.TabBarTheme = class TabBarTheme extends Object_Diagnosticable$36$2 {
    get indicator() {
      return this[S.indicator$1];
    }
    set indicator(value) {
      super.indicator = value;
    }
    get indicatorSize() {
      return this[S.indicatorSize$2];
    }
    set indicatorSize(value) {
      super.indicatorSize = value;
    }
    get labelColor() {
      return this[S.labelColor$2];
    }
    set labelColor(value) {
      super.labelColor = value;
    }
    get labelPadding() {
      return this[S.labelPadding$1];
    }
    set labelPadding(value) {
      super.labelPadding = value;
    }
    get labelStyle() {
      return this[S.labelStyle$2];
    }
    set labelStyle(value) {
      super.labelStyle = value;
    }
    get unselectedLabelColor() {
      return this[S.unselectedLabelColor$2];
    }
    set unselectedLabelColor(value) {
      super.unselectedLabelColor = value;
    }
    get unselectedLabelStyle() {
      return this[S.unselectedLabelStyle$2];
    }
    set unselectedLabelStyle(value) {
      super.unselectedLabelStyle = value;
    }
    copyWith(opts) {
      let t12, t12$, t12$0, t12$1, t12$2, t12$3, t12$4;
      let indicator = opts && 'indicator' in opts ? opts.indicator : null;
      let indicatorSize = opts && 'indicatorSize' in opts ? opts.indicatorSize : null;
      let labelColor = opts && 'labelColor' in opts ? opts.labelColor : null;
      let labelPadding = opts && 'labelPadding' in opts ? opts.labelPadding : null;
      let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
      let unselectedLabelColor = opts && 'unselectedLabelColor' in opts ? opts.unselectedLabelColor : null;
      let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
      return new tab_bar_theme.TabBarTheme.new({indicator: (t12 = indicator, t12 == null ? this.indicator : t12), indicatorSize: (t12$ = indicatorSize, t12$ == null ? this.indicatorSize : t12$), labelColor: (t12$0 = labelColor, t12$0 == null ? this.labelColor : t12$0), labelPadding: (t12$1 = labelPadding, t12$1 == null ? this.labelPadding : t12$1), labelStyle: (t12$2 = labelStyle, t12$2 == null ? this.labelStyle : t12$2), unselectedLabelColor: (t12$3 = unselectedLabelColor, t12$3 == null ? this.unselectedLabelColor : t12$3), unselectedLabelStyle: (t12$4 = unselectedLabelStyle, t12$4 == null ? this.unselectedLabelStyle : t12$4)});
    }
    static of(context) {
      if (context == null) dart.nullFailed(I[34], 86, 38, "context");
      return theme$.Theme.of(context).tabBarTheme;
    }
    static lerp(a, b, t) {
      if (a == null) dart.nullFailed(I[34], 95, 39, "a");
      if (b == null) dart.nullFailed(I[34], 95, 54, "b");
      if (t == null) dart.nullFailed(I[34], 95, 64, "t");
      if (!(a != null)) dart.assertFailed(null, I[34], 96, 12, "a != null");
      if (!(b != null)) dart.assertFailed(null, I[34], 97, 12, "b != null");
      if (!(t != null)) dart.assertFailed(null, I[34], 98, 12, "t != null");
      return new tab_bar_theme.TabBarTheme.new({indicator: decoration.Decoration.lerp(a.indicator, b.indicator, t), indicatorSize: dart.notNull(t) < 0.5 ? a.indicatorSize : b.indicatorSize, labelColor: ui.Color.lerp(a.labelColor, b.labelColor, t), labelPadding: edge_insets.EdgeInsetsGeometry.lerp(a.labelPadding, b.labelPadding, t), labelStyle: text_style.TextStyle.lerp(a.labelStyle, b.labelStyle, t), unselectedLabelColor: ui.Color.lerp(a.unselectedLabelColor, b.unselectedLabelColor, t), unselectedLabelStyle: text_style.TextStyle.lerp(a.unselectedLabelStyle, b.unselectedLabelStyle, t)});
    }
    get hashCode() {
      return ui.hashValues(this.indicator, this.indicatorSize, this.labelColor, this.labelPadding, this.labelStyle, this.unselectedLabelColor, this.unselectedLabelStyle);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return tab_bar_theme.TabBarTheme.is(other) && dart.equals(other.indicator, this.indicator) && other.indicatorSize == this.indicatorSize && dart.equals(other.labelColor, this.labelColor) && dart.equals(other.labelPadding, this.labelPadding) && dart.equals(other.labelStyle, this.labelStyle) && dart.equals(other.unselectedLabelColor, this.unselectedLabelColor) && dart.equals(other.unselectedLabelStyle, this.unselectedLabelStyle);
    }
  };
  (tab_bar_theme.TabBarTheme.new = function(opts) {
    let indicator = opts && 'indicator' in opts ? opts.indicator : null;
    let indicatorSize = opts && 'indicatorSize' in opts ? opts.indicatorSize : null;
    let labelColor = opts && 'labelColor' in opts ? opts.labelColor : null;
    let labelPadding = opts && 'labelPadding' in opts ? opts.labelPadding : null;
    let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
    let unselectedLabelColor = opts && 'unselectedLabelColor' in opts ? opts.unselectedLabelColor : null;
    let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
    this[S.indicator$1] = indicator;
    this[S.indicatorSize$2] = indicatorSize;
    this[S.labelColor$2] = labelColor;
    this[S.labelPadding$1] = labelPadding;
    this[S.labelStyle$2] = labelStyle;
    this[S.unselectedLabelColor$2] = unselectedLabelColor;
    this[S.unselectedLabelStyle$2] = unselectedLabelStyle;
    ;
  }).prototype = tab_bar_theme.TabBarTheme.prototype;
  dart.addTypeTests(tab_bar_theme.TabBarTheme);
  dart.addTypeCaches(tab_bar_theme.TabBarTheme);
  dart.setMethodSignature(tab_bar_theme.TabBarTheme, () => ({
    __proto__: dart.getMethods(tab_bar_theme.TabBarTheme.__proto__),
    copyWith: dart.fnType(tab_bar_theme.TabBarTheme, [], {indicator: dart.nullable(decoration.Decoration), indicatorSize: dart.nullable(tabs$.TabBarIndicatorSize), labelColor: dart.nullable(ui.Color), labelPadding: dart.nullable(edge_insets.EdgeInsetsGeometry), labelStyle: dart.nullable(text_style.TextStyle), unselectedLabelColor: dart.nullable(ui.Color), unselectedLabelStyle: dart.nullable(text_style.TextStyle)}, {})
  }));
  dart.setLibraryUri(tab_bar_theme.TabBarTheme, I[35]);
  dart.setFieldSignature(tab_bar_theme.TabBarTheme, () => ({
    __proto__: dart.getFields(tab_bar_theme.TabBarTheme.__proto__),
    indicator: dart.finalFieldType(dart.nullable(decoration.Decoration)),
    indicatorSize: dart.finalFieldType(dart.nullable(tabs$.TabBarIndicatorSize)),
    labelColor: dart.finalFieldType(dart.nullable(ui.Color)),
    labelPadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    labelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    unselectedLabelColor: dart.finalFieldType(dart.nullable(ui.Color)),
    unselectedLabelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle))
  }));
  dart.defineExtensionMethods(tab_bar_theme.TabBarTheme, ['_equals']);
  dart.defineExtensionAccessors(tab_bar_theme.TabBarTheme, ['hashCode']);
  const Object_Diagnosticable$36$3 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$3.new = function() {
  }).prototype = Object_Diagnosticable$36$3.prototype;
  dart.applyMixin(Object_Diagnosticable$36$3, diagnostics.Diagnosticable);
  switch_theme.SwitchThemeData = class SwitchThemeData extends Object_Diagnosticable$36$3 {
    get thumbColor() {
      return this[S.thumbColor];
    }
    set thumbColor(value) {
      super.thumbColor = value;
    }
    get trackColor() {
      return this[S.trackColor];
    }
    set trackColor(value) {
      super.trackColor = value;
    }
    get materialTapTargetSize() {
      return this[S.materialTapTargetSize$1];
    }
    set materialTapTargetSize(value) {
      super.materialTapTargetSize = value;
    }
    get mouseCursor() {
      return this[S.mouseCursor$3];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get overlayColor() {
      return this[S.overlayColor$1];
    }
    set overlayColor(value) {
      super.overlayColor = value;
    }
    get splashRadius() {
      return this[S.splashRadius$1];
    }
    set splashRadius(value) {
      super.splashRadius = value;
    }
    copyWith(opts) {
      let t12, t12$, t12$0, t12$1, t12$2, t12$3;
      let thumbColor = opts && 'thumbColor' in opts ? opts.thumbColor : null;
      let trackColor = opts && 'trackColor' in opts ? opts.trackColor : null;
      let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
      let splashRadius = opts && 'splashRadius' in opts ? opts.splashRadius : null;
      return new switch_theme.SwitchThemeData.new({thumbColor: (t12 = thumbColor, t12 == null ? this.thumbColor : t12), trackColor: (t12$ = trackColor, t12$ == null ? this.trackColor : t12$), materialTapTargetSize: (t12$0 = materialTapTargetSize, t12$0 == null ? this.materialTapTargetSize : t12$0), mouseCursor: (t12$1 = mouseCursor, t12$1 == null ? this.mouseCursor : t12$1), overlayColor: (t12$2 = overlayColor, t12$2 == null ? this.overlayColor : t12$2), splashRadius: (t12$3 = splashRadius, t12$3 == null ? this.splashRadius : t12$3)});
    }
    static lerp(a, b, t) {
      let t12, t12$, t12$0, t12$1, t12$2, t12$3, t12$4, t12$5, t12$6, t12$7, t12$8, t12$9;
      if (t == null) dart.nullFailed(I[36], 99, 78, "t");
      return new switch_theme.SwitchThemeData.new({thumbColor: switch_theme.SwitchThemeData._lerpProperties(T$.ColorN(), (t12 = a, t12 == null ? null : t12.thumbColor), (t12$ = b, t12$ == null ? null : t12$.thumbColor), t, C[243] || CT.C243), trackColor: switch_theme.SwitchThemeData._lerpProperties(T$.ColorN(), (t12$0 = a, t12$0 == null ? null : t12$0.trackColor), (t12$1 = b, t12$1 == null ? null : t12$1.trackColor), t, C[243] || CT.C243), materialTapTargetSize: dart.notNull(t) < 0.5 ? (t12$2 = a, t12$2 == null ? null : t12$2.materialTapTargetSize) : (t12$3 = b, t12$3 == null ? null : t12$3.materialTapTargetSize), mouseCursor: dart.notNull(t) < 0.5 ? (t12$4 = a, t12$4 == null ? null : t12$4.mouseCursor) : (t12$5 = b, t12$5 == null ? null : t12$5.mouseCursor), overlayColor: switch_theme.SwitchThemeData._lerpProperties(T$.ColorN(), (t12$6 = a, t12$6 == null ? null : t12$6.overlayColor), (t12$7 = b, t12$7 == null ? null : t12$7.overlayColor), t, C[243] || CT.C243), splashRadius: ui.lerpDouble((t12$8 = a, t12$8 == null ? null : t12$8.splashRadius), (t12$9 = b, t12$9 == null ? null : t12$9.splashRadius), t)});
    }
    get hashCode() {
      return ui.hashValues(this.thumbColor, this.trackColor, this.materialTapTargetSize, this.mouseCursor, this.overlayColor, this.splashRadius);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return switch_theme.SwitchThemeData.is(other) && dart.equals(other.thumbColor, this.thumbColor) && dart.equals(other.trackColor, this.trackColor) && other.materialTapTargetSize == this.materialTapTargetSize && dart.equals(other.mouseCursor, this.mouseCursor) && dart.equals(other.overlayColor, this.overlayColor) && other.splashRadius == this.splashRadius;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[36], 138, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("thumbColor", this.thumbColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("trackColor", this.trackColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialTapTargetSize()).new("materialTapTargetSize", this.materialTapTargetSize, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfMouseCursorN()).new("mouseCursor", this.mouseCursor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("overlayColor", this.overlayColor, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("splashRadius", this.splashRadius, {defaultValue: null}));
    }
    static _lerpProperties(T, a, b, t, lerpFunction) {
      if (t == null) dart.nullFailed(I[36], 151, 12, "t");
      if (lerpFunction == null) dart.nullFailed(I[36], 152, 32, "lerpFunction");
      if (a == null && b == null) return null;
      return new (switch_theme._LerpProperties$(T)).new(a, b, t, lerpFunction);
    }
  };
  (switch_theme.SwitchThemeData.new = function(opts) {
    let thumbColor = opts && 'thumbColor' in opts ? opts.thumbColor : null;
    let trackColor = opts && 'trackColor' in opts ? opts.trackColor : null;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let splashRadius = opts && 'splashRadius' in opts ? opts.splashRadius : null;
    this[S.thumbColor] = thumbColor;
    this[S.trackColor] = trackColor;
    this[S.materialTapTargetSize$1] = materialTapTargetSize;
    this[S.mouseCursor$3] = mouseCursor;
    this[S.overlayColor$1] = overlayColor;
    this[S.splashRadius$1] = splashRadius;
    ;
  }).prototype = switch_theme.SwitchThemeData.prototype;
  dart.addTypeTests(switch_theme.SwitchThemeData);
  dart.addTypeCaches(switch_theme.SwitchThemeData);
  dart.setMethodSignature(switch_theme.SwitchThemeData, () => ({
    __proto__: dart.getMethods(switch_theme.SwitchThemeData.__proto__),
    copyWith: dart.fnType(switch_theme.SwitchThemeData, [], {materialTapTargetSize: dart.nullable(theme_data.MaterialTapTargetSize), mouseCursor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor))), overlayColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), splashRadius: dart.nullable(core.double), thumbColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), trackColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))}, {})
  }));
  dart.setLibraryUri(switch_theme.SwitchThemeData, I[37]);
  dart.setFieldSignature(switch_theme.SwitchThemeData, () => ({
    __proto__: dart.getFields(switch_theme.SwitchThemeData.__proto__),
    thumbColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    trackColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    materialTapTargetSize: dart.finalFieldType(dart.nullable(theme_data.MaterialTapTargetSize)),
    mouseCursor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor)))),
    overlayColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    splashRadius: dart.finalFieldType(dart.nullable(core.double))
  }));
  dart.defineExtensionMethods(switch_theme.SwitchThemeData, ['_equals']);
  dart.defineExtensionAccessors(switch_theme.SwitchThemeData, ['hashCode']);
  const _is__LerpProperties_default = Symbol('_is__LerpProperties_default');
  switch_theme._LerpProperties$ = dart.generic(T => {
    class _LerpProperties extends core.Object {
      get a() {
        return this[S.a];
      }
      set a(value) {
        super.a = value;
      }
      get b() {
        return this[S.b];
      }
      set b(value) {
        super.b = value;
      }
      get t() {
        return this[S.t];
      }
      set t(value) {
        super.t = value;
      }
      get lerpFunction() {
        return this[S.lerpFunction];
      }
      set lerpFunction(value) {
        super.lerpFunction = value;
      }
      resolve(states) {
        let t12, t12$, t14, t13, t12$0;
        if (states == null) dart.nullFailed(I[36], 170, 32, "states");
        let resolvedA = (t12 = this.a, t12 == null ? null : t12.resolve(states));
        let resolvedB = (t12$ = this.b, t12$ == null ? null : t12$.resolve(states));
        t12$0 = resolvedA;
        t13 = resolvedB;
        t14 = this.t;
        return this.lerpFunction(t12$0, t13, t14);
      }
    }
    (_LerpProperties.new = function(a, b, t, lerpFunction) {
      if (t == null) dart.nullFailed(I[36], 162, 46, "t");
      if (lerpFunction == null) dart.nullFailed(I[36], 162, 54, "lerpFunction");
      this[S.a] = a;
      this[S.b] = b;
      this[S.t] = t;
      this[S.lerpFunction] = lerpFunction;
      ;
    }).prototype = _LerpProperties.prototype;
    dart.addTypeTests(_LerpProperties);
    _LerpProperties.prototype[_is__LerpProperties_default] = true;
    dart.addTypeCaches(_LerpProperties);
    _LerpProperties[dart.implements] = () => [material_state.MaterialStateProperty$(T)];
    dart.setMethodSignature(_LerpProperties, () => ({
      __proto__: dart.getMethods(_LerpProperties.__proto__),
      resolve: dart.fnType(T, [core.Set$(material_state.MaterialState)])
    }));
    dart.setLibraryUri(_LerpProperties, I[37]);
    dart.setFieldSignature(_LerpProperties, () => ({
      __proto__: dart.getFields(_LerpProperties.__proto__),
      a: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(T))),
      b: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(T))),
      t: dart.finalFieldType(core.double),
      lerpFunction: dart.finalFieldType(dart.fnType(T, [dart.nullable(T), dart.nullable(T), core.double]))
    }));
    return _LerpProperties;
  });
  switch_theme._LerpProperties = switch_theme._LerpProperties$();
  dart.addTypeTests(switch_theme._LerpProperties, _is__LerpProperties_default);
  switch_theme.SwitchTheme = class SwitchTheme extends framework.InheritedWidget {
    get data() {
      return this[S.data$4];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t12, t12$;
      if (context == null) dart.nullFailed(I[36], 209, 42, "context");
      let switchTheme = context.dependOnInheritedWidgetOfExactType(switch_theme.SwitchTheme);
      t12$ = (t12 = switchTheme, t12 == null ? null : t12.data);
      return t12$ == null ? theme$.Theme.of(context).switchTheme : t12$;
    }
    updateShouldNotify(oldWidget) {
      switch_theme.SwitchTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[36], 215, 39, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (switch_theme.SwitchTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[36], 194, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[36], 195, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.data$4] = data;
    switch_theme.SwitchTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = switch_theme.SwitchTheme.prototype;
  dart.addTypeTests(switch_theme.SwitchTheme);
  dart.addTypeCaches(switch_theme.SwitchTheme);
  dart.setMethodSignature(switch_theme.SwitchTheme, () => ({
    __proto__: dart.getMethods(switch_theme.SwitchTheme.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(switch_theme.SwitchTheme, I[37]);
  dart.setFieldSignature(switch_theme.SwitchTheme, () => ({
    __proto__: dart.getFields(switch_theme.SwitchTheme.__proto__),
    data: dart.finalFieldType(switch_theme.SwitchThemeData)
  }));
  snack_bar_theme.SnackBarBehavior = class SnackBarBehavior extends core.Object {
    toString() {
      return this[S._name$11];
    }
  };
  (snack_bar_theme.SnackBarBehavior.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[38], 15, 6, "index");
    if (_name == null) dart.nullFailed(I[38], 15, 6, "_name");
    this.index = index;
    this[S._name$11] = _name;
    ;
  }).prototype = snack_bar_theme.SnackBarBehavior.prototype;
  dart.addTypeTests(snack_bar_theme.SnackBarBehavior);
  dart.addTypeCaches(snack_bar_theme.SnackBarBehavior);
  snack_bar_theme.SnackBarBehavior[dart.implements] = () => [core.Enum];
  dart.setLibraryUri(snack_bar_theme.SnackBarBehavior, I[39]);
  dart.setFieldSignature(snack_bar_theme.SnackBarBehavior, () => ({
    __proto__: dart.getFields(snack_bar_theme.SnackBarBehavior.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$11]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(snack_bar_theme.SnackBarBehavior, ['toString']);
  snack_bar_theme.SnackBarBehavior.fixed = C[244] || CT.C244;
  snack_bar_theme.SnackBarBehavior.floating = C[245] || CT.C245;
  snack_bar_theme.SnackBarBehavior.values = C[246] || CT.C246;
  const Object_Diagnosticable$36$4 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$4.new = function() {
  }).prototype = Object_Diagnosticable$36$4.prototype;
  dart.applyMixin(Object_Diagnosticable$36$4, diagnostics.Diagnosticable);
  snack_bar_theme.SnackBarThemeData = class SnackBarThemeData extends Object_Diagnosticable$36$4 {
    get backgroundColor() {
      return this[S.backgroundColor$4];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get actionTextColor() {
      return this[S.actionTextColor];
    }
    set actionTextColor(value) {
      super.actionTextColor = value;
    }
    get disabledActionTextColor() {
      return this[S.disabledActionTextColor];
    }
    set disabledActionTextColor(value) {
      super.disabledActionTextColor = value;
    }
    get contentTextStyle() {
      return this[S.contentTextStyle];
    }
    set contentTextStyle(value) {
      super.contentTextStyle = value;
    }
    get elevation() {
      return this[S.elevation$2];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get shape() {
      return this[S.shape$3];
    }
    set shape(value) {
      super.shape = value;
    }
    get behavior() {
      return this[S.behavior$1];
    }
    set behavior(value) {
      super.behavior = value;
    }
    copyWith(opts) {
      let t12, t12$, t12$0, t12$1, t12$2, t12$3, t12$4;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let actionTextColor = opts && 'actionTextColor' in opts ? opts.actionTextColor : null;
      let disabledActionTextColor = opts && 'disabledActionTextColor' in opts ? opts.disabledActionTextColor : null;
      let contentTextStyle = opts && 'contentTextStyle' in opts ? opts.contentTextStyle : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let behavior = opts && 'behavior' in opts ? opts.behavior : null;
      return new snack_bar_theme.SnackBarThemeData.new({backgroundColor: (t12 = backgroundColor, t12 == null ? this.backgroundColor : t12), actionTextColor: (t12$ = actionTextColor, t12$ == null ? this.actionTextColor : t12$), disabledActionTextColor: (t12$0 = disabledActionTextColor, t12$0 == null ? this.disabledActionTextColor : t12$0), contentTextStyle: (t12$1 = contentTextStyle, t12$1 == null ? this.contentTextStyle : t12$1), elevation: (t12$2 = elevation, t12$2 == null ? this.elevation : t12$2), shape: (t12$3 = shape, t12$3 == null ? this.shape : t12$3), behavior: (t12$4 = behavior, t12$4 == null ? this.behavior : t12$4)});
    }
    static lerp(a, b, t) {
      let t12, t12$, t12$0, t12$1, t12$2, t12$3, t12$4, t12$5, t12$6, t12$7, t12$8, t12$9, t12$10, t12$11;
      if (t == null) dart.nullFailed(I[38], 134, 84, "t");
      if (!(t != null)) dart.assertFailed(null, I[38], 135, 12, "t != null");
      return new snack_bar_theme.SnackBarThemeData.new({backgroundColor: ui.Color.lerp((t12 = a, t12 == null ? null : t12.backgroundColor), (t12$ = b, t12$ == null ? null : t12$.backgroundColor), t), actionTextColor: ui.Color.lerp((t12$0 = a, t12$0 == null ? null : t12$0.actionTextColor), (t12$1 = b, t12$1 == null ? null : t12$1.actionTextColor), t), disabledActionTextColor: ui.Color.lerp((t12$2 = a, t12$2 == null ? null : t12$2.disabledActionTextColor), (t12$3 = b, t12$3 == null ? null : t12$3.disabledActionTextColor), t), contentTextStyle: text_style.TextStyle.lerp((t12$4 = a, t12$4 == null ? null : t12$4.contentTextStyle), (t12$5 = b, t12$5 == null ? null : t12$5.contentTextStyle), t), elevation: ui.lerpDouble((t12$6 = a, t12$6 == null ? null : t12$6.elevation), (t12$7 = b, t12$7 == null ? null : t12$7.elevation), t), shape: borders.ShapeBorder.lerp((t12$8 = a, t12$8 == null ? null : t12$8.shape), (t12$9 = b, t12$9 == null ? null : t12$9.shape), t), behavior: dart.notNull(t) < 0.5 ? (t12$10 = a, t12$10 == null ? null : t12$10.behavior) : (t12$11 = b, t12$11 == null ? null : t12$11.behavior)});
    }
    get hashCode() {
      return ui.hashValues(this.backgroundColor, this.actionTextColor, this.disabledActionTextColor, this.contentTextStyle, this.elevation, this.shape, this.behavior);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return snack_bar_theme.SnackBarThemeData.is(other) && dart.equals(other.backgroundColor, this.backgroundColor) && dart.equals(other.actionTextColor, this.actionTextColor) && dart.equals(other.disabledActionTextColor, this.disabledActionTextColor) && dart.equals(other.contentTextStyle, this.contentTextStyle) && other.elevation == this.elevation && dart.equals(other.shape, this.shape) && other.behavior == this.behavior;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[38], 177, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("actionTextColor", this.actionTextColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("disabledActionTextColor", this.disabledActionTextColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("contentTextStyle", this.contentTextStyle, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfSnackBarBehavior()).new("behavior", this.behavior, {defaultValue: null}));
    }
  };
  (snack_bar_theme.SnackBarThemeData.new = function(opts) {
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let actionTextColor = opts && 'actionTextColor' in opts ? opts.actionTextColor : null;
    let disabledActionTextColor = opts && 'disabledActionTextColor' in opts ? opts.disabledActionTextColor : null;
    let contentTextStyle = opts && 'contentTextStyle' in opts ? opts.contentTextStyle : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let behavior = opts && 'behavior' in opts ? opts.behavior : null;
    this[S.backgroundColor$4] = backgroundColor;
    this[S.actionTextColor] = actionTextColor;
    this[S.disabledActionTextColor] = disabledActionTextColor;
    this[S.contentTextStyle] = contentTextStyle;
    this[S.elevation$2] = elevation;
    this[S.shape$3] = shape;
    this[S.behavior$1] = behavior;
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[38], 63, 15, "elevation == null || elevation >= 0.0");
    ;
  }).prototype = snack_bar_theme.SnackBarThemeData.prototype;
  dart.addTypeTests(snack_bar_theme.SnackBarThemeData);
  dart.addTypeCaches(snack_bar_theme.SnackBarThemeData);
  dart.setMethodSignature(snack_bar_theme.SnackBarThemeData, () => ({
    __proto__: dart.getMethods(snack_bar_theme.SnackBarThemeData.__proto__),
    copyWith: dart.fnType(snack_bar_theme.SnackBarThemeData, [], {actionTextColor: dart.nullable(ui.Color), backgroundColor: dart.nullable(ui.Color), behavior: dart.nullable(snack_bar_theme.SnackBarBehavior), contentTextStyle: dart.nullable(text_style.TextStyle), disabledActionTextColor: dart.nullable(ui.Color), elevation: dart.nullable(core.double), shape: dart.nullable(borders.ShapeBorder)}, {})
  }));
  dart.setLibraryUri(snack_bar_theme.SnackBarThemeData, I[39]);
  dart.setFieldSignature(snack_bar_theme.SnackBarThemeData, () => ({
    __proto__: dart.getFields(snack_bar_theme.SnackBarThemeData.__proto__),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    actionTextColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledActionTextColor: dart.finalFieldType(dart.nullable(ui.Color)),
    contentTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    behavior: dart.finalFieldType(dart.nullable(snack_bar_theme.SnackBarBehavior))
  }));
  dart.defineExtensionMethods(snack_bar_theme.SnackBarThemeData, ['_equals']);
  dart.defineExtensionAccessors(snack_bar_theme.SnackBarThemeData, ['hashCode']);
  slider_theme.SliderTheme = class SliderTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S.data$5];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      if (context == null) dart.nullFailed(I[40], 114, 42, "context");
      let inheritedTheme = context.dependOnInheritedWidgetOfExactType(slider_theme.SliderTheme);
      return inheritedTheme != null ? inheritedTheme.data : theme$.Theme.of(context).sliderTheme;
    }
    wrap(context, child) {
      if (context == null) dart.nullFailed(I[40], 120, 28, "context");
      if (child == null) dart.nullFailed(I[40], 120, 44, "child");
      return new slider_theme.SliderTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[247] || CT.C247});
    }
    updateShouldNotify(oldWidget) {
      slider_theme.SliderTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[40], 125, 39, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (slider_theme.SliderTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[40], 68, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[40], 69, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.data$5] = data;
    if (!(child != null)) dart.assertFailed(null, I[40], 70, 15, "child != null");
    if (!(data != null)) dart.assertFailed(null, I[40], 71, 15, "data != null");
    slider_theme.SliderTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = slider_theme.SliderTheme.prototype;
  dart.addTypeTests(slider_theme.SliderTheme);
  dart.addTypeCaches(slider_theme.SliderTheme);
  dart.setMethodSignature(slider_theme.SliderTheme, () => ({
    __proto__: dart.getMethods(slider_theme.SliderTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(slider_theme.SliderTheme, I[41]);
  dart.setFieldSignature(slider_theme.SliderTheme, () => ({
    __proto__: dart.getFields(slider_theme.SliderTheme.__proto__),
    data: dart.finalFieldType(slider_theme.SliderThemeData)
  }));
  slider_theme.ShowValueIndicator = class ShowValueIndicator extends core.Object {
    toString() {
      return this[S._name$12];
    }
  };
  (slider_theme.ShowValueIndicator.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[40], 136, 6, "index");
    if (_name == null) dart.nullFailed(I[40], 136, 6, "_name");
    this.index = index;
    this[S._name$12] = _name;
    ;
  }).prototype = slider_theme.ShowValueIndicator.prototype;
  dart.addTypeTests(slider_theme.ShowValueIndicator);
  dart.addTypeCaches(slider_theme.ShowValueIndicator);
  slider_theme.ShowValueIndicator[dart.implements] = () => [core.Enum];
  dart.setLibraryUri(slider_theme.ShowValueIndicator, I[41]);
  dart.setFieldSignature(slider_theme.ShowValueIndicator, () => ({
    __proto__: dart.getFields(slider_theme.ShowValueIndicator.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$12]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(slider_theme.ShowValueIndicator, ['toString']);
  slider_theme.ShowValueIndicator.onlyForDiscrete = C[248] || CT.C248;
  slider_theme.ShowValueIndicator.onlyForContinuous = C[249] || CT.C249;
  slider_theme.ShowValueIndicator.always = C[250] || CT.C250;
  slider_theme.ShowValueIndicator.never = C[251] || CT.C251;
  slider_theme.ShowValueIndicator.values = C[252] || CT.C252;
  slider_theme.Thumb = class Thumb extends core.Object {
    toString() {
      return this[S._name$12];
    }
  };
  (slider_theme.Thumb.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[40], 159, 6, "index");
    if (_name == null) dart.nullFailed(I[40], 159, 6, "_name");
    this.index = index;
    this[S._name$12] = _name;
    ;
  }).prototype = slider_theme.Thumb.prototype;
  dart.addTypeTests(slider_theme.Thumb);
  dart.addTypeCaches(slider_theme.Thumb);
  slider_theme.Thumb[dart.implements] = () => [core.Enum];
  dart.setLibraryUri(slider_theme.Thumb, I[41]);
  dart.setFieldSignature(slider_theme.Thumb, () => ({
    __proto__: dart.getFields(slider_theme.Thumb.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$12]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(slider_theme.Thumb, ['toString']);
  slider_theme.Thumb.start = C[253] || CT.C253;
  slider_theme.Thumb.end = C[254] || CT.C254;
  slider_theme.Thumb.values = C[255] || CT.C255;
  const Object_Diagnosticable$36$5 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$5.new = function() {
  }).prototype = Object_Diagnosticable$36$5.prototype;
  dart.applyMixin(Object_Diagnosticable$36$5, diagnostics.Diagnosticable);
  slider_theme.SliderThemeData = class SliderThemeData extends Object_Diagnosticable$36$5 {
    get trackHeight() {
      return this[S.trackHeight];
    }
    set trackHeight(value) {
      super.trackHeight = value;
    }
    get activeTrackColor() {
      return this[S.activeTrackColor];
    }
    set activeTrackColor(value) {
      super.activeTrackColor = value;
    }
    get inactiveTrackColor() {
      return this[S.inactiveTrackColor];
    }
    set inactiveTrackColor(value) {
      super.inactiveTrackColor = value;
    }
    get disabledActiveTrackColor() {
      return this[S.disabledActiveTrackColor];
    }
    set disabledActiveTrackColor(value) {
      super.disabledActiveTrackColor = value;
    }
    get disabledInactiveTrackColor() {
      return this[S.disabledInactiveTrackColor];
    }
    set disabledInactiveTrackColor(value) {
      super.disabledInactiveTrackColor = value;
    }
    get activeTickMarkColor() {
      return this[S.activeTickMarkColor];
    }
    set activeTickMarkColor(value) {
      super.activeTickMarkColor = value;
    }
    get inactiveTickMarkColor() {
      return this[S.inactiveTickMarkColor];
    }
    set inactiveTickMarkColor(value) {
      super.inactiveTickMarkColor = value;
    }
    get disabledActiveTickMarkColor() {
      return this[S.disabledActiveTickMarkColor];
    }
    set disabledActiveTickMarkColor(value) {
      super.disabledActiveTickMarkColor = value;
    }
    get disabledInactiveTickMarkColor() {
      return this[S.disabledInactiveTickMarkColor];
    }
    set disabledInactiveTickMarkColor(value) {
      super.disabledInactiveTickMarkColor = value;
    }
    get thumbColor() {
      return this[S.thumbColor$1];
    }
    set thumbColor(value) {
      super.thumbColor = value;
    }
    get overlappingShapeStrokeColor() {
      return this[S.overlappingShapeStrokeColor];
    }
    set overlappingShapeStrokeColor(value) {
      super.overlappingShapeStrokeColor = value;
    }
    get disabledThumbColor() {
      return this[S.disabledThumbColor];
    }
    set disabledThumbColor(value) {
      super.disabledThumbColor = value;
    }
    get overlayColor() {
      return this[S.overlayColor$2];
    }
    set overlayColor(value) {
      super.overlayColor = value;
    }
    get valueIndicatorColor() {
      return this[S.valueIndicatorColor];
    }
    set valueIndicatorColor(value) {
      super.valueIndicatorColor = value;
    }
    get overlayShape() {
      return this[S.overlayShape];
    }
    set overlayShape(value) {
      super.overlayShape = value;
    }
    get tickMarkShape() {
      return this[S.tickMarkShape];
    }
    set tickMarkShape(value) {
      super.tickMarkShape = value;
    }
    get thumbShape() {
      return this[S.thumbShape];
    }
    set thumbShape(value) {
      super.thumbShape = value;
    }
    get trackShape() {
      return this[S.trackShape];
    }
    set trackShape(value) {
      super.trackShape = value;
    }
    get valueIndicatorShape() {
      return this[S.valueIndicatorShape];
    }
    set valueIndicatorShape(value) {
      super.valueIndicatorShape = value;
    }
    get rangeTickMarkShape() {
      return this[S.rangeTickMarkShape];
    }
    set rangeTickMarkShape(value) {
      super.rangeTickMarkShape = value;
    }
    get rangeThumbShape() {
      return this[S.rangeThumbShape];
    }
    set rangeThumbShape(value) {
      super.rangeThumbShape = value;
    }
    get rangeTrackShape() {
      return this[S.rangeTrackShape];
    }
    set rangeTrackShape(value) {
      super.rangeTrackShape = value;
    }
    get rangeValueIndicatorShape() {
      return this[S.rangeValueIndicatorShape];
    }
    set rangeValueIndicatorShape(value) {
      super.rangeValueIndicatorShape = value;
    }
    get showValueIndicator() {
      return this[S.showValueIndicator];
    }
    set showValueIndicator(value) {
      super.showValueIndicator = value;
    }
    get valueIndicatorTextStyle() {
      return this[S.valueIndicatorTextStyle];
    }
    set valueIndicatorTextStyle(value) {
      super.valueIndicatorTextStyle = value;
    }
    get minThumbSeparation() {
      return this[S.minThumbSeparation];
    }
    set minThumbSeparation(value) {
      super.minThumbSeparation = value;
    }
    get thumbSelector() {
      return this[S.thumbSelector];
    }
    set thumbSelector(value) {
      super.thumbSelector = value;
    }
    static fromPrimaryColors(opts) {
      let primaryColor = opts && 'primaryColor' in opts ? opts.primaryColor : null;
      if (primaryColor == null) dart.nullFailed(I[40], 311, 20, "primaryColor");
      let primaryColorDark = opts && 'primaryColorDark' in opts ? opts.primaryColorDark : null;
      if (primaryColorDark == null) dart.nullFailed(I[40], 312, 20, "primaryColorDark");
      let primaryColorLight = opts && 'primaryColorLight' in opts ? opts.primaryColorLight : null;
      if (primaryColorLight == null) dart.nullFailed(I[40], 313, 20, "primaryColorLight");
      let valueIndicatorTextStyle = opts && 'valueIndicatorTextStyle' in opts ? opts.valueIndicatorTextStyle : null;
      if (valueIndicatorTextStyle == null) dart.nullFailed(I[40], 314, 24, "valueIndicatorTextStyle");
      if (!(primaryColor != null)) dart.assertFailed(null, I[40], 316, 12, "primaryColor != null");
      if (!(primaryColorDark != null)) dart.assertFailed(null, I[40], 317, 12, "primaryColorDark != null");
      if (!(primaryColorLight != null)) dart.assertFailed(null, I[40], 318, 12, "primaryColorLight != null");
      if (!(valueIndicatorTextStyle != null)) dart.assertFailed(null, I[40], 319, 12, "valueIndicatorTextStyle != null");
      return new slider_theme.SliderThemeData.new({trackHeight: 2.0, activeTrackColor: primaryColor.withAlpha(255), inactiveTrackColor: primaryColor.withAlpha(61), disabledActiveTrackColor: primaryColorDark.withAlpha(82), disabledInactiveTrackColor: primaryColorDark.withAlpha(31), activeTickMarkColor: primaryColorLight.withAlpha(138), inactiveTickMarkColor: primaryColor.withAlpha(138), disabledActiveTickMarkColor: primaryColorLight.withAlpha(31), disabledInactiveTickMarkColor: primaryColorDark.withAlpha(31), thumbColor: primaryColor.withAlpha(255), overlappingShapeStrokeColor: colors$.Colors.white, disabledThumbColor: primaryColorDark.withAlpha(82), overlayColor: primaryColor.withAlpha(31), valueIndicatorColor: primaryColor.withAlpha(255), overlayShape: C[256] || CT.C256, tickMarkShape: C[257] || CT.C257, thumbShape: C[258] || CT.C258, trackShape: C[259] || CT.C259, valueIndicatorShape: C[260] || CT.C260, rangeTickMarkShape: C[261] || CT.C261, rangeThumbShape: C[262] || CT.C262, rangeTrackShape: C[263] || CT.C263, rangeValueIndicatorShape: C[264] || CT.C264, valueIndicatorTextStyle: valueIndicatorTextStyle, showValueIndicator: slider_theme.ShowValueIndicator.onlyForDiscrete});
    }
    copyWith(opts) {
      let t12, t12$, t12$0, t12$1, t12$2, t12$3, t12$4, t12$5, t12$6, t12$7, t12$8, t12$9, t12$10, t12$11, t12$12, t12$13, t12$14, t12$15, t12$16, t12$17, t12$18, t12$19, t12$20, t12$21, t12$22, t12$23, t12$24;
      let trackHeight = opts && 'trackHeight' in opts ? opts.trackHeight : null;
      let activeTrackColor = opts && 'activeTrackColor' in opts ? opts.activeTrackColor : null;
      let inactiveTrackColor = opts && 'inactiveTrackColor' in opts ? opts.inactiveTrackColor : null;
      let disabledActiveTrackColor = opts && 'disabledActiveTrackColor' in opts ? opts.disabledActiveTrackColor : null;
      let disabledInactiveTrackColor = opts && 'disabledInactiveTrackColor' in opts ? opts.disabledInactiveTrackColor : null;
      let activeTickMarkColor = opts && 'activeTickMarkColor' in opts ? opts.activeTickMarkColor : null;
      let inactiveTickMarkColor = opts && 'inactiveTickMarkColor' in opts ? opts.inactiveTickMarkColor : null;
      let disabledActiveTickMarkColor = opts && 'disabledActiveTickMarkColor' in opts ? opts.disabledActiveTickMarkColor : null;
      let disabledInactiveTickMarkColor = opts && 'disabledInactiveTickMarkColor' in opts ? opts.disabledInactiveTickMarkColor : null;
      let thumbColor = opts && 'thumbColor' in opts ? opts.thumbColor : null;
      let overlappingShapeStrokeColor = opts && 'overlappingShapeStrokeColor' in opts ? opts.overlappingShapeStrokeColor : null;
      let disabledThumbColor = opts && 'disabledThumbColor' in opts ? opts.disabledThumbColor : null;
      let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
      let valueIndicatorColor = opts && 'valueIndicatorColor' in opts ? opts.valueIndicatorColor : null;
      let overlayShape = opts && 'overlayShape' in opts ? opts.overlayShape : null;
      let tickMarkShape = opts && 'tickMarkShape' in opts ? opts.tickMarkShape : null;
      let thumbShape = opts && 'thumbShape' in opts ? opts.thumbShape : null;
      let trackShape = opts && 'trackShape' in opts ? opts.trackShape : null;
      let valueIndicatorShape = opts && 'valueIndicatorShape' in opts ? opts.valueIndicatorShape : null;
      let rangeTickMarkShape = opts && 'rangeTickMarkShape' in opts ? opts.rangeTickMarkShape : null;
      let rangeThumbShape = opts && 'rangeThumbShape' in opts ? opts.rangeThumbShape : null;
      let rangeTrackShape = opts && 'rangeTrackShape' in opts ? opts.rangeTrackShape : null;
      let rangeValueIndicatorShape = opts && 'rangeValueIndicatorShape' in opts ? opts.rangeValueIndicatorShape : null;
      let showValueIndicator = opts && 'showValueIndicator' in opts ? opts.showValueIndicator : null;
      let valueIndicatorTextStyle = opts && 'valueIndicatorTextStyle' in opts ? opts.valueIndicatorTextStyle : null;
      let minThumbSeparation = opts && 'minThumbSeparation' in opts ? opts.minThumbSeparation : null;
      let thumbSelector = opts && 'thumbSelector' in opts ? opts.thumbSelector : null;
      return new slider_theme.SliderThemeData.new({trackHeight: (t12 = trackHeight, t12 == null ? this.trackHeight : t12), activeTrackColor: (t12$ = activeTrackColor, t12$ == null ? this.activeTrackColor : t12$), inactiveTrackColor: (t12$0 = inactiveTrackColor, t12$0 == null ? this.inactiveTrackColor : t12$0), disabledActiveTrackColor: (t12$1 = disabledActiveTrackColor, t12$1 == null ? this.disabledActiveTrackColor : t12$1), disabledInactiveTrackColor: (t12$2 = disabledInactiveTrackColor, t12$2 == null ? this.disabledInactiveTrackColor : t12$2), activeTickMarkColor: (t12$3 = activeTickMarkColor, t12$3 == null ? this.activeTickMarkColor : t12$3), inactiveTickMarkColor: (t12$4 = inactiveTickMarkColor, t12$4 == null ? this.inactiveTickMarkColor : t12$4), disabledActiveTickMarkColor: (t12$5 = disabledActiveTickMarkColor, t12$5 == null ? this.disabledActiveTickMarkColor : t12$5), disabledInactiveTickMarkColor: (t12$6 = disabledInactiveTickMarkColor, t12$6 == null ? this.disabledInactiveTickMarkColor : t12$6), thumbColor: (t12$7 = thumbColor, t12$7 == null ? this.thumbColor : t12$7), overlappingShapeStrokeColor: (t12$8 = overlappingShapeStrokeColor, t12$8 == null ? this.overlappingShapeStrokeColor : t12$8), disabledThumbColor: (t12$9 = disabledThumbColor, t12$9 == null ? this.disabledThumbColor : t12$9), overlayColor: (t12$10 = overlayColor, t12$10 == null ? this.overlayColor : t12$10), valueIndicatorColor: (t12$11 = valueIndicatorColor, t12$11 == null ? this.valueIndicatorColor : t12$11), overlayShape: (t12$12 = overlayShape, t12$12 == null ? this.overlayShape : t12$12), tickMarkShape: (t12$13 = tickMarkShape, t12$13 == null ? this.tickMarkShape : t12$13), thumbShape: (t12$14 = thumbShape, t12$14 == null ? this.thumbShape : t12$14), trackShape: (t12$15 = trackShape, t12$15 == null ? this.trackShape : t12$15), valueIndicatorShape: (t12$16 = valueIndicatorShape, t12$16 == null ? this.valueIndicatorShape : t12$16), rangeTickMarkShape: (t12$17 = rangeTickMarkShape, t12$17 == null ? this.rangeTickMarkShape : t12$17), rangeThumbShape: (t12$18 = rangeThumbShape, t12$18 == null ? this.rangeThumbShape : t12$18), rangeTrackShape: (t12$19 = rangeTrackShape, t12$19 == null ? this.rangeTrackShape : t12$19), rangeValueIndicatorShape: (t12$20 = rangeValueIndicatorShape, t12$20 == null ? this.rangeValueIndicatorShape : t12$20), showValueIndicator: (t12$21 = showValueIndicator, t12$21 == null ? this.showValueIndicator : t12$21), valueIndicatorTextStyle: (t12$22 = valueIndicatorTextStyle, t12$22 == null ? this.valueIndicatorTextStyle : t12$22), minThumbSeparation: (t12$23 = minThumbSeparation, t12$23 == null ? this.minThumbSeparation : t12$23), thumbSelector: (t12$24 = thumbSelector, t12$24 == null ? this.thumbSelector : t12$24)});
    }
    static lerp(a, b, t) {
      if (a == null) dart.nullFailed(I[40], 637, 47, "a");
      if (b == null) dart.nullFailed(I[40], 637, 66, "b");
      if (t == null) dart.nullFailed(I[40], 637, 76, "t");
      if (!(a != null)) dart.assertFailed(null, I[40], 638, 12, "a != null");
      if (!(b != null)) dart.assertFailed(null, I[40], 639, 12, "b != null");
      if (!(t != null)) dart.assertFailed(null, I[40], 640, 12, "t != null");
      return new slider_theme.SliderThemeData.new({trackHeight: ui.lerpDouble(a.trackHeight, b.trackHeight, t), activeTrackColor: ui.Color.lerp(a.activeTrackColor, b.activeTrackColor, t), inactiveTrackColor: ui.Color.lerp(a.inactiveTrackColor, b.inactiveTrackColor, t), disabledActiveTrackColor: ui.Color.lerp(a.disabledActiveTrackColor, b.disabledActiveTrackColor, t), disabledInactiveTrackColor: ui.Color.lerp(a.disabledInactiveTrackColor, b.disabledInactiveTrackColor, t), activeTickMarkColor: ui.Color.lerp(a.activeTickMarkColor, b.activeTickMarkColor, t), inactiveTickMarkColor: ui.Color.lerp(a.inactiveTickMarkColor, b.inactiveTickMarkColor, t), disabledActiveTickMarkColor: ui.Color.lerp(a.disabledActiveTickMarkColor, b.disabledActiveTickMarkColor, t), disabledInactiveTickMarkColor: ui.Color.lerp(a.disabledInactiveTickMarkColor, b.disabledInactiveTickMarkColor, t), thumbColor: ui.Color.lerp(a.thumbColor, b.thumbColor, t), overlappingShapeStrokeColor: ui.Color.lerp(a.overlappingShapeStrokeColor, b.overlappingShapeStrokeColor, t), disabledThumbColor: ui.Color.lerp(a.disabledThumbColor, b.disabledThumbColor, t), overlayColor: ui.Color.lerp(a.overlayColor, b.overlayColor, t), valueIndicatorColor: ui.Color.lerp(a.valueIndicatorColor, b.valueIndicatorColor, t), overlayShape: dart.notNull(t) < 0.5 ? a.overlayShape : b.overlayShape, tickMarkShape: dart.notNull(t) < 0.5 ? a.tickMarkShape : b.tickMarkShape, thumbShape: dart.notNull(t) < 0.5 ? a.thumbShape : b.thumbShape, trackShape: dart.notNull(t) < 0.5 ? a.trackShape : b.trackShape, valueIndicatorShape: dart.notNull(t) < 0.5 ? a.valueIndicatorShape : b.valueIndicatorShape, rangeTickMarkShape: dart.notNull(t) < 0.5 ? a.rangeTickMarkShape : b.rangeTickMarkShape, rangeThumbShape: dart.notNull(t) < 0.5 ? a.rangeThumbShape : b.rangeThumbShape, rangeTrackShape: dart.notNull(t) < 0.5 ? a.rangeTrackShape : b.rangeTrackShape, rangeValueIndicatorShape: dart.notNull(t) < 0.5 ? a.rangeValueIndicatorShape : b.rangeValueIndicatorShape, showValueIndicator: dart.notNull(t) < 0.5 ? a.showValueIndicator : b.showValueIndicator, valueIndicatorTextStyle: text_style.TextStyle.lerp(a.valueIndicatorTextStyle, b.valueIndicatorTextStyle, t), minThumbSeparation: ui.lerpDouble(a.minThumbSeparation, b.minThumbSeparation, t), thumbSelector: dart.notNull(t) < 0.5 ? a.thumbSelector : b.thumbSelector});
    }
    get hashCode() {
      return ui.hashList(T$.JSArrayOfObjectN().of([this.trackHeight, this.activeTrackColor, this.inactiveTrackColor, this.disabledActiveTrackColor, this.disabledInactiveTrackColor, this.activeTickMarkColor, this.inactiveTickMarkColor, this.disabledActiveTickMarkColor, this.disabledInactiveTickMarkColor, this.thumbColor, this.overlappingShapeStrokeColor, this.disabledThumbColor, this.overlayColor, this.valueIndicatorColor, this.overlayShape, this.tickMarkShape, this.thumbShape, this.trackShape, this.valueIndicatorShape, this.rangeTickMarkShape, this.rangeThumbShape, this.rangeTrackShape, this.rangeValueIndicatorShape, this.showValueIndicator, this.valueIndicatorTextStyle, this.minThumbSeparation, this.thumbSelector]));
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) {
        return false;
      }
      return slider_theme.SliderThemeData.is(other) && other.trackHeight == this.trackHeight && dart.equals(other.activeTrackColor, this.activeTrackColor) && dart.equals(other.inactiveTrackColor, this.inactiveTrackColor) && dart.equals(other.disabledActiveTrackColor, this.disabledActiveTrackColor) && dart.equals(other.disabledInactiveTrackColor, this.disabledInactiveTrackColor) && dart.equals(other.activeTickMarkColor, this.activeTickMarkColor) && dart.equals(other.inactiveTickMarkColor, this.inactiveTickMarkColor) && dart.equals(other.disabledActiveTickMarkColor, this.disabledActiveTickMarkColor) && dart.equals(other.disabledInactiveTickMarkColor, this.disabledInactiveTickMarkColor) && dart.equals(other.thumbColor, this.thumbColor) && dart.equals(other.overlappingShapeStrokeColor, this.overlappingShapeStrokeColor) && dart.equals(other.disabledThumbColor, this.disabledThumbColor) && dart.equals(other.overlayColor, this.overlayColor) && dart.equals(other.valueIndicatorColor, this.valueIndicatorColor) && dart.equals(other.overlayShape, this.overlayShape) && dart.equals(other.tickMarkShape, this.tickMarkShape) && dart.equals(other.thumbShape, this.thumbShape) && dart.equals(other.trackShape, this.trackShape) && dart.equals(other.valueIndicatorShape, this.valueIndicatorShape) && dart.equals(other.rangeTickMarkShape, this.rangeTickMarkShape) && dart.equals(other.rangeThumbShape, this.rangeThumbShape) && dart.equals(other.rangeTrackShape, this.rangeTrackShape) && dart.equals(other.rangeValueIndicatorShape, this.rangeValueIndicatorShape) && other.showValueIndicator == this.showValueIndicator && dart.equals(other.valueIndicatorTextStyle, this.valueIndicatorTextStyle) && other.minThumbSeparation == this.minThumbSeparation && dart.equals(other.thumbSelector, this.thumbSelector);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[40], 744, 56, "properties");
      super.debugFillProperties(properties);
      let defaultData = C[265] || CT.C265;
      properties.add(new diagnostics.DoubleProperty.new("trackHeight", this.trackHeight, {defaultValue: defaultData.trackHeight}));
      properties.add(new colors.ColorProperty.new("activeTrackColor", this.activeTrackColor, {defaultValue: defaultData.activeTrackColor}));
      properties.add(new colors.ColorProperty.new("inactiveTrackColor", this.inactiveTrackColor, {defaultValue: defaultData.inactiveTrackColor}));
      properties.add(new colors.ColorProperty.new("disabledActiveTrackColor", this.disabledActiveTrackColor, {defaultValue: defaultData.disabledActiveTrackColor}));
      properties.add(new colors.ColorProperty.new("disabledInactiveTrackColor", this.disabledInactiveTrackColor, {defaultValue: defaultData.disabledInactiveTrackColor}));
      properties.add(new colors.ColorProperty.new("activeTickMarkColor", this.activeTickMarkColor, {defaultValue: defaultData.activeTickMarkColor}));
      properties.add(new colors.ColorProperty.new("inactiveTickMarkColor", this.inactiveTickMarkColor, {defaultValue: defaultData.inactiveTickMarkColor}));
      properties.add(new colors.ColorProperty.new("disabledActiveTickMarkColor", this.disabledActiveTickMarkColor, {defaultValue: defaultData.disabledActiveTickMarkColor}));
      properties.add(new colors.ColorProperty.new("disabledInactiveTickMarkColor", this.disabledInactiveTickMarkColor, {defaultValue: defaultData.disabledInactiveTickMarkColor}));
      properties.add(new colors.ColorProperty.new("thumbColor", this.thumbColor, {defaultValue: defaultData.thumbColor}));
      properties.add(new colors.ColorProperty.new("overlappingShapeStrokeColor", this.overlappingShapeStrokeColor, {defaultValue: defaultData.overlappingShapeStrokeColor}));
      properties.add(new colors.ColorProperty.new("disabledThumbColor", this.disabledThumbColor, {defaultValue: defaultData.disabledThumbColor}));
      properties.add(new colors.ColorProperty.new("overlayColor", this.overlayColor, {defaultValue: defaultData.overlayColor}));
      properties.add(new colors.ColorProperty.new("valueIndicatorColor", this.valueIndicatorColor, {defaultValue: defaultData.valueIndicatorColor}));
      properties.add(new (T$.DiagnosticsPropertyOfSliderComponentShape()).new("overlayShape", this.overlayShape, {defaultValue: defaultData.overlayShape}));
      properties.add(new (T$.DiagnosticsPropertyOfSliderTickMarkShape()).new("tickMarkShape", this.tickMarkShape, {defaultValue: defaultData.tickMarkShape}));
      properties.add(new (T$.DiagnosticsPropertyOfSliderComponentShape()).new("thumbShape", this.thumbShape, {defaultValue: defaultData.thumbShape}));
      properties.add(new (T$.DiagnosticsPropertyOfSliderTrackShape()).new("trackShape", this.trackShape, {defaultValue: defaultData.trackShape}));
      properties.add(new (T$.DiagnosticsPropertyOfSliderComponentShape()).new("valueIndicatorShape", this.valueIndicatorShape, {defaultValue: defaultData.valueIndicatorShape}));
      properties.add(new (T$.DiagnosticsPropertyOfRangeSliderTickMarkShape()).new("rangeTickMarkShape", this.rangeTickMarkShape, {defaultValue: defaultData.rangeTickMarkShape}));
      properties.add(new (T$.DiagnosticsPropertyOfRangeSliderThumbShape()).new("rangeThumbShape", this.rangeThumbShape, {defaultValue: defaultData.rangeThumbShape}));
      properties.add(new (T$.DiagnosticsPropertyOfRangeSliderTrackShape()).new("rangeTrackShape", this.rangeTrackShape, {defaultValue: defaultData.rangeTrackShape}));
      properties.add(new (T$.DiagnosticsPropertyOfRangeSliderValueIndicatorShape()).new("rangeValueIndicatorShape", this.rangeValueIndicatorShape, {defaultValue: defaultData.rangeValueIndicatorShape}));
      properties.add(new (T$.EnumPropertyOfShowValueIndicator()).new("showValueIndicator", this.showValueIndicator, {defaultValue: defaultData.showValueIndicator}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("valueIndicatorTextStyle", this.valueIndicatorTextStyle, {defaultValue: defaultData.valueIndicatorTextStyle}));
      properties.add(new diagnostics.DoubleProperty.new("minThumbSeparation", this.minThumbSeparation, {defaultValue: defaultData.minThumbSeparation}));
      properties.add(new (T$.DiagnosticsPropertyOfTextDirectionAndRangeValuesAnddouble__ToThumbN()).new("thumbSelector", this.thumbSelector, {defaultValue: defaultData.thumbSelector}));
    }
  };
  (slider_theme.SliderThemeData.new = function(opts) {
    let trackHeight = opts && 'trackHeight' in opts ? opts.trackHeight : null;
    let activeTrackColor = opts && 'activeTrackColor' in opts ? opts.activeTrackColor : null;
    let inactiveTrackColor = opts && 'inactiveTrackColor' in opts ? opts.inactiveTrackColor : null;
    let disabledActiveTrackColor = opts && 'disabledActiveTrackColor' in opts ? opts.disabledActiveTrackColor : null;
    let disabledInactiveTrackColor = opts && 'disabledInactiveTrackColor' in opts ? opts.disabledInactiveTrackColor : null;
    let activeTickMarkColor = opts && 'activeTickMarkColor' in opts ? opts.activeTickMarkColor : null;
    let inactiveTickMarkColor = opts && 'inactiveTickMarkColor' in opts ? opts.inactiveTickMarkColor : null;
    let disabledActiveTickMarkColor = opts && 'disabledActiveTickMarkColor' in opts ? opts.disabledActiveTickMarkColor : null;
    let disabledInactiveTickMarkColor = opts && 'disabledInactiveTickMarkColor' in opts ? opts.disabledInactiveTickMarkColor : null;
    let thumbColor = opts && 'thumbColor' in opts ? opts.thumbColor : null;
    let overlappingShapeStrokeColor = opts && 'overlappingShapeStrokeColor' in opts ? opts.overlappingShapeStrokeColor : null;
    let disabledThumbColor = opts && 'disabledThumbColor' in opts ? opts.disabledThumbColor : null;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let valueIndicatorColor = opts && 'valueIndicatorColor' in opts ? opts.valueIndicatorColor : null;
    let overlayShape = opts && 'overlayShape' in opts ? opts.overlayShape : null;
    let tickMarkShape = opts && 'tickMarkShape' in opts ? opts.tickMarkShape : null;
    let thumbShape = opts && 'thumbShape' in opts ? opts.thumbShape : null;
    let trackShape = opts && 'trackShape' in opts ? opts.trackShape : null;
    let valueIndicatorShape = opts && 'valueIndicatorShape' in opts ? opts.valueIndicatorShape : null;
    let rangeTickMarkShape = opts && 'rangeTickMarkShape' in opts ? opts.rangeTickMarkShape : null;
    let rangeThumbShape = opts && 'rangeThumbShape' in opts ? opts.rangeThumbShape : null;
    let rangeTrackShape = opts && 'rangeTrackShape' in opts ? opts.rangeTrackShape : null;
    let rangeValueIndicatorShape = opts && 'rangeValueIndicatorShape' in opts ? opts.rangeValueIndicatorShape : null;
    let showValueIndicator = opts && 'showValueIndicator' in opts ? opts.showValueIndicator : null;
    let valueIndicatorTextStyle = opts && 'valueIndicatorTextStyle' in opts ? opts.valueIndicatorTextStyle : null;
    let minThumbSeparation = opts && 'minThumbSeparation' in opts ? opts.minThumbSeparation : null;
    let thumbSelector = opts && 'thumbSelector' in opts ? opts.thumbSelector : null;
    this[S.trackHeight] = trackHeight;
    this[S.activeTrackColor] = activeTrackColor;
    this[S.inactiveTrackColor] = inactiveTrackColor;
    this[S.disabledActiveTrackColor] = disabledActiveTrackColor;
    this[S.disabledInactiveTrackColor] = disabledInactiveTrackColor;
    this[S.activeTickMarkColor] = activeTickMarkColor;
    this[S.inactiveTickMarkColor] = inactiveTickMarkColor;
    this[S.disabledActiveTickMarkColor] = disabledActiveTickMarkColor;
    this[S.disabledInactiveTickMarkColor] = disabledInactiveTickMarkColor;
    this[S.thumbColor$1] = thumbColor;
    this[S.overlappingShapeStrokeColor] = overlappingShapeStrokeColor;
    this[S.disabledThumbColor] = disabledThumbColor;
    this[S.overlayColor$2] = overlayColor;
    this[S.valueIndicatorColor] = valueIndicatorColor;
    this[S.overlayShape] = overlayShape;
    this[S.tickMarkShape] = tickMarkShape;
    this[S.thumbShape] = thumbShape;
    this[S.trackShape] = trackShape;
    this[S.valueIndicatorShape] = valueIndicatorShape;
    this[S.rangeTickMarkShape] = rangeTickMarkShape;
    this[S.rangeThumbShape] = rangeThumbShape;
    this[S.rangeTrackShape] = rangeTrackShape;
    this[S.rangeValueIndicatorShape] = rangeValueIndicatorShape;
    this[S.showValueIndicator] = showValueIndicator;
    this[S.valueIndicatorTextStyle] = valueIndicatorTextStyle;
    this[S.minThumbSeparation] = minThumbSeparation;
    this[S.thumbSelector] = thumbSelector;
    ;
  }).prototype = slider_theme.SliderThemeData.prototype;
  dart.addTypeTests(slider_theme.SliderThemeData);
  dart.addTypeCaches(slider_theme.SliderThemeData);
  dart.setMethodSignature(slider_theme.SliderThemeData, () => ({
    __proto__: dart.getMethods(slider_theme.SliderThemeData.__proto__),
    copyWith: dart.fnType(slider_theme.SliderThemeData, [], {activeTickMarkColor: dart.nullable(ui.Color), activeTrackColor: dart.nullable(ui.Color), disabledActiveTickMarkColor: dart.nullable(ui.Color), disabledActiveTrackColor: dart.nullable(ui.Color), disabledInactiveTickMarkColor: dart.nullable(ui.Color), disabledInactiveTrackColor: dart.nullable(ui.Color), disabledThumbColor: dart.nullable(ui.Color), inactiveTickMarkColor: dart.nullable(ui.Color), inactiveTrackColor: dart.nullable(ui.Color), minThumbSeparation: dart.nullable(core.double), overlappingShapeStrokeColor: dart.nullable(ui.Color), overlayColor: dart.nullable(ui.Color), overlayShape: dart.nullable(slider_theme.SliderComponentShape), rangeThumbShape: dart.nullable(slider_theme.RangeSliderThumbShape), rangeTickMarkShape: dart.nullable(slider_theme.RangeSliderTickMarkShape), rangeTrackShape: dart.nullable(slider_theme.RangeSliderTrackShape), rangeValueIndicatorShape: dart.nullable(slider_theme.RangeSliderValueIndicatorShape), showValueIndicator: dart.nullable(slider_theme.ShowValueIndicator), thumbColor: dart.nullable(ui.Color), thumbSelector: dart.nullable(dart.fnType(dart.nullable(slider_theme.Thumb), [ui.TextDirection, slider_theme.RangeValues, core.double, ui.Size, ui.Size, core.double])), thumbShape: dart.nullable(slider_theme.SliderComponentShape), tickMarkShape: dart.nullable(slider_theme.SliderTickMarkShape), trackHeight: dart.nullable(core.double), trackShape: dart.nullable(slider_theme.SliderTrackShape), valueIndicatorColor: dart.nullable(ui.Color), valueIndicatorShape: dart.nullable(slider_theme.SliderComponentShape), valueIndicatorTextStyle: dart.nullable(text_style.TextStyle)}, {})
  }));
  dart.setLibraryUri(slider_theme.SliderThemeData, I[41]);
  dart.setFieldSignature(slider_theme.SliderThemeData, () => ({
    __proto__: dart.getFields(slider_theme.SliderThemeData.__proto__),
    trackHeight: dart.finalFieldType(dart.nullable(core.double)),
    activeTrackColor: dart.finalFieldType(dart.nullable(ui.Color)),
    inactiveTrackColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledActiveTrackColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledInactiveTrackColor: dart.finalFieldType(dart.nullable(ui.Color)),
    activeTickMarkColor: dart.finalFieldType(dart.nullable(ui.Color)),
    inactiveTickMarkColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledActiveTickMarkColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledInactiveTickMarkColor: dart.finalFieldType(dart.nullable(ui.Color)),
    thumbColor: dart.finalFieldType(dart.nullable(ui.Color)),
    overlappingShapeStrokeColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledThumbColor: dart.finalFieldType(dart.nullable(ui.Color)),
    overlayColor: dart.finalFieldType(dart.nullable(ui.Color)),
    valueIndicatorColor: dart.finalFieldType(dart.nullable(ui.Color)),
    overlayShape: dart.finalFieldType(dart.nullable(slider_theme.SliderComponentShape)),
    tickMarkShape: dart.finalFieldType(dart.nullable(slider_theme.SliderTickMarkShape)),
    thumbShape: dart.finalFieldType(dart.nullable(slider_theme.SliderComponentShape)),
    trackShape: dart.finalFieldType(dart.nullable(slider_theme.SliderTrackShape)),
    valueIndicatorShape: dart.finalFieldType(dart.nullable(slider_theme.SliderComponentShape)),
    rangeTickMarkShape: dart.finalFieldType(dart.nullable(slider_theme.RangeSliderTickMarkShape)),
    rangeThumbShape: dart.finalFieldType(dart.nullable(slider_theme.RangeSliderThumbShape)),
    rangeTrackShape: dart.finalFieldType(dart.nullable(slider_theme.RangeSliderTrackShape)),
    rangeValueIndicatorShape: dart.finalFieldType(dart.nullable(slider_theme.RangeSliderValueIndicatorShape)),
    showValueIndicator: dart.finalFieldType(dart.nullable(slider_theme.ShowValueIndicator)),
    valueIndicatorTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    minThumbSeparation: dart.finalFieldType(dart.nullable(core.double)),
    thumbSelector: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(slider_theme.Thumb), [ui.TextDirection, slider_theme.RangeValues, core.double, ui.Size, ui.Size, core.double])))
  }));
  dart.defineExtensionMethods(slider_theme.SliderThemeData, ['_equals']);
  dart.defineExtensionAccessors(slider_theme.SliderThemeData, ['hashCode']);
  slider_theme.SliderComponentShape = class SliderComponentShape extends core.Object {};
  (slider_theme.SliderComponentShape.new = function() {
    ;
  }).prototype = slider_theme.SliderComponentShape.prototype;
  dart.addTypeTests(slider_theme.SliderComponentShape);
  dart.addTypeCaches(slider_theme.SliderComponentShape);
  dart.setLibraryUri(slider_theme.SliderComponentShape, I[41]);
  dart.defineLazy(slider_theme.SliderComponentShape, {
    /*slider_theme.SliderComponentShape.noThumb*/get noThumb() {
      return new slider_theme._EmptySliderComponentShape.new();
    },
    /*slider_theme.SliderComponentShape.noOverlay*/get noOverlay() {
      return new slider_theme._EmptySliderComponentShape.new();
    }
  }, false);
  slider_theme.SliderTickMarkShape = class SliderTickMarkShape extends core.Object {};
  (slider_theme.SliderTickMarkShape.new = function() {
    ;
  }).prototype = slider_theme.SliderTickMarkShape.prototype;
  dart.addTypeTests(slider_theme.SliderTickMarkShape);
  dart.addTypeCaches(slider_theme.SliderTickMarkShape);
  dart.setLibraryUri(slider_theme.SliderTickMarkShape, I[41]);
  dart.defineLazy(slider_theme.SliderTickMarkShape, {
    /*slider_theme.SliderTickMarkShape.noTickMark*/get noTickMark() {
      return new slider_theme._EmptySliderTickMarkShape.new();
    }
  }, false);
  slider_theme.SliderTrackShape = class SliderTrackShape extends core.Object {};
  (slider_theme.SliderTrackShape.new = function() {
    ;
  }).prototype = slider_theme.SliderTrackShape.prototype;
  dart.addTypeTests(slider_theme.SliderTrackShape);
  dart.addTypeCaches(slider_theme.SliderTrackShape);
  dart.setLibraryUri(slider_theme.SliderTrackShape, I[41]);
  slider_theme.RangeSliderThumbShape = class RangeSliderThumbShape extends core.Object {};
  (slider_theme.RangeSliderThumbShape.new = function() {
    ;
  }).prototype = slider_theme.RangeSliderThumbShape.prototype;
  dart.addTypeTests(slider_theme.RangeSliderThumbShape);
  dart.addTypeCaches(slider_theme.RangeSliderThumbShape);
  dart.setLibraryUri(slider_theme.RangeSliderThumbShape, I[41]);
  slider_theme.RangeSliderValueIndicatorShape = class RangeSliderValueIndicatorShape extends core.Object {
    getHorizontalShift(opts) {
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let center = opts && 'center' in opts ? opts.center : null;
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      return 0.0;
    }
  };
  (slider_theme.RangeSliderValueIndicatorShape.new = function() {
    ;
  }).prototype = slider_theme.RangeSliderValueIndicatorShape.prototype;
  dart.addTypeTests(slider_theme.RangeSliderValueIndicatorShape);
  dart.addTypeCaches(slider_theme.RangeSliderValueIndicatorShape);
  dart.setMethodSignature(slider_theme.RangeSliderValueIndicatorShape, () => ({
    __proto__: dart.getMethods(slider_theme.RangeSliderValueIndicatorShape.__proto__),
    getHorizontalShift: dart.fnType(core.double, [], {activationAnimation: dart.nullable(animation.Animation$(core.double)), center: dart.nullable(ui.Offset), labelPainter: dart.nullable(text_painter.TextPainter), parentBox: dart.nullable(box$.RenderBox), sizeWithOverflow: dart.nullable(ui.Size), textScaleFactor: dart.nullable(core.double)}, {})
  }));
  dart.setLibraryUri(slider_theme.RangeSliderValueIndicatorShape, I[41]);
  slider_theme.RangeSliderTickMarkShape = class RangeSliderTickMarkShape extends core.Object {};
  (slider_theme.RangeSliderTickMarkShape.new = function() {
    ;
  }).prototype = slider_theme.RangeSliderTickMarkShape.prototype;
  dart.addTypeTests(slider_theme.RangeSliderTickMarkShape);
  dart.addTypeCaches(slider_theme.RangeSliderTickMarkShape);
  dart.setLibraryUri(slider_theme.RangeSliderTickMarkShape, I[41]);
  slider_theme.RangeSliderTrackShape = class RangeSliderTrackShape extends core.Object {};
  (slider_theme.RangeSliderTrackShape.new = function() {
    ;
  }).prototype = slider_theme.RangeSliderTrackShape.prototype;
  dart.addTypeTests(slider_theme.RangeSliderTrackShape);
  dart.addTypeCaches(slider_theme.RangeSliderTrackShape);
  dart.setLibraryUri(slider_theme.RangeSliderTrackShape, I[41]);
  slider_theme.BaseSliderTrackShape = class BaseSliderTrackShape extends core.Object {};
  slider_theme.BaseSliderTrackShape[dart.mixinOn] = Object => class BaseSliderTrackShape extends Object {
    getPreferredRect(opts) {
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[40], 1441, 24, "parentBox");
      let offset = opts && 'offset' in opts ? opts.offset : C[266] || CT.C266;
      if (offset == null) dart.nullFailed(I[40], 1442, 12, "offset");
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[40], 1443, 30, "sliderTheme");
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      if (isEnabled == null) dart.nullFailed(I[40], 1444, 10, "isEnabled");
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : false;
      if (isDiscrete == null) dart.nullFailed(I[40], 1445, 10, "isDiscrete");
      if (!(isEnabled != null)) dart.assertFailed(null, I[40], 1447, 12, "isEnabled != null");
      if (!(isDiscrete != null)) dart.assertFailed(null, I[40], 1448, 12, "isDiscrete != null");
      if (!(parentBox != null)) dart.assertFailed(null, I[40], 1449, 12, "parentBox != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, I[40], 1450, 12, "sliderTheme != null");
      let thumbWidth = dart.nullCheck(sliderTheme.thumbShape).getPreferredSize(isEnabled, isDiscrete).width;
      let overlayWidth = dart.nullCheck(sliderTheme.overlayShape).getPreferredSize(isEnabled, isDiscrete).width;
      let trackHeight = dart.nullCheck(sliderTheme.trackHeight);
      if (!(dart.notNull(overlayWidth) >= 0)) dart.assertFailed(null, I[40], 1454, 12, "overlayWidth >= 0");
      if (!(trackHeight >= 0)) dart.assertFailed(null, I[40], 1455, 12, "trackHeight >= 0");
      let trackLeft = dart.notNull(offset.dx) + math.max(core.num, dart.notNull(overlayWidth) / 2, dart.notNull(thumbWidth) / 2);
      let trackTop = dart.notNull(offset.dy) + (dart.notNull(parentBox.size.height) - trackHeight) / 2;
      let trackRight = trackLeft + dart.notNull(parentBox.size.width) - math.max(core.num, thumbWidth, overlayWidth);
      let trackBottom = trackTop + trackHeight;
      return new ui.Rect.fromLTRB(math.min(core.double, trackLeft, trackRight), trackTop, math.max(core.double, trackLeft, trackRight), trackBottom);
    }
  };
  (slider_theme.BaseSliderTrackShape[dart.mixinNew] = function() {
  }).prototype = slider_theme.BaseSliderTrackShape.prototype;
  dart.addTypeTests(slider_theme.BaseSliderTrackShape);
  dart.addTypeCaches(slider_theme.BaseSliderTrackShape);
  slider_theme.BaseSliderTrackShape[dart.implements] = () => [core.Object];
  dart.setMethodSignature(slider_theme.BaseSliderTrackShape, () => ({
    __proto__: dart.getMethods(slider_theme.BaseSliderTrackShape.__proto__),
    getPreferredRect: dart.fnType(ui.Rect, [], {isDiscrete: core.bool, isEnabled: core.bool, offset: ui.Offset}, {parentBox: box$.RenderBox, sliderTheme: slider_theme.SliderThemeData})
  }));
  dart.setLibraryUri(slider_theme.BaseSliderTrackShape, I[41]);
  const SliderTrackShape_BaseSliderTrackShape$36 = class SliderTrackShape_BaseSliderTrackShape extends slider_theme.SliderTrackShape {};
  (SliderTrackShape_BaseSliderTrackShape$36.new = function() {
    SliderTrackShape_BaseSliderTrackShape$36.__proto__.new.call(this);
  }).prototype = SliderTrackShape_BaseSliderTrackShape$36.prototype;
  dart.applyMixin(SliderTrackShape_BaseSliderTrackShape$36, slider_theme.BaseSliderTrackShape);
  slider_theme.RectangularSliderTrackShape = class RectangularSliderTrackShape extends SliderTrackShape_BaseSliderTrackShape$36 {
    get disabledThumbGapWidth() {
      return this[S.disabledThumbGapWidth];
    }
    set disabledThumbGapWidth(value) {
      super.disabledThumbGapWidth = value;
    }
    paint(context, offset, opts) {
      let t12, t12$;
      if (context == null) dart.nullFailed(I[40], 1515, 21, "context");
      if (offset == null) dart.nullFailed(I[40], 1516, 12, "offset");
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[40], 1517, 24, "parentBox");
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[40], 1518, 30, "sliderTheme");
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      if (enableAnimation == null) dart.nullFailed(I[40], 1519, 32, "enableAnimation");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (textDirection == null) dart.nullFailed(I[40], 1520, 28, "textDirection");
      let thumbCenter = opts && 'thumbCenter' in opts ? opts.thumbCenter : null;
      if (thumbCenter == null) dart.nullFailed(I[40], 1521, 21, "thumbCenter");
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : false;
      if (isDiscrete == null) dart.nullFailed(I[40], 1522, 10, "isDiscrete");
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      if (isEnabled == null) dart.nullFailed(I[40], 1523, 10, "isEnabled");
      if (!(context != null)) dart.assertFailed(null, I[40], 1525, 12, "context != null");
      if (!(offset != null)) dart.assertFailed(null, I[40], 1526, 12, "offset != null");
      if (!(parentBox != null)) dart.assertFailed(null, I[40], 1527, 12, "parentBox != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, I[40], 1528, 12, "sliderTheme != null");
      if (!(sliderTheme.disabledActiveTrackColor != null)) dart.assertFailed(null, I[40], 1529, 12, "sliderTheme.disabledActiveTrackColor != null");
      if (!(sliderTheme.disabledInactiveTrackColor != null)) dart.assertFailed(null, I[40], 1530, 12, "sliderTheme.disabledInactiveTrackColor != null");
      if (!(sliderTheme.activeTrackColor != null)) dart.assertFailed(null, I[40], 1531, 12, "sliderTheme.activeTrackColor != null");
      if (!(sliderTheme.inactiveTrackColor != null)) dart.assertFailed(null, I[40], 1532, 12, "sliderTheme.inactiveTrackColor != null");
      if (!(sliderTheme.thumbShape != null)) dart.assertFailed(null, I[40], 1533, 12, "sliderTheme.thumbShape != null");
      if (!(enableAnimation != null)) dart.assertFailed(null, I[40], 1534, 12, "enableAnimation != null");
      if (!(textDirection != null)) dart.assertFailed(null, I[40], 1535, 12, "textDirection != null");
      if (!(thumbCenter != null)) dart.assertFailed(null, I[40], 1536, 12, "thumbCenter != null");
      if (!(isEnabled != null)) dart.assertFailed(null, I[40], 1537, 12, "isEnabled != null");
      if (!(isDiscrete != null)) dart.assertFailed(null, I[40], 1538, 12, "isDiscrete != null");
      if (dart.nullCheck(sliderTheme.trackHeight) <= 0) {
        return;
      }
      let activeTrackColorTween = new tween.ColorTween.new({begin: sliderTheme.disabledActiveTrackColor, end: sliderTheme.activeTrackColor});
      let inactiveTrackColorTween = new tween.ColorTween.new({begin: sliderTheme.disabledInactiveTrackColor, end: sliderTheme.inactiveTrackColor});
      let activePaint = (t12 = ui.Paint.new(), (() => {
        t12.color = dart.nullCheck(activeTrackColorTween.evaluate(enableAnimation));
        return t12;
      })());
      let inactivePaint = (t12$ = ui.Paint.new(), (() => {
        t12$.color = dart.nullCheck(inactiveTrackColorTween.evaluate(enableAnimation));
        return t12$;
      })());
      let leftTrackPaint = null;
      let rightTrackPaint = null;
      switch (textDirection) {
        case C[138] || CT.C138:
        {
          leftTrackPaint = activePaint;
          rightTrackPaint = inactivePaint;
          break;
        }
        case C[137] || CT.C137:
        {
          leftTrackPaint = inactivePaint;
          rightTrackPaint = activePaint;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      let trackRect = this.getPreferredRect({parentBox: parentBox, offset: offset, sliderTheme: sliderTheme, isEnabled: isEnabled, isDiscrete: isDiscrete});
      let leftTrackSegment = new ui.Rect.fromLTRB(trackRect.left, trackRect.top, thumbCenter.dx, trackRect.bottom);
      if (!dart.test(leftTrackSegment.isEmpty)) context.canvas.drawRect(leftTrackSegment, leftTrackPaint);
      let rightTrackSegment = new ui.Rect.fromLTRB(thumbCenter.dx, trackRect.top, trackRect.right, trackRect.bottom);
      if (!dart.test(rightTrackSegment.isEmpty)) context.canvas.drawRect(rightTrackSegment, rightTrackPaint);
    }
  };
  (slider_theme.RectangularSliderTrackShape.new = function(opts) {
    let disabledThumbGapWidth = opts && 'disabledThumbGapWidth' in opts ? opts.disabledThumbGapWidth : 2;
    if (disabledThumbGapWidth == null) dart.nullFailed(I[40], 1498, 10, "disabledThumbGapWidth");
    this[S.disabledThumbGapWidth] = disabledThumbGapWidth;
    slider_theme.RectangularSliderTrackShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RectangularSliderTrackShape.prototype;
  dart.addTypeTests(slider_theme.RectangularSliderTrackShape);
  dart.addTypeCaches(slider_theme.RectangularSliderTrackShape);
  dart.setMethodSignature(slider_theme.RectangularSliderTrackShape, () => ({
    __proto__: dart.getMethods(slider_theme.RectangularSliderTrackShape.__proto__),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {isDiscrete: core.bool, isEnabled: core.bool}, {enableAnimation: animation.Animation$(core.double), parentBox: box$.RenderBox, sliderTheme: slider_theme.SliderThemeData, textDirection: ui.TextDirection, thumbCenter: ui.Offset})
  }));
  dart.setLibraryUri(slider_theme.RectangularSliderTrackShape, I[41]);
  dart.setFieldSignature(slider_theme.RectangularSliderTrackShape, () => ({
    __proto__: dart.getFields(slider_theme.RectangularSliderTrackShape.__proto__),
    disabledThumbGapWidth: dart.finalFieldType(core.double)
  }));
  const SliderTrackShape_BaseSliderTrackShape$36$ = class SliderTrackShape_BaseSliderTrackShape extends slider_theme.SliderTrackShape {};
  (SliderTrackShape_BaseSliderTrackShape$36$.new = function() {
    SliderTrackShape_BaseSliderTrackShape$36$.__proto__.new.call(this);
  }).prototype = SliderTrackShape_BaseSliderTrackShape$36$.prototype;
  dart.applyMixin(SliderTrackShape_BaseSliderTrackShape$36$, slider_theme.BaseSliderTrackShape);
  slider_theme.RoundedRectSliderTrackShape = class RoundedRectSliderTrackShape extends SliderTrackShape_BaseSliderTrackShape$36$ {
    paint(context, offset, opts) {
      let t12, t12$;
      if (context == null) dart.nullFailed(I[40], 1613, 21, "context");
      if (offset == null) dart.nullFailed(I[40], 1614, 12, "offset");
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[40], 1615, 24, "parentBox");
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[40], 1616, 30, "sliderTheme");
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      if (enableAnimation == null) dart.nullFailed(I[40], 1617, 32, "enableAnimation");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (textDirection == null) dart.nullFailed(I[40], 1618, 28, "textDirection");
      let thumbCenter = opts && 'thumbCenter' in opts ? opts.thumbCenter : null;
      if (thumbCenter == null) dart.nullFailed(I[40], 1619, 21, "thumbCenter");
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : false;
      if (isDiscrete == null) dart.nullFailed(I[40], 1620, 10, "isDiscrete");
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      if (isEnabled == null) dart.nullFailed(I[40], 1621, 10, "isEnabled");
      let additionalActiveTrackHeight = opts && 'additionalActiveTrackHeight' in opts ? opts.additionalActiveTrackHeight : 2;
      if (additionalActiveTrackHeight == null) dart.nullFailed(I[40], 1622, 12, "additionalActiveTrackHeight");
      if (!(context != null)) dart.assertFailed(null, I[40], 1624, 12, "context != null");
      if (!(offset != null)) dart.assertFailed(null, I[40], 1625, 12, "offset != null");
      if (!(parentBox != null)) dart.assertFailed(null, I[40], 1626, 12, "parentBox != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, I[40], 1627, 12, "sliderTheme != null");
      if (!(sliderTheme.disabledActiveTrackColor != null)) dart.assertFailed(null, I[40], 1628, 12, "sliderTheme.disabledActiveTrackColor != null");
      if (!(sliderTheme.disabledInactiveTrackColor != null)) dart.assertFailed(null, I[40], 1629, 12, "sliderTheme.disabledInactiveTrackColor != null");
      if (!(sliderTheme.activeTrackColor != null)) dart.assertFailed(null, I[40], 1630, 12, "sliderTheme.activeTrackColor != null");
      if (!(sliderTheme.inactiveTrackColor != null)) dart.assertFailed(null, I[40], 1631, 12, "sliderTheme.inactiveTrackColor != null");
      if (!(sliderTheme.thumbShape != null)) dart.assertFailed(null, I[40], 1632, 12, "sliderTheme.thumbShape != null");
      if (!(enableAnimation != null)) dart.assertFailed(null, I[40], 1633, 12, "enableAnimation != null");
      if (!(textDirection != null)) dart.assertFailed(null, I[40], 1634, 12, "textDirection != null");
      if (!(thumbCenter != null)) dart.assertFailed(null, I[40], 1635, 12, "thumbCenter != null");
      if (sliderTheme.trackHeight == null || dart.nullCheck(sliderTheme.trackHeight) <= 0) {
        return;
      }
      let activeTrackColorTween = new tween.ColorTween.new({begin: sliderTheme.disabledActiveTrackColor, end: sliderTheme.activeTrackColor});
      let inactiveTrackColorTween = new tween.ColorTween.new({begin: sliderTheme.disabledInactiveTrackColor, end: sliderTheme.inactiveTrackColor});
      let activePaint = (t12 = ui.Paint.new(), (() => {
        t12.color = dart.nullCheck(activeTrackColorTween.evaluate(enableAnimation));
        return t12;
      })());
      let inactivePaint = (t12$ = ui.Paint.new(), (() => {
        t12$.color = dart.nullCheck(inactiveTrackColorTween.evaluate(enableAnimation));
        return t12$;
      })());
      let leftTrackPaint = null;
      let rightTrackPaint = null;
      switch (textDirection) {
        case C[138] || CT.C138:
        {
          leftTrackPaint = activePaint;
          rightTrackPaint = inactivePaint;
          break;
        }
        case C[137] || CT.C137:
        {
          leftTrackPaint = inactivePaint;
          rightTrackPaint = activePaint;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      let trackRect = this.getPreferredRect({parentBox: parentBox, offset: offset, sliderTheme: sliderTheme, isEnabled: isEnabled, isDiscrete: isDiscrete});
      let trackRadius = new ui.Radius.circular(dart.notNull(trackRect.height) / 2);
      let activeTrackRadius = new ui.Radius.circular((dart.notNull(trackRect.height) + dart.notNull(additionalActiveTrackHeight)) / 2);
      context.canvas.drawRRect(new ui.RRect.fromLTRBAndCorners(trackRect.left, textDirection == ui.TextDirection.ltr ? dart.notNull(trackRect.top) - dart.notNull(additionalActiveTrackHeight) / 2 : trackRect.top, thumbCenter.dx, textDirection == ui.TextDirection.ltr ? dart.notNull(trackRect.bottom) + dart.notNull(additionalActiveTrackHeight) / 2 : trackRect.bottom, {topLeft: textDirection == ui.TextDirection.ltr ? activeTrackRadius : trackRadius, bottomLeft: textDirection == ui.TextDirection.ltr ? activeTrackRadius : trackRadius}), leftTrackPaint);
      context.canvas.drawRRect(new ui.RRect.fromLTRBAndCorners(thumbCenter.dx, textDirection == ui.TextDirection.rtl ? dart.notNull(trackRect.top) - dart.notNull(additionalActiveTrackHeight) / 2 : trackRect.top, trackRect.right, textDirection == ui.TextDirection.rtl ? dart.notNull(trackRect.bottom) + dart.notNull(additionalActiveTrackHeight) / 2 : trackRect.bottom, {topRight: textDirection == ui.TextDirection.rtl ? activeTrackRadius : trackRadius, bottomRight: textDirection == ui.TextDirection.rtl ? activeTrackRadius : trackRadius}), rightTrackPaint);
    }
  };
  (slider_theme.RoundedRectSliderTrackShape.new = function() {
    slider_theme.RoundedRectSliderTrackShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RoundedRectSliderTrackShape.prototype;
  dart.addTypeTests(slider_theme.RoundedRectSliderTrackShape);
  dart.addTypeCaches(slider_theme.RoundedRectSliderTrackShape);
  dart.setMethodSignature(slider_theme.RoundedRectSliderTrackShape, () => ({
    __proto__: dart.getMethods(slider_theme.RoundedRectSliderTrackShape.__proto__),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {additionalActiveTrackHeight: core.double, isDiscrete: core.bool, isEnabled: core.bool}, {enableAnimation: animation.Animation$(core.double), parentBox: box$.RenderBox, sliderTheme: slider_theme.SliderThemeData, textDirection: ui.TextDirection, thumbCenter: ui.Offset})
  }));
  dart.setLibraryUri(slider_theme.RoundedRectSliderTrackShape, I[41]);
  slider_theme.RectangularRangeSliderTrackShape = class RectangularRangeSliderTrackShape extends slider_theme.RangeSliderTrackShape {
    getPreferredRect(opts) {
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[40], 1732, 24, "parentBox");
      let offset = opts && 'offset' in opts ? opts.offset : C[266] || CT.C266;
      if (offset == null) dart.nullFailed(I[40], 1733, 12, "offset");
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[40], 1734, 30, "sliderTheme");
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      if (isEnabled == null) dart.nullFailed(I[40], 1735, 10, "isEnabled");
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : false;
      if (isDiscrete == null) dart.nullFailed(I[40], 1736, 10, "isDiscrete");
      if (!(parentBox != null)) dart.assertFailed(null, I[40], 1738, 12, "parentBox != null");
      if (!(offset != null)) dart.assertFailed(null, I[40], 1739, 12, "offset != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, I[40], 1740, 12, "sliderTheme != null");
      if (!(sliderTheme.overlayShape != null)) dart.assertFailed(null, I[40], 1741, 12, "sliderTheme.overlayShape != null");
      if (!(isEnabled != null)) dart.assertFailed(null, I[40], 1742, 12, "isEnabled != null");
      if (!(isDiscrete != null)) dart.assertFailed(null, I[40], 1743, 12, "isDiscrete != null");
      let overlayWidth = dart.nullCheck(sliderTheme.overlayShape).getPreferredSize(isEnabled, isDiscrete).width;
      let trackHeight = dart.nullCheck(sliderTheme.trackHeight);
      if (!(dart.notNull(overlayWidth) >= 0)) dart.assertFailed(null, I[40], 1746, 12, "overlayWidth >= 0");
      if (!(trackHeight >= 0)) dart.assertFailed(null, I[40], 1747, 12, "trackHeight >= 0");
      let trackLeft = dart.notNull(offset.dx) + dart.notNull(overlayWidth) / 2;
      let trackTop = dart.notNull(offset.dy) + (dart.notNull(parentBox.size.height) - trackHeight) / 2;
      let trackRight = trackLeft + dart.notNull(parentBox.size.width) - dart.notNull(overlayWidth);
      let trackBottom = trackTop + trackHeight;
      return new ui.Rect.fromLTRB(math.min(core.double, trackLeft, trackRight), trackTop, math.max(core.double, trackLeft, trackRight), trackBottom);
    }
    paint(context, offset, opts) {
      let t12, t12$;
      if (context == null) dart.nullFailed(I[40], 1759, 21, "context");
      if (offset == null) dart.nullFailed(I[40], 1760, 12, "offset");
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[40], 1761, 24, "parentBox");
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[40], 1762, 30, "sliderTheme");
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      let startThumbCenter = opts && 'startThumbCenter' in opts ? opts.startThumbCenter : null;
      if (startThumbCenter == null) dart.nullFailed(I[40], 1764, 21, "startThumbCenter");
      let endThumbCenter = opts && 'endThumbCenter' in opts ? opts.endThumbCenter : null;
      if (endThumbCenter == null) dart.nullFailed(I[40], 1765, 21, "endThumbCenter");
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      if (isEnabled == null) dart.nullFailed(I[40], 1766, 10, "isEnabled");
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : false;
      if (isDiscrete == null) dart.nullFailed(I[40], 1767, 10, "isDiscrete");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (textDirection == null) dart.nullFailed(I[40], 1768, 28, "textDirection");
      if (!(context != null)) dart.assertFailed(null, I[40], 1770, 12, "context != null");
      if (!(offset != null)) dart.assertFailed(null, I[40], 1771, 12, "offset != null");
      if (!(parentBox != null)) dart.assertFailed(null, I[40], 1772, 12, "parentBox != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, I[40], 1773, 12, "sliderTheme != null");
      if (!(sliderTheme.disabledActiveTrackColor != null)) dart.assertFailed(null, I[40], 1774, 12, "sliderTheme.disabledActiveTrackColor != null");
      if (!(sliderTheme.disabledInactiveTrackColor != null)) dart.assertFailed(null, I[40], 1775, 12, "sliderTheme.disabledInactiveTrackColor != null");
      if (!(sliderTheme.activeTrackColor != null)) dart.assertFailed(null, I[40], 1776, 12, "sliderTheme.activeTrackColor != null");
      if (!(sliderTheme.inactiveTrackColor != null)) dart.assertFailed(null, I[40], 1777, 12, "sliderTheme.inactiveTrackColor != null");
      if (!(sliderTheme.rangeThumbShape != null)) dart.assertFailed(null, I[40], 1778, 12, "sliderTheme.rangeThumbShape != null");
      if (!(enableAnimation != null)) dart.assertFailed(null, I[40], 1779, 12, "enableAnimation != null");
      if (!(startThumbCenter != null)) dart.assertFailed(null, I[40], 1780, 12, "startThumbCenter != null");
      if (!(endThumbCenter != null)) dart.assertFailed(null, I[40], 1781, 12, "endThumbCenter != null");
      if (!(isEnabled != null)) dart.assertFailed(null, I[40], 1782, 12, "isEnabled != null");
      if (!(isDiscrete != null)) dart.assertFailed(null, I[40], 1783, 12, "isDiscrete != null");
      if (!(textDirection != null)) dart.assertFailed(null, I[40], 1784, 12, "textDirection != null");
      let activeTrackColorTween = new tween.ColorTween.new({begin: sliderTheme.disabledActiveTrackColor, end: sliderTheme.activeTrackColor});
      let inactiveTrackColorTween = new tween.ColorTween.new({begin: sliderTheme.disabledInactiveTrackColor, end: sliderTheme.inactiveTrackColor});
      let activePaint = (t12 = ui.Paint.new(), (() => {
        t12.color = dart.nullCheck(activeTrackColorTween.evaluate(dart.nullCheck(enableAnimation)));
        return t12;
      })());
      let inactivePaint = (t12$ = ui.Paint.new(), (() => {
        t12$.color = dart.nullCheck(inactiveTrackColorTween.evaluate(enableAnimation));
        return t12$;
      })());
      let leftThumbOffset = null;
      let rightThumbOffset = null;
      switch (textDirection) {
        case C[138] || CT.C138:
        {
          leftThumbOffset = startThumbCenter;
          rightThumbOffset = endThumbCenter;
          break;
        }
        case C[137] || CT.C137:
        {
          leftThumbOffset = endThumbCenter;
          rightThumbOffset = startThumbCenter;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      let trackRect = this.getPreferredRect({parentBox: parentBox, offset: offset, sliderTheme: sliderTheme, isEnabled: isEnabled, isDiscrete: isDiscrete});
      let leftTrackSegment = new ui.Rect.fromLTRB(trackRect.left, trackRect.top, leftThumbOffset.dx, trackRect.bottom);
      if (!dart.test(leftTrackSegment.isEmpty)) context.canvas.drawRect(leftTrackSegment, inactivePaint);
      let middleTrackSegment = new ui.Rect.fromLTRB(leftThumbOffset.dx, trackRect.top, rightThumbOffset.dx, trackRect.bottom);
      if (!dart.test(middleTrackSegment.isEmpty)) context.canvas.drawRect(middleTrackSegment, activePaint);
      let rightTrackSegment = new ui.Rect.fromLTRB(rightThumbOffset.dx, trackRect.top, trackRect.right, trackRect.bottom);
      if (!dart.test(rightTrackSegment.isEmpty)) context.canvas.drawRect(rightTrackSegment, inactivePaint);
    }
  };
  (slider_theme.RectangularRangeSliderTrackShape.new = function() {
    slider_theme.RectangularRangeSliderTrackShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RectangularRangeSliderTrackShape.prototype;
  dart.addTypeTests(slider_theme.RectangularRangeSliderTrackShape);
  dart.addTypeCaches(slider_theme.RectangularRangeSliderTrackShape);
  dart.setMethodSignature(slider_theme.RectangularRangeSliderTrackShape, () => ({
    __proto__: dart.getMethods(slider_theme.RectangularRangeSliderTrackShape.__proto__),
    getPreferredRect: dart.fnType(ui.Rect, [], {isDiscrete: core.bool, isEnabled: core.bool, offset: ui.Offset}, {parentBox: box$.RenderBox, sliderTheme: slider_theme.SliderThemeData}),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {isDiscrete: core.bool, isEnabled: core.bool}, {enableAnimation: dart.nullable(animation.Animation$(core.double)), endThumbCenter: ui.Offset, parentBox: box$.RenderBox, sliderTheme: slider_theme.SliderThemeData, startThumbCenter: ui.Offset, textDirection: ui.TextDirection})
  }));
  dart.setLibraryUri(slider_theme.RectangularRangeSliderTrackShape, I[41]);
  slider_theme.RoundedRectRangeSliderTrackShape = class RoundedRectRangeSliderTrackShape extends slider_theme.RangeSliderTrackShape {
    getPreferredRect(opts) {
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[40], 1859, 24, "parentBox");
      let offset = opts && 'offset' in opts ? opts.offset : C[266] || CT.C266;
      if (offset == null) dart.nullFailed(I[40], 1860, 12, "offset");
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[40], 1861, 30, "sliderTheme");
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      if (isEnabled == null) dart.nullFailed(I[40], 1862, 10, "isEnabled");
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : false;
      if (isDiscrete == null) dart.nullFailed(I[40], 1863, 10, "isDiscrete");
      if (!(parentBox != null)) dart.assertFailed(null, I[40], 1865, 12, "parentBox != null");
      if (!(offset != null)) dart.assertFailed(null, I[40], 1866, 12, "offset != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, I[40], 1867, 12, "sliderTheme != null");
      if (!(sliderTheme.overlayShape != null)) dart.assertFailed(null, I[40], 1868, 12, "sliderTheme.overlayShape != null");
      if (!(sliderTheme.trackHeight != null)) dart.assertFailed(null, I[40], 1869, 12, "sliderTheme.trackHeight != null");
      if (!(isEnabled != null)) dart.assertFailed(null, I[40], 1870, 12, "isEnabled != null");
      if (!(isDiscrete != null)) dart.assertFailed(null, I[40], 1871, 12, "isDiscrete != null");
      let overlayWidth = dart.nullCheck(sliderTheme.overlayShape).getPreferredSize(isEnabled, isDiscrete).width;
      let trackHeight = dart.nullCheck(sliderTheme.trackHeight);
      if (!(dart.notNull(overlayWidth) >= 0)) dart.assertFailed(null, I[40], 1874, 12, "overlayWidth >= 0");
      if (!(trackHeight >= 0)) dart.assertFailed(null, I[40], 1875, 12, "trackHeight >= 0");
      let trackLeft = dart.notNull(offset.dx) + dart.notNull(overlayWidth) / 2;
      let trackTop = dart.notNull(offset.dy) + (dart.notNull(parentBox.size.height) - trackHeight) / 2;
      let trackRight = trackLeft + dart.notNull(parentBox.size.width) - dart.notNull(overlayWidth);
      let trackBottom = trackTop + trackHeight;
      return new ui.Rect.fromLTRB(math.min(core.double, trackLeft, trackRight), trackTop, math.max(core.double, trackLeft, trackRight), trackBottom);
    }
    paint(context, offset, opts) {
      let t12, t12$;
      if (context == null) dart.nullFailed(I[40], 1887, 21, "context");
      if (offset == null) dart.nullFailed(I[40], 1888, 12, "offset");
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[40], 1889, 24, "parentBox");
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[40], 1890, 30, "sliderTheme");
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      if (enableAnimation == null) dart.nullFailed(I[40], 1891, 32, "enableAnimation");
      let startThumbCenter = opts && 'startThumbCenter' in opts ? opts.startThumbCenter : null;
      if (startThumbCenter == null) dart.nullFailed(I[40], 1892, 21, "startThumbCenter");
      let endThumbCenter = opts && 'endThumbCenter' in opts ? opts.endThumbCenter : null;
      if (endThumbCenter == null) dart.nullFailed(I[40], 1893, 21, "endThumbCenter");
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      if (isEnabled == null) dart.nullFailed(I[40], 1894, 10, "isEnabled");
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : false;
      if (isDiscrete == null) dart.nullFailed(I[40], 1895, 10, "isDiscrete");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (textDirection == null) dart.nullFailed(I[40], 1896, 28, "textDirection");
      let additionalActiveTrackHeight = opts && 'additionalActiveTrackHeight' in opts ? opts.additionalActiveTrackHeight : 2;
      if (additionalActiveTrackHeight == null) dart.nullFailed(I[40], 1897, 12, "additionalActiveTrackHeight");
      if (!(context != null)) dart.assertFailed(null, I[40], 1899, 12, "context != null");
      if (!(offset != null)) dart.assertFailed(null, I[40], 1900, 12, "offset != null");
      if (!(parentBox != null)) dart.assertFailed(null, I[40], 1901, 12, "parentBox != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, I[40], 1902, 12, "sliderTheme != null");
      if (!(sliderTheme.disabledActiveTrackColor != null)) dart.assertFailed(null, I[40], 1903, 12, "sliderTheme.disabledActiveTrackColor != null");
      if (!(sliderTheme.disabledInactiveTrackColor != null)) dart.assertFailed(null, I[40], 1904, 12, "sliderTheme.disabledInactiveTrackColor != null");
      if (!(sliderTheme.activeTrackColor != null)) dart.assertFailed(null, I[40], 1905, 12, "sliderTheme.activeTrackColor != null");
      if (!(sliderTheme.inactiveTrackColor != null)) dart.assertFailed(null, I[40], 1906, 12, "sliderTheme.inactiveTrackColor != null");
      if (!(sliderTheme.rangeThumbShape != null)) dart.assertFailed(null, I[40], 1907, 12, "sliderTheme.rangeThumbShape != null");
      if (!(enableAnimation != null)) dart.assertFailed(null, I[40], 1908, 12, "enableAnimation != null");
      if (!(startThumbCenter != null)) dart.assertFailed(null, I[40], 1909, 12, "startThumbCenter != null");
      if (!(endThumbCenter != null)) dart.assertFailed(null, I[40], 1910, 12, "endThumbCenter != null");
      if (!(isEnabled != null)) dart.assertFailed(null, I[40], 1911, 12, "isEnabled != null");
      if (!(isDiscrete != null)) dart.assertFailed(null, I[40], 1912, 12, "isDiscrete != null");
      if (!(textDirection != null)) dart.assertFailed(null, I[40], 1913, 12, "textDirection != null");
      if (sliderTheme.trackHeight == null || dart.nullCheck(sliderTheme.trackHeight) <= 0) {
        return;
      }
      let activeTrackColorTween = new tween.ColorTween.new({begin: sliderTheme.disabledActiveTrackColor, end: sliderTheme.activeTrackColor});
      let inactiveTrackColorTween = new tween.ColorTween.new({begin: sliderTheme.disabledInactiveTrackColor, end: sliderTheme.inactiveTrackColor});
      let activePaint = (t12 = ui.Paint.new(), (() => {
        t12.color = dart.nullCheck(activeTrackColorTween.evaluate(enableAnimation));
        return t12;
      })());
      let inactivePaint = (t12$ = ui.Paint.new(), (() => {
        t12$.color = dart.nullCheck(inactiveTrackColorTween.evaluate(enableAnimation));
        return t12$;
      })());
      let leftThumbOffset = null;
      let rightThumbOffset = null;
      switch (textDirection) {
        case C[138] || CT.C138:
        {
          leftThumbOffset = startThumbCenter;
          rightThumbOffset = endThumbCenter;
          break;
        }
        case C[137] || CT.C137:
        {
          leftThumbOffset = endThumbCenter;
          rightThumbOffset = startThumbCenter;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      let thumbSize = dart.nullCheck(sliderTheme.rangeThumbShape).getPreferredSize(isEnabled, isDiscrete);
      let thumbRadius = dart.notNull(thumbSize.width) / 2;
      if (!(thumbRadius > 0)) dart.assertFailed(null, I[40], 1948, 12, "thumbRadius > 0");
      let trackRect = this.getPreferredRect({parentBox: parentBox, offset: offset, sliderTheme: sliderTheme, isEnabled: isEnabled, isDiscrete: isDiscrete});
      let trackRadius = new ui.Radius.circular(dart.notNull(trackRect.height) / 2);
      context.canvas.drawRRect(new ui.RRect.fromLTRBAndCorners(trackRect.left, trackRect.top, leftThumbOffset.dx, trackRect.bottom, {topLeft: trackRadius, bottomLeft: trackRadius}), inactivePaint);
      context.canvas.drawRect(new ui.Rect.fromLTRB(leftThumbOffset.dx, dart.notNull(trackRect.top) - dart.notNull(additionalActiveTrackHeight) / 2, rightThumbOffset.dx, dart.notNull(trackRect.bottom) + dart.notNull(additionalActiveTrackHeight) / 2), activePaint);
      context.canvas.drawRRect(new ui.RRect.fromLTRBAndCorners(rightThumbOffset.dx, trackRect.top, trackRect.right, trackRect.bottom, {topRight: trackRadius, bottomRight: trackRadius}), inactivePaint);
    }
  };
  (slider_theme.RoundedRectRangeSliderTrackShape.new = function() {
    slider_theme.RoundedRectRangeSliderTrackShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RoundedRectRangeSliderTrackShape.prototype;
  dart.addTypeTests(slider_theme.RoundedRectRangeSliderTrackShape);
  dart.addTypeCaches(slider_theme.RoundedRectRangeSliderTrackShape);
  dart.setMethodSignature(slider_theme.RoundedRectRangeSliderTrackShape, () => ({
    __proto__: dart.getMethods(slider_theme.RoundedRectRangeSliderTrackShape.__proto__),
    getPreferredRect: dart.fnType(ui.Rect, [], {isDiscrete: core.bool, isEnabled: core.bool, offset: ui.Offset}, {parentBox: box$.RenderBox, sliderTheme: slider_theme.SliderThemeData}),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {additionalActiveTrackHeight: core.double, isDiscrete: core.bool, isEnabled: core.bool}, {enableAnimation: animation.Animation$(core.double), endThumbCenter: ui.Offset, parentBox: box$.RenderBox, sliderTheme: slider_theme.SliderThemeData, startThumbCenter: ui.Offset, textDirection: ui.TextDirection})
  }));
  dart.setLibraryUri(slider_theme.RoundedRectRangeSliderTrackShape, I[41]);
  slider_theme.RoundSliderTickMarkShape = class RoundSliderTickMarkShape extends slider_theme.SliderTickMarkShape {
    get tickMarkRadius() {
      return this[S.tickMarkRadius];
    }
    set tickMarkRadius(value) {
      super.tickMarkRadius = value;
    }
    getPreferredSize(opts) {
      let t12;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[40], 2028, 30, "sliderTheme");
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : null;
      if (isEnabled == null) dart.nullFailed(I[40], 2029, 19, "isEnabled");
      if (!(sliderTheme != null)) dart.assertFailed(null, I[40], 2031, 12, "sliderTheme != null");
      if (!(sliderTheme.trackHeight != null)) dart.assertFailed(null, I[40], 2032, 12, "sliderTheme.trackHeight != null");
      if (!(isEnabled != null)) dart.assertFailed(null, I[40], 2033, 12, "isEnabled != null");
      return new ui.Size.fromRadius((t12 = this.tickMarkRadius, t12 == null ? dart.nullCheck(sliderTheme.trackHeight) / 4 : t12));
    }
    paint(context, center, opts) {
      let t12;
      if (context == null) dart.nullFailed(I[40], 2042, 21, "context");
      if (center == null) dart.nullFailed(I[40], 2043, 12, "center");
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[40], 2044, 24, "parentBox");
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[40], 2045, 30, "sliderTheme");
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      if (enableAnimation == null) dart.nullFailed(I[40], 2046, 32, "enableAnimation");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (textDirection == null) dart.nullFailed(I[40], 2047, 28, "textDirection");
      let thumbCenter = opts && 'thumbCenter' in opts ? opts.thumbCenter : null;
      if (thumbCenter == null) dart.nullFailed(I[40], 2048, 21, "thumbCenter");
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : null;
      if (isEnabled == null) dart.nullFailed(I[40], 2049, 19, "isEnabled");
      if (!(context != null)) dart.assertFailed(null, I[40], 2051, 12, "context != null");
      if (!(center != null)) dart.assertFailed(null, I[40], 2052, 12, "center != null");
      if (!(parentBox != null)) dart.assertFailed(null, I[40], 2053, 12, "parentBox != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, I[40], 2054, 12, "sliderTheme != null");
      if (!(sliderTheme.disabledActiveTickMarkColor != null)) dart.assertFailed(null, I[40], 2055, 12, "sliderTheme.disabledActiveTickMarkColor != null");
      if (!(sliderTheme.disabledInactiveTickMarkColor != null)) dart.assertFailed(null, I[40], 2056, 12, "sliderTheme.disabledInactiveTickMarkColor != null");
      if (!(sliderTheme.activeTickMarkColor != null)) dart.assertFailed(null, I[40], 2057, 12, "sliderTheme.activeTickMarkColor != null");
      if (!(sliderTheme.inactiveTickMarkColor != null)) dart.assertFailed(null, I[40], 2058, 12, "sliderTheme.inactiveTickMarkColor != null");
      if (!(enableAnimation != null)) dart.assertFailed(null, I[40], 2059, 12, "enableAnimation != null");
      if (!(textDirection != null)) dart.assertFailed(null, I[40], 2060, 12, "textDirection != null");
      if (!(thumbCenter != null)) dart.assertFailed(null, I[40], 2061, 12, "thumbCenter != null");
      if (!(isEnabled != null)) dart.assertFailed(null, I[40], 2062, 12, "isEnabled != null");
      let begin = null;
      let end = null;
      switch (textDirection) {
        case C[138] || CT.C138:
        {
          let isTickMarkRightOfThumb = dart.notNull(center.dx) > dart.notNull(thumbCenter.dx);
          begin = isTickMarkRightOfThumb ? sliderTheme.disabledInactiveTickMarkColor : sliderTheme.disabledActiveTickMarkColor;
          end = isTickMarkRightOfThumb ? sliderTheme.inactiveTickMarkColor : sliderTheme.activeTickMarkColor;
          break;
        }
        case C[137] || CT.C137:
        {
          let isTickMarkLeftOfThumb = dart.notNull(center.dx) < dart.notNull(thumbCenter.dx);
          begin = isTickMarkLeftOfThumb ? sliderTheme.disabledInactiveTickMarkColor : sliderTheme.disabledActiveTickMarkColor;
          end = isTickMarkLeftOfThumb ? sliderTheme.inactiveTickMarkColor : sliderTheme.activeTickMarkColor;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      let paint = (t12 = ui.Paint.new(), (() => {
        t12.color = dart.nullCheck(new tween.ColorTween.new({begin: begin, end: end}).evaluate(enableAnimation));
        return t12;
      })());
      let tickMarkRadius = dart.notNull(this.getPreferredSize({isEnabled: isEnabled, sliderTheme: sliderTheme}).width) / 2;
      if (tickMarkRadius > 0) {
        context.canvas.drawCircle(center, tickMarkRadius, paint);
      }
    }
  };
  (slider_theme.RoundSliderTickMarkShape.new = function(opts) {
    let tickMarkRadius = opts && 'tickMarkRadius' in opts ? opts.tickMarkRadius : null;
    this[S.tickMarkRadius] = tickMarkRadius;
    slider_theme.RoundSliderTickMarkShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RoundSliderTickMarkShape.prototype;
  dart.addTypeTests(slider_theme.RoundSliderTickMarkShape);
  dart.addTypeCaches(slider_theme.RoundSliderTickMarkShape);
  dart.setMethodSignature(slider_theme.RoundSliderTickMarkShape, () => ({
    __proto__: dart.getMethods(slider_theme.RoundSliderTickMarkShape.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [], {}, {isEnabled: core.bool, sliderTheme: slider_theme.SliderThemeData}),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {}, {enableAnimation: animation.Animation$(core.double), isEnabled: core.bool, parentBox: box$.RenderBox, sliderTheme: slider_theme.SliderThemeData, textDirection: ui.TextDirection, thumbCenter: ui.Offset})
  }));
  dart.setLibraryUri(slider_theme.RoundSliderTickMarkShape, I[41]);
  dart.setFieldSignature(slider_theme.RoundSliderTickMarkShape, () => ({
    __proto__: dart.getFields(slider_theme.RoundSliderTickMarkShape.__proto__),
    tickMarkRadius: dart.finalFieldType(dart.nullable(core.double))
  }));
  slider_theme.RoundRangeSliderTickMarkShape = class RoundRangeSliderTickMarkShape extends slider_theme.RangeSliderTickMarkShape {
    get tickMarkRadius() {
      return this[S.tickMarkRadius$1];
    }
    set tickMarkRadius(value) {
      super.tickMarkRadius = value;
    }
    getPreferredSize(opts) {
      let t12;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[40], 2126, 30, "sliderTheme");
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      if (isEnabled == null) dart.nullFailed(I[40], 2127, 10, "isEnabled");
      if (!(sliderTheme != null)) dart.assertFailed(null, I[40], 2129, 12, "sliderTheme != null");
      if (!(sliderTheme.trackHeight != null)) dart.assertFailed(null, I[40], 2130, 12, "sliderTheme.trackHeight != null");
      if (!(isEnabled != null)) dart.assertFailed(null, I[40], 2131, 12, "isEnabled != null");
      return new ui.Size.fromRadius((t12 = this.tickMarkRadius, t12 == null ? dart.nullCheck(sliderTheme.trackHeight) / 4 : t12));
    }
    paint(context, center, opts) {
      let t12;
      if (context == null) dart.nullFailed(I[40], 2137, 21, "context");
      if (center == null) dart.nullFailed(I[40], 2138, 12, "center");
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[40], 2139, 24, "parentBox");
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[40], 2140, 30, "sliderTheme");
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      if (enableAnimation == null) dart.nullFailed(I[40], 2141, 32, "enableAnimation");
      let startThumbCenter = opts && 'startThumbCenter' in opts ? opts.startThumbCenter : null;
      if (startThumbCenter == null) dart.nullFailed(I[40], 2142, 21, "startThumbCenter");
      let endThumbCenter = opts && 'endThumbCenter' in opts ? opts.endThumbCenter : null;
      if (endThumbCenter == null) dart.nullFailed(I[40], 2143, 21, "endThumbCenter");
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      if (isEnabled == null) dart.nullFailed(I[40], 2144, 10, "isEnabled");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (textDirection == null) dart.nullFailed(I[40], 2145, 28, "textDirection");
      if (!(context != null)) dart.assertFailed(null, I[40], 2147, 12, "context != null");
      if (!(center != null)) dart.assertFailed(null, I[40], 2148, 12, "center != null");
      if (!(parentBox != null)) dart.assertFailed(null, I[40], 2149, 12, "parentBox != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, I[40], 2150, 12, "sliderTheme != null");
      if (!(sliderTheme.disabledActiveTickMarkColor != null)) dart.assertFailed(null, I[40], 2151, 12, "sliderTheme.disabledActiveTickMarkColor != null");
      if (!(sliderTheme.disabledInactiveTickMarkColor != null)) dart.assertFailed(null, I[40], 2152, 12, "sliderTheme.disabledInactiveTickMarkColor != null");
      if (!(sliderTheme.activeTickMarkColor != null)) dart.assertFailed(null, I[40], 2153, 12, "sliderTheme.activeTickMarkColor != null");
      if (!(sliderTheme.inactiveTickMarkColor != null)) dart.assertFailed(null, I[40], 2154, 12, "sliderTheme.inactiveTickMarkColor != null");
      if (!(enableAnimation != null)) dart.assertFailed(null, I[40], 2155, 12, "enableAnimation != null");
      if (!(startThumbCenter != null)) dart.assertFailed(null, I[40], 2156, 12, "startThumbCenter != null");
      if (!(endThumbCenter != null)) dart.assertFailed(null, I[40], 2157, 12, "endThumbCenter != null");
      if (!(isEnabled != null)) dart.assertFailed(null, I[40], 2158, 12, "isEnabled != null");
      if (!(textDirection != null)) dart.assertFailed(null, I[40], 2159, 12, "textDirection != null");
      let isBetweenThumbs = null;
      switch (textDirection) {
        case C[138] || CT.C138:
        {
          isBetweenThumbs = dart.notNull(startThumbCenter.dx) < dart.notNull(center.dx) && dart.notNull(center.dx) < dart.notNull(endThumbCenter.dx);
          break;
        }
        case C[137] || CT.C137:
        {
          isBetweenThumbs = dart.notNull(endThumbCenter.dx) < dart.notNull(center.dx) && dart.notNull(center.dx) < dart.notNull(startThumbCenter.dx);
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      let begin = dart.test(isBetweenThumbs) ? sliderTheme.disabledActiveTickMarkColor : sliderTheme.disabledInactiveTickMarkColor;
      let end = dart.test(isBetweenThumbs) ? sliderTheme.activeTickMarkColor : sliderTheme.inactiveTickMarkColor;
      let paint = (t12 = ui.Paint.new(), (() => {
        t12.color = dart.nullCheck(new tween.ColorTween.new({begin: begin, end: end}).evaluate(enableAnimation));
        return t12;
      })());
      let tickMarkRadius = dart.notNull(this.getPreferredSize({isEnabled: isEnabled, sliderTheme: sliderTheme}).width) / 2;
      if (tickMarkRadius > 0) {
        context.canvas.drawCircle(center, tickMarkRadius, paint);
      }
    }
  };
  (slider_theme.RoundRangeSliderTickMarkShape.new = function(opts) {
    let tickMarkRadius = opts && 'tickMarkRadius' in opts ? opts.tickMarkRadius : null;
    this[S.tickMarkRadius$1] = tickMarkRadius;
    slider_theme.RoundRangeSliderTickMarkShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RoundRangeSliderTickMarkShape.prototype;
  dart.addTypeTests(slider_theme.RoundRangeSliderTickMarkShape);
  dart.addTypeCaches(slider_theme.RoundRangeSliderTickMarkShape);
  dart.setMethodSignature(slider_theme.RoundRangeSliderTickMarkShape, () => ({
    __proto__: dart.getMethods(slider_theme.RoundRangeSliderTickMarkShape.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [], {isEnabled: core.bool}, {sliderTheme: slider_theme.SliderThemeData}),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {isEnabled: core.bool}, {enableAnimation: animation.Animation$(core.double), endThumbCenter: ui.Offset, parentBox: box$.RenderBox, sliderTheme: slider_theme.SliderThemeData, startThumbCenter: ui.Offset, textDirection: ui.TextDirection})
  }));
  dart.setLibraryUri(slider_theme.RoundRangeSliderTickMarkShape, I[41]);
  dart.setFieldSignature(slider_theme.RoundRangeSliderTickMarkShape, () => ({
    __proto__: dart.getFields(slider_theme.RoundRangeSliderTickMarkShape.__proto__),
    tickMarkRadius: dart.finalFieldType(dart.nullable(core.double))
  }));
  slider_theme._EmptySliderTickMarkShape = class _EmptySliderTickMarkShape extends slider_theme.SliderTickMarkShape {
    getPreferredSize(opts) {
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[40], 2195, 30, "sliderTheme");
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : null;
      if (isEnabled == null) dart.nullFailed(I[40], 2196, 19, "isEnabled");
      return ui.Size.zero;
    }
    paint(context, center, opts) {
      if (context == null) dart.nullFailed(I[40], 2203, 21, "context");
      if (center == null) dart.nullFailed(I[40], 2204, 12, "center");
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[40], 2205, 24, "parentBox");
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[40], 2206, 30, "sliderTheme");
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      if (enableAnimation == null) dart.nullFailed(I[40], 2207, 32, "enableAnimation");
      let thumbCenter = opts && 'thumbCenter' in opts ? opts.thumbCenter : null;
      if (thumbCenter == null) dart.nullFailed(I[40], 2208, 21, "thumbCenter");
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : null;
      if (isEnabled == null) dart.nullFailed(I[40], 2209, 19, "isEnabled");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (textDirection == null) dart.nullFailed(I[40], 2210, 28, "textDirection");
    }
  };
  (slider_theme._EmptySliderTickMarkShape.new = function() {
    slider_theme._EmptySliderTickMarkShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme._EmptySliderTickMarkShape.prototype;
  dart.addTypeTests(slider_theme._EmptySliderTickMarkShape);
  dart.addTypeCaches(slider_theme._EmptySliderTickMarkShape);
  dart.setMethodSignature(slider_theme._EmptySliderTickMarkShape, () => ({
    __proto__: dart.getMethods(slider_theme._EmptySliderTickMarkShape.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [], {}, {isEnabled: core.bool, sliderTheme: slider_theme.SliderThemeData}),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {}, {enableAnimation: animation.Animation$(core.double), isEnabled: core.bool, parentBox: box$.RenderBox, sliderTheme: slider_theme.SliderThemeData, textDirection: ui.TextDirection, thumbCenter: ui.Offset})
  }));
  dart.setLibraryUri(slider_theme._EmptySliderTickMarkShape, I[41]);
  slider_theme._EmptySliderComponentShape = class _EmptySliderComponentShape extends slider_theme.SliderComponentShape {
    getPreferredSize(isEnabled, isDiscrete) {
      if (isEnabled == null) dart.nullFailed(I[40], 2227, 30, "isEnabled");
      if (isDiscrete == null) dart.nullFailed(I[40], 2227, 46, "isDiscrete");
      return ui.Size.zero;
    }
    paint(context, center, opts) {
      if (context == null) dart.nullFailed(I[40], 2231, 21, "context");
      if (center == null) dart.nullFailed(I[40], 2232, 12, "center");
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      if (activationAnimation == null) dart.nullFailed(I[40], 2233, 32, "activationAnimation");
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      if (enableAnimation == null) dart.nullFailed(I[40], 2234, 32, "enableAnimation");
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : null;
      if (isDiscrete == null) dart.nullFailed(I[40], 2235, 19, "isDiscrete");
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      if (labelPainter == null) dart.nullFailed(I[40], 2236, 26, "labelPainter");
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[40], 2237, 24, "parentBox");
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[40], 2238, 30, "sliderTheme");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (textDirection == null) dart.nullFailed(I[40], 2239, 28, "textDirection");
      let value = opts && 'value' in opts ? opts.value : null;
      if (value == null) dart.nullFailed(I[40], 2240, 21, "value");
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      if (textScaleFactor == null) dart.nullFailed(I[40], 2241, 21, "textScaleFactor");
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      if (sizeWithOverflow == null) dart.nullFailed(I[40], 2242, 19, "sizeWithOverflow");
    }
  };
  (slider_theme._EmptySliderComponentShape.new = function() {
    slider_theme._EmptySliderComponentShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme._EmptySliderComponentShape.prototype;
  dart.addTypeTests(slider_theme._EmptySliderComponentShape);
  dart.addTypeCaches(slider_theme._EmptySliderComponentShape);
  dart.setMethodSignature(slider_theme._EmptySliderComponentShape, () => ({
    __proto__: dart.getMethods(slider_theme._EmptySliderComponentShape.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [core.bool, core.bool]),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {}, {activationAnimation: animation.Animation$(core.double), enableAnimation: animation.Animation$(core.double), isDiscrete: core.bool, labelPainter: text_painter.TextPainter, parentBox: box$.RenderBox, sizeWithOverflow: ui.Size, sliderTheme: slider_theme.SliderThemeData, textDirection: ui.TextDirection, textScaleFactor: core.double, value: core.double})
  }));
  dart.setLibraryUri(slider_theme._EmptySliderComponentShape, I[41]);
  slider_theme.RoundSliderThumbShape = class RoundSliderThumbShape extends slider_theme.SliderComponentShape {
    get enabledThumbRadius() {
      return this[S.enabledThumbRadius];
    }
    set enabledThumbRadius(value) {
      super.enabledThumbRadius = value;
    }
    get disabledThumbRadius() {
      return this[S.disabledThumbRadius];
    }
    set disabledThumbRadius(value) {
      super.disabledThumbRadius = value;
    }
    get elevation() {
      return this[S.elevation$3];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get pressedElevation() {
      return this[S.pressedElevation];
    }
    set pressedElevation(value) {
      super.pressedElevation = value;
    }
    get [S._disabledThumbRadius]() {
      let t12;
      t12 = this.disabledThumbRadius;
      return t12 == null ? this.enabledThumbRadius : t12;
    }
    getPreferredSize(isEnabled, isDiscrete) {
      if (isEnabled == null) dart.nullFailed(I[40], 2299, 30, "isEnabled");
      if (isDiscrete == null) dart.nullFailed(I[40], 2299, 46, "isDiscrete");
      return new ui.Size.fromRadius(isEnabled === true ? this.enabledThumbRadius : this[S._disabledThumbRadius]);
    }
    paint(context, center, opts) {
      let t12, t12$;
      if (context == null) dart.nullFailed(I[40], 2305, 21, "context");
      if (center == null) dart.nullFailed(I[40], 2306, 12, "center");
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      if (activationAnimation == null) dart.nullFailed(I[40], 2307, 32, "activationAnimation");
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      if (enableAnimation == null) dart.nullFailed(I[40], 2308, 32, "enableAnimation");
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : null;
      if (isDiscrete == null) dart.nullFailed(I[40], 2309, 19, "isDiscrete");
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      if (labelPainter == null) dart.nullFailed(I[40], 2310, 26, "labelPainter");
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[40], 2311, 24, "parentBox");
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[40], 2312, 30, "sliderTheme");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (textDirection == null) dart.nullFailed(I[40], 2313, 28, "textDirection");
      let value = opts && 'value' in opts ? opts.value : null;
      if (value == null) dart.nullFailed(I[40], 2314, 21, "value");
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      if (textScaleFactor == null) dart.nullFailed(I[40], 2315, 21, "textScaleFactor");
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      if (sizeWithOverflow == null) dart.nullFailed(I[40], 2316, 19, "sizeWithOverflow");
      if (!(context != null)) dart.assertFailed(null, I[40], 2318, 12, "context != null");
      if (!(center != null)) dart.assertFailed(null, I[40], 2319, 12, "center != null");
      if (!(enableAnimation != null)) dart.assertFailed(null, I[40], 2320, 12, "enableAnimation != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, I[40], 2321, 12, "sliderTheme != null");
      if (!(sliderTheme.disabledThumbColor != null)) dart.assertFailed(null, I[40], 2322, 12, "sliderTheme.disabledThumbColor != null");
      if (!(sliderTheme.thumbColor != null)) dart.assertFailed(null, I[40], 2323, 12, "sliderTheme.thumbColor != null");
      let canvas = context.canvas;
      let radiusTween = new (T$.TweenOfdouble()).new({begin: this[S._disabledThumbRadius], end: this.enabledThumbRadius});
      let colorTween = new tween.ColorTween.new({begin: sliderTheme.disabledThumbColor, end: sliderTheme.thumbColor});
      let color = dart.nullCheck(colorTween.evaluate(enableAnimation));
      let radius = radiusTween.evaluate(enableAnimation);
      let elevationTween = new (T$.TweenOfdouble()).new({begin: this.elevation, end: this.pressedElevation});
      let evaluatedElevation = elevationTween.evaluate(activationAnimation);
      let path = (t12 = ui.Path.new(), (() => {
        t12.addArc(new ui.Rect.fromCenter({center: center, width: 2 * dart.notNull(radius), height: 2 * dart.notNull(radius)}), 0.0, 3.141592653589793 * 2);
        return t12;
      })());
      canvas.drawShadow(path, colors$.Colors.black, evaluatedElevation, true);
      canvas.drawCircle(center, radius, (t12$ = ui.Paint.new(), (() => {
        t12$.color = color;
        return t12$;
      })()));
    }
  };
  (slider_theme.RoundSliderThumbShape.new = function(opts) {
    let enabledThumbRadius = opts && 'enabledThumbRadius' in opts ? opts.enabledThumbRadius : 10;
    if (enabledThumbRadius == null) dart.nullFailed(I[40], 2263, 10, "enabledThumbRadius");
    let disabledThumbRadius = opts && 'disabledThumbRadius' in opts ? opts.disabledThumbRadius : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : 1;
    if (elevation == null) dart.nullFailed(I[40], 2265, 10, "elevation");
    let pressedElevation = opts && 'pressedElevation' in opts ? opts.pressedElevation : 6;
    if (pressedElevation == null) dart.nullFailed(I[40], 2266, 10, "pressedElevation");
    this[S.enabledThumbRadius] = enabledThumbRadius;
    this[S.disabledThumbRadius] = disabledThumbRadius;
    this[S.elevation$3] = elevation;
    this[S.pressedElevation] = pressedElevation;
    slider_theme.RoundSliderThumbShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RoundSliderThumbShape.prototype;
  dart.addTypeTests(slider_theme.RoundSliderThumbShape);
  dart.addTypeCaches(slider_theme.RoundSliderThumbShape);
  dart.setMethodSignature(slider_theme.RoundSliderThumbShape, () => ({
    __proto__: dart.getMethods(slider_theme.RoundSliderThumbShape.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [core.bool, core.bool]),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {}, {activationAnimation: animation.Animation$(core.double), enableAnimation: animation.Animation$(core.double), isDiscrete: core.bool, labelPainter: text_painter.TextPainter, parentBox: box$.RenderBox, sizeWithOverflow: ui.Size, sliderTheme: slider_theme.SliderThemeData, textDirection: ui.TextDirection, textScaleFactor: core.double, value: core.double})
  }));
  dart.setGetterSignature(slider_theme.RoundSliderThumbShape, () => ({
    __proto__: dart.getGetters(slider_theme.RoundSliderThumbShape.__proto__),
    [S._disabledThumbRadius]: core.double
  }));
  dart.setLibraryUri(slider_theme.RoundSliderThumbShape, I[41]);
  dart.setFieldSignature(slider_theme.RoundSliderThumbShape, () => ({
    __proto__: dart.getFields(slider_theme.RoundSliderThumbShape.__proto__),
    enabledThumbRadius: dart.finalFieldType(core.double),
    disabledThumbRadius: dart.finalFieldType(dart.nullable(core.double)),
    elevation: dart.finalFieldType(core.double),
    pressedElevation: dart.finalFieldType(core.double)
  }));
  slider_theme.RoundRangeSliderThumbShape = class RoundRangeSliderThumbShape extends slider_theme.RangeSliderThumbShape {
    get enabledThumbRadius() {
      return this[S.enabledThumbRadius$1];
    }
    set enabledThumbRadius(value) {
      super.enabledThumbRadius = value;
    }
    get disabledThumbRadius() {
      return this[S.disabledThumbRadius$1];
    }
    set disabledThumbRadius(value) {
      super.disabledThumbRadius = value;
    }
    get elevation() {
      return this[S.elevation$4];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get pressedElevation() {
      return this[S.pressedElevation$1];
    }
    set pressedElevation(value) {
      super.pressedElevation = value;
    }
    get [S._disabledThumbRadius]() {
      let t12;
      t12 = this.disabledThumbRadius;
      return t12 == null ? this.enabledThumbRadius : t12;
    }
    getPreferredSize(isEnabled, isDiscrete) {
      if (isEnabled == null) dart.nullFailed(I[40], 2400, 30, "isEnabled");
      if (isDiscrete == null) dart.nullFailed(I[40], 2400, 46, "isDiscrete");
      return new ui.Size.fromRadius(isEnabled === true ? this.enabledThumbRadius : this[S._disabledThumbRadius]);
    }
    paint(context, center, opts) {
      let t12, t12$, t12$0;
      if (context == null) dart.nullFailed(I[40], 2406, 21, "context");
      if (center == null) dart.nullFailed(I[40], 2407, 12, "center");
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      if (activationAnimation == null) dart.nullFailed(I[40], 2408, 32, "activationAnimation");
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      if (enableAnimation == null) dart.nullFailed(I[40], 2409, 32, "enableAnimation");
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : false;
      if (isDiscrete == null) dart.nullFailed(I[40], 2410, 10, "isDiscrete");
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      if (isEnabled == null) dart.nullFailed(I[40], 2411, 10, "isEnabled");
      let isOnTop = opts && 'isOnTop' in opts ? opts.isOnTop : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[40], 2413, 30, "sliderTheme");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let thumb = opts && 'thumb' in opts ? opts.thumb : null;
      let isPressed = opts && 'isPressed' in opts ? opts.isPressed : null;
      if (!(context != null)) dart.assertFailed(null, I[40], 2418, 12, "context != null");
      if (!(center != null)) dart.assertFailed(null, I[40], 2419, 12, "center != null");
      if (!(activationAnimation != null)) dart.assertFailed(null, I[40], 2420, 12, "activationAnimation != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, I[40], 2421, 12, "sliderTheme != null");
      if (!(sliderTheme.showValueIndicator != null)) dart.assertFailed(null, I[40], 2422, 12, "sliderTheme.showValueIndicator != null");
      if (!(sliderTheme.overlappingShapeStrokeColor != null)) dart.assertFailed(null, I[40], 2423, 12, "sliderTheme.overlappingShapeStrokeColor != null");
      if (!(enableAnimation != null)) dart.assertFailed(null, I[40], 2424, 12, "enableAnimation != null");
      let canvas = context.canvas;
      let radiusTween = new (T$.TweenOfdouble()).new({begin: this[S._disabledThumbRadius], end: this.enabledThumbRadius});
      let colorTween = new tween.ColorTween.new({begin: sliderTheme.disabledThumbColor, end: sliderTheme.thumbColor});
      let radius = radiusTween.evaluate(enableAnimation);
      let elevationTween = new (T$.TweenOfdouble()).new({begin: this.elevation, end: this.pressedElevation});
      if (isOnTop === true) {
        let strokePaint = (t12 = ui.Paint.new(), (() => {
          t12.color = dart.nullCheck(sliderTheme.overlappingShapeStrokeColor);
          t12.strokeWidth = 1.0;
          t12.style = ui.PaintingStyle.stroke;
          return t12;
        })());
        canvas.drawCircle(center, radius, strokePaint);
      }
      let color = dart.nullCheck(colorTween.evaluate(enableAnimation));
      let evaluatedElevation = dart.nullCheck(isPressed) ? elevationTween.evaluate(activationAnimation) : this.elevation;
      let shadowPath = (t12$ = ui.Path.new(), (() => {
        t12$.addArc(new ui.Rect.fromCenter({center: center, width: 2 * dart.notNull(radius), height: 2 * dart.notNull(radius)}), 0.0, 3.141592653589793 * 2);
        return t12$;
      })());
      canvas.drawShadow(shadowPath, colors$.Colors.black, evaluatedElevation, true);
      canvas.drawCircle(center, radius, (t12$0 = ui.Paint.new(), (() => {
        t12$0.color = color;
        return t12$0;
      })()));
    }
  };
  (slider_theme.RoundRangeSliderThumbShape.new = function(opts) {
    let enabledThumbRadius = opts && 'enabledThumbRadius' in opts ? opts.enabledThumbRadius : 10;
    if (enabledThumbRadius == null) dart.nullFailed(I[40], 2371, 10, "enabledThumbRadius");
    let disabledThumbRadius = opts && 'disabledThumbRadius' in opts ? opts.disabledThumbRadius : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : 1;
    if (elevation == null) dart.nullFailed(I[40], 2373, 10, "elevation");
    let pressedElevation = opts && 'pressedElevation' in opts ? opts.pressedElevation : 6;
    if (pressedElevation == null) dart.nullFailed(I[40], 2374, 10, "pressedElevation");
    this[S.enabledThumbRadius$1] = enabledThumbRadius;
    this[S.disabledThumbRadius$1] = disabledThumbRadius;
    this[S.elevation$4] = elevation;
    this[S.pressedElevation$1] = pressedElevation;
    if (!(enabledThumbRadius != null)) dart.assertFailed(null, I[40], 2375, 15, "enabledThumbRadius != null");
    slider_theme.RoundRangeSliderThumbShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RoundRangeSliderThumbShape.prototype;
  dart.addTypeTests(slider_theme.RoundRangeSliderThumbShape);
  dart.addTypeCaches(slider_theme.RoundRangeSliderThumbShape);
  dart.setMethodSignature(slider_theme.RoundRangeSliderThumbShape, () => ({
    __proto__: dart.getMethods(slider_theme.RoundRangeSliderThumbShape.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [core.bool, core.bool]),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {isDiscrete: core.bool, isEnabled: core.bool, isOnTop: dart.nullable(core.bool), isPressed: dart.nullable(core.bool), textDirection: dart.nullable(ui.TextDirection), thumb: dart.nullable(slider_theme.Thumb)}, {activationAnimation: animation.Animation$(core.double), enableAnimation: animation.Animation$(core.double), sliderTheme: slider_theme.SliderThemeData})
  }));
  dart.setGetterSignature(slider_theme.RoundRangeSliderThumbShape, () => ({
    __proto__: dart.getGetters(slider_theme.RoundRangeSliderThumbShape.__proto__),
    [S._disabledThumbRadius]: core.double
  }));
  dart.setLibraryUri(slider_theme.RoundRangeSliderThumbShape, I[41]);
  dart.setFieldSignature(slider_theme.RoundRangeSliderThumbShape, () => ({
    __proto__: dart.getFields(slider_theme.RoundRangeSliderThumbShape.__proto__),
    enabledThumbRadius: dart.finalFieldType(core.double),
    disabledThumbRadius: dart.finalFieldType(dart.nullable(core.double)),
    elevation: dart.finalFieldType(core.double),
    pressedElevation: dart.finalFieldType(core.double)
  }));
  slider_theme.RoundSliderOverlayShape = class RoundSliderOverlayShape extends slider_theme.SliderComponentShape {
    get overlayRadius() {
      return this[S.overlayRadius];
    }
    set overlayRadius(value) {
      super.overlayRadius = value;
    }
    getPreferredSize(isEnabled, isDiscrete) {
      if (isEnabled == null) dart.nullFailed(I[40], 2491, 30, "isEnabled");
      if (isDiscrete == null) dart.nullFailed(I[40], 2491, 46, "isDiscrete");
      return new ui.Size.fromRadius(this.overlayRadius);
    }
    paint(context, center, opts) {
      let t12;
      if (context == null) dart.nullFailed(I[40], 2497, 21, "context");
      if (center == null) dart.nullFailed(I[40], 2498, 12, "center");
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      if (activationAnimation == null) dart.nullFailed(I[40], 2499, 32, "activationAnimation");
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      if (enableAnimation == null) dart.nullFailed(I[40], 2500, 32, "enableAnimation");
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : null;
      if (isDiscrete == null) dart.nullFailed(I[40], 2501, 19, "isDiscrete");
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      if (labelPainter == null) dart.nullFailed(I[40], 2502, 26, "labelPainter");
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[40], 2503, 24, "parentBox");
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[40], 2504, 30, "sliderTheme");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (textDirection == null) dart.nullFailed(I[40], 2505, 28, "textDirection");
      let value = opts && 'value' in opts ? opts.value : null;
      if (value == null) dart.nullFailed(I[40], 2506, 21, "value");
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      if (textScaleFactor == null) dart.nullFailed(I[40], 2507, 21, "textScaleFactor");
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      if (sizeWithOverflow == null) dart.nullFailed(I[40], 2508, 19, "sizeWithOverflow");
      if (!(context != null)) dart.assertFailed(null, I[40], 2510, 12, "context != null");
      if (!(center != null)) dart.assertFailed(null, I[40], 2511, 12, "center != null");
      if (!(activationAnimation != null)) dart.assertFailed(null, I[40], 2512, 12, "activationAnimation != null");
      if (!(enableAnimation != null)) dart.assertFailed(null, I[40], 2513, 12, "enableAnimation != null");
      if (!(labelPainter != null)) dart.assertFailed(null, I[40], 2514, 12, "labelPainter != null");
      if (!(parentBox != null)) dart.assertFailed(null, I[40], 2515, 12, "parentBox != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, I[40], 2516, 12, "sliderTheme != null");
      if (!(textDirection != null)) dart.assertFailed(null, I[40], 2517, 12, "textDirection != null");
      if (!(value != null)) dart.assertFailed(null, I[40], 2518, 12, "value != null");
      let canvas = context.canvas;
      let radiusTween = new (T$.TweenOfdouble()).new({begin: 0.0, end: this.overlayRadius});
      canvas.drawCircle(center, radiusTween.evaluate(activationAnimation), (t12 = ui.Paint.new(), (() => {
        t12.color = dart.nullCheck(sliderTheme.overlayColor);
        return t12;
      })()));
    }
  };
  (slider_theme.RoundSliderOverlayShape.new = function(opts) {
    let overlayRadius = opts && 'overlayRadius' in opts ? opts.overlayRadius : 24;
    if (overlayRadius == null) dart.nullFailed(I[40], 2482, 40, "overlayRadius");
    this[S.overlayRadius] = overlayRadius;
    slider_theme.RoundSliderOverlayShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RoundSliderOverlayShape.prototype;
  dart.addTypeTests(slider_theme.RoundSliderOverlayShape);
  dart.addTypeCaches(slider_theme.RoundSliderOverlayShape);
  dart.setMethodSignature(slider_theme.RoundSliderOverlayShape, () => ({
    __proto__: dart.getMethods(slider_theme.RoundSliderOverlayShape.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [core.bool, core.bool]),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {}, {activationAnimation: animation.Animation$(core.double), enableAnimation: animation.Animation$(core.double), isDiscrete: core.bool, labelPainter: text_painter.TextPainter, parentBox: box$.RenderBox, sizeWithOverflow: ui.Size, sliderTheme: slider_theme.SliderThemeData, textDirection: ui.TextDirection, textScaleFactor: core.double, value: core.double})
  }));
  dart.setLibraryUri(slider_theme.RoundSliderOverlayShape, I[41]);
  dart.setFieldSignature(slider_theme.RoundSliderOverlayShape, () => ({
    __proto__: dart.getFields(slider_theme.RoundSliderOverlayShape.__proto__),
    overlayRadius: dart.finalFieldType(core.double)
  }));
  slider_theme.RectangularSliderValueIndicatorShape = class RectangularSliderValueIndicatorShape extends slider_theme.SliderComponentShape {
    getPreferredSize(isEnabled, isDiscrete, opts) {
      if (isEnabled == null) dart.nullFailed(I[40], 2552, 10, "isEnabled");
      if (isDiscrete == null) dart.nullFailed(I[40], 2553, 10, "isDiscrete");
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      if (!(labelPainter != null)) dart.assertFailed(null, I[40], 2557, 12, "labelPainter != null");
      if (!(textScaleFactor != null && dart.notNull(textScaleFactor) >= 0)) dart.assertFailed(null, I[40], 2558, 12, "textScaleFactor != null && textScaleFactor >= 0");
      return slider_theme.RectangularSliderValueIndicatorShape._pathPainter.getPreferredSize(dart.nullCheck(labelPainter), dart.nullCheck(textScaleFactor));
    }
    paint(context, center, opts) {
      if (context == null) dart.nullFailed(I[40], 2564, 21, "context");
      if (center == null) dart.nullFailed(I[40], 2565, 12, "center");
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      if (activationAnimation == null) dart.nullFailed(I[40], 2566, 32, "activationAnimation");
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      if (enableAnimation == null) dart.nullFailed(I[40], 2567, 32, "enableAnimation");
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : null;
      if (isDiscrete == null) dart.nullFailed(I[40], 2568, 19, "isDiscrete");
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      if (labelPainter == null) dart.nullFailed(I[40], 2569, 26, "labelPainter");
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[40], 2570, 24, "parentBox");
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[40], 2571, 30, "sliderTheme");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (textDirection == null) dart.nullFailed(I[40], 2572, 28, "textDirection");
      let value = opts && 'value' in opts ? opts.value : null;
      if (value == null) dart.nullFailed(I[40], 2573, 21, "value");
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      if (textScaleFactor == null) dart.nullFailed(I[40], 2574, 21, "textScaleFactor");
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      if (sizeWithOverflow == null) dart.nullFailed(I[40], 2575, 19, "sizeWithOverflow");
      let canvas = context.canvas;
      let scale = activationAnimation.value;
      slider_theme.RectangularSliderValueIndicatorShape._pathPainter.paint({parentBox: parentBox, canvas: canvas, center: center, scale: scale, labelPainter: labelPainter, textScaleFactor: textScaleFactor, sizeWithOverflow: sizeWithOverflow, backgroundPaintColor: dart.nullCheck(sliderTheme.valueIndicatorColor)});
    }
  };
  (slider_theme.RectangularSliderValueIndicatorShape.new = function() {
    slider_theme.RectangularSliderValueIndicatorShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RectangularSliderValueIndicatorShape.prototype;
  dart.addTypeTests(slider_theme.RectangularSliderValueIndicatorShape);
  dart.addTypeCaches(slider_theme.RectangularSliderValueIndicatorShape);
  dart.setMethodSignature(slider_theme.RectangularSliderValueIndicatorShape, () => ({
    __proto__: dart.getMethods(slider_theme.RectangularSliderValueIndicatorShape.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [core.bool, core.bool], {labelPainter: dart.nullable(text_painter.TextPainter), textScaleFactor: dart.nullable(core.double)}, {}),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {}, {activationAnimation: animation.Animation$(core.double), enableAnimation: animation.Animation$(core.double), isDiscrete: core.bool, labelPainter: text_painter.TextPainter, parentBox: box$.RenderBox, sizeWithOverflow: ui.Size, sliderTheme: slider_theme.SliderThemeData, textDirection: ui.TextDirection, textScaleFactor: core.double, value: core.double})
  }));
  dart.setLibraryUri(slider_theme.RectangularSliderValueIndicatorShape, I[41]);
  dart.defineLazy(slider_theme.RectangularSliderValueIndicatorShape, {
    /*slider_theme.RectangularSliderValueIndicatorShape._pathPainter*/get _pathPainter() {
      return C[267] || CT.C267;
    }
  }, false);
  slider_theme.RectangularRangeSliderValueIndicatorShape = class RectangularRangeSliderValueIndicatorShape extends slider_theme.RangeSliderValueIndicatorShape {
    getPreferredSize(isEnabled, isDiscrete, opts) {
      if (isEnabled == null) dart.nullFailed(I[40], 2611, 10, "isEnabled");
      if (isDiscrete == null) dart.nullFailed(I[40], 2612, 10, "isDiscrete");
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      if (labelPainter == null) dart.nullFailed(I[40], 2613, 26, "labelPainter");
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      if (textScaleFactor == null) dart.nullFailed(I[40], 2614, 21, "textScaleFactor");
      if (!(labelPainter != null)) dart.assertFailed(null, I[40], 2616, 12, "labelPainter != null");
      if (!(textScaleFactor != null && dart.notNull(textScaleFactor) >= 0)) dart.assertFailed(null, I[40], 2617, 12, "textScaleFactor != null && textScaleFactor >= 0");
      return slider_theme.RectangularRangeSliderValueIndicatorShape._pathPainter.getPreferredSize(labelPainter, textScaleFactor);
    }
    getHorizontalShift(opts) {
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let center = opts && 'center' in opts ? opts.center : null;
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      return slider_theme.RectangularRangeSliderValueIndicatorShape._pathPainter.getHorizontalShift({parentBox: dart.nullCheck(parentBox), center: dart.nullCheck(center), labelPainter: dart.nullCheck(labelPainter), textScaleFactor: dart.nullCheck(textScaleFactor), sizeWithOverflow: dart.nullCheck(sizeWithOverflow), scale: dart.nullCheck(activationAnimation).value});
    }
    paint(context, center, opts) {
      if (context == null) dart.nullFailed(I[40], 2642, 21, "context");
      if (center == null) dart.nullFailed(I[40], 2643, 12, "center");
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : null;
      let isOnTop = opts && 'isOnTop' in opts ? opts.isOnTop : null;
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let thumb = opts && 'thumb' in opts ? opts.thumb : null;
      let canvas = context.canvas;
      let scale = dart.nullCheck(activationAnimation).value;
      slider_theme.RectangularRangeSliderValueIndicatorShape._pathPainter.paint({parentBox: dart.nullCheck(parentBox), canvas: canvas, center: center, scale: scale, labelPainter: dart.nullCheck(labelPainter), textScaleFactor: dart.nullCheck(textScaleFactor), sizeWithOverflow: dart.nullCheck(sizeWithOverflow), backgroundPaintColor: dart.nullCheck(dart.nullCheck(sliderTheme).valueIndicatorColor), strokePaintColor: dart.nullCheck(isOnTop) ? sliderTheme.overlappingShapeStrokeColor : null});
    }
  };
  (slider_theme.RectangularRangeSliderValueIndicatorShape.new = function() {
    slider_theme.RectangularRangeSliderValueIndicatorShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RectangularRangeSliderValueIndicatorShape.prototype;
  dart.addTypeTests(slider_theme.RectangularRangeSliderValueIndicatorShape);
  dart.addTypeCaches(slider_theme.RectangularRangeSliderValueIndicatorShape);
  dart.setMethodSignature(slider_theme.RectangularRangeSliderValueIndicatorShape, () => ({
    __proto__: dart.getMethods(slider_theme.RectangularRangeSliderValueIndicatorShape.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [core.bool, core.bool], {}, {labelPainter: text_painter.TextPainter, textScaleFactor: core.double}),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {activationAnimation: dart.nullable(animation.Animation$(core.double)), enableAnimation: dart.nullable(animation.Animation$(core.double)), isDiscrete: dart.nullable(core.bool), isOnTop: dart.nullable(core.bool), labelPainter: dart.nullable(text_painter.TextPainter), parentBox: dart.nullable(box$.RenderBox), sizeWithOverflow: dart.nullable(ui.Size), sliderTheme: dart.nullable(slider_theme.SliderThemeData), textDirection: dart.nullable(ui.TextDirection), textScaleFactor: dart.nullable(core.double), thumb: dart.nullable(slider_theme.Thumb), value: dart.nullable(core.double)}, {})
  }));
  dart.setLibraryUri(slider_theme.RectangularRangeSliderValueIndicatorShape, I[41]);
  dart.defineLazy(slider_theme.RectangularRangeSliderValueIndicatorShape, {
    /*slider_theme.RectangularRangeSliderValueIndicatorShape._pathPainter*/get _pathPainter() {
      return C[267] || CT.C267;
    }
  }, false);
  slider_theme._RectangularSliderValueIndicatorPathPainter = class _RectangularSliderValueIndicatorPathPainter extends core.Object {
    getPreferredSize(labelPainter, textScaleFactor) {
      if (labelPainter == null) dart.nullFailed(I[40], 2685, 17, "labelPainter");
      if (textScaleFactor == null) dart.nullFailed(I[40], 2686, 12, "textScaleFactor");
      if (!(labelPainter != null)) dart.assertFailed(null, I[40], 2688, 12, "labelPainter != null");
      return new ui.Size.new(this[S._upperRectangleWidth](labelPainter, 1.0, textScaleFactor), dart.notNull(labelPainter.height) + 16);
    }
    getHorizontalShift(opts) {
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[40], 2696, 24, "parentBox");
      let center = opts && 'center' in opts ? opts.center : null;
      if (center == null) dart.nullFailed(I[40], 2697, 21, "center");
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      if (labelPainter == null) dart.nullFailed(I[40], 2698, 26, "labelPainter");
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      if (textScaleFactor == null) dart.nullFailed(I[40], 2699, 21, "textScaleFactor");
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      if (sizeWithOverflow == null) dart.nullFailed(I[40], 2700, 19, "sizeWithOverflow");
      let scale = opts && 'scale' in opts ? opts.scale : null;
      if (scale == null) dart.nullFailed(I[40], 2701, 21, "scale");
      if (!!dart.test(sizeWithOverflow.isEmpty)) dart.assertFailed(null, I[40], 2703, 12, "!sizeWithOverflow.isEmpty");
      let rectangleWidth = this[S._upperRectangleWidth](labelPainter, scale, textScaleFactor);
      let globalCenter = parentBox.localToGlobal(center);
      let overflowLeft = math.max(core.double, 0.0, dart.notNull(rectangleWidth) / 2 - dart.notNull(globalCenter.dx) + 8);
      let overflowRight = math.max(core.double, 0.0, dart.notNull(rectangleWidth) / 2 - (dart.notNull(sizeWithOverflow.width) - dart.notNull(globalCenter.dx) - 8));
      if (dart.notNull(rectangleWidth) < dart.notNull(sizeWithOverflow.width)) {
        return overflowLeft - overflowRight;
      } else if (overflowLeft - overflowRight > 0) {
        return overflowLeft - 8 * dart.notNull(textScaleFactor);
      } else {
        return -overflowRight + 8 * dart.notNull(textScaleFactor);
      }
    }
    [S._upperRectangleWidth](labelPainter, scale, textScaleFactor) {
      if (labelPainter == null) dart.nullFailed(I[40], 2727, 43, "labelPainter");
      if (scale == null) dart.nullFailed(I[40], 2727, 64, "scale");
      if (textScaleFactor == null) dart.nullFailed(I[40], 2727, 78, "textScaleFactor");
      let unscaledWidth = math.max(core.double, 16 * dart.notNull(textScaleFactor), labelPainter.width) + 16 * 2;
      return unscaledWidth * dart.notNull(scale);
    }
    paint(opts) {
      let t12, t12$, t12$0;
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[40], 2733, 24, "parentBox");
      let canvas = opts && 'canvas' in opts ? opts.canvas : null;
      if (canvas == null) dart.nullFailed(I[40], 2734, 21, "canvas");
      let center = opts && 'center' in opts ? opts.center : null;
      if (center == null) dart.nullFailed(I[40], 2735, 21, "center");
      let scale = opts && 'scale' in opts ? opts.scale : null;
      if (scale == null) dart.nullFailed(I[40], 2736, 21, "scale");
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      if (labelPainter == null) dart.nullFailed(I[40], 2737, 26, "labelPainter");
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      if (textScaleFactor == null) dart.nullFailed(I[40], 2738, 21, "textScaleFactor");
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      if (sizeWithOverflow == null) dart.nullFailed(I[40], 2739, 19, "sizeWithOverflow");
      let backgroundPaintColor = opts && 'backgroundPaintColor' in opts ? opts.backgroundPaintColor : null;
      if (backgroundPaintColor == null) dart.nullFailed(I[40], 2740, 20, "backgroundPaintColor");
      let strokePaintColor = opts && 'strokePaintColor' in opts ? opts.strokePaintColor : null;
      if (scale === 0.0) {
        return;
      }
      if (!!dart.test(sizeWithOverflow.isEmpty)) dart.assertFailed(null, I[40], 2747, 12, "!sizeWithOverflow.isEmpty");
      let rectangleWidth = this[S._upperRectangleWidth](labelPainter, scale, textScaleFactor);
      let horizontalShift = this.getHorizontalShift({parentBox: parentBox, center: center, labelPainter: labelPainter, textScaleFactor: textScaleFactor, sizeWithOverflow: sizeWithOverflow, scale: scale});
      let rectHeight = dart.notNull(labelPainter.height) + 16;
      let upperRect = new ui.Rect.fromLTWH(-dart.notNull(rectangleWidth) / 2 + dart.notNull(horizontalShift), -8 - rectHeight, rectangleWidth, rectHeight);
      let trianglePath = (t12 = ui.Path.new(), (() => {
        t12.lineTo(-8, -8);
        t12.lineTo(8, -8);
        t12.close();
        return t12;
      })());
      let fillPaint = (t12$ = ui.Paint.new(), (() => {
        t12$.color = backgroundPaintColor;
        return t12$;
      })());
      let upperRRect = new ui.RRect.fromRectAndRadius(upperRect, C[68] || CT.C68);
      trianglePath.addRRect(upperRRect);
      canvas.save();
      canvas.translate(center.dx, dart.notNull(center.dy) - 14);
      canvas.scale(scale, scale);
      if (strokePaintColor != null) {
        let strokePaint = (t12$0 = ui.Paint.new(), (() => {
          t12$0.color = strokePaintColor;
          t12$0.strokeWidth = 1.0;
          t12$0.style = ui.PaintingStyle.stroke;
          return t12$0;
        })());
        canvas.drawPath(trianglePath, strokePaint);
      }
      canvas.drawPath(trianglePath, fillPaint);
      let bottomTipToUpperRectTranslateY = -16 / 2 - dart.notNull(upperRect.height);
      canvas.translate(0.0, bottomTipToUpperRectTranslateY);
      let boxCenter = new ui.Offset.new(horizontalShift, dart.notNull(upperRect.height) / 2);
      let halfLabelPainterOffset = new ui.Offset.new(dart.notNull(labelPainter.width) / 2, dart.notNull(labelPainter.height) / 2);
      let labelOffset = boxCenter['-'](halfLabelPainterOffset);
      labelPainter.paint(canvas, labelOffset);
      canvas.restore();
    }
  };
  (slider_theme._RectangularSliderValueIndicatorPathPainter.new = function() {
    ;
  }).prototype = slider_theme._RectangularSliderValueIndicatorPathPainter.prototype;
  dart.addTypeTests(slider_theme._RectangularSliderValueIndicatorPathPainter);
  dart.addTypeCaches(slider_theme._RectangularSliderValueIndicatorPathPainter);
  dart.setMethodSignature(slider_theme._RectangularSliderValueIndicatorPathPainter, () => ({
    __proto__: dart.getMethods(slider_theme._RectangularSliderValueIndicatorPathPainter.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [text_painter.TextPainter, core.double]),
    getHorizontalShift: dart.fnType(core.double, [], {}, {center: ui.Offset, labelPainter: text_painter.TextPainter, parentBox: box$.RenderBox, scale: core.double, sizeWithOverflow: ui.Size, textScaleFactor: core.double}),
    [S._upperRectangleWidth]: dart.fnType(core.double, [text_painter.TextPainter, core.double, core.double]),
    paint: dart.fnType(dart.void, [], {strokePaintColor: dart.nullable(ui.Color)}, {backgroundPaintColor: ui.Color, canvas: ui.Canvas, center: ui.Offset, labelPainter: text_painter.TextPainter, parentBox: box$.RenderBox, scale: core.double, sizeWithOverflow: ui.Size, textScaleFactor: core.double})
  }));
  dart.setLibraryUri(slider_theme._RectangularSliderValueIndicatorPathPainter, I[41]);
  dart.defineLazy(slider_theme._RectangularSliderValueIndicatorPathPainter, {
    /*slider_theme._RectangularSliderValueIndicatorPathPainter._triangleHeight*/get _triangleHeight() {
      return 8;
    },
    /*slider_theme._RectangularSliderValueIndicatorPathPainter._labelPadding*/get _labelPadding() {
      return 16;
    },
    /*slider_theme._RectangularSliderValueIndicatorPathPainter._preferredHeight*/get _preferredHeight() {
      return 32;
    },
    /*slider_theme._RectangularSliderValueIndicatorPathPainter._minLabelWidth*/get _minLabelWidth() {
      return 16;
    },
    /*slider_theme._RectangularSliderValueIndicatorPathPainter._bottomTipYOffset*/get _bottomTipYOffset() {
      return 14;
    },
    /*slider_theme._RectangularSliderValueIndicatorPathPainter._preferredHalfHeight*/get _preferredHalfHeight() {
      return 16;
    },
    /*slider_theme._RectangularSliderValueIndicatorPathPainter._upperRectRadius*/get _upperRectRadius() {
      return 4;
    }
  }, false);
  slider_theme.PaddleSliderValueIndicatorShape = class PaddleSliderValueIndicatorShape extends slider_theme.SliderComponentShape {
    getPreferredSize(isEnabled, isDiscrete, opts) {
      if (isEnabled == null) dart.nullFailed(I[40], 2819, 10, "isEnabled");
      if (isDiscrete == null) dart.nullFailed(I[40], 2820, 10, "isDiscrete");
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      if (!(labelPainter != null)) dart.assertFailed(null, I[40], 2824, 12, "labelPainter != null");
      if (!(textScaleFactor != null && dart.notNull(textScaleFactor) >= 0)) dart.assertFailed(null, I[40], 2825, 12, "textScaleFactor != null && textScaleFactor >= 0");
      return slider_theme.PaddleSliderValueIndicatorShape._pathPainter.getPreferredSize(dart.nullCheck(labelPainter), dart.nullCheck(textScaleFactor));
    }
    paint(context, center, opts) {
      let t12;
      if (context == null) dart.nullFailed(I[40], 2831, 21, "context");
      if (center == null) dart.nullFailed(I[40], 2832, 12, "center");
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      if (activationAnimation == null) dart.nullFailed(I[40], 2833, 32, "activationAnimation");
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      if (enableAnimation == null) dart.nullFailed(I[40], 2834, 32, "enableAnimation");
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : null;
      if (isDiscrete == null) dart.nullFailed(I[40], 2835, 19, "isDiscrete");
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      if (labelPainter == null) dart.nullFailed(I[40], 2836, 26, "labelPainter");
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[40], 2837, 24, "parentBox");
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[40], 2838, 30, "sliderTheme");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (textDirection == null) dart.nullFailed(I[40], 2839, 28, "textDirection");
      let value = opts && 'value' in opts ? opts.value : null;
      if (value == null) dart.nullFailed(I[40], 2840, 21, "value");
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      if (textScaleFactor == null) dart.nullFailed(I[40], 2841, 21, "textScaleFactor");
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      if (sizeWithOverflow == null) dart.nullFailed(I[40], 2842, 19, "sizeWithOverflow");
      if (!(context != null)) dart.assertFailed(null, I[40], 2844, 12, "context != null");
      if (!(center != null)) dart.assertFailed(null, I[40], 2845, 12, "center != null");
      if (!(activationAnimation != null)) dart.assertFailed(null, I[40], 2846, 12, "activationAnimation != null");
      if (!(enableAnimation != null)) dart.assertFailed(null, I[40], 2847, 12, "enableAnimation != null");
      if (!(labelPainter != null)) dart.assertFailed(null, I[40], 2848, 12, "labelPainter != null");
      if (!(parentBox != null)) dart.assertFailed(null, I[40], 2849, 12, "parentBox != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, I[40], 2850, 12, "sliderTheme != null");
      if (!!dart.test(sizeWithOverflow.isEmpty)) dart.assertFailed(null, I[40], 2851, 12, "!sizeWithOverflow.isEmpty");
      let enableColor = new tween.ColorTween.new({begin: sliderTheme.disabledThumbColor, end: sliderTheme.valueIndicatorColor});
      slider_theme.PaddleSliderValueIndicatorShape._pathPainter.paint(context.canvas, center, (t12 = ui.Paint.new(), (() => {
        t12.color = dart.nullCheck(enableColor.evaluate(enableAnimation));
        return t12;
      })()), activationAnimation.value, labelPainter, textScaleFactor, sizeWithOverflow, null);
    }
  };
  (slider_theme.PaddleSliderValueIndicatorShape.new = function() {
    slider_theme.PaddleSliderValueIndicatorShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.PaddleSliderValueIndicatorShape.prototype;
  dart.addTypeTests(slider_theme.PaddleSliderValueIndicatorShape);
  dart.addTypeCaches(slider_theme.PaddleSliderValueIndicatorShape);
  dart.setMethodSignature(slider_theme.PaddleSliderValueIndicatorShape, () => ({
    __proto__: dart.getMethods(slider_theme.PaddleSliderValueIndicatorShape.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [core.bool, core.bool], {labelPainter: dart.nullable(text_painter.TextPainter), textScaleFactor: dart.nullable(core.double)}, {}),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {}, {activationAnimation: animation.Animation$(core.double), enableAnimation: animation.Animation$(core.double), isDiscrete: core.bool, labelPainter: text_painter.TextPainter, parentBox: box$.RenderBox, sizeWithOverflow: ui.Size, sliderTheme: slider_theme.SliderThemeData, textDirection: ui.TextDirection, textScaleFactor: core.double, value: core.double})
  }));
  dart.setLibraryUri(slider_theme.PaddleSliderValueIndicatorShape, I[41]);
  dart.defineLazy(slider_theme.PaddleSliderValueIndicatorShape, {
    /*slider_theme.PaddleSliderValueIndicatorShape._pathPainter*/get _pathPainter() {
      return C[268] || CT.C268;
    }
  }, false);
  slider_theme.PaddleRangeSliderValueIndicatorShape = class PaddleRangeSliderValueIndicatorShape extends slider_theme.RangeSliderValueIndicatorShape {
    getPreferredSize(isEnabled, isDiscrete, opts) {
      if (isEnabled == null) dart.nullFailed(I[40], 2888, 10, "isEnabled");
      if (isDiscrete == null) dart.nullFailed(I[40], 2889, 10, "isDiscrete");
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      if (labelPainter == null) dart.nullFailed(I[40], 2890, 26, "labelPainter");
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      if (textScaleFactor == null) dart.nullFailed(I[40], 2891, 21, "textScaleFactor");
      if (!(labelPainter != null)) dart.assertFailed(null, I[40], 2893, 12, "labelPainter != null");
      if (!(textScaleFactor != null && dart.notNull(textScaleFactor) >= 0)) dart.assertFailed(null, I[40], 2894, 12, "textScaleFactor != null && textScaleFactor >= 0");
      return slider_theme.PaddleRangeSliderValueIndicatorShape._pathPainter.getPreferredSize(labelPainter, textScaleFactor);
    }
    getHorizontalShift(opts) {
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let center = opts && 'center' in opts ? opts.center : null;
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      return slider_theme.PaddleRangeSliderValueIndicatorShape._pathPainter.getHorizontalShift({center: dart.nullCheck(center), labelPainter: dart.nullCheck(labelPainter), scale: dart.nullCheck(activationAnimation).value, textScaleFactor: dart.nullCheck(textScaleFactor), sizeWithOverflow: dart.nullCheck(sizeWithOverflow)});
    }
    paint(context, center, opts) {
      let t12;
      if (context == null) dart.nullFailed(I[40], 2918, 21, "context");
      if (center == null) dart.nullFailed(I[40], 2919, 12, "center");
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      if (activationAnimation == null) dart.nullFailed(I[40], 2920, 32, "activationAnimation");
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      if (enableAnimation == null) dart.nullFailed(I[40], 2921, 32, "enableAnimation");
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : null;
      let isOnTop = opts && 'isOnTop' in opts ? opts.isOnTop : false;
      if (isOnTop == null) dart.nullFailed(I[40], 2923, 10, "isOnTop");
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      if (labelPainter == null) dart.nullFailed(I[40], 2924, 26, "labelPainter");
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[40], 2925, 24, "parentBox");
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[40], 2926, 30, "sliderTheme");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let thumb = opts && 'thumb' in opts ? opts.thumb : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      if (!(context != null)) dart.assertFailed(null, I[40], 2933, 12, "context != null");
      if (!(center != null)) dart.assertFailed(null, I[40], 2934, 12, "center != null");
      if (!(activationAnimation != null)) dart.assertFailed(null, I[40], 2935, 12, "activationAnimation != null");
      if (!(enableAnimation != null)) dart.assertFailed(null, I[40], 2936, 12, "enableAnimation != null");
      if (!(labelPainter != null)) dart.assertFailed(null, I[40], 2937, 12, "labelPainter != null");
      if (!(parentBox != null)) dart.assertFailed(null, I[40], 2938, 12, "parentBox != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, I[40], 2939, 12, "sliderTheme != null");
      if (!!dart.test(dart.nullCheck(sizeWithOverflow).isEmpty)) dart.assertFailed(null, I[40], 2940, 12, "!sizeWithOverflow!.isEmpty");
      let enableColor = new tween.ColorTween.new({begin: sliderTheme.disabledThumbColor, end: sliderTheme.valueIndicatorColor});
      slider_theme.PaddleRangeSliderValueIndicatorShape._pathPainter.paint(context.canvas, center, (t12 = ui.Paint.new(), (() => {
        t12.color = dart.nullCheck(enableColor.evaluate(enableAnimation));
        return t12;
      })()), activationAnimation.value, labelPainter, dart.nullCheck(textScaleFactor), dart.nullCheck(sizeWithOverflow), dart.test(isOnTop) ? sliderTheme.overlappingShapeStrokeColor : null);
    }
  };
  (slider_theme.PaddleRangeSliderValueIndicatorShape.new = function() {
    slider_theme.PaddleRangeSliderValueIndicatorShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.PaddleRangeSliderValueIndicatorShape.prototype;
  dart.addTypeTests(slider_theme.PaddleRangeSliderValueIndicatorShape);
  dart.addTypeCaches(slider_theme.PaddleRangeSliderValueIndicatorShape);
  dart.setMethodSignature(slider_theme.PaddleRangeSliderValueIndicatorShape, () => ({
    __proto__: dart.getMethods(slider_theme.PaddleRangeSliderValueIndicatorShape.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [core.bool, core.bool], {}, {labelPainter: text_painter.TextPainter, textScaleFactor: core.double}),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {isDiscrete: dart.nullable(core.bool), isOnTop: core.bool, sizeWithOverflow: dart.nullable(ui.Size), textDirection: dart.nullable(ui.TextDirection), textScaleFactor: dart.nullable(core.double), thumb: dart.nullable(slider_theme.Thumb), value: dart.nullable(core.double)}, {activationAnimation: animation.Animation$(core.double), enableAnimation: animation.Animation$(core.double), labelPainter: text_painter.TextPainter, parentBox: box$.RenderBox, sliderTheme: slider_theme.SliderThemeData})
  }));
  dart.setLibraryUri(slider_theme.PaddleRangeSliderValueIndicatorShape, I[41]);
  dart.defineLazy(slider_theme.PaddleRangeSliderValueIndicatorShape, {
    /*slider_theme.PaddleRangeSliderValueIndicatorShape._pathPainter*/get _pathPainter() {
      return C[268] || CT.C268;
    }
  }, false);
  slider_theme._PaddleSliderValueIndicatorPathPainter = class _PaddleSliderValueIndicatorPathPainter extends core.Object {
    getPreferredSize(labelPainter, textScaleFactor) {
      if (labelPainter == null) dart.nullFailed(I[40], 3000, 17, "labelPainter");
      if (textScaleFactor == null) dart.nullFailed(I[40], 3001, 12, "textScaleFactor");
      if (!(labelPainter != null)) dart.assertFailed(null, I[40], 3003, 12, "labelPainter != null");
      if (!(textScaleFactor != null && dart.notNull(textScaleFactor) >= 0)) dart.assertFailed(null, I[40], 3004, 12, "textScaleFactor != null && textScaleFactor >= 0");
      let width = math.max(core.double, 16 * dart.notNull(textScaleFactor), labelPainter.width) + 8 * 2 * dart.notNull(textScaleFactor);
      return new ui.Size.new(width, 66 * dart.notNull(textScaleFactor));
    }
    static _addArc(path, center, radius, startAngle, endAngle) {
      if (path == null) dart.nullFailed(I[40], 3011, 28, "path");
      if (center == null) dart.nullFailed(I[40], 3011, 41, "center");
      if (radius == null) dart.nullFailed(I[40], 3011, 56, "radius");
      if (startAngle == null) dart.nullFailed(I[40], 3011, 71, "startAngle");
      if (endAngle == null) dart.nullFailed(I[40], 3011, 90, "endAngle");
      if (!dart.test(center.isFinite)) dart.assertFailed(null, I[40], 3012, 12, "center.isFinite");
      let arcRect = new ui.Rect.fromCircle({center: center, radius: radius});
      path.arcTo(arcRect, startAngle, dart.notNull(endAngle) - dart.notNull(startAngle), false);
    }
    getHorizontalShift(opts) {
      let center = opts && 'center' in opts ? opts.center : null;
      if (center == null) dart.nullFailed(I[40], 3018, 21, "center");
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      if (labelPainter == null) dart.nullFailed(I[40], 3019, 26, "labelPainter");
      let scale = opts && 'scale' in opts ? opts.scale : null;
      if (scale == null) dart.nullFailed(I[40], 3020, 21, "scale");
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      if (textScaleFactor == null) dart.nullFailed(I[40], 3021, 21, "textScaleFactor");
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      if (sizeWithOverflow == null) dart.nullFailed(I[40], 3022, 19, "sizeWithOverflow");
      if (!!dart.test(sizeWithOverflow.isEmpty)) dart.assertFailed(null, I[40], 3024, 12, "!sizeWithOverflow.isEmpty");
      let inverseTextScale = textScaleFactor !== 0 ? 1.0 / dart.notNull(textScaleFactor) : 0.0;
      let labelHalfWidth = dart.notNull(labelPainter.width) / 2.0;
      let halfWidthNeeded = math.max(core.double, 0.0, inverseTextScale * labelHalfWidth - (16 - 8));
      let shift = this[S._getIdealOffset](halfWidthNeeded, dart.notNull(textScaleFactor) * dart.notNull(scale), center, sizeWithOverflow.width);
      return dart.notNull(shift) * dart.notNull(textScaleFactor);
    }
    [S._getIdealOffset](halfWidthNeeded, scale, center, widthWithOverflow) {
      if (halfWidthNeeded == null) dart.nullFailed(I[40], 3038, 12, "halfWidthNeeded");
      if (scale == null) dart.nullFailed(I[40], 3039, 12, "scale");
      if (center == null) dart.nullFailed(I[40], 3040, 12, "center");
      if (widthWithOverflow == null) dart.nullFailed(I[40], 3041, 12, "widthWithOverflow");
      let topLobeRect = new ui.Rect.fromLTWH(-16 - dart.notNull(halfWidthNeeded), -16 - 40, 2.0 * (16 + dart.notNull(halfWidthNeeded)), 2.0 * 16);
      let topLeft = topLobeRect.topLeft['*'](scale)['+'](center);
      let bottomRight = topLobeRect.bottomRight['*'](scale)['+'](center);
      let shift = 0.0;
      if (dart.notNull(topLeft.dx) < 8) {
        shift = 8 - dart.notNull(topLeft.dx);
      }
      let endGlobal = widthWithOverflow;
      if (dart.notNull(bottomRight.dx) > dart.notNull(endGlobal) - 8) {
        shift = dart.notNull(endGlobal) - 8 - dart.notNull(bottomRight.dx);
      }
      shift = scale === 0.0 ? 0.0 : shift / dart.notNull(scale);
      if (shift < 0.0) {
        shift = math.max(core.double, shift, -dart.notNull(halfWidthNeeded));
      } else {
        shift = math.min(core.double, shift, halfWidthNeeded);
      }
      return shift;
    }
    paint(canvas, center, paint, scale, labelPainter, textScaleFactor, sizeWithOverflow, strokePaintColor) {
      let t12, t12$;
      if (canvas == null) dart.nullFailed(I[40], 3077, 12, "canvas");
      if (center == null) dart.nullFailed(I[40], 3078, 12, "center");
      if (paint == null) dart.nullFailed(I[40], 3079, 11, "paint");
      if (scale == null) dart.nullFailed(I[40], 3080, 12, "scale");
      if (labelPainter == null) dart.nullFailed(I[40], 3081, 17, "labelPainter");
      if (textScaleFactor == null) dart.nullFailed(I[40], 3082, 12, "textScaleFactor");
      if (sizeWithOverflow == null) dart.nullFailed(I[40], 3083, 10, "sizeWithOverflow");
      if (scale === 0.0) {
        return;
      }
      if (!!dart.test(sizeWithOverflow.isEmpty)) dart.assertFailed(null, I[40], 3091, 12, "!sizeWithOverflow.isEmpty");
      let overallScale = dart.notNull(scale) * dart.notNull(textScaleFactor);
      let inverseTextScale = textScaleFactor !== 0 ? 1.0 / dart.notNull(textScaleFactor) : 0.0;
      let labelHalfWidth = dart.notNull(labelPainter.width) / 2.0;
      canvas.save();
      canvas.translate(center.dx, center.dy);
      canvas.scale(overallScale, overallScale);
      let bottomNeckTriangleHypotenuse = 4.5 + 10 / overallScale;
      let rightBottomNeckCenterY = -math.sqrt(math.pow(bottomNeckTriangleHypotenuse, 2) - math.pow(6, 2));
      let rightBottomNeckAngleEnd = 3.141592653589793 + math.atan(rightBottomNeckCenterY / 6);
      let path = (t12 = ui.Path.new(), (() => {
        t12.moveTo(3 / 2, rightBottomNeckCenterY);
        return t12;
      })());
      slider_theme._PaddleSliderValueIndicatorPathPainter._addArc(path, new ui.Offset.new(6, rightBottomNeckCenterY), 4.5, 3.141592653589793, rightBottomNeckAngleEnd);
      slider_theme._PaddleSliderValueIndicatorPathPainter._addArc(path, ui.Offset.zero, 10 / overallScale, rightBottomNeckAngleEnd - 3.141592653589793, 2 * 3.141592653589793 - rightBottomNeckAngleEnd);
      slider_theme._PaddleSliderValueIndicatorPathPainter._addArc(path, new ui.Offset.new(-6, rightBottomNeckCenterY), 4.5, 3.141592653589793 - rightBottomNeckAngleEnd, 0.0);
      let halfWidthNeeded = math.max(core.double, 0.0, inverseTextScale * labelHalfWidth - (16 - 8));
      let shift = this[S._getIdealOffset](halfWidthNeeded, overallScale, center, sizeWithOverflow.width);
      let leftWidthNeeded = halfWidthNeeded - dart.notNull(shift);
      let rightWidthNeeded = halfWidthNeeded + dart.notNull(shift);
      let leftAmount = math.max(core.double, 0.0, math.min(core.double, 1.0, leftWidthNeeded / 14.5));
      let rightAmount = math.max(core.double, 0.0, math.min(core.double, 1.0, rightWidthNeeded / 14.5));
      let leftTheta = (1.0 - leftAmount) * 0.5235987755982988;
      let rightTheta = (1.0 - rightAmount) * 0.5235987755982988;
      let leftTopNeckCenter = new ui.Offset.new(-14.5, dart.notNull(slider_theme._PaddleSliderValueIndicatorPathPainter._topLobeCenter.dy) + math.cos(leftTheta) * 29);
      let neckRightCenter = new ui.Offset.new(14.5, dart.notNull(slider_theme._PaddleSliderValueIndicatorPathPainter._topLobeCenter.dy) + math.cos(rightTheta) * 29);
      let leftNeckArcAngle = 1.5707963267948966 - leftTheta;
      let rightNeckArcAngle = 3.141592653589793 + 1.5707963267948966 - rightTheta;
      let neckStretchBaseline = math.max(core.double, 0.0, rightBottomNeckCenterY - math.max(core.num, leftTopNeckCenter.dy, neckRightCenter.dy));
      let t = math.pow(inverseTextScale, 3.0);
      let stretch = (neckStretchBaseline * t)[S.$clamp](0.0, 10.0 * neckStretchBaseline);
      let neckStretch = new ui.Offset.new(0.0, neckStretchBaseline - stretch);
      if (!(!false || dart.test(dart.fn(() => {
        let t12;
        let leftCenter = slider_theme._PaddleSliderValueIndicatorPathPainter._topLobeCenter['-'](new ui.Offset.new(leftWidthNeeded, 0.0))['+'](neckStretch);
        let rightCenter = slider_theme._PaddleSliderValueIndicatorPathPainter._topLobeCenter['+'](new ui.Offset.new(rightWidthNeeded, 0.0))['+'](neckStretch);
        let valueRect = new ui.Rect.fromLTRB(dart.notNull(leftCenter.dx) - 16, dart.notNull(leftCenter.dy) - 16, dart.notNull(rightCenter.dx) + 16, dart.notNull(rightCenter.dy) + 16);
        let outlinePaint = (t12 = ui.Paint.new(), (() => {
          t12.color = C[269] || CT.C269;
          t12.style = ui.PaintingStyle.stroke;
          t12.strokeWidth = 1.0;
          return t12;
        })());
        canvas.drawRect(valueRect, outlinePaint);
        return true;
      }, T$.VoidTobool())()))) dart.assertFailed(null, I[40], 3168, 12, "!_debuggingLabelLocation || () {\r\n      final Offset leftCenter = _topLobeCenter - Offset(leftWidthNeeded, 0.0) + neckStretch;\r\n      final Offset rightCenter = _topLobeCenter + Offset(rightWidthNeeded, 0.0) + neckStretch;\r\n      final Rect valueRect = Rect.fromLTRB(\r\n        leftCenter.dx - _topLobeRadius,\r\n        leftCenter.dy - _topLobeRadius,\r\n        rightCenter.dx + _topLobeRadius,\r\n        rightCenter.dy + _topLobeRadius,\r\n      );\r\n      final Paint outlinePaint = Paint()\r\n        ..color = const Color(0xffff0000)\r\n        ..style = PaintingStyle.stroke\r\n        ..strokeWidth = 1.0;\r\n      canvas.drawRect(valueRect, outlinePaint);\r\n      return true;\r\n    }()");
      slider_theme._PaddleSliderValueIndicatorPathPainter._addArc(path, leftTopNeckCenter['+'](neckStretch), 13, 0.0, -leftNeckArcAngle);
      slider_theme._PaddleSliderValueIndicatorPathPainter._addArc(path, slider_theme._PaddleSliderValueIndicatorPathPainter._topLobeCenter['-'](new ui.Offset.new(leftWidthNeeded, 0.0))['+'](neckStretch), 16, 1.5707963267948966 + leftTheta, 4.71238898038469);
      slider_theme._PaddleSliderValueIndicatorPathPainter._addArc(path, slider_theme._PaddleSliderValueIndicatorPathPainter._topLobeCenter['+'](new ui.Offset.new(rightWidthNeeded, 0.0))['+'](neckStretch), 16, 4.71238898038469, 4.71238898038469 + 3.141592653589793 - rightTheta);
      slider_theme._PaddleSliderValueIndicatorPathPainter._addArc(path, neckRightCenter['+'](neckStretch), 13, rightNeckArcAngle, 3.141592653589793);
      if (strokePaintColor != null) {
        let strokePaint = (t12$ = ui.Paint.new(), (() => {
          t12$.color = strokePaintColor;
          t12$.strokeWidth = 1.0;
          t12$.style = ui.PaintingStyle.stroke;
          return t12$;
        })());
        canvas.drawPath(path, strokePaint);
      }
      canvas.drawPath(path, paint);
      canvas.save();
      canvas.translate(shift, -40 + dart.notNull(neckStretch.dy));
      canvas.scale(inverseTextScale, inverseTextScale);
      labelPainter.paint(canvas, ui.Offset.zero['-'](new ui.Offset.new(labelHalfWidth, dart.notNull(labelPainter.height) / 2.0)));
      canvas.restore();
      canvas.restore();
    }
  };
  (slider_theme._PaddleSliderValueIndicatorPathPainter.new = function() {
    ;
  }).prototype = slider_theme._PaddleSliderValueIndicatorPathPainter.prototype;
  dart.addTypeTests(slider_theme._PaddleSliderValueIndicatorPathPainter);
  dart.addTypeCaches(slider_theme._PaddleSliderValueIndicatorPathPainter);
  dart.setMethodSignature(slider_theme._PaddleSliderValueIndicatorPathPainter, () => ({
    __proto__: dart.getMethods(slider_theme._PaddleSliderValueIndicatorPathPainter.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [text_painter.TextPainter, core.double]),
    getHorizontalShift: dart.fnType(core.double, [], {}, {center: ui.Offset, labelPainter: text_painter.TextPainter, scale: core.double, sizeWithOverflow: ui.Size, textScaleFactor: core.double}),
    [S._getIdealOffset]: dart.fnType(core.double, [core.double, core.double, ui.Offset, core.double]),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Offset, ui.Paint, core.double, text_painter.TextPainter, core.double, ui.Size, dart.nullable(ui.Color)])
  }));
  dart.setLibraryUri(slider_theme._PaddleSliderValueIndicatorPathPainter, I[41]);
  dart.defineLazy(slider_theme._PaddleSliderValueIndicatorPathPainter, {
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._topLobeRadius*/get _topLobeRadius() {
      return 16;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._minLabelWidth*/get _minLabelWidth() {
      return 16;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._bottomLobeRadius*/get _bottomLobeRadius() {
      return 10;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._labelPadding*/get _labelPadding() {
      return 8;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._distanceBetweenTopBottomCenters*/get _distanceBetweenTopBottomCenters() {
      return 40;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._middleNeckWidth*/get _middleNeckWidth() {
      return 3;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._bottomNeckRadius*/get _bottomNeckRadius() {
      return 4.5;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._neckTriangleBase*/get _neckTriangleBase() {
      return 14.5;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._rightBottomNeckCenterX*/get _rightBottomNeckCenterX() {
      return 6;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._rightBottomNeckAngleStart*/get _rightBottomNeckAngleStart() {
      return 3.141592653589793;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._topLobeCenter*/get _topLobeCenter() {
      return C[270] || CT.C270;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._topNeckRadius*/get _topNeckRadius() {
      return 13;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._neckTriangleHypotenuse*/get _neckTriangleHypotenuse() {
      return 29;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._twoSeventyDegrees*/get _twoSeventyDegrees() {
      return 4.71238898038469;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._ninetyDegrees*/get _ninetyDegrees() {
      return 1.5707963267948966;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._thirtyDegrees*/get _thirtyDegrees() {
      return 0.5235987755982988;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._preferredHeight*/get _preferredHeight() {
      return 66;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._debuggingLabelLocation*/get _debuggingLabelLocation() {
      return false;
    }
  }, false);
  slider_theme.RangeValues = class RangeValues extends core.Object {
    get start() {
      return this[S.start];
    }
    set start(value) {
      super.start = value;
    }
    get end() {
      return this[S.end];
    }
    set end(value) {
      super.end = value;
    }
    _equals(other) {
      if (other == null) return false;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return slider_theme.RangeValues.is(other) && other.start == this.start && other.end == this.end;
    }
    get hashCode() {
      return ui.hashValues(this.start, this.end);
    }
    toString() {
      return dart.str(object$.objectRuntimeType(this, "RangeValues")) + "(" + dart.str(this.start) + ", " + dart.str(this.end) + ")";
    }
  };
  (slider_theme.RangeValues.new = function(start, end) {
    if (start == null) dart.nullFailed(I[40], 3266, 26, "start");
    if (end == null) dart.nullFailed(I[40], 3266, 38, "end");
    this[S.start] = start;
    this[S.end] = end;
    ;
  }).prototype = slider_theme.RangeValues.prototype;
  dart.addTypeTests(slider_theme.RangeValues);
  dart.addTypeCaches(slider_theme.RangeValues);
  dart.setLibraryUri(slider_theme.RangeValues, I[41]);
  dart.setFieldSignature(slider_theme.RangeValues, () => ({
    __proto__: dart.getFields(slider_theme.RangeValues.__proto__),
    start: dart.finalFieldType(core.double),
    end: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(slider_theme.RangeValues, ['_equals', 'toString']);
  dart.defineExtensionAccessors(slider_theme.RangeValues, ['hashCode']);
  slider_theme.RangeLabels = class RangeLabels extends core.Object {
    get start() {
      return this[S.start$1];
    }
    set start(value) {
      super.start = value;
    }
    get end() {
      return this[S.end$1];
    }
    set end(value) {
      super.end = value;
    }
    _equals(other) {
      if (other == null) return false;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return slider_theme.RangeLabels.is(other) && other.start == this.start && other.end == this.end;
    }
    get hashCode() {
      return ui.hashValues(this.start, this.end);
    }
    toString() {
      return dart.str(object$.objectRuntimeType(this, "RangeLabels")) + "(" + dart.str(this.start) + ", " + dart.str(this.end) + ")";
    }
  };
  (slider_theme.RangeLabels.new = function(start, end) {
    if (start == null) dart.nullFailed(I[40], 3306, 26, "start");
    if (end == null) dart.nullFailed(I[40], 3306, 38, "end");
    this[S.start$1] = start;
    this[S.end$1] = end;
    ;
  }).prototype = slider_theme.RangeLabels.prototype;
  dart.addTypeTests(slider_theme.RangeLabels);
  dart.addTypeCaches(slider_theme.RangeLabels);
  dart.setLibraryUri(slider_theme.RangeLabels, I[41]);
  dart.setFieldSignature(slider_theme.RangeLabels, () => ({
    __proto__: dart.getFields(slider_theme.RangeLabels.__proto__),
    start: dart.finalFieldType(core.String),
    end: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(slider_theme.RangeLabels, ['_equals', 'toString']);
  dart.defineExtensionAccessors(slider_theme.RangeLabels, ['hashCode']);
  const Object_Diagnosticable$36$6 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$6.new = function() {
  }).prototype = Object_Diagnosticable$36$6.prototype;
  dart.applyMixin(Object_Diagnosticable$36$6, diagnostics.Diagnosticable);
  scrollbar_theme.ScrollbarThemeData = class ScrollbarThemeData extends Object_Diagnosticable$36$6 {
    get thickness() {
      return this[S.thickness];
    }
    set thickness(value) {
      super.thickness = value;
    }
    get showTrackOnHover() {
      return this[S.showTrackOnHover];
    }
    set showTrackOnHover(value) {
      super.showTrackOnHover = value;
    }
    get isAlwaysShown() {
      return this[S.isAlwaysShown];
    }
    set isAlwaysShown(value) {
      super.isAlwaysShown = value;
    }
    get interactive() {
      return this[S.interactive];
    }
    set interactive(value) {
      super.interactive = value;
    }
    get radius() {
      return this[S.radius];
    }
    set radius(value) {
      super.radius = value;
    }
    get thumbColor() {
      return this[S.thumbColor$2];
    }
    set thumbColor(value) {
      super.thumbColor = value;
    }
    get trackColor() {
      return this[S.trackColor$1];
    }
    set trackColor(value) {
      super.trackColor = value;
    }
    get trackBorderColor() {
      return this[S.trackBorderColor];
    }
    set trackBorderColor(value) {
      super.trackBorderColor = value;
    }
    get crossAxisMargin() {
      return this[S.crossAxisMargin];
    }
    set crossAxisMargin(value) {
      super.crossAxisMargin = value;
    }
    get mainAxisMargin() {
      return this[S.mainAxisMargin];
    }
    set mainAxisMargin(value) {
      super.mainAxisMargin = value;
    }
    get minThumbLength() {
      return this[S.minThumbLength];
    }
    set minThumbLength(value) {
      super.minThumbLength = value;
    }
    copyWith(opts) {
      let t12, t12$, t12$0, t12$1, t12$2, t12$3, t12$4, t12$5, t12$6, t12$7, t12$8;
      let thickness = opts && 'thickness' in opts ? opts.thickness : null;
      let showTrackOnHover = opts && 'showTrackOnHover' in opts ? opts.showTrackOnHover : null;
      let isAlwaysShown = opts && 'isAlwaysShown' in opts ? opts.isAlwaysShown : null;
      let interactive = opts && 'interactive' in opts ? opts.interactive : null;
      let radius = opts && 'radius' in opts ? opts.radius : null;
      let thumbColor = opts && 'thumbColor' in opts ? opts.thumbColor : null;
      let trackColor = opts && 'trackColor' in opts ? opts.trackColor : null;
      let trackBorderColor = opts && 'trackBorderColor' in opts ? opts.trackBorderColor : null;
      let crossAxisMargin = opts && 'crossAxisMargin' in opts ? opts.crossAxisMargin : null;
      let mainAxisMargin = opts && 'mainAxisMargin' in opts ? opts.mainAxisMargin : null;
      let minThumbLength = opts && 'minThumbLength' in opts ? opts.minThumbLength : null;
      return new scrollbar_theme.ScrollbarThemeData.new({thickness: (t12 = thickness, t12 == null ? this.thickness : t12), showTrackOnHover: (t12$ = showTrackOnHover, t12$ == null ? this.showTrackOnHover : t12$), isAlwaysShown: (t12$0 = isAlwaysShown, t12$0 == null ? this.isAlwaysShown : t12$0), interactive: (t12$1 = interactive, t12$1 == null ? this.interactive : t12$1), radius: (t12$2 = radius, t12$2 == null ? this.radius : t12$2), thumbColor: (t12$3 = thumbColor, t12$3 == null ? this.thumbColor : t12$3), trackColor: (t12$4 = trackColor, t12$4 == null ? this.trackColor : t12$4), trackBorderColor: (t12$5 = trackBorderColor, t12$5 == null ? this.trackBorderColor : t12$5), crossAxisMargin: (t12$6 = crossAxisMargin, t12$6 == null ? this.crossAxisMargin : t12$6), mainAxisMargin: (t12$7 = mainAxisMargin, t12$7 == null ? this.mainAxisMargin : t12$7), minThumbLength: (t12$8 = minThumbLength, t12$8 == null ? this.minThumbLength : t12$8)});
    }
    static lerp(a, b, t) {
      let t12, t12$, t12$0, t12$1, t12$2, t12$3, t12$4, t12$5, t12$6, t12$7, t12$8, t12$9, t12$10, t12$11, t12$12, t12$13, t12$14, t12$15, t12$16, t12$17, t12$18, t12$19;
      if (t == null) dart.nullFailed(I[42], 156, 87, "t");
      if (!(t != null)) dart.assertFailed(null, I[42], 157, 12, "t != null");
      return new scrollbar_theme.ScrollbarThemeData.new({thickness: scrollbar_theme.ScrollbarThemeData._lerpProperties(T$.doubleN(), (t12 = a, t12 == null ? null : t12.thickness), (t12$ = b, t12$ == null ? null : t12$.thickness), t, C[271] || CT.C271), showTrackOnHover: dart.notNull(t) < 0.5 ? (t12$0 = a, t12$0 == null ? null : t12$0.showTrackOnHover) : (t12$1 = b, t12$1 == null ? null : t12$1.showTrackOnHover), isAlwaysShown: dart.notNull(t) < 0.5 ? (t12$2 = a, t12$2 == null ? null : t12$2.isAlwaysShown) : (t12$3 = b, t12$3 == null ? null : t12$3.isAlwaysShown), interactive: dart.notNull(t) < 0.5 ? (t12$4 = a, t12$4 == null ? null : t12$4.interactive) : (t12$5 = b, t12$5 == null ? null : t12$5.interactive), radius: ui.Radius.lerp((t12$6 = a, t12$6 == null ? null : t12$6.radius), (t12$7 = b, t12$7 == null ? null : t12$7.radius), t), thumbColor: scrollbar_theme.ScrollbarThemeData._lerpProperties(T$.ColorN(), (t12$8 = a, t12$8 == null ? null : t12$8.thumbColor), (t12$9 = b, t12$9 == null ? null : t12$9.thumbColor), t, C[243] || CT.C243), trackColor: scrollbar_theme.ScrollbarThemeData._lerpProperties(T$.ColorN(), (t12$10 = a, t12$10 == null ? null : t12$10.trackColor), (t12$11 = b, t12$11 == null ? null : t12$11.trackColor), t, C[243] || CT.C243), trackBorderColor: scrollbar_theme.ScrollbarThemeData._lerpProperties(T$.ColorN(), (t12$12 = a, t12$12 == null ? null : t12$12.trackBorderColor), (t12$13 = b, t12$13 == null ? null : t12$13.trackBorderColor), t, C[243] || CT.C243), crossAxisMargin: ui.lerpDouble((t12$14 = a, t12$14 == null ? null : t12$14.crossAxisMargin), (t12$15 = b, t12$15 == null ? null : t12$15.crossAxisMargin), t), mainAxisMargin: ui.lerpDouble((t12$16 = a, t12$16 == null ? null : t12$16.mainAxisMargin), (t12$17 = b, t12$17 == null ? null : t12$17.mainAxisMargin), t), minThumbLength: ui.lerpDouble((t12$18 = a, t12$18 == null ? null : t12$18.minThumbLength), (t12$19 = b, t12$19 == null ? null : t12$19.minThumbLength), t)});
    }
    get hashCode() {
      return ui.hashValues(this.thickness, this.showTrackOnHover, this.isAlwaysShown, this.interactive, this.radius, this.thumbColor, this.trackColor, this.trackBorderColor, this.crossAxisMargin, this.mainAxisMargin, this.minThumbLength);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return scrollbar_theme.ScrollbarThemeData.is(other) && dart.equals(other.thickness, this.thickness) && other.showTrackOnHover == this.showTrackOnHover && other.isAlwaysShown == this.isAlwaysShown && other.interactive == this.interactive && dart.equals(other.radius, this.radius) && dart.equals(other.thumbColor, this.thumbColor) && dart.equals(other.trackColor, this.trackColor) && dart.equals(other.trackBorderColor, this.trackBorderColor) && other.crossAxisMargin == this.crossAxisMargin && other.mainAxisMargin == this.mainAxisMargin && other.minThumbLength == this.minThumbLength;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[42], 211, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfdoubleN()).new("thickness", this.thickness, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("showTrackOnHover", this.showTrackOnHover, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("isAlwaysShown", this.isAlwaysShown, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("interactive", this.interactive, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfRadius()).new("radius", this.radius, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("thumbColor", this.thumbColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("trackColor", this.trackColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("trackBorderColor", this.trackBorderColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfdouble()).new("crossAxisMargin", this.crossAxisMargin, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfdouble()).new("mainAxisMargin", this.mainAxisMargin, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfdouble()).new("minThumbLength", this.minThumbLength, {defaultValue: null}));
    }
    static _lerpProperties(T, a, b, t, lerpFunction) {
      if (t == null) dart.nullFailed(I[42], 229, 12, "t");
      if (lerpFunction == null) dart.nullFailed(I[42], 230, 32, "lerpFunction");
      if (a == null && b == null) return null;
      return new (scrollbar_theme._LerpProperties$(T)).new(a, b, t, lerpFunction);
    }
  };
  (scrollbar_theme.ScrollbarThemeData.new = function(opts) {
    let thickness = opts && 'thickness' in opts ? opts.thickness : null;
    let showTrackOnHover = opts && 'showTrackOnHover' in opts ? opts.showTrackOnHover : null;
    let isAlwaysShown = opts && 'isAlwaysShown' in opts ? opts.isAlwaysShown : null;
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let thumbColor = opts && 'thumbColor' in opts ? opts.thumbColor : null;
    let trackColor = opts && 'trackColor' in opts ? opts.trackColor : null;
    let trackBorderColor = opts && 'trackBorderColor' in opts ? opts.trackBorderColor : null;
    let crossAxisMargin = opts && 'crossAxisMargin' in opts ? opts.crossAxisMargin : null;
    let mainAxisMargin = opts && 'mainAxisMargin' in opts ? opts.mainAxisMargin : null;
    let minThumbLength = opts && 'minThumbLength' in opts ? opts.minThumbLength : null;
    let interactive = opts && 'interactive' in opts ? opts.interactive : null;
    this[S.thickness] = thickness;
    this[S.showTrackOnHover] = showTrackOnHover;
    this[S.isAlwaysShown] = isAlwaysShown;
    this[S.radius] = radius;
    this[S.thumbColor$2] = thumbColor;
    this[S.trackColor$1] = trackColor;
    this[S.trackBorderColor] = trackBorderColor;
    this[S.crossAxisMargin] = crossAxisMargin;
    this[S.mainAxisMargin] = mainAxisMargin;
    this[S.minThumbLength] = minThumbLength;
    this[S.interactive] = interactive;
    ;
  }).prototype = scrollbar_theme.ScrollbarThemeData.prototype;
  dart.addTypeTests(scrollbar_theme.ScrollbarThemeData);
  dart.addTypeCaches(scrollbar_theme.ScrollbarThemeData);
  dart.setMethodSignature(scrollbar_theme.ScrollbarThemeData, () => ({
    __proto__: dart.getMethods(scrollbar_theme.ScrollbarThemeData.__proto__),
    copyWith: dart.fnType(scrollbar_theme.ScrollbarThemeData, [], {crossAxisMargin: dart.nullable(core.double), interactive: dart.nullable(core.bool), isAlwaysShown: dart.nullable(core.bool), mainAxisMargin: dart.nullable(core.double), minThumbLength: dart.nullable(core.double), radius: dart.nullable(ui.Radius), showTrackOnHover: dart.nullable(core.bool), thickness: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(core.double))), thumbColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), trackBorderColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), trackColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))}, {})
  }));
  dart.setLibraryUri(scrollbar_theme.ScrollbarThemeData, I[43]);
  dart.setFieldSignature(scrollbar_theme.ScrollbarThemeData, () => ({
    __proto__: dart.getFields(scrollbar_theme.ScrollbarThemeData.__proto__),
    thickness: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(core.double)))),
    showTrackOnHover: dart.finalFieldType(dart.nullable(core.bool)),
    isAlwaysShown: dart.finalFieldType(dart.nullable(core.bool)),
    interactive: dart.finalFieldType(dart.nullable(core.bool)),
    radius: dart.finalFieldType(dart.nullable(ui.Radius)),
    thumbColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    trackColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    trackBorderColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    crossAxisMargin: dart.finalFieldType(dart.nullable(core.double)),
    mainAxisMargin: dart.finalFieldType(dart.nullable(core.double)),
    minThumbLength: dart.finalFieldType(dart.nullable(core.double))
  }));
  dart.defineExtensionMethods(scrollbar_theme.ScrollbarThemeData, ['_equals']);
  dart.defineExtensionAccessors(scrollbar_theme.ScrollbarThemeData, ['hashCode']);
  const _is__LerpProperties_default$ = Symbol('_is__LerpProperties_default');
  scrollbar_theme._LerpProperties$ = dart.generic(T => {
    class _LerpProperties extends core.Object {
      get a() {
        return this[S.a$1];
      }
      set a(value) {
        super.a = value;
      }
      get b() {
        return this[S.b$1];
      }
      set b(value) {
        super.b = value;
      }
      get t() {
        return this[S.t$1];
      }
      set t(value) {
        super.t = value;
      }
      get lerpFunction() {
        return this[S.lerpFunction$1];
      }
      set lerpFunction(value) {
        super.lerpFunction = value;
      }
      resolve(states) {
        let t12, t12$, t14, t13, t12$0;
        if (states == null) dart.nullFailed(I[42], 248, 32, "states");
        let resolvedA = (t12 = this.a, t12 == null ? null : t12.resolve(states));
        let resolvedB = (t12$ = this.b, t12$ == null ? null : t12$.resolve(states));
        t12$0 = resolvedA;
        t13 = resolvedB;
        t14 = this.t;
        return this.lerpFunction(t12$0, t13, t14);
      }
    }
    (_LerpProperties.new = function(a, b, t, lerpFunction) {
      if (t == null) dart.nullFailed(I[42], 240, 46, "t");
      if (lerpFunction == null) dart.nullFailed(I[42], 240, 54, "lerpFunction");
      this[S.a$1] = a;
      this[S.b$1] = b;
      this[S.t$1] = t;
      this[S.lerpFunction$1] = lerpFunction;
      ;
    }).prototype = _LerpProperties.prototype;
    dart.addTypeTests(_LerpProperties);
    _LerpProperties.prototype[_is__LerpProperties_default$] = true;
    dart.addTypeCaches(_LerpProperties);
    _LerpProperties[dart.implements] = () => [material_state.MaterialStateProperty$(T)];
    dart.setMethodSignature(_LerpProperties, () => ({
      __proto__: dart.getMethods(_LerpProperties.__proto__),
      resolve: dart.fnType(T, [core.Set$(material_state.MaterialState)])
    }));
    dart.setLibraryUri(_LerpProperties, I[43]);
    dart.setFieldSignature(_LerpProperties, () => ({
      __proto__: dart.getFields(_LerpProperties.__proto__),
      a: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(T))),
      b: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(T))),
      t: dart.finalFieldType(core.double),
      lerpFunction: dart.finalFieldType(dart.fnType(T, [dart.nullable(T), dart.nullable(T), core.double]))
    }));
    return _LerpProperties;
  });
  scrollbar_theme._LerpProperties = scrollbar_theme._LerpProperties$();
  dart.addTypeTests(scrollbar_theme._LerpProperties, _is__LerpProperties_default$);
  scrollbar_theme.ScrollbarTheme = class ScrollbarTheme extends framework.InheritedWidget {
    get data() {
      return this[S.data$6];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t12, t12$;
      if (context == null) dart.nullFailed(I[42], 288, 45, "context");
      let scrollbarTheme = context.dependOnInheritedWidgetOfExactType(scrollbar_theme.ScrollbarTheme);
      t12$ = (t12 = scrollbarTheme, t12 == null ? null : t12.data);
      return t12$ == null ? theme$.Theme.of(context).scrollbarTheme : t12$;
    }
    updateShouldNotify(oldWidget) {
      scrollbar_theme.ScrollbarTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[42], 294, 42, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (scrollbar_theme.ScrollbarTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[42], 273, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[42], 274, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.data$6] = data;
    scrollbar_theme.ScrollbarTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scrollbar_theme.ScrollbarTheme.prototype;
  dart.addTypeTests(scrollbar_theme.ScrollbarTheme);
  dart.addTypeCaches(scrollbar_theme.ScrollbarTheme);
  dart.setMethodSignature(scrollbar_theme.ScrollbarTheme, () => ({
    __proto__: dart.getMethods(scrollbar_theme.ScrollbarTheme.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(scrollbar_theme.ScrollbarTheme, I[43]);
  dart.setFieldSignature(scrollbar_theme.ScrollbarTheme, () => ({
    __proto__: dart.getFields(scrollbar_theme.ScrollbarTheme.__proto__),
    data: dart.finalFieldType(scrollbar_theme.ScrollbarThemeData)
  }));
  const Object_Diagnosticable$36$7 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$7.new = function() {
  }).prototype = Object_Diagnosticable$36$7.prototype;
  dart.applyMixin(Object_Diagnosticable$36$7, diagnostics.Diagnosticable);
  radio_theme.RadioThemeData = class RadioThemeData extends Object_Diagnosticable$36$7 {
    get mouseCursor() {
      return this[S.mouseCursor$4];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get fillColor() {
      return this[S.fillColor$1];
    }
    set fillColor(value) {
      super.fillColor = value;
    }
    get overlayColor() {
      return this[S.overlayColor$3];
    }
    set overlayColor(value) {
      super.overlayColor = value;
    }
    get splashRadius() {
      return this[S.splashRadius$2];
    }
    set splashRadius(value) {
      super.splashRadius = value;
    }
    get materialTapTargetSize() {
      return this[S.materialTapTargetSize$2];
    }
    set materialTapTargetSize(value) {
      super.materialTapTargetSize = value;
    }
    get visualDensity() {
      return this[S.visualDensity$1];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    copyWith(opts) {
      let t12, t12$, t12$0, t12$1, t12$2, t12$3;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
      let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
      let splashRadius = opts && 'splashRadius' in opts ? opts.splashRadius : null;
      let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      return new radio_theme.RadioThemeData.new({mouseCursor: (t12 = mouseCursor, t12 == null ? this.mouseCursor : t12), fillColor: (t12$ = fillColor, t12$ == null ? this.fillColor : t12$), overlayColor: (t12$0 = overlayColor, t12$0 == null ? this.overlayColor : t12$0), splashRadius: (t12$1 = splashRadius, t12$1 == null ? this.splashRadius : t12$1), materialTapTargetSize: (t12$2 = materialTapTargetSize, t12$2 == null ? this.materialTapTargetSize : t12$2), visualDensity: (t12$3 = visualDensity, t12$3 == null ? this.visualDensity : t12$3)});
    }
    static lerp(a, b, t) {
      let t12, t12$, t12$0, t12$1, t12$2, t12$3, t12$4, t12$5, t12$6, t12$7, t12$8, t12$9;
      if (t == null) dart.nullFailed(I[44], 99, 75, "t");
      return new radio_theme.RadioThemeData.new({mouseCursor: dart.notNull(t) < 0.5 ? (t12 = a, t12 == null ? null : t12.mouseCursor) : (t12$ = b, t12$ == null ? null : t12$.mouseCursor), fillColor: radio_theme.RadioThemeData._lerpProperties(T$.ColorN(), (t12$0 = a, t12$0 == null ? null : t12$0.fillColor), (t12$1 = b, t12$1 == null ? null : t12$1.fillColor), t, C[243] || CT.C243), materialTapTargetSize: dart.notNull(t) < 0.5 ? (t12$2 = a, t12$2 == null ? null : t12$2.materialTapTargetSize) : (t12$3 = b, t12$3 == null ? null : t12$3.materialTapTargetSize), overlayColor: radio_theme.RadioThemeData._lerpProperties(T$.ColorN(), (t12$4 = a, t12$4 == null ? null : t12$4.overlayColor), (t12$5 = b, t12$5 == null ? null : t12$5.overlayColor), t, C[243] || CT.C243), splashRadius: ui.lerpDouble((t12$6 = a, t12$6 == null ? null : t12$6.splashRadius), (t12$7 = b, t12$7 == null ? null : t12$7.splashRadius), t), visualDensity: dart.notNull(t) < 0.5 ? (t12$8 = a, t12$8 == null ? null : t12$8.visualDensity) : (t12$9 = b, t12$9 == null ? null : t12$9.visualDensity)});
    }
    get hashCode() {
      return ui.hashValues(this.mouseCursor, this.fillColor, this.overlayColor, this.splashRadius, this.materialTapTargetSize, this.visualDensity);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return radio_theme.RadioThemeData.is(other) && dart.equals(other.mouseCursor, this.mouseCursor) && dart.equals(other.fillColor, this.fillColor) && dart.equals(other.overlayColor, this.overlayColor) && other.splashRadius == this.splashRadius && other.materialTapTargetSize == this.materialTapTargetSize && dart.equals(other.visualDensity, this.visualDensity);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[44], 138, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfMouseCursorN()).new("mouseCursor", this.mouseCursor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("fillColor", this.fillColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("overlayColor", this.overlayColor, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("splashRadius", this.splashRadius, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialTapTargetSize()).new("materialTapTargetSize", this.materialTapTargetSize, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfVisualDensity()).new("visualDensity", this.visualDensity, {defaultValue: null}));
    }
    static _lerpProperties(T, a, b, t, lerpFunction) {
      if (t == null) dart.nullFailed(I[44], 151, 12, "t");
      if (lerpFunction == null) dart.nullFailed(I[44], 152, 32, "lerpFunction");
      if (a == null && b == null) return null;
      return new (radio_theme._LerpProperties$(T)).new(a, b, t, lerpFunction);
    }
  };
  (radio_theme.RadioThemeData.new = function(opts) {
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let splashRadius = opts && 'splashRadius' in opts ? opts.splashRadius : null;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    this[S.mouseCursor$4] = mouseCursor;
    this[S.fillColor$1] = fillColor;
    this[S.overlayColor$3] = overlayColor;
    this[S.splashRadius$2] = splashRadius;
    this[S.materialTapTargetSize$2] = materialTapTargetSize;
    this[S.visualDensity$1] = visualDensity;
    ;
  }).prototype = radio_theme.RadioThemeData.prototype;
  dart.addTypeTests(radio_theme.RadioThemeData);
  dart.addTypeCaches(radio_theme.RadioThemeData);
  dart.setMethodSignature(radio_theme.RadioThemeData, () => ({
    __proto__: dart.getMethods(radio_theme.RadioThemeData.__proto__),
    copyWith: dart.fnType(radio_theme.RadioThemeData, [], {fillColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), materialTapTargetSize: dart.nullable(theme_data.MaterialTapTargetSize), mouseCursor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor))), overlayColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), splashRadius: dart.nullable(core.double), visualDensity: dart.nullable(theme_data.VisualDensity)}, {})
  }));
  dart.setLibraryUri(radio_theme.RadioThemeData, I[45]);
  dart.setFieldSignature(radio_theme.RadioThemeData, () => ({
    __proto__: dart.getFields(radio_theme.RadioThemeData.__proto__),
    mouseCursor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor)))),
    fillColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    overlayColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    splashRadius: dart.finalFieldType(dart.nullable(core.double)),
    materialTapTargetSize: dart.finalFieldType(dart.nullable(theme_data.MaterialTapTargetSize)),
    visualDensity: dart.finalFieldType(dart.nullable(theme_data.VisualDensity))
  }));
  dart.defineExtensionMethods(radio_theme.RadioThemeData, ['_equals']);
  dart.defineExtensionAccessors(radio_theme.RadioThemeData, ['hashCode']);
  const _is__LerpProperties_default$0 = Symbol('_is__LerpProperties_default');
  radio_theme._LerpProperties$ = dart.generic(T => {
    class _LerpProperties extends core.Object {
      get a() {
        return this[S.a$2];
      }
      set a(value) {
        super.a = value;
      }
      get b() {
        return this[S.b$2];
      }
      set b(value) {
        super.b = value;
      }
      get t() {
        return this[S.t$2];
      }
      set t(value) {
        super.t = value;
      }
      get lerpFunction() {
        return this[S.lerpFunction$2];
      }
      set lerpFunction(value) {
        super.lerpFunction = value;
      }
      resolve(states) {
        let t12, t12$, t14, t13, t12$0;
        if (states == null) dart.nullFailed(I[44], 170, 32, "states");
        let resolvedA = (t12 = this.a, t12 == null ? null : t12.resolve(states));
        let resolvedB = (t12$ = this.b, t12$ == null ? null : t12$.resolve(states));
        t12$0 = resolvedA;
        t13 = resolvedB;
        t14 = this.t;
        return this.lerpFunction(t12$0, t13, t14);
      }
    }
    (_LerpProperties.new = function(a, b, t, lerpFunction) {
      if (t == null) dart.nullFailed(I[44], 162, 46, "t");
      if (lerpFunction == null) dart.nullFailed(I[44], 162, 54, "lerpFunction");
      this[S.a$2] = a;
      this[S.b$2] = b;
      this[S.t$2] = t;
      this[S.lerpFunction$2] = lerpFunction;
      ;
    }).prototype = _LerpProperties.prototype;
    dart.addTypeTests(_LerpProperties);
    _LerpProperties.prototype[_is__LerpProperties_default$0] = true;
    dart.addTypeCaches(_LerpProperties);
    _LerpProperties[dart.implements] = () => [material_state.MaterialStateProperty$(T)];
    dart.setMethodSignature(_LerpProperties, () => ({
      __proto__: dart.getMethods(_LerpProperties.__proto__),
      resolve: dart.fnType(T, [core.Set$(material_state.MaterialState)])
    }));
    dart.setLibraryUri(_LerpProperties, I[45]);
    dart.setFieldSignature(_LerpProperties, () => ({
      __proto__: dart.getFields(_LerpProperties.__proto__),
      a: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(T))),
      b: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(T))),
      t: dart.finalFieldType(core.double),
      lerpFunction: dart.finalFieldType(dart.fnType(T, [dart.nullable(T), dart.nullable(T), core.double]))
    }));
    return _LerpProperties;
  });
  radio_theme._LerpProperties = radio_theme._LerpProperties$();
  dart.addTypeTests(radio_theme._LerpProperties, _is__LerpProperties_default$0);
  radio_theme.RadioTheme = class RadioTheme extends framework.InheritedWidget {
    get data() {
      return this[S.data$7];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t12, t12$;
      if (context == null) dart.nullFailed(I[44], 209, 41, "context");
      let radioTheme = context.dependOnInheritedWidgetOfExactType(radio_theme.RadioTheme);
      t12$ = (t12 = radioTheme, t12 == null ? null : t12.data);
      return t12$ == null ? theme$.Theme.of(context).radioTheme : t12$;
    }
    updateShouldNotify(oldWidget) {
      radio_theme.RadioTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[44], 215, 38, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (radio_theme.RadioTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[44], 194, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[44], 195, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.data$7] = data;
    radio_theme.RadioTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = radio_theme.RadioTheme.prototype;
  dart.addTypeTests(radio_theme.RadioTheme);
  dart.addTypeCaches(radio_theme.RadioTheme);
  dart.setMethodSignature(radio_theme.RadioTheme, () => ({
    __proto__: dart.getMethods(radio_theme.RadioTheme.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(radio_theme.RadioTheme, I[45]);
  dart.setFieldSignature(radio_theme.RadioTheme, () => ({
    __proto__: dart.getFields(radio_theme.RadioTheme.__proto__),
    data: dart.finalFieldType(radio_theme.RadioThemeData)
  }));
  const Object_Diagnosticable$36$8 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$8.new = function() {
  }).prototype = Object_Diagnosticable$36$8.prototype;
  dart.applyMixin(Object_Diagnosticable$36$8, diagnostics.Diagnosticable);
  progress_indicator_theme.ProgressIndicatorThemeData = class ProgressIndicatorThemeData extends Object_Diagnosticable$36$8 {
    get color() {
      return this[S.color$5];
    }
    set color(value) {
      super.color = value;
    }
    get linearTrackColor() {
      return this[S.linearTrackColor];
    }
    set linearTrackColor(value) {
      super.linearTrackColor = value;
    }
    get linearMinHeight() {
      return this[S.linearMinHeight];
    }
    set linearMinHeight(value) {
      super.linearMinHeight = value;
    }
    get circularTrackColor() {
      return this[S.circularTrackColor];
    }
    set circularTrackColor(value) {
      super.circularTrackColor = value;
    }
    get refreshBackgroundColor() {
      return this[S.refreshBackgroundColor];
    }
    set refreshBackgroundColor(value) {
      super.refreshBackgroundColor = value;
    }
    copyWith(opts) {
      let t12, t12$, t12$0, t12$1, t12$2;
      let color = opts && 'color' in opts ? opts.color : null;
      let linearTrackColor = opts && 'linearTrackColor' in opts ? opts.linearTrackColor : null;
      let linearMinHeight = opts && 'linearMinHeight' in opts ? opts.linearMinHeight : null;
      let circularTrackColor = opts && 'circularTrackColor' in opts ? opts.circularTrackColor : null;
      let refreshBackgroundColor = opts && 'refreshBackgroundColor' in opts ? opts.refreshBackgroundColor : null;
      return new progress_indicator_theme.ProgressIndicatorThemeData.new({color: (t12 = color, t12 == null ? this.color : t12), linearTrackColor: (t12$ = linearTrackColor, t12$ == null ? this.linearTrackColor : t12$), linearMinHeight: (t12$0 = linearMinHeight, t12$0 == null ? this.linearMinHeight : t12$0), circularTrackColor: (t12$1 = circularTrackColor, t12$1 == null ? this.circularTrackColor : t12$1), refreshBackgroundColor: (t12$2 = refreshBackgroundColor, t12$2 == null ? this.refreshBackgroundColor : t12$2)});
    }
    static lerp(a, b, t) {
      let t12, t12$, t12$0, t12$1, t12$2, t12$3, t12$4, t12$5, t12$6, t12$7;
      if (t == null) dart.nullFailed(I[46], 83, 112, "t");
      if (a == null && b == null) return null;
      if (!(t != null)) dart.assertFailed(null, I[46], 86, 12, "t != null");
      return new progress_indicator_theme.ProgressIndicatorThemeData.new({color: ui.Color.lerp((t12 = a, t12 == null ? null : t12.color), (t12$ = b, t12$ == null ? null : t12$.color), t), linearTrackColor: ui.Color.lerp((t12$0 = a, t12$0 == null ? null : t12$0.linearTrackColor), (t12$1 = b, t12$1 == null ? null : t12$1.linearTrackColor), t), linearMinHeight: ui.lerpDouble((t12$2 = a, t12$2 == null ? null : t12$2.linearMinHeight), (t12$3 = b, t12$3 == null ? null : t12$3.linearMinHeight), t), circularTrackColor: ui.Color.lerp((t12$4 = a, t12$4 == null ? null : t12$4.circularTrackColor), (t12$5 = b, t12$5 == null ? null : t12$5.circularTrackColor), t), refreshBackgroundColor: ui.Color.lerp((t12$6 = a, t12$6 == null ? null : t12$6.refreshBackgroundColor), (t12$7 = b, t12$7 == null ? null : t12$7.refreshBackgroundColor), t)});
    }
    get hashCode() {
      return ui.hashValues(this.color, this.linearTrackColor, this.linearMinHeight, this.circularTrackColor, this.refreshBackgroundColor);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return progress_indicator_theme.ProgressIndicatorThemeData.is(other) && dart.equals(other.color, this.color) && dart.equals(other.linearTrackColor, this.linearTrackColor) && other.linearMinHeight == this.linearMinHeight && dart.equals(other.circularTrackColor, this.circularTrackColor) && dart.equals(other.refreshBackgroundColor, this.refreshBackgroundColor);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[46], 122, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("linearTrackColor", this.linearTrackColor, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("linearMinHeight", this.linearMinHeight, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("circularTrackColor", this.circularTrackColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("refreshBackgroundColor", this.refreshBackgroundColor, {defaultValue: null}));
    }
  };
  (progress_indicator_theme.ProgressIndicatorThemeData.new = function(opts) {
    let color = opts && 'color' in opts ? opts.color : null;
    let linearTrackColor = opts && 'linearTrackColor' in opts ? opts.linearTrackColor : null;
    let linearMinHeight = opts && 'linearMinHeight' in opts ? opts.linearMinHeight : null;
    let circularTrackColor = opts && 'circularTrackColor' in opts ? opts.circularTrackColor : null;
    let refreshBackgroundColor = opts && 'refreshBackgroundColor' in opts ? opts.refreshBackgroundColor : null;
    this[S.color$5] = color;
    this[S.linearTrackColor] = linearTrackColor;
    this[S.linearMinHeight] = linearMinHeight;
    this[S.circularTrackColor] = circularTrackColor;
    this[S.refreshBackgroundColor] = refreshBackgroundColor;
    ;
  }).prototype = progress_indicator_theme.ProgressIndicatorThemeData.prototype;
  dart.addTypeTests(progress_indicator_theme.ProgressIndicatorThemeData);
  dart.addTypeCaches(progress_indicator_theme.ProgressIndicatorThemeData);
  dart.setMethodSignature(progress_indicator_theme.ProgressIndicatorThemeData, () => ({
    __proto__: dart.getMethods(progress_indicator_theme.ProgressIndicatorThemeData.__proto__),
    copyWith: dart.fnType(progress_indicator_theme.ProgressIndicatorThemeData, [], {circularTrackColor: dart.nullable(ui.Color), color: dart.nullable(ui.Color), linearMinHeight: dart.nullable(core.double), linearTrackColor: dart.nullable(ui.Color), refreshBackgroundColor: dart.nullable(ui.Color)}, {})
  }));
  dart.setLibraryUri(progress_indicator_theme.ProgressIndicatorThemeData, I[47]);
  dart.setFieldSignature(progress_indicator_theme.ProgressIndicatorThemeData, () => ({
    __proto__: dart.getFields(progress_indicator_theme.ProgressIndicatorThemeData.__proto__),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    linearTrackColor: dart.finalFieldType(dart.nullable(ui.Color)),
    linearMinHeight: dart.finalFieldType(dart.nullable(core.double)),
    circularTrackColor: dart.finalFieldType(dart.nullable(ui.Color)),
    refreshBackgroundColor: dart.finalFieldType(dart.nullable(ui.Color))
  }));
  dart.defineExtensionMethods(progress_indicator_theme.ProgressIndicatorThemeData, ['_equals']);
  dart.defineExtensionAccessors(progress_indicator_theme.ProgressIndicatorThemeData, ['hashCode']);
  progress_indicator_theme.ProgressIndicatorTheme = class ProgressIndicatorTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S.data$8];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t12, t12$;
      if (context == null) dart.nullFailed(I[46], 173, 53, "context");
      let progressIndicatorTheme = context.dependOnInheritedWidgetOfExactType(progress_indicator_theme.ProgressIndicatorTheme);
      t12$ = (t12 = progressIndicatorTheme, t12 == null ? null : t12.data);
      return t12$ == null ? theme$.Theme.of(context).progressIndicatorTheme : t12$;
    }
    wrap(context, child) {
      if (context == null) dart.nullFailed(I[46], 179, 28, "context");
      if (child == null) dart.nullFailed(I[46], 179, 44, "child");
      return new progress_indicator_theme.ProgressIndicatorTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[272] || CT.C272});
    }
    updateShouldNotify(oldWidget) {
      progress_indicator_theme.ProgressIndicatorTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[46], 184, 50, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (progress_indicator_theme.ProgressIndicatorTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[46], 158, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[46], 159, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.data$8] = data;
    if (!(data != null)) dart.assertFailed(null, I[46], 160, 15, "data != null");
    progress_indicator_theme.ProgressIndicatorTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = progress_indicator_theme.ProgressIndicatorTheme.prototype;
  dart.addTypeTests(progress_indicator_theme.ProgressIndicatorTheme);
  dart.addTypeCaches(progress_indicator_theme.ProgressIndicatorTheme);
  dart.setMethodSignature(progress_indicator_theme.ProgressIndicatorTheme, () => ({
    __proto__: dart.getMethods(progress_indicator_theme.ProgressIndicatorTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(progress_indicator_theme.ProgressIndicatorTheme, I[47]);
  dart.setFieldSignature(progress_indicator_theme.ProgressIndicatorTheme, () => ({
    __proto__: dart.getFields(progress_indicator_theme.ProgressIndicatorTheme.__proto__),
    data: dart.finalFieldType(progress_indicator_theme.ProgressIndicatorThemeData)
  }));
  const Object_Diagnosticable$36$9 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$9.new = function() {
  }).prototype = Object_Diagnosticable$36$9.prototype;
  dart.applyMixin(Object_Diagnosticable$36$9, diagnostics.Diagnosticable);
  popup_menu_theme.PopupMenuThemeData = class PopupMenuThemeData extends Object_Diagnosticable$36$9 {
    get color() {
      return this[S.color$6];
    }
    set color(value) {
      super.color = value;
    }
    get shape() {
      return this[S.shape$4];
    }
    set shape(value) {
      super.shape = value;
    }
    get elevation() {
      return this[S.elevation$5];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get textStyle() {
      return this[S.textStyle$1];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get enableFeedback() {
      return this[S.enableFeedback$3];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    copyWith(opts) {
      let t12, t12$, t12$0, t12$1, t12$2;
      let color = opts && 'color' in opts ? opts.color : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      return new popup_menu_theme.PopupMenuThemeData.new({color: (t12 = color, t12 == null ? this.color : t12), shape: (t12$ = shape, t12$ == null ? this.shape : t12$), elevation: (t12$0 = elevation, t12$0 == null ? this.elevation : t12$0), textStyle: (t12$1 = textStyle, t12$1 == null ? this.textStyle : t12$1), enableFeedback: (t12$2 = enableFeedback, t12$2 == null ? this.enableFeedback : t12$2)});
    }
    static lerp(a, b, t) {
      let t12, t12$, t12$0, t12$1, t12$2, t12$3, t12$4, t12$5, t12$6, t12$7;
      if (t == null) dart.nullFailed(I[48], 83, 88, "t");
      if (!(t != null)) dart.assertFailed(null, I[48], 84, 12, "t != null");
      if (a == null && b == null) return null;
      return new popup_menu_theme.PopupMenuThemeData.new({color: ui.Color.lerp((t12 = a, t12 == null ? null : t12.color), (t12$ = b, t12$ == null ? null : t12$.color), t), shape: borders.ShapeBorder.lerp((t12$0 = a, t12$0 == null ? null : t12$0.shape), (t12$1 = b, t12$1 == null ? null : t12$1.shape), t), elevation: ui.lerpDouble((t12$2 = a, t12$2 == null ? null : t12$2.elevation), (t12$3 = b, t12$3 == null ? null : t12$3.elevation), t), textStyle: text_style.TextStyle.lerp((t12$4 = a, t12$4 == null ? null : t12$4.textStyle), (t12$5 = b, t12$5 == null ? null : t12$5.textStyle), t), enableFeedback: dart.notNull(t) < 0.5 ? (t12$6 = a, t12$6 == null ? null : t12$6.enableFeedback) : (t12$7 = b, t12$7 == null ? null : t12$7.enableFeedback)});
    }
    get hashCode() {
      return ui.hashValues(this.color, this.shape, this.elevation, this.textStyle, this.enableFeedback);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return popup_menu_theme.PopupMenuThemeData.is(other) && other.elevation == this.elevation && dart.equals(other.color, this.color) && dart.equals(other.shape, this.shape) && dart.equals(other.textStyle, this.textStyle) && other.enableFeedback == this.enableFeedback;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[48], 122, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("text style", this.textStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("enableFeedback", this.enableFeedback, {defaultValue: null}));
    }
  };
  (popup_menu_theme.PopupMenuThemeData.new = function(opts) {
    let color = opts && 'color' in opts ? opts.color : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
    this[S.color$6] = color;
    this[S.shape$4] = shape;
    this[S.elevation$5] = elevation;
    this[S.textStyle$1] = textStyle;
    this[S.enableFeedback$3] = enableFeedback;
    ;
  }).prototype = popup_menu_theme.PopupMenuThemeData.prototype;
  dart.addTypeTests(popup_menu_theme.PopupMenuThemeData);
  dart.addTypeCaches(popup_menu_theme.PopupMenuThemeData);
  dart.setMethodSignature(popup_menu_theme.PopupMenuThemeData, () => ({
    __proto__: dart.getMethods(popup_menu_theme.PopupMenuThemeData.__proto__),
    copyWith: dart.fnType(popup_menu_theme.PopupMenuThemeData, [], {color: dart.nullable(ui.Color), elevation: dart.nullable(core.double), enableFeedback: dart.nullable(core.bool), shape: dart.nullable(borders.ShapeBorder), textStyle: dart.nullable(text_style.TextStyle)}, {})
  }));
  dart.setLibraryUri(popup_menu_theme.PopupMenuThemeData, I[49]);
  dart.setFieldSignature(popup_menu_theme.PopupMenuThemeData, () => ({
    __proto__: dart.getFields(popup_menu_theme.PopupMenuThemeData.__proto__),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    textStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    enableFeedback: dart.finalFieldType(dart.nullable(core.bool))
  }));
  dart.defineExtensionMethods(popup_menu_theme.PopupMenuThemeData, ['_equals']);
  dart.defineExtensionAccessors(popup_menu_theme.PopupMenuThemeData, ['hashCode']);
  popup_menu_theme.PopupMenuTheme = class PopupMenuTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S.data$9];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t12, t12$;
      if (context == null) dart.nullFailed(I[48], 160, 45, "context");
      let popupMenuTheme = context.dependOnInheritedWidgetOfExactType(popup_menu_theme.PopupMenuTheme);
      t12$ = (t12 = popupMenuTheme, t12 == null ? null : t12.data);
      return t12$ == null ? theme$.Theme.of(context).popupMenuTheme : t12$;
    }
    wrap(context, child) {
      if (context == null) dart.nullFailed(I[48], 166, 28, "context");
      if (child == null) dart.nullFailed(I[48], 166, 44, "child");
      return new popup_menu_theme.PopupMenuTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[273] || CT.C273});
    }
    updateShouldNotify(oldWidget) {
      popup_menu_theme.PopupMenuTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[48], 171, 42, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (popup_menu_theme.PopupMenuTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[48], 144, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[48], 145, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.data$9] = data;
    if (!(data != null)) dart.assertFailed(null, I[48], 146, 15, "data != null");
    popup_menu_theme.PopupMenuTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = popup_menu_theme.PopupMenuTheme.prototype;
  dart.addTypeTests(popup_menu_theme.PopupMenuTheme);
  dart.addTypeCaches(popup_menu_theme.PopupMenuTheme);
  dart.setMethodSignature(popup_menu_theme.PopupMenuTheme, () => ({
    __proto__: dart.getMethods(popup_menu_theme.PopupMenuTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(popup_menu_theme.PopupMenuTheme, I[49]);
  dart.setFieldSignature(popup_menu_theme.PopupMenuTheme, () => ({
    __proto__: dart.getFields(popup_menu_theme.PopupMenuTheme.__proto__),
    data: dart.finalFieldType(popup_menu_theme.PopupMenuThemeData)
  }));
  page_transitions_theme._FadeUpwardsPageTransition = class _FadeUpwardsPageTransition extends framework.StatelessWidget {
    build(context) {
      if (context == null) dart.nullFailed(I[50], 35, 29, "context");
      return new transitions.SlideTransition.new({position: this[S._positionAnimation], child: new transitions.FadeTransition.new({opacity: this[S._opacityAnimation], child: this.child, $creationLocationd_0dea112b090073317d4: C[274] || CT.C274}), $creationLocationd_0dea112b090073317d4: C[275] || CT.C275});
    }
  };
  (page_transitions_theme._FadeUpwardsPageTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let routeAnimation = opts && 'routeAnimation' in opts ? opts.routeAnimation : null;
    if (routeAnimation == null) dart.nullFailed(I[50], 16, 32, "routeAnimation");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[50], 17, 19, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this.child = child;
    this[S._positionAnimation] = routeAnimation.drive(ui.Offset, page_transitions_theme._FadeUpwardsPageTransition._bottomUpTween.chain(page_transitions_theme._FadeUpwardsPageTransition._fastOutSlowInTween));
    this[S._opacityAnimation] = routeAnimation.drive(core.double, page_transitions_theme._FadeUpwardsPageTransition._easeInTween);
    page_transitions_theme._FadeUpwardsPageTransition.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = page_transitions_theme._FadeUpwardsPageTransition.prototype;
  dart.addTypeTests(page_transitions_theme._FadeUpwardsPageTransition);
  dart.addTypeCaches(page_transitions_theme._FadeUpwardsPageTransition);
  dart.setMethodSignature(page_transitions_theme._FadeUpwardsPageTransition, () => ({
    __proto__: dart.getMethods(page_transitions_theme._FadeUpwardsPageTransition.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(page_transitions_theme._FadeUpwardsPageTransition, I[51]);
  dart.setFieldSignature(page_transitions_theme._FadeUpwardsPageTransition, () => ({
    __proto__: dart.getFields(page_transitions_theme._FadeUpwardsPageTransition.__proto__),
    [S._positionAnimation]: dart.finalFieldType(animation.Animation$(ui.Offset)),
    [S._opacityAnimation]: dart.finalFieldType(animation.Animation$(core.double)),
    child: dart.finalFieldType(framework.Widget)
  }));
  dart.defineLazy(page_transitions_theme._FadeUpwardsPageTransition, {
    /*page_transitions_theme._FadeUpwardsPageTransition._bottomUpTween*/get _bottomUpTween() {
      return new (T$.TweenOfOffset()).new({begin: C[276] || CT.C276, end: ui.Offset.zero});
    },
    /*page_transitions_theme._FadeUpwardsPageTransition._fastOutSlowInTween*/get _fastOutSlowInTween() {
      return new tween.CurveTween.new({curve: curves.Curves.fastOutSlowIn});
    },
    /*page_transitions_theme._FadeUpwardsPageTransition._easeInTween*/get _easeInTween() {
      return new tween.CurveTween.new({curve: curves.Curves.easeIn});
    }
  }, false);
  page_transitions_theme._OpenUpwardsPageTransition = class _OpenUpwardsPageTransition extends framework.StatelessWidget {
    get animation() {
      return this[S.animation$1];
    }
    set animation(value) {
      super.animation = value;
    }
    get secondaryAnimation() {
      return this[S.secondaryAnimation];
    }
    set secondaryAnimation(value) {
      super.secondaryAnimation = value;
    }
    get child() {
      return this[S.child$4];
    }
    set child(value) {
      super.child = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[50], 83, 29, "context");
      return new layout_builder.LayoutBuilder.new({builder: dart.fn((context, constraints) => {
          if (context == null) dart.nullFailed(I[50], 85, 30, "context");
          if (constraints == null) dart.nullFailed(I[50], 85, 54, "constraints");
          let size = constraints.biggest;
          let primaryAnimation = new animations.CurvedAnimation.new({parent: this.animation, curve: page_transitions_theme._OpenUpwardsPageTransition._transitionCurve, reverseCurve: page_transitions_theme._OpenUpwardsPageTransition._transitionCurve.flipped});
          let clipAnimation = new (T$.TweenOfdouble()).new({begin: 0.0, end: size.height}).animate(primaryAnimation);
          let opacityAnimation = page_transitions_theme._OpenUpwardsPageTransition._scrimOpacityTween.animate(primaryAnimation);
          let primaryTranslationAnimation = page_transitions_theme._OpenUpwardsPageTransition._primaryTranslationTween.animate(primaryAnimation);
          let secondaryTranslationAnimation = page_transitions_theme._OpenUpwardsPageTransition._secondaryTranslationTween.animate(new animations.CurvedAnimation.new({parent: this.secondaryAnimation, curve: page_transitions_theme._OpenUpwardsPageTransition._transitionCurve, reverseCurve: page_transitions_theme._OpenUpwardsPageTransition._transitionCurve.flipped}));
          return new transitions.AnimatedBuilder.new({animation: this.animation, builder: dart.fn((context, child) => {
              if (context == null) dart.nullFailed(I[50], 113, 34, "context");
              return new container.Container.new({color: colors$.Colors.black.withOpacity(opacityAnimation.value), alignment: alignment.Alignment.bottomLeft, child: new basic.ClipRect.new({child: new basic.SizedBox.new({height: clipAnimation.value, child: new basic.OverflowBox.new({alignment: alignment.Alignment.bottomLeft, maxHeight: size.height, child: child, $creationLocationd_0dea112b090073317d4: C[277] || CT.C277}), $creationLocationd_0dea112b090073317d4: C[278] || CT.C278}), $creationLocationd_0dea112b090073317d4: C[279] || CT.C279}), $creationLocationd_0dea112b090073317d4: C[280] || CT.C280});
            }, T$.BuildContextAndWidgetNToContainer()), child: new transitions.AnimatedBuilder.new({animation: this.secondaryAnimation, child: new basic.FractionalTranslation.new({translation: primaryTranslationAnimation.value, child: this.child, $creationLocationd_0dea112b090073317d4: C[281] || CT.C281}), builder: dart.fn((context, child) => {
                if (context == null) dart.nullFailed(I[50], 135, 36, "context");
                return new basic.FractionalTranslation.new({translation: secondaryTranslationAnimation.value, child: child, $creationLocationd_0dea112b090073317d4: C[282] || CT.C282});
              }, T$.BuildContextAndWidgetNToFractionalTranslation()), $creationLocationd_0dea112b090073317d4: C[283] || CT.C283}), $creationLocationd_0dea112b090073317d4: C[284] || CT.C284});
        }, T$.BuildContextAndBoxConstraintsToAnimatedBuilder()), $creationLocationd_0dea112b090073317d4: C[285] || CT.C285});
    }
  };
  (page_transitions_theme._OpenUpwardsPageTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    if (animation == null) dart.nullFailed(I[50], 51, 19, "animation");
    let secondaryAnimation = opts && 'secondaryAnimation' in opts ? opts.secondaryAnimation : null;
    if (secondaryAnimation == null) dart.nullFailed(I[50], 52, 19, "secondaryAnimation");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[50], 53, 19, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.animation$1] = animation;
    this[S.secondaryAnimation] = secondaryAnimation;
    this[S.child$4] = child;
    page_transitions_theme._OpenUpwardsPageTransition.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = page_transitions_theme._OpenUpwardsPageTransition.prototype;
  dart.addTypeTests(page_transitions_theme._OpenUpwardsPageTransition);
  dart.addTypeCaches(page_transitions_theme._OpenUpwardsPageTransition);
  dart.setMethodSignature(page_transitions_theme._OpenUpwardsPageTransition, () => ({
    __proto__: dart.getMethods(page_transitions_theme._OpenUpwardsPageTransition.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(page_transitions_theme._OpenUpwardsPageTransition, I[51]);
  dart.setFieldSignature(page_transitions_theme._OpenUpwardsPageTransition, () => ({
    __proto__: dart.getFields(page_transitions_theme._OpenUpwardsPageTransition.__proto__),
    animation: dart.finalFieldType(animation.Animation$(core.double)),
    secondaryAnimation: dart.finalFieldType(animation.Animation$(core.double)),
    child: dart.finalFieldType(framework.Widget)
  }));
  dart.defineLazy(page_transitions_theme._OpenUpwardsPageTransition, {
    /*page_transitions_theme._OpenUpwardsPageTransition._primaryTranslationTween*/get _primaryTranslationTween() {
      return new (T$.TweenOfOffset()).new({begin: C[286] || CT.C286, end: ui.Offset.zero});
    },
    /*page_transitions_theme._OpenUpwardsPageTransition._secondaryTranslationTween*/get _secondaryTranslationTween() {
      return new (T$.TweenOfOffset()).new({begin: ui.Offset.zero, end: C[287] || CT.C287});
    },
    /*page_transitions_theme._OpenUpwardsPageTransition._scrimOpacityTween*/get _scrimOpacityTween() {
      return new (T$.TweenOfdouble()).new({begin: 0.0, end: 0.25});
    },
    /*page_transitions_theme._OpenUpwardsPageTransition._transitionCurve*/get _transitionCurve() {
      return C[288] || CT.C288;
    }
  }, false);
  page_transitions_theme._ZoomPageTransition = class _ZoomPageTransition extends framework.StatelessWidget {
    get animation() {
      return this[S.animation$2];
    }
    set animation(value) {
      super.animation = value;
    }
    get secondaryAnimation() {
      return this[S.secondaryAnimation$1];
    }
    set secondaryAnimation(value) {
      super.secondaryAnimation = value;
    }
    get child() {
      return this[S.child$5];
    }
    set child(value) {
      super.child = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[50], 204, 29, "context");
      return new dual_transition_builder.DualTransitionBuilder.new({animation: this.animation, forwardBuilder: dart.fn((context, animation, child) => {
          if (context == null) dart.nullFailed(I[50], 208, 22, "context");
          if (animation == null) dart.nullFailed(I[50], 209, 27, "animation");
          return new page_transitions_theme._ZoomEnterTransition.new({animation: animation, child: child, $creationLocationd_0dea112b090073317d4: C[289] || CT.C289});
        }, T$.BuildContextAndAnimationOfdoubleAndWidgetNTo_ZoomEnterTransition()), reverseBuilder: dart.fn((context, animation, child) => {
          if (context == null) dart.nullFailed(I[50], 218, 22, "context");
          if (animation == null) dart.nullFailed(I[50], 219, 27, "animation");
          return new page_transitions_theme._ZoomExitTransition.new({animation: animation, reverse: true, child: child, $creationLocationd_0dea112b090073317d4: C[290] || CT.C290});
        }, T$.BuildContextAndAnimationOfdoubleAndWidgetNTo_ZoomExitTransition()), child: new dual_transition_builder.DualTransitionBuilder.new({animation: new animations.ReverseAnimation.new(this.secondaryAnimation), forwardBuilder: dart.fn((context, animation, child) => {
            if (context == null) dart.nullFailed(I[50], 231, 24, "context");
            if (animation == null) dart.nullFailed(I[50], 232, 29, "animation");
            return new page_transitions_theme._ZoomEnterTransition.new({animation: animation, reverse: true, child: child, $creationLocationd_0dea112b090073317d4: C[291] || CT.C291});
          }, T$.BuildContextAndAnimationOfdoubleAndWidgetNTo_ZoomEnterTransition()), reverseBuilder: dart.fn((context, animation, child) => {
            if (context == null) dart.nullFailed(I[50], 242, 24, "context");
            if (animation == null) dart.nullFailed(I[50], 243, 29, "animation");
            return new page_transitions_theme._ZoomExitTransition.new({animation: animation, child: child, $creationLocationd_0dea112b090073317d4: C[292] || CT.C292});
          }, T$.BuildContextAndAnimationOfdoubleAndWidgetNTo_ZoomExitTransition()), child: this.child, $creationLocationd_0dea112b090073317d4: C[293] || CT.C293}), $creationLocationd_0dea112b090073317d4: C[294] || CT.C294});
    }
  };
  (page_transitions_theme._ZoomPageTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    if (animation == null) dart.nullFailed(I[50], 157, 19, "animation");
    let secondaryAnimation = opts && 'secondaryAnimation' in opts ? opts.secondaryAnimation : null;
    if (secondaryAnimation == null) dart.nullFailed(I[50], 158, 19, "secondaryAnimation");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.animation$2] = animation;
    this[S.secondaryAnimation$1] = secondaryAnimation;
    this[S.child$5] = child;
    if (!(animation != null)) dart.assertFailed(null, I[50], 160, 15, "animation != null");
    if (!(secondaryAnimation != null)) dart.assertFailed(null, I[50], 161, 15, "secondaryAnimation != null");
    page_transitions_theme._ZoomPageTransition.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = page_transitions_theme._ZoomPageTransition.prototype;
  dart.addTypeTests(page_transitions_theme._ZoomPageTransition);
  dart.addTypeCaches(page_transitions_theme._ZoomPageTransition);
  dart.setMethodSignature(page_transitions_theme._ZoomPageTransition, () => ({
    __proto__: dart.getMethods(page_transitions_theme._ZoomPageTransition.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(page_transitions_theme._ZoomPageTransition, I[51]);
  dart.setFieldSignature(page_transitions_theme._ZoomPageTransition, () => ({
    __proto__: dart.getFields(page_transitions_theme._ZoomPageTransition.__proto__),
    animation: dart.finalFieldType(animation.Animation$(core.double)),
    secondaryAnimation: dart.finalFieldType(animation.Animation$(core.double)),
    child: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  dart.defineLazy(page_transitions_theme._ZoomPageTransition, {
    /*page_transitions_theme._ZoomPageTransition.fastOutExtraSlowInTweenSequenceItems*/get fastOutExtraSlowInTweenSequenceItems() {
      return T$.JSArrayOfTweenSequenceItemOfdouble().of([new (T$.TweenSequenceItemOfdouble()).new({tween: new (T$.TweenOfdouble()).new({begin: 0.0, end: 0.4}).chain(new tween.CurveTween.new({curve: C[295] || CT.C295})), weight: 0.166666}), new (T$.TweenSequenceItemOfdouble()).new({tween: new (T$.TweenOfdouble()).new({begin: 0.4, end: 1.0}).chain(new tween.CurveTween.new({curve: C[296] || CT.C296})), weight: 1.0 - 0.166666})]);
    },
    /*page_transitions_theme._ZoomPageTransition._scaleCurveSequence*/get _scaleCurveSequence() {
      return new (T$.TweenSequenceOfdouble()).new(page_transitions_theme._ZoomPageTransition.fastOutExtraSlowInTweenSequenceItems);
    }
  }, false);
  page_transitions_theme._ZoomEnterTransition = class _ZoomEnterTransition extends framework.StatelessWidget {
    get animation() {
      return this[S.animation$3];
    }
    set animation(value) {
      super.animation = value;
    }
    get child() {
      return this[S.child$6];
    }
    set child(value) {
      super.child = value;
    }
    get reverse() {
      return this[S.reverse];
    }
    set reverse(value) {
      super.reverse = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[50], 292, 29, "context");
      let opacity = 0.0;
      if (!dart.test(this.reverse) && this.animation.status != animation.AnimationStatus.completed) {
        opacity = dart.nullCheck(page_transitions_theme._ZoomEnterTransition._scrimOpacityTween.evaluate(this.animation));
      }
      let fadeTransition = dart.test(this.reverse) ? animations.kAlwaysCompleteAnimation : page_transitions_theme._ZoomEnterTransition._fadeInTransition.animate(this.animation);
      let scaleTransition = (dart.test(this.reverse) ? page_transitions_theme._ZoomEnterTransition._scaleDownTransition : page_transitions_theme._ZoomEnterTransition._scaleUpTransition).animate(this.animation);
      return new transitions.AnimatedBuilder.new({animation: this.animation, builder: dart.fn((context, child) => {
          if (context == null) dart.nullFailed(I[50], 319, 30, "context");
          return new container.Container.new({color: colors$.Colors.black.withOpacity(opacity), child: child, $creationLocationd_0dea112b090073317d4: C[297] || CT.C297});
        }, T$.BuildContextAndWidgetNToContainer()), child: new transitions.FadeTransition.new({opacity: fadeTransition, child: new transitions.ScaleTransition.new({scale: scaleTransition, child: this.child, $creationLocationd_0dea112b090073317d4: C[298] || CT.C298}), $creationLocationd_0dea112b090073317d4: C[299] || CT.C299}), $creationLocationd_0dea112b090073317d4: C[300] || CT.C300});
    }
  };
  (page_transitions_theme._ZoomEnterTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    if (animation == null) dart.nullFailed(I[50], 260, 19, "animation");
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    if (reverse == null) dart.nullFailed(I[50], 261, 10, "reverse");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.animation$3] = animation;
    this[S.reverse] = reverse;
    this[S.child$6] = child;
    if (!(animation != null)) dart.assertFailed(null, I[50], 263, 15, "animation != null");
    if (!(reverse != null)) dart.assertFailed(null, I[50], 264, 15, "reverse != null");
    page_transitions_theme._ZoomEnterTransition.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = page_transitions_theme._ZoomEnterTransition.prototype;
  dart.addTypeTests(page_transitions_theme._ZoomEnterTransition);
  dart.addTypeCaches(page_transitions_theme._ZoomEnterTransition);
  dart.setMethodSignature(page_transitions_theme._ZoomEnterTransition, () => ({
    __proto__: dart.getMethods(page_transitions_theme._ZoomEnterTransition.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(page_transitions_theme._ZoomEnterTransition, I[51]);
  dart.setFieldSignature(page_transitions_theme._ZoomEnterTransition, () => ({
    __proto__: dart.getFields(page_transitions_theme._ZoomEnterTransition.__proto__),
    animation: dart.finalFieldType(animation.Animation$(core.double)),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    reverse: dart.finalFieldType(core.bool)
  }));
  dart.defineLazy(page_transitions_theme._ZoomEnterTransition, {
    /*page_transitions_theme._ZoomEnterTransition._fadeInTransition*/get _fadeInTransition() {
      return new (T$.TweenOfdouble()).new({begin: 0.0, end: 1.0}).chain(new tween.CurveTween.new({curve: C[301] || CT.C301}));
    },
    /*page_transitions_theme._ZoomEnterTransition._scaleDownTransition*/get _scaleDownTransition() {
      return new (T$.TweenOfdouble()).new({begin: 1.1, end: 1.0}).chain(page_transitions_theme._ZoomPageTransition._scaleCurveSequence);
    },
    /*page_transitions_theme._ZoomEnterTransition._scaleUpTransition*/get _scaleUpTransition() {
      return new (T$.TweenOfdouble()).new({begin: 0.85, end: 1.0}).chain(page_transitions_theme._ZoomPageTransition._scaleCurveSequence);
    },
    /*page_transitions_theme._ZoomEnterTransition._scrimOpacityTween*/get _scrimOpacityTween() {
      return new (T$.TweenOfdoubleN()).new({begin: 0.0, end: 0.6}).chain(new tween.CurveTween.new({curve: C[302] || CT.C302}));
    }
  }, false);
  page_transitions_theme._ZoomExitTransition = class _ZoomExitTransition extends framework.StatelessWidget {
    get animation() {
      return this[S.animation$4];
    }
    set animation(value) {
      super.animation = value;
    }
    get reverse() {
      return this[S.reverse$1];
    }
    set reverse(value) {
      super.reverse = value;
    }
    get child() {
      return this[S.child$7];
    }
    set child(value) {
      super.child = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[50], 366, 29, "context");
      let fadeTransition = dart.test(this.reverse) ? page_transitions_theme._ZoomExitTransition._fadeOutTransition.animate(this.animation) : animations.kAlwaysCompleteAnimation;
      let scaleTransition = (dart.test(this.reverse) ? page_transitions_theme._ZoomExitTransition._scaleDownTransition : page_transitions_theme._ZoomExitTransition._scaleUpTransition).animate(this.animation);
      return new transitions.FadeTransition.new({opacity: fadeTransition, child: new transitions.ScaleTransition.new({scale: scaleTransition, child: this.child, $creationLocationd_0dea112b090073317d4: C[303] || CT.C303}), $creationLocationd_0dea112b090073317d4: C[304] || CT.C304});
    }
  };
  (page_transitions_theme._ZoomExitTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    if (animation == null) dart.nullFailed(I[50], 339, 19, "animation");
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    if (reverse == null) dart.nullFailed(I[50], 340, 10, "reverse");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.animation$4] = animation;
    this[S.reverse$1] = reverse;
    this[S.child$7] = child;
    if (!(animation != null)) dart.assertFailed(null, I[50], 342, 15, "animation != null");
    if (!(reverse != null)) dart.assertFailed(null, I[50], 343, 15, "reverse != null");
    page_transitions_theme._ZoomExitTransition.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = page_transitions_theme._ZoomExitTransition.prototype;
  dart.addTypeTests(page_transitions_theme._ZoomExitTransition);
  dart.addTypeCaches(page_transitions_theme._ZoomExitTransition);
  dart.setMethodSignature(page_transitions_theme._ZoomExitTransition, () => ({
    __proto__: dart.getMethods(page_transitions_theme._ZoomExitTransition.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(page_transitions_theme._ZoomExitTransition, I[51]);
  dart.setFieldSignature(page_transitions_theme._ZoomExitTransition, () => ({
    __proto__: dart.getFields(page_transitions_theme._ZoomExitTransition.__proto__),
    animation: dart.finalFieldType(animation.Animation$(core.double)),
    reverse: dart.finalFieldType(core.bool),
    child: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  dart.defineLazy(page_transitions_theme._ZoomExitTransition, {
    /*page_transitions_theme._ZoomExitTransition._fadeOutTransition*/get _fadeOutTransition() {
      return new (T$.TweenOfdouble()).new({begin: 1.0, end: 0.0}).chain(new tween.CurveTween.new({curve: C[305] || CT.C305}));
    },
    /*page_transitions_theme._ZoomExitTransition._scaleUpTransition*/get _scaleUpTransition() {
      return new (T$.TweenOfdouble()).new({begin: 1.0, end: 1.05}).chain(page_transitions_theme._ZoomPageTransition._scaleCurveSequence);
    },
    /*page_transitions_theme._ZoomExitTransition._scaleDownTransition*/get _scaleDownTransition() {
      return new (T$.TweenOfdouble()).new({begin: 1.0, end: 0.9}).chain(page_transitions_theme._ZoomPageTransition._scaleCurveSequence);
    }
  }, false);
  page_transitions_theme.PageTransitionsBuilder = class PageTransitionsBuilder extends core.Object {};
  (page_transitions_theme.PageTransitionsBuilder.new = function() {
    ;
  }).prototype = page_transitions_theme.PageTransitionsBuilder.prototype;
  dart.addTypeTests(page_transitions_theme.PageTransitionsBuilder);
  dart.addTypeCaches(page_transitions_theme.PageTransitionsBuilder);
  dart.setLibraryUri(page_transitions_theme.PageTransitionsBuilder, I[51]);
  page_transitions_theme.FadeUpwardsPageTransitionsBuilder = class FadeUpwardsPageTransitionsBuilder extends page_transitions_theme.PageTransitionsBuilder {
    buildTransitions(T, route, context, animation, secondaryAnimation, child) {
      if (animation == null) dart.nullFailed(I[50], 444, 23, "animation");
      if (child == null) dart.nullFailed(I[50], 446, 12, "child");
      return new page_transitions_theme._FadeUpwardsPageTransition.new({routeAnimation: animation, child: child, $creationLocationd_0dea112b090073317d4: C[306] || CT.C306});
    }
  };
  (page_transitions_theme.FadeUpwardsPageTransitionsBuilder.new = function() {
    page_transitions_theme.FadeUpwardsPageTransitionsBuilder.__proto__.new.call(this);
    ;
  }).prototype = page_transitions_theme.FadeUpwardsPageTransitionsBuilder.prototype;
  dart.addTypeTests(page_transitions_theme.FadeUpwardsPageTransitionsBuilder);
  dart.addTypeCaches(page_transitions_theme.FadeUpwardsPageTransitionsBuilder);
  dart.setMethodSignature(page_transitions_theme.FadeUpwardsPageTransitionsBuilder, () => ({
    __proto__: dart.getMethods(page_transitions_theme.FadeUpwardsPageTransitionsBuilder.__proto__),
    buildTransitions: dart.gFnType(T => [framework.Widget, [dart.nullable(pages.PageRoute$(T)), dart.nullable(framework.BuildContext), animation.Animation$(core.double), dart.nullable(animation.Animation$(core.double)), framework.Widget]], T => [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(page_transitions_theme.FadeUpwardsPageTransitionsBuilder, I[51]);
  page_transitions_theme.OpenUpwardsPageTransitionsBuilder = class OpenUpwardsPageTransitionsBuilder extends page_transitions_theme.PageTransitionsBuilder {
    buildTransitions(T, route, context, animation, secondaryAnimation, child) {
      if (animation == null) dart.nullFailed(I[50], 472, 23, "animation");
      if (secondaryAnimation == null) dart.nullFailed(I[50], 473, 23, "secondaryAnimation");
      if (child == null) dart.nullFailed(I[50], 474, 12, "child");
      return new page_transitions_theme._OpenUpwardsPageTransition.new({animation: animation, secondaryAnimation: secondaryAnimation, child: child, $creationLocationd_0dea112b090073317d4: C[307] || CT.C307});
    }
  };
  (page_transitions_theme.OpenUpwardsPageTransitionsBuilder.new = function() {
    page_transitions_theme.OpenUpwardsPageTransitionsBuilder.__proto__.new.call(this);
    ;
  }).prototype = page_transitions_theme.OpenUpwardsPageTransitionsBuilder.prototype;
  dart.addTypeTests(page_transitions_theme.OpenUpwardsPageTransitionsBuilder);
  dart.addTypeCaches(page_transitions_theme.OpenUpwardsPageTransitionsBuilder);
  dart.setMethodSignature(page_transitions_theme.OpenUpwardsPageTransitionsBuilder, () => ({
    __proto__: dart.getMethods(page_transitions_theme.OpenUpwardsPageTransitionsBuilder.__proto__),
    buildTransitions: dart.gFnType(T => [framework.Widget, [dart.nullable(pages.PageRoute$(T)), dart.nullable(framework.BuildContext), animation.Animation$(core.double), animation.Animation$(core.double), framework.Widget]], T => [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(page_transitions_theme.OpenUpwardsPageTransitionsBuilder, I[51]);
  page_transitions_theme.ZoomPageTransitionsBuilder = class ZoomPageTransitionsBuilder extends page_transitions_theme.PageTransitionsBuilder {
    buildTransitions(T, route, context, animation, secondaryAnimation, child) {
      if (animation == null) dart.nullFailed(I[50], 504, 23, "animation");
      if (secondaryAnimation == null) dart.nullFailed(I[50], 505, 23, "secondaryAnimation");
      return new page_transitions_theme._ZoomPageTransition.new({animation: animation, secondaryAnimation: secondaryAnimation, child: child, $creationLocationd_0dea112b090073317d4: C[308] || CT.C308});
    }
  };
  (page_transitions_theme.ZoomPageTransitionsBuilder.new = function() {
    page_transitions_theme.ZoomPageTransitionsBuilder.__proto__.new.call(this);
    ;
  }).prototype = page_transitions_theme.ZoomPageTransitionsBuilder.prototype;
  dart.addTypeTests(page_transitions_theme.ZoomPageTransitionsBuilder);
  dart.addTypeCaches(page_transitions_theme.ZoomPageTransitionsBuilder);
  dart.setMethodSignature(page_transitions_theme.ZoomPageTransitionsBuilder, () => ({
    __proto__: dart.getMethods(page_transitions_theme.ZoomPageTransitionsBuilder.__proto__),
    buildTransitions: dart.gFnType(T => [framework.Widget, [dart.nullable(pages.PageRoute$(T)), dart.nullable(framework.BuildContext), animation.Animation$(core.double), animation.Animation$(core.double), dart.nullable(framework.Widget)]], T => [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(page_transitions_theme.ZoomPageTransitionsBuilder, I[51]);
  page_transitions_theme.CupertinoPageTransitionsBuilder = class CupertinoPageTransitionsBuilder extends page_transitions_theme.PageTransitionsBuilder {
    buildTransitions(T, route, context, animation, secondaryAnimation, child) {
      if (route == null) dart.nullFailed(I[50], 532, 18, "route");
      if (context == null) dart.nullFailed(I[50], 533, 18, "context");
      if (animation == null) dart.nullFailed(I[50], 534, 23, "animation");
      if (secondaryAnimation == null) dart.nullFailed(I[50], 535, 23, "secondaryAnimation");
      if (child == null) dart.nullFailed(I[50], 536, 12, "child");
      return route$.CupertinoRouteTransitionMixin.buildPageTransitions(T, route, context, animation, secondaryAnimation, child);
    }
  };
  (page_transitions_theme.CupertinoPageTransitionsBuilder.new = function() {
    page_transitions_theme.CupertinoPageTransitionsBuilder.__proto__.new.call(this);
    ;
  }).prototype = page_transitions_theme.CupertinoPageTransitionsBuilder.prototype;
  dart.addTypeTests(page_transitions_theme.CupertinoPageTransitionsBuilder);
  dart.addTypeCaches(page_transitions_theme.CupertinoPageTransitionsBuilder);
  dart.setMethodSignature(page_transitions_theme.CupertinoPageTransitionsBuilder, () => ({
    __proto__: dart.getMethods(page_transitions_theme.CupertinoPageTransitionsBuilder.__proto__),
    buildTransitions: dart.gFnType(T => [framework.Widget, [pages.PageRoute$(T), framework.BuildContext, animation.Animation$(core.double), animation.Animation$(core.double), framework.Widget]], T => [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(page_transitions_theme.CupertinoPageTransitionsBuilder, I[51]);
  const Object_Diagnosticable$36$10 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$10.new = function() {
  }).prototype = Object_Diagnosticable$36$10.prototype;
  dart.applyMixin(Object_Diagnosticable$36$10, diagnostics.Diagnosticable);
  page_transitions_theme.PageTransitionsTheme = class PageTransitionsTheme extends Object_Diagnosticable$36$10 {
    get [S._builders$1]() {
      return this[S._builders];
    }
    set [S._builders$1](value) {
      super[S._builders$1] = value;
    }
    get builders() {
      return this[S._builders$1];
    }
    buildTransitions(T, route, context, animation, secondaryAnimation, child) {
      let t12, t12$;
      if (route == null) dart.nullFailed(I[50], 595, 18, "route");
      if (context == null) dart.nullFailed(I[50], 596, 18, "context");
      if (animation == null) dart.nullFailed(I[50], 597, 23, "animation");
      if (secondaryAnimation == null) dart.nullFailed(I[50], 598, 23, "secondaryAnimation");
      if (child == null) dart.nullFailed(I[50], 599, 12, "child");
      let platform = theme$.Theme.of(context).platform;
      if (dart.test(route$.CupertinoRouteTransitionMixin.isPopGestureInProgress(route))) platform = platform$.TargetPlatform.iOS;
      let matchingBuilder = this.builders[S.$_get](platform);
      t12$ = (t12 = matchingBuilder, t12 == null ? null : t12.buildTransitions(T, route, context, animation, secondaryAnimation, child));
      return t12$ == null ? child : t12$;
    }
    [S._all](builders) {
      if (builders == null) dart.nullFailed(I[50], 612, 82, "builders");
      return platform$.TargetPlatform.values[S.$map](T$.PageTransitionsBuilderN(), dart.fn(platform => {
        if (platform == null) dart.nullFailed(I[50], 613, 54, "platform");
        return builders[S.$_get](platform);
      }, T$.TargetPlatformToPageTransitionsBuilderN()))[S.$toList]();
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      if (page_transitions_theme.PageTransitionsTheme.is(other) && this.builders == other.builders) return true;
      return page_transitions_theme.PageTransitionsTheme.is(other) && dart.test(collections.listEquals(T$.PageTransitionsBuilderN(), this[S._all](other.builders), this[S._all](this.builders)));
    }
    get hashCode() {
      return ui.hashList(this[S._all](this.builders));
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[50], 632, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfMapOfTargetPlatform$PageTransitionsBuilder()).new("builders", this.builders, {defaultValue: page_transitions_theme.PageTransitionsTheme._defaultBuilders}));
    }
  };
  (page_transitions_theme.PageTransitionsTheme.new = function(opts) {
    let builders = opts && 'builders' in opts ? opts.builders : C[309] || CT.C309;
    if (builders == null) dart.nullFailed(I[50], 572, 49, "builders");
    this[S._builders] = builders;
    ;
  }).prototype = page_transitions_theme.PageTransitionsTheme.prototype;
  dart.addTypeTests(page_transitions_theme.PageTransitionsTheme);
  dart.addTypeCaches(page_transitions_theme.PageTransitionsTheme);
  dart.setMethodSignature(page_transitions_theme.PageTransitionsTheme, () => ({
    __proto__: dart.getMethods(page_transitions_theme.PageTransitionsTheme.__proto__),
    buildTransitions: dart.gFnType(T => [framework.Widget, [pages.PageRoute$(T), framework.BuildContext, animation.Animation$(core.double), animation.Animation$(core.double), framework.Widget]], T => [dart.nullable(core.Object)]),
    [S._all]: dart.fnType(core.List$(dart.nullable(page_transitions_theme.PageTransitionsBuilder)), [core.Map$(platform$.TargetPlatform, page_transitions_theme.PageTransitionsBuilder)])
  }));
  dart.setGetterSignature(page_transitions_theme.PageTransitionsTheme, () => ({
    __proto__: dart.getGetters(page_transitions_theme.PageTransitionsTheme.__proto__),
    builders: core.Map$(platform$.TargetPlatform, page_transitions_theme.PageTransitionsBuilder)
  }));
  dart.setLibraryUri(page_transitions_theme.PageTransitionsTheme, I[51]);
  dart.setFieldSignature(page_transitions_theme.PageTransitionsTheme, () => ({
    __proto__: dart.getFields(page_transitions_theme.PageTransitionsTheme.__proto__),
    [S._builders$1]: dart.finalFieldType(core.Map$(platform$.TargetPlatform, page_transitions_theme.PageTransitionsBuilder))
  }));
  dart.defineExtensionMethods(page_transitions_theme.PageTransitionsTheme, ['_equals']);
  dart.defineExtensionAccessors(page_transitions_theme.PageTransitionsTheme, ['hashCode']);
  dart.defineLazy(page_transitions_theme.PageTransitionsTheme, {
    /*page_transitions_theme.PageTransitionsTheme._defaultBuilders*/get _defaultBuilders() {
      return C[310] || CT.C310;
    },
    /*page_transitions_theme.PageTransitionsTheme._defaultWebBuilders*/get _defaultWebBuilders() {
      return C[309] || CT.C309;
    }
  }, false);
  const Object_Diagnosticable$36$11 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$11.new = function() {
  }).prototype = Object_Diagnosticable$36$11.prototype;
  dart.applyMixin(Object_Diagnosticable$36$11, diagnostics.Diagnosticable);
  outlined_button_theme.OutlinedButtonThemeData = class OutlinedButtonThemeData extends Object_Diagnosticable$36$11 {
    get style() {
      return this[S.style$2];
    }
    set style(value) {
      super.style = value;
    }
    static lerp(a, b, t) {
      let t12, t12$;
      if (t == null) dart.nullFailed(I[52], 48, 103, "t");
      if (!(t != null)) dart.assertFailed(null, I[52], 49, 13, "t != null");
      if (a == null && b == null) return null;
      return new outlined_button_theme.OutlinedButtonThemeData.new({style: button_style.ButtonStyle.lerp((t12 = a, t12 == null ? null : t12.style), (t12$ = b, t12$ == null ? null : t12$.style), t)});
    }
    get hashCode() {
      return dart.hashCode(this.style);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return outlined_button_theme.OutlinedButtonThemeData.is(other) && dart.equals(other.style, this.style);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[52], 72, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfButtonStyle()).new("style", this.style, {defaultValue: null}));
    }
  };
  (outlined_button_theme.OutlinedButtonThemeData.new = function(opts) {
    let style = opts && 'style' in opts ? opts.style : null;
    this[S.style$2] = style;
    ;
  }).prototype = outlined_button_theme.OutlinedButtonThemeData.prototype;
  dart.addTypeTests(outlined_button_theme.OutlinedButtonThemeData);
  dart.addTypeCaches(outlined_button_theme.OutlinedButtonThemeData);
  dart.setLibraryUri(outlined_button_theme.OutlinedButtonThemeData, I[53]);
  dart.setFieldSignature(outlined_button_theme.OutlinedButtonThemeData, () => ({
    __proto__: dart.getFields(outlined_button_theme.OutlinedButtonThemeData.__proto__),
    style: dart.finalFieldType(dart.nullable(button_style.ButtonStyle))
  }));
  dart.defineExtensionMethods(outlined_button_theme.OutlinedButtonThemeData, ['_equals']);
  dart.defineExtensionAccessors(outlined_button_theme.OutlinedButtonThemeData, ['hashCode']);
  outlined_button_theme.OutlinedButtonTheme = class OutlinedButtonTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S.data$10];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t12, t12$;
      if (context == null) dart.nullFailed(I[52], 112, 50, "context");
      let buttonTheme = context.dependOnInheritedWidgetOfExactType(outlined_button_theme.OutlinedButtonTheme);
      t12$ = (t12 = buttonTheme, t12 == null ? null : t12.data);
      return t12$ == null ? theme$.Theme.of(context).outlinedButtonTheme : t12$;
    }
    wrap(context, child) {
      if (context == null) dart.nullFailed(I[52], 118, 28, "context");
      if (child == null) dart.nullFailed(I[52], 118, 44, "child");
      return new outlined_button_theme.OutlinedButtonTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[313] || CT.C313});
    }
    updateShouldNotify(oldWidget) {
      outlined_button_theme.OutlinedButtonTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[52], 123, 47, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (outlined_button_theme.OutlinedButtonTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[52], 95, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[52], 96, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.data$10] = data;
    if (!(data != null)) dart.assertFailed(null, I[52], 97, 15, "data != null");
    outlined_button_theme.OutlinedButtonTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = outlined_button_theme.OutlinedButtonTheme.prototype;
  dart.addTypeTests(outlined_button_theme.OutlinedButtonTheme);
  dart.addTypeCaches(outlined_button_theme.OutlinedButtonTheme);
  dart.setMethodSignature(outlined_button_theme.OutlinedButtonTheme, () => ({
    __proto__: dart.getMethods(outlined_button_theme.OutlinedButtonTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(outlined_button_theme.OutlinedButtonTheme, I[53]);
  dart.setFieldSignature(outlined_button_theme.OutlinedButtonTheme, () => ({
    __proto__: dart.getFields(outlined_button_theme.OutlinedButtonTheme.__proto__),
    data: dart.finalFieldType(outlined_button_theme.OutlinedButtonThemeData)
  }));
  navigation_rail.NavigationRail = class NavigationRail extends framework.StatefulWidget {
    get backgroundColor() {
      return this[S.backgroundColor$5];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get extended() {
      return this[S.extended];
    }
    set extended(value) {
      super.extended = value;
    }
    get leading() {
      return this[S.leading];
    }
    set leading(value) {
      super.leading = value;
    }
    get trailing() {
      return this[S.trailing];
    }
    set trailing(value) {
      super.trailing = value;
    }
    get destinations() {
      return this[S.destinations];
    }
    set destinations(value) {
      super.destinations = value;
    }
    get selectedIndex() {
      return this[S.selectedIndex];
    }
    set selectedIndex(value) {
      super.selectedIndex = value;
    }
    get onDestinationSelected() {
      return this[S.onDestinationSelected];
    }
    set onDestinationSelected(value) {
      super.onDestinationSelected = value;
    }
    get elevation() {
      return this[S.elevation$6];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get groupAlignment() {
      return this[S.groupAlignment];
    }
    set groupAlignment(value) {
      super.groupAlignment = value;
    }
    get labelType() {
      return this[S$.labelType];
    }
    set labelType(value) {
      super.labelType = value;
    }
    get unselectedLabelTextStyle() {
      return this[S$.unselectedLabelTextStyle];
    }
    set unselectedLabelTextStyle(value) {
      super.unselectedLabelTextStyle = value;
    }
    get selectedLabelTextStyle() {
      return this[S$.selectedLabelTextStyle];
    }
    set selectedLabelTextStyle(value) {
      super.selectedLabelTextStyle = value;
    }
    get unselectedIconTheme() {
      return this[S$.unselectedIconTheme];
    }
    set unselectedIconTheme(value) {
      super.unselectedIconTheme = value;
    }
    get selectedIconTheme() {
      return this[S$.selectedIconTheme];
    }
    set selectedIconTheme(value) {
      super.selectedIconTheme = value;
    }
    get minWidth() {
      return this[S$.minWidth];
    }
    set minWidth(value) {
      super.minWidth = value;
    }
    get minExtendedWidth() {
      return this[S$.minExtendedWidth];
    }
    set minExtendedWidth(value) {
      super.minExtendedWidth = value;
    }
    static extendedAnimation(context) {
      if (context == null) dart.nullFailed(I[54], 382, 59, "context");
      return dart.nullCheck(context.dependOnInheritedWidgetOfExactType(navigation_rail._ExtendedNavigationRailAnimation)).animation;
    }
    createState() {
      return new navigation_rail._NavigationRailState.new();
    }
  };
  (navigation_rail.NavigationRail.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let extended = opts && 'extended' in opts ? opts.extended : false;
    if (extended == null) dart.nullFailed(I[54], 128, 10, "extended");
    let leading = opts && 'leading' in opts ? opts.leading : null;
    let trailing = opts && 'trailing' in opts ? opts.trailing : null;
    let destinations = opts && 'destinations' in opts ? opts.destinations : null;
    if (destinations == null) dart.nullFailed(I[54], 131, 19, "destinations");
    let selectedIndex = opts && 'selectedIndex' in opts ? opts.selectedIndex : null;
    if (selectedIndex == null) dart.nullFailed(I[54], 132, 19, "selectedIndex");
    let onDestinationSelected = opts && 'onDestinationSelected' in opts ? opts.onDestinationSelected : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let groupAlignment = opts && 'groupAlignment' in opts ? opts.groupAlignment : null;
    let labelType = opts && 'labelType' in opts ? opts.labelType : null;
    let unselectedLabelTextStyle = opts && 'unselectedLabelTextStyle' in opts ? opts.unselectedLabelTextStyle : null;
    let selectedLabelTextStyle = opts && 'selectedLabelTextStyle' in opts ? opts.selectedLabelTextStyle : null;
    let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
    let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
    let minWidth = opts && 'minWidth' in opts ? opts.minWidth : null;
    let minExtendedWidth = opts && 'minExtendedWidth' in opts ? opts.minExtendedWidth : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.backgroundColor$5] = backgroundColor;
    this[S.extended] = extended;
    this[S.leading] = leading;
    this[S.trailing] = trailing;
    this[S.destinations] = destinations;
    this[S.selectedIndex] = selectedIndex;
    this[S.onDestinationSelected] = onDestinationSelected;
    this[S.elevation$6] = elevation;
    this[S.groupAlignment] = groupAlignment;
    this[S$.labelType] = labelType;
    this[S$.unselectedLabelTextStyle] = unselectedLabelTextStyle;
    this[S$.selectedLabelTextStyle] = selectedLabelTextStyle;
    this[S$.unselectedIconTheme] = unselectedIconTheme;
    this[S$.selectedIconTheme] = selectedIconTheme;
    this[S$.minWidth] = minWidth;
    this[S$.minExtendedWidth] = minExtendedWidth;
    if (!(destinations != null && dart.notNull(destinations[S.$length]) >= 2)) dart.assertFailed(null, I[54], 143, 16, "destinations != null && destinations.length >= 2");
    if (!(selectedIndex != null)) dart.assertFailed(null, I[54], 144, 16, "selectedIndex != null");
    if (!(0 <= dart.notNull(selectedIndex) && dart.notNull(selectedIndex) < dart.notNull(destinations[S.$length]))) dart.assertFailed(null, I[54], 145, 16, "0 <= selectedIndex && selectedIndex < destinations.length");
    if (!(elevation == null || dart.notNull(elevation) > 0)) dart.assertFailed(null, I[54], 146, 16, "elevation == null || elevation > 0");
    if (!(minWidth == null || dart.notNull(minWidth) > 0)) dart.assertFailed(null, I[54], 147, 16, "minWidth == null || minWidth > 0");
    if (!(minExtendedWidth == null || dart.notNull(minExtendedWidth) > 0)) dart.assertFailed(null, I[54], 148, 16, "minExtendedWidth == null || minExtendedWidth > 0");
    if (!(minWidth == null || minExtendedWidth == null || dart.notNull(minExtendedWidth) >= dart.notNull(minWidth))) dart.assertFailed(null, I[54], 149, 16, "(minWidth == null || minExtendedWidth == null) || minExtendedWidth >= minWidth");
    if (!(extended != null)) dart.assertFailed(null, I[54], 150, 16, "extended != null");
    if (!(!dart.test(extended) || labelType == null || labelType == navigation_rail.NavigationRailLabelType.none)) dart.assertFailed(null, I[54], 151, 16, "!extended || (labelType == null || labelType == NavigationRailLabelType.none)");
    navigation_rail.NavigationRail.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigation_rail.NavigationRail.prototype;
  dart.addTypeTests(navigation_rail.NavigationRail);
  dart.addTypeCaches(navigation_rail.NavigationRail);
  dart.setMethodSignature(navigation_rail.NavigationRail, () => ({
    __proto__: dart.getMethods(navigation_rail.NavigationRail.__proto__),
    createState: dart.fnType(framework.State$(navigation_rail.NavigationRail), [])
  }));
  dart.setLibraryUri(navigation_rail.NavigationRail, I[55]);
  dart.setFieldSignature(navigation_rail.NavigationRail, () => ({
    __proto__: dart.getFields(navigation_rail.NavigationRail.__proto__),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    extended: dart.finalFieldType(core.bool),
    leading: dart.finalFieldType(dart.nullable(framework.Widget)),
    trailing: dart.finalFieldType(dart.nullable(framework.Widget)),
    destinations: dart.finalFieldType(core.List$(navigation_rail.NavigationRailDestination)),
    selectedIndex: dart.finalFieldType(core.int),
    onDestinationSelected: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.int]))),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    groupAlignment: dart.finalFieldType(dart.nullable(core.double)),
    labelType: dart.finalFieldType(dart.nullable(navigation_rail.NavigationRailLabelType)),
    unselectedLabelTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    selectedLabelTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    unselectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    selectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    minWidth: dart.finalFieldType(dart.nullable(core.double)),
    minExtendedWidth: dart.finalFieldType(dart.nullable(core.double))
  }));
  const State_TickerProviderStateMixin$36$ = class State_TickerProviderStateMixin extends framework.State$(navigation_rail.NavigationRail) {};
  (State_TickerProviderStateMixin$36$.new = function() {
    ticker_provider.TickerProviderStateMixin$(navigation_rail.NavigationRail)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$, ticker_provider.TickerProviderStateMixin$(navigation_rail.NavigationRail));
  navigation_rail._NavigationRailState = class _NavigationRailState extends State_TickerProviderStateMixin$36$ {
    get [S$._destinationControllers]() {
      let t12;
      return dart.test(this[S$.___NavigationRailState__destinationControllers_isSet]) ? (t12 = this[S$.___NavigationRailState__destinationControllers], t12) : dart.throw(new _internal.LateError.fieldNI("_destinationControllers"));
    }
    set [S$._destinationControllers](t12) {
      if (t12 == null) dart.nullFailed(I[54], 391, 34, "null");
      this[S$.___NavigationRailState__destinationControllers_isSet] = true;
      this[S$.___NavigationRailState__destinationControllers] = t12;
    }
    get [S$._destinationAnimations]() {
      let t13;
      return dart.test(this[S$.___NavigationRailState__destinationAnimations_isSet]) ? (t13 = this[S$.___NavigationRailState__destinationAnimations], t13) : dart.throw(new _internal.LateError.fieldNI("_destinationAnimations"));
    }
    set [S$._destinationAnimations](t13) {
      if (t13 == null) dart.nullFailed(I[54], 392, 32, "null");
      this[S$.___NavigationRailState__destinationAnimations_isSet] = true;
      this[S$.___NavigationRailState__destinationAnimations] = t13;
    }
    get [S$._extendedController]() {
      let t14;
      return dart.test(this[S$.___NavigationRailState__extendedController_isSet]) ? (t14 = this[S$.___NavigationRailState__extendedController], t14) : dart.throw(new _internal.LateError.fieldNI("_extendedController"));
    }
    set [S$._extendedController](t14) {
      if (t14 == null) dart.nullFailed(I[54], 393, 28, "null");
      this[S$.___NavigationRailState__extendedController_isSet] = true;
      this[S$.___NavigationRailState__extendedController] = t14;
    }
    get [S$._extendedAnimation]() {
      let t15;
      return dart.test(this[S$.___NavigationRailState__extendedAnimation_isSet]) ? (t15 = this[S$.___NavigationRailState__extendedAnimation], t15) : dart.throw(new _internal.LateError.fieldNI("_extendedAnimation"));
    }
    set [S$._extendedAnimation](t15) {
      if (t15 == null) dart.nullFailed(I[54], 394, 26, "null");
      this[S$.___NavigationRailState__extendedAnimation_isSet] = true;
      this[S$.___NavigationRailState__extendedAnimation] = t15;
    }
    initState() {
      super.initState();
      this[S$._initControllers]();
    }
    dispose() {
      this[S$._disposeControllers]();
      super.dispose();
    }
    didUpdateWidget(oldWidget) {
      navigation_rail.NavigationRail.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[54], 409, 39, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (this.widget.extended != oldWidget.extended) {
        if (dart.test(this.widget.extended)) {
          this[S$._extendedController].forward();
        } else {
          this[S$._extendedController].reverse();
        }
      }
      if (this.widget.destinations[S.$length] != oldWidget.destinations[S.$length]) {
        this[S$._resetState]();
        return;
      }
      if (this.widget.selectedIndex != oldWidget.selectedIndex) {
        this[S$._destinationControllers][S.$_get](oldWidget.selectedIndex).reverse();
        this[S$._destinationControllers][S.$_get](this.widget.selectedIndex).forward();
        return;
      }
    }
    build(context) {
      let t16, t16$, t16$0, t16$1, t16$2, t16$3, t16$4, t16$5, t16$6, t16$7, t16$8, t16$9, t16$10, t16$11, t16$12, t16$13, t16$14, t16$15, t16$16, t16$17, t16$18, t16$19, t16$20, t16$21, t16$22, t16$23;
      if (context == null) dart.nullFailed(I[54], 434, 29, "context");
      let theme = theme$.Theme.of(context);
      let navigationRailTheme = navigation_rail_theme.NavigationRailTheme.of(context);
      let localizations = material_localizations.MaterialLocalizations.of(context);
      let backgroundColor = (t16$ = (t16 = this.widget.backgroundColor, t16 == null ? navigationRailTheme.backgroundColor : t16), t16$ == null ? theme.colorScheme.surface : t16$);
      let elevation = (t16$1 = (t16$0 = this.widget.elevation, t16$0 == null ? navigationRailTheme.elevation : t16$0), t16$1 == null ? 0.0 : t16$1);
      let minWidth = (t16$2 = this.widget.minWidth, t16$2 == null ? 72 : t16$2);
      let minExtendedWidth = (t16$3 = this.widget.minExtendedWidth, t16$3 == null ? 256 : t16$3);
      let baseSelectedColor = theme.colorScheme.primary;
      let baseUnselectedColor = theme.colorScheme.onSurface.withOpacity(0.64);
      let defaultUnselectedIconTheme = (t16$4 = this.widget.unselectedIconTheme, t16$4 == null ? navigationRailTheme.unselectedIconTheme : t16$4);
      let unselectedIconTheme = new icon_theme_data.IconThemeData.new({size: (t16$6 = (t16$5 = defaultUnselectedIconTheme, t16$5 == null ? null : t16$5.size), t16$6 == null ? 24.0 : t16$6), color: (t16$8 = (t16$7 = defaultUnselectedIconTheme, t16$7 == null ? null : t16$7.color), t16$8 == null ? theme.colorScheme.onSurface : t16$8), opacity: (t16$10 = (t16$9 = defaultUnselectedIconTheme, t16$9 == null ? null : t16$9.opacity), t16$10 == null ? 0.64 : t16$10)});
      let defaultSelectedIconTheme = (t16$11 = this.widget.selectedIconTheme, t16$11 == null ? navigationRailTheme.selectedIconTheme : t16$11);
      let selectedIconTheme = new icon_theme_data.IconThemeData.new({size: (t16$13 = (t16$12 = defaultSelectedIconTheme, t16$12 == null ? null : t16$12.size), t16$13 == null ? 24.0 : t16$13), color: (t16$15 = (t16$14 = defaultSelectedIconTheme, t16$14 == null ? null : t16$14.color), t16$15 == null ? theme.colorScheme.primary : t16$15), opacity: (t16$17 = (t16$16 = defaultSelectedIconTheme, t16$16 == null ? null : t16$16.opacity), t16$17 == null ? 1.0 : t16$17)});
      let unselectedLabelTextStyle = dart.nullCheck(theme.textTheme.bodyText1).copyWith({color: baseUnselectedColor}).merge((t16$18 = this.widget.unselectedLabelTextStyle, t16$18 == null ? navigationRailTheme.unselectedLabelTextStyle : t16$18));
      let selectedLabelTextStyle = dart.nullCheck(theme.textTheme.bodyText1).copyWith({color: baseSelectedColor}).merge((t16$19 = this.widget.selectedLabelTextStyle, t16$19 == null ? navigationRailTheme.selectedLabelTextStyle : t16$19));
      let groupAlignment = (t16$21 = (t16$20 = this.widget.groupAlignment, t16$20 == null ? navigationRailTheme.groupAlignment : t16$20), t16$21 == null ? -1.0 : t16$21);
      let labelType = (t16$23 = (t16$22 = this.widget.labelType, t16$22 == null ? navigationRailTheme.labelType : t16$22), t16$23 == null ? navigation_rail.NavigationRailLabelType.none : t16$23);
      return new navigation_rail._ExtendedNavigationRailAnimation.new({animation: this[S$._extendedAnimation], child: new basic.Semantics.new({explicitChildNodes: true, child: new material.Material.new({elevation: elevation, color: backgroundColor, child: new basic.Column.new({children: (() => {
                let t16 = T$.JSArrayOfWidget().of([navigation_rail._verticalSpacer]);
                if (this.widget.leading != null) t16[S.$addAll](T$.JSArrayOfWidget().of([new basic.ConstrainedBox.new({constraints: new box$.BoxConstraints.new({minWidth: dart.nullCheck(ui.lerpDouble(minWidth, minExtendedWidth, this[S$._extendedAnimation].value))}), child: this.widget.leading, $creationLocationd_0dea112b090073317d4: C[314] || CT.C314}), navigation_rail._verticalSpacer]));
                t16[S.$add](new basic.Expanded.new({child: new basic.Align.new({alignment: new alignment.Alignment.new(0.0, groupAlignment), child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, children: (() => {
                        let t17 = T$.JSArrayOfWidget().of([]);
                        for (let i = 0; i < dart.notNull(this.widget.destinations[S.$length]); i = i + 1)
                          t17[S.$add](new navigation_rail._RailDestination.new({minWidth: minWidth, minExtendedWidth: minExtendedWidth, extendedTransitionAnimation: this[S$._extendedAnimation], selected: this.widget.selectedIndex === i, icon: this.widget.selectedIndex === i ? this.widget.destinations[S.$_get](i).selectedIcon : this.widget.destinations[S.$_get](i).icon, label: this.widget.destinations[S.$_get](i).label, destinationAnimation: this[S$._destinationAnimations][S.$_get](i), labelType: labelType, iconTheme: this.widget.selectedIndex === i ? selectedIconTheme : unselectedIconTheme, labelTextStyle: this.widget.selectedIndex === i ? selectedLabelTextStyle : unselectedLabelTextStyle, padding: this.widget.destinations[S.$_get](i).padding, onTap: dart.fn(() => {
                              if (this.widget.onDestinationSelected != null) dart.nullCheck(this.widget.onDestinationSelected)(i);
                            }, T$.VoidTovoid()), indexLabel: localizations.tabLabel({tabIndex: i + 1, tabCount: this.widget.destinations[S.$length]}), $creationLocationd_0dea112b090073317d4: C[315] || CT.C315}));
                        if (this.widget.trailing != null) t17[S.$add](new basic.ConstrainedBox.new({constraints: new box$.BoxConstraints.new({minWidth: dart.nullCheck(ui.lerpDouble(minWidth, minExtendedWidth, this[S$._extendedAnimation].value))}), child: this.widget.trailing, $creationLocationd_0dea112b090073317d4: C[316] || CT.C316}));
                        return t17;
                      })(), $creationLocationd_0dea112b090073317d4: C[317] || CT.C317}), $creationLocationd_0dea112b090073317d4: C[318] || CT.C318}), $creationLocationd_0dea112b090073317d4: C[319] || CT.C319}));
                return t16;
              })(), $creationLocationd_0dea112b090073317d4: C[320] || CT.C320}), $creationLocationd_0dea112b090073317d4: C[321] || CT.C321}), $creationLocationd_0dea112b090073317d4: C[322] || CT.C322}), $creationLocationd_0dea112b090073317d4: C[323] || CT.C323});
    }
    [S$._disposeControllers]() {
      for (let controller of this[S$._destinationControllers]) {
        controller.dispose();
      }
      this[S$._extendedController].dispose();
    }
    [S$._initControllers]() {
      this[S$._destinationControllers] = T$.ListOfAnimationController().generate(this.widget.destinations[S.$length], dart.fn(index => {
        let t18;
        if (index == null) dart.nullFailed(I[54], 536, 99, "index");
        t18 = new animation_controller.AnimationController.new({duration: theme$.kThemeAnimationDuration, vsync: this});
        return (() => {
          t18.addListener(dart.bind(this, S$._rebuild));
          return t18;
        })();
      }, T$.intToAnimationController()));
      this[S$._destinationAnimations] = this[S$._destinationControllers][S.$map](T$.AnimationOfdouble(), dart.fn(controller => {
        if (controller == null) dart.nullFailed(I[54], 542, 79, "controller");
        return controller.view;
      }, T$.AnimationControllerToAnimationOfdouble()))[S.$toList]();
      this[S$._destinationControllers][S.$_get](this.widget.selectedIndex).value = 1.0;
      this[S$._extendedController] = new animation_controller.AnimationController.new({duration: theme$.kThemeAnimationDuration, vsync: this, value: dart.test(this.widget.extended) ? 1.0 : 0.0});
      this[S$._extendedAnimation] = new animations.CurvedAnimation.new({parent: this[S$._extendedController], curve: curves.Curves.easeInOut});
      this[S$._extendedController].addListener(dart.fn(() => {
        this[S$._rebuild]();
      }, T$.VoidTovoid()));
    }
    [S$._resetState]() {
      this[S$._disposeControllers]();
      this[S$._initControllers]();
    }
    [S$._rebuild]() {
      this.setState(dart.fn(() => {
      }, T$.VoidTovoid()));
    }
  };
  (navigation_rail._NavigationRailState.new = function() {
    this[S$.___NavigationRailState__destinationControllers] = null;
    this[S$.___NavigationRailState__destinationControllers_isSet] = false;
    this[S$.___NavigationRailState__destinationAnimations] = null;
    this[S$.___NavigationRailState__destinationAnimations_isSet] = false;
    this[S$.___NavigationRailState__extendedController] = null;
    this[S$.___NavigationRailState__extendedController_isSet] = false;
    this[S$.___NavigationRailState__extendedAnimation] = null;
    this[S$.___NavigationRailState__extendedAnimation_isSet] = false;
    navigation_rail._NavigationRailState.__proto__.new.call(this);
    ;
  }).prototype = navigation_rail._NavigationRailState.prototype;
  dart.addTypeTests(navigation_rail._NavigationRailState);
  dart.addTypeCaches(navigation_rail._NavigationRailState);
  dart.setMethodSignature(navigation_rail._NavigationRailState, () => ({
    __proto__: dart.getMethods(navigation_rail._NavigationRailState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [S$._disposeControllers]: dart.fnType(dart.void, []),
    [S$._initControllers]: dart.fnType(dart.void, []),
    [S$._resetState]: dart.fnType(dart.void, []),
    [S$._rebuild]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(navigation_rail._NavigationRailState, () => ({
    __proto__: dart.getGetters(navigation_rail._NavigationRailState.__proto__),
    [S$._destinationControllers]: core.List$(animation_controller.AnimationController),
    [S$._destinationAnimations]: core.List$(animation.Animation$(core.double)),
    [S$._extendedController]: animation_controller.AnimationController,
    [S$._extendedAnimation]: animation.Animation$(core.double)
  }));
  dart.setSetterSignature(navigation_rail._NavigationRailState, () => ({
    __proto__: dart.getSetters(navigation_rail._NavigationRailState.__proto__),
    [S$._destinationControllers]: core.List$(animation_controller.AnimationController),
    [S$._destinationAnimations]: core.List$(animation.Animation$(core.double)),
    [S$._extendedController]: animation_controller.AnimationController,
    [S$._extendedAnimation]: animation.Animation$(core.double)
  }));
  dart.setLibraryUri(navigation_rail._NavigationRailState, I[55]);
  dart.setFieldSignature(navigation_rail._NavigationRailState, () => ({
    __proto__: dart.getFields(navigation_rail._NavigationRailState.__proto__),
    [S$.___NavigationRailState__destinationControllers]: dart.fieldType(dart.nullable(core.List$(animation_controller.AnimationController))),
    [S$.___NavigationRailState__destinationControllers_isSet]: dart.fieldType(core.bool),
    [S$.___NavigationRailState__destinationAnimations]: dart.fieldType(dart.nullable(core.List$(animation.Animation$(core.double)))),
    [S$.___NavigationRailState__destinationAnimations_isSet]: dart.fieldType(core.bool),
    [S$.___NavigationRailState__extendedController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$.___NavigationRailState__extendedController_isSet]: dart.fieldType(core.bool),
    [S$.___NavigationRailState__extendedAnimation]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
    [S$.___NavigationRailState__extendedAnimation_isSet]: dart.fieldType(core.bool)
  }));
  navigation_rail._RailDestination = class _RailDestination extends framework.StatelessWidget {
    build(context) {
      let t18, t18$, t18$0, t18$1;
      if (context == null) dart.nullFailed(I[54], 621, 29, "context");
      let themedIcon = new icon_theme.IconTheme.new({data: this.iconTheme, child: this.icon, $creationLocationd_0dea112b090073317d4: C[324] || CT.C324});
      let styledLabel = new text$.DefaultTextStyle.new({style: this.labelTextStyle, child: this.label, $creationLocationd_0dea112b090073317d4: C[325] || CT.C325});
      let content = null;
      switch (this.labelType) {
        case C[339] || CT.C339:
        {
          let iconPart = new basic.SizedBox.new({width: this.minWidth, height: this.minWidth, child: new basic.Align.new({alignment: alignment.Alignment.center, child: themedIcon, $creationLocationd_0dea112b090073317d4: C[326] || CT.C326}), $creationLocationd_0dea112b090073317d4: C[327] || CT.C327});
          if (this.extendedTransitionAnimation.value === 0) {
            content = new basic.Padding.new({padding: (t18 = this.padding, t18 == null ? edge_insets.EdgeInsets.zero : t18), child: new basic.Stack.new({children: T$.JSArrayOfWidget().of([iconPart, new basic.SizedBox.new({width: 0.0, height: 0.0, child: new basic.Opacity.new({alwaysIncludeSemantics: true, opacity: 0.0, child: this.label, $creationLocationd_0dea112b090073317d4: C[328] || CT.C328}), $creationLocationd_0dea112b090073317d4: C[329] || CT.C329})]), $creationLocationd_0dea112b090073317d4: C[330] || CT.C330}), $creationLocationd_0dea112b090073317d4: C[331] || CT.C331});
          } else {
            content = new basic.Padding.new({padding: (t18$ = this.padding, t18$ == null ? edge_insets.EdgeInsets.zero : t18$), child: new basic.ConstrainedBox.new({constraints: new box$.BoxConstraints.new({minWidth: dart.nullCheck(ui.lerpDouble(this.minWidth, this.minExtendedWidth, this.extendedTransitionAnimation.value))}), child: new basic.ClipRect.new({child: new basic.Row.new({children: T$.JSArrayOfWidget().of([iconPart, new basic.Align.new({heightFactor: 1.0, widthFactor: this.extendedTransitionAnimation.value, alignment: alignment.AlignmentDirectional.centerStart, child: new basic.Opacity.new({alwaysIncludeSemantics: true, opacity: this[S$._extendedLabelFadeValue](), child: styledLabel, $creationLocationd_0dea112b090073317d4: C[332] || CT.C332}), $creationLocationd_0dea112b090073317d4: C[333] || CT.C333}), new basic.SizedBox.new({width: 8 * dart.notNull(this.extendedTransitionAnimation.value), $creationLocationd_0dea112b090073317d4: C[334] || CT.C334})]), $creationLocationd_0dea112b090073317d4: C[335] || CT.C335}), $creationLocationd_0dea112b090073317d4: C[336] || CT.C336}), $creationLocationd_0dea112b090073317d4: C[337] || CT.C337}), $creationLocationd_0dea112b090073317d4: C[338] || CT.C338});
          }
          break;
        }
        case C[347] || CT.C347:
        {
          let appearingAnimationValue = 1 - dart.notNull(this[S$._positionAnimation$1].value);
          let verticalPadding = dart.nullCheck(ui.lerpDouble(24, 16, appearingAnimationValue));
          content = new container.Container.new({constraints: new box$.BoxConstraints.new({minWidth: this.minWidth, minHeight: this.minWidth}), padding: (t18$0 = this.padding, t18$0 == null ? C[60] || CT.C60 : t18$0), child: new basic.ClipRect.new({child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, mainAxisAlignment: flex.MainAxisAlignment.center, children: T$.JSArrayOfWidget().of([new basic.SizedBox.new({height: verticalPadding, $creationLocationd_0dea112b090073317d4: C[340] || CT.C340}), themedIcon, new basic.Align.new({alignment: alignment.Alignment.topCenter, heightFactor: appearingAnimationValue, widthFactor: 1.0, child: new basic.Opacity.new({alwaysIncludeSemantics: true, opacity: dart.test(this.selected) ? this[S$._normalLabelFadeInValue]() : this[S$._normalLabelFadeOutValue](), child: styledLabel, $creationLocationd_0dea112b090073317d4: C[341] || CT.C341}), $creationLocationd_0dea112b090073317d4: C[342] || CT.C342}), new basic.SizedBox.new({height: verticalPadding, $creationLocationd_0dea112b090073317d4: C[343] || CT.C343})]), $creationLocationd_0dea112b090073317d4: C[344] || CT.C344}), $creationLocationd_0dea112b090073317d4: C[345] || CT.C345}), $creationLocationd_0dea112b090073317d4: C[346] || CT.C346});
          break;
        }
        case C[354] || CT.C354:
        {
          content = new container.Container.new({constraints: new box$.BoxConstraints.new({minWidth: this.minWidth, minHeight: this.minWidth}), padding: (t18$1 = this.padding, t18$1 == null ? C[60] || CT.C60 : t18$1), child: new basic.Column.new({children: T$.JSArrayOfWidget().of([C[348] || CT.C348, themedIcon, styledLabel, C[350] || CT.C350]), $creationLocationd_0dea112b090073317d4: C[352] || CT.C352}), $creationLocationd_0dea112b090073317d4: C[353] || CT.C353});
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      let colors = theme$.Theme.of(context).colorScheme;
      return new basic.Semantics.new({container: true, selected: this.selected, child: new basic.Stack.new({children: T$.JSArrayOfWidget().of([new material.Material.new({type: material.MaterialType.transparency, clipBehavior: ui.Clip.none, child: new ink_well.InkResponse.new({onTap: this.onTap, onHover: dart.fn(_ => {
                  if (_ == null) dart.nullFailed(I[54], 751, 25, "_");
                }, T$.boolTovoid()), highlightShape: box_border.BoxShape.rectangle, borderRadius: new border_radius.BorderRadius.all(new ui.Radius.circular(dart.notNull(this.minWidth) / 2.0)), containedInkWell: true, splashColor: colors.primary.withOpacity(0.12), hoverColor: colors.primary.withOpacity(0.04), child: content, $creationLocationd_0dea112b090073317d4: C[355] || CT.C355}), $creationLocationd_0dea112b090073317d4: C[356] || CT.C356}), new basic.Semantics.new({label: this.indexLabel, $creationLocationd_0dea112b090073317d4: C[357] || CT.C357})]), $creationLocationd_0dea112b090073317d4: C[358] || CT.C358}), $creationLocationd_0dea112b090073317d4: C[359] || CT.C359});
    }
    [S$._normalLabelFadeInValue]() {
      if (dart.notNull(this.destinationAnimation.value) < 0.25) {
        return 0.0;
      } else if (dart.notNull(this.destinationAnimation.value) < 0.75) {
        return (dart.notNull(this.destinationAnimation.value) - 0.25) * 2;
      } else {
        return 1.0;
      }
    }
    [S$._normalLabelFadeOutValue]() {
      if (dart.notNull(this.destinationAnimation.value) > 0.75) {
        return (dart.notNull(this.destinationAnimation.value) - 0.75) * 4.0;
      } else {
        return 0.0;
      }
    }
    [S$._extendedLabelFadeValue]() {
      return dart.notNull(this.extendedTransitionAnimation.value) < 0.25 ? dart.notNull(this.extendedTransitionAnimation.value) * 4.0 : 1.0;
    }
  };
  (navigation_rail._RailDestination.new = function(opts) {
    let minWidth = opts && 'minWidth' in opts ? opts.minWidth : null;
    if (minWidth == null) dart.nullFailed(I[54], 573, 19, "minWidth");
    let minExtendedWidth = opts && 'minExtendedWidth' in opts ? opts.minExtendedWidth : null;
    if (minExtendedWidth == null) dart.nullFailed(I[54], 574, 19, "minExtendedWidth");
    let icon = opts && 'icon' in opts ? opts.icon : null;
    if (icon == null) dart.nullFailed(I[54], 575, 19, "icon");
    let label = opts && 'label' in opts ? opts.label : null;
    if (label == null) dart.nullFailed(I[54], 576, 19, "label");
    let destinationAnimation = opts && 'destinationAnimation' in opts ? opts.destinationAnimation : null;
    if (destinationAnimation == null) dart.nullFailed(I[54], 577, 19, "destinationAnimation");
    let extendedTransitionAnimation = opts && 'extendedTransitionAnimation' in opts ? opts.extendedTransitionAnimation : null;
    if (extendedTransitionAnimation == null) dart.nullFailed(I[54], 578, 19, "extendedTransitionAnimation");
    let labelType = opts && 'labelType' in opts ? opts.labelType : null;
    if (labelType == null) dart.nullFailed(I[54], 579, 19, "labelType");
    let selected = opts && 'selected' in opts ? opts.selected : null;
    if (selected == null) dart.nullFailed(I[54], 580, 19, "selected");
    let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
    if (iconTheme == null) dart.nullFailed(I[54], 581, 19, "iconTheme");
    let labelTextStyle = opts && 'labelTextStyle' in opts ? opts.labelTextStyle : null;
    if (labelTextStyle == null) dart.nullFailed(I[54], 582, 19, "labelTextStyle");
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    if (onTap == null) dart.nullFailed(I[54], 583, 19, "onTap");
    let indexLabel = opts && 'indexLabel' in opts ? opts.indexLabel : null;
    if (indexLabel == null) dart.nullFailed(I[54], 584, 19, "indexLabel");
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this.minWidth = minWidth;
    this.minExtendedWidth = minExtendedWidth;
    this.icon = icon;
    this.label = label;
    this.destinationAnimation = destinationAnimation;
    this.extendedTransitionAnimation = extendedTransitionAnimation;
    this.labelType = labelType;
    this.selected = selected;
    this.iconTheme = iconTheme;
    this.labelTextStyle = labelTextStyle;
    this.onTap = onTap;
    this.indexLabel = indexLabel;
    this.padding = padding;
    if (!(minWidth != null)) dart.assertFailed(null, I[54], 586, 15, "minWidth != null");
    if (!(minExtendedWidth != null)) dart.assertFailed(null, I[54], 587, 15, "minExtendedWidth != null");
    if (!(icon != null)) dart.assertFailed(null, I[54], 588, 15, "icon != null");
    if (!(label != null)) dart.assertFailed(null, I[54], 589, 15, "label != null");
    if (!(destinationAnimation != null)) dart.assertFailed(null, I[54], 590, 15, "destinationAnimation != null");
    if (!(extendedTransitionAnimation != null)) dart.assertFailed(null, I[54], 591, 15, "extendedTransitionAnimation != null");
    if (!(labelType != null)) dart.assertFailed(null, I[54], 592, 15, "labelType != null");
    if (!(selected != null)) dart.assertFailed(null, I[54], 593, 15, "selected != null");
    if (!(iconTheme != null)) dart.assertFailed(null, I[54], 594, 15, "iconTheme != null");
    if (!(labelTextStyle != null)) dart.assertFailed(null, I[54], 595, 15, "labelTextStyle != null");
    if (!(onTap != null)) dart.assertFailed(null, I[54], 596, 15, "onTap != null");
    if (!(indexLabel != null)) dart.assertFailed(null, I[54], 597, 15, "indexLabel != null");
    this[S$._positionAnimation$1] = new animations.CurvedAnimation.new({parent: new animations.ReverseAnimation.new(destinationAnimation), curve: curves.Curves.easeInOut, reverseCurve: curves.Curves.easeInOut.flipped});
    navigation_rail._RailDestination.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigation_rail._RailDestination.prototype;
  dart.addTypeTests(navigation_rail._RailDestination);
  dart.addTypeCaches(navigation_rail._RailDestination);
  dart.setMethodSignature(navigation_rail._RailDestination, () => ({
    __proto__: dart.getMethods(navigation_rail._RailDestination.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [S$._normalLabelFadeInValue]: dart.fnType(core.double, []),
    [S$._normalLabelFadeOutValue]: dart.fnType(core.double, []),
    [S$._extendedLabelFadeValue]: dart.fnType(core.double, [])
  }));
  dart.setLibraryUri(navigation_rail._RailDestination, I[55]);
  dart.setFieldSignature(navigation_rail._RailDestination, () => ({
    __proto__: dart.getFields(navigation_rail._RailDestination.__proto__),
    minWidth: dart.finalFieldType(core.double),
    minExtendedWidth: dart.finalFieldType(core.double),
    icon: dart.finalFieldType(framework.Widget),
    label: dart.finalFieldType(framework.Widget),
    destinationAnimation: dart.finalFieldType(animation.Animation$(core.double)),
    labelType: dart.finalFieldType(navigation_rail.NavigationRailLabelType),
    selected: dart.finalFieldType(core.bool),
    extendedTransitionAnimation: dart.finalFieldType(animation.Animation$(core.double)),
    iconTheme: dart.finalFieldType(icon_theme_data.IconThemeData),
    labelTextStyle: dart.finalFieldType(text_style.TextStyle),
    onTap: dart.finalFieldType(dart.fnType(dart.void, [])),
    indexLabel: dart.finalFieldType(core.String),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    [S$._positionAnimation$1]: dart.finalFieldType(animation.Animation$(core.double))
  }));
  navigation_rail.NavigationRailLabelType = class NavigationRailLabelType extends core.Object {
    toString() {
      return this[S$._name$13];
    }
  };
  (navigation_rail.NavigationRailLabelType.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[54], 796, 6, "index");
    if (_name == null) dart.nullFailed(I[54], 796, 6, "_name");
    this.index = index;
    this[S$._name$13] = _name;
    ;
  }).prototype = navigation_rail.NavigationRailLabelType.prototype;
  dart.addTypeTests(navigation_rail.NavigationRailLabelType);
  dart.addTypeCaches(navigation_rail.NavigationRailLabelType);
  navigation_rail.NavigationRailLabelType[dart.implements] = () => [core.Enum];
  dart.setLibraryUri(navigation_rail.NavigationRailLabelType, I[55]);
  dart.setFieldSignature(navigation_rail.NavigationRailLabelType, () => ({
    __proto__: dart.getFields(navigation_rail.NavigationRailLabelType.__proto__),
    index: dart.finalFieldType(core.int),
    [S$._name$13]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(navigation_rail.NavigationRailLabelType, ['toString']);
  navigation_rail.NavigationRailLabelType.none = C[339] || CT.C339;
  navigation_rail.NavigationRailLabelType.selected = C[347] || CT.C347;
  navigation_rail.NavigationRailLabelType.all = C[354] || CT.C354;
  navigation_rail.NavigationRailLabelType.values = C[360] || CT.C360;
  navigation_rail.NavigationRailDestination = class NavigationRailDestination extends core.Object {
    get icon() {
      return this[S$.icon$3];
    }
    set icon(value) {
      super.icon = value;
    }
    get selectedIcon() {
      return this[S$.selectedIcon];
    }
    set selectedIcon(value) {
      super.selectedIcon = value;
    }
    get label() {
      return this[S$.label$2];
    }
    set label(value) {
      super.label = value;
    }
    get padding() {
      return this[S$.padding$3];
    }
    set padding(value) {
      super.padding = value;
    }
  };
  (navigation_rail.NavigationRailDestination.new = function(opts) {
    let t18;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    if (icon == null) dart.nullFailed(I[54], 822, 19, "icon");
    let selectedIcon = opts && 'selectedIcon' in opts ? opts.selectedIcon : null;
    let label = opts && 'label' in opts ? opts.label : null;
    if (label == null) dart.nullFailed(I[54], 824, 19, "label");
    let padding = opts && 'padding' in opts ? opts.padding : null;
    this[S$.icon$3] = icon;
    this[S$.label$2] = label;
    this[S$.padding$3] = padding;
    this[S$.selectedIcon] = (t18 = selectedIcon, t18 == null ? icon : t18);
    if (!(icon != null)) dart.assertFailed(null, I[54], 827, 15, "icon != null");
    if (!(label != null)) dart.assertFailed(null, I[54], 828, 15, "label != null");
    ;
  }).prototype = navigation_rail.NavigationRailDestination.prototype;
  dart.addTypeTests(navigation_rail.NavigationRailDestination);
  dart.addTypeCaches(navigation_rail.NavigationRailDestination);
  dart.setLibraryUri(navigation_rail.NavigationRailDestination, I[55]);
  dart.setFieldSignature(navigation_rail.NavigationRailDestination, () => ({
    __proto__: dart.getFields(navigation_rail.NavigationRailDestination.__proto__),
    icon: dart.finalFieldType(framework.Widget),
    selectedIcon: dart.finalFieldType(framework.Widget),
    label: dart.finalFieldType(framework.Widget),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry))
  }));
  navigation_rail._ExtendedNavigationRailAnimation = class _ExtendedNavigationRailAnimation extends framework.InheritedWidget {
    get animation() {
      return this[S$.animation$5];
    }
    set animation(value) {
      super.animation = value;
    }
    updateShouldNotify(old) {
      navigation_rail._ExtendedNavigationRailAnimation.as(old);
      if (old == null) dart.nullFailed(I[54], 880, 60, "old");
      return !dart.equals(this.animation, old.animation);
    }
  };
  (navigation_rail._ExtendedNavigationRailAnimation.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    if (animation == null) dart.nullFailed(I[54], 872, 19, "animation");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[54], 873, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.animation$5] = animation;
    if (!(child != null)) dart.assertFailed(null, I[54], 874, 15, "child != null");
    navigation_rail._ExtendedNavigationRailAnimation.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigation_rail._ExtendedNavigationRailAnimation.prototype;
  dart.addTypeTests(navigation_rail._ExtendedNavigationRailAnimation);
  dart.addTypeCaches(navigation_rail._ExtendedNavigationRailAnimation);
  dart.setMethodSignature(navigation_rail._ExtendedNavigationRailAnimation, () => ({
    __proto__: dart.getMethods(navigation_rail._ExtendedNavigationRailAnimation.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(navigation_rail._ExtendedNavigationRailAnimation, I[55]);
  dart.setFieldSignature(navigation_rail._ExtendedNavigationRailAnimation, () => ({
    __proto__: dart.getFields(navigation_rail._ExtendedNavigationRailAnimation.__proto__),
    animation: dart.finalFieldType(animation.Animation$(core.double))
  }));
  dart.defineLazy(navigation_rail, {
    /*navigation_rail._minRailWidth*/get _minRailWidth() {
      return 72;
    },
    /*navigation_rail._minExtendedRailWidth*/get _minExtendedRailWidth() {
      return 256;
    },
    /*navigation_rail._horizontalDestinationPadding*/get _horizontalDestinationPadding() {
      return 8;
    },
    /*navigation_rail._verticalDestinationPaddingNoLabel*/get _verticalDestinationPaddingNoLabel() {
      return 24;
    },
    /*navigation_rail._verticalDestinationPaddingWithLabel*/get _verticalDestinationPaddingWithLabel() {
      return 16;
    },
    /*navigation_rail._verticalSpacer*/get _verticalSpacer() {
      return C[361] || CT.C361;
    }
  }, false);
  const Object_Diagnosticable$36$12 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$12.new = function() {
  }).prototype = Object_Diagnosticable$36$12.prototype;
  dart.applyMixin(Object_Diagnosticable$36$12, diagnostics.Diagnosticable);
  navigation_rail_theme.NavigationRailThemeData = class NavigationRailThemeData extends Object_Diagnosticable$36$12 {
    get backgroundColor() {
      return this[S$.backgroundColor$6];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get elevation() {
      return this[S$.elevation$7];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get unselectedLabelTextStyle() {
      return this[S$.unselectedLabelTextStyle$1];
    }
    set unselectedLabelTextStyle(value) {
      super.unselectedLabelTextStyle = value;
    }
    get selectedLabelTextStyle() {
      return this[S$.selectedLabelTextStyle$1];
    }
    set selectedLabelTextStyle(value) {
      super.selectedLabelTextStyle = value;
    }
    get unselectedIconTheme() {
      return this[S$.unselectedIconTheme$1];
    }
    set unselectedIconTheme(value) {
      super.unselectedIconTheme = value;
    }
    get selectedIconTheme() {
      return this[S$.selectedIconTheme$1];
    }
    set selectedIconTheme(value) {
      super.selectedIconTheme = value;
    }
    get groupAlignment() {
      return this[S$.groupAlignment$1];
    }
    set groupAlignment(value) {
      super.groupAlignment = value;
    }
    get labelType() {
      return this[S$.labelType$1];
    }
    set labelType(value) {
      super.labelType = value;
    }
    copyWith(opts) {
      let t18, t18$, t18$0, t18$1, t18$2, t18$3, t18$4, t18$5;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let unselectedLabelTextStyle = opts && 'unselectedLabelTextStyle' in opts ? opts.unselectedLabelTextStyle : null;
      let selectedLabelTextStyle = opts && 'selectedLabelTextStyle' in opts ? opts.selectedLabelTextStyle : null;
      let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
      let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
      let groupAlignment = opts && 'groupAlignment' in opts ? opts.groupAlignment : null;
      let labelType = opts && 'labelType' in opts ? opts.labelType : null;
      return new navigation_rail_theme.NavigationRailThemeData.new({backgroundColor: (t18 = backgroundColor, t18 == null ? this.backgroundColor : t18), elevation: (t18$ = elevation, t18$ == null ? this.elevation : t18$), unselectedLabelTextStyle: (t18$0 = unselectedLabelTextStyle, t18$0 == null ? this.unselectedLabelTextStyle : t18$0), selectedLabelTextStyle: (t18$1 = selectedLabelTextStyle, t18$1 == null ? this.selectedLabelTextStyle : t18$1), unselectedIconTheme: (t18$2 = unselectedIconTheme, t18$2 == null ? this.unselectedIconTheme : t18$2), selectedIconTheme: (t18$3 = selectedIconTheme, t18$3 == null ? this.selectedIconTheme : t18$3), groupAlignment: (t18$4 = groupAlignment, t18$4 == null ? this.groupAlignment : t18$4), labelType: (t18$5 = labelType, t18$5 == null ? this.labelType : t18$5)});
    }
    static lerp(a, b, t) {
      let t18, t18$, t18$0, t18$1, t18$2, t18$3, t18$4, t18$5, t18$6, t18$7, t18$8, t18$9, t18$10, t18$11, t18$12, t18$13;
      if (t == null) dart.nullFailed(I[56], 108, 103, "t");
      if (!(t != null)) dart.assertFailed(null, I[56], 109, 12, "t != null");
      if (a == null && b == null) return null;
      return new navigation_rail_theme.NavigationRailThemeData.new({backgroundColor: ui.Color.lerp((t18 = a, t18 == null ? null : t18.backgroundColor), (t18$ = b, t18$ == null ? null : t18$.backgroundColor), t), elevation: ui.lerpDouble((t18$0 = a, t18$0 == null ? null : t18$0.elevation), (t18$1 = b, t18$1 == null ? null : t18$1.elevation), t), unselectedLabelTextStyle: text_style.TextStyle.lerp((t18$2 = a, t18$2 == null ? null : t18$2.unselectedLabelTextStyle), (t18$3 = b, t18$3 == null ? null : t18$3.unselectedLabelTextStyle), t), selectedLabelTextStyle: text_style.TextStyle.lerp((t18$4 = a, t18$4 == null ? null : t18$4.selectedLabelTextStyle), (t18$5 = b, t18$5 == null ? null : t18$5.selectedLabelTextStyle), t), unselectedIconTheme: icon_theme_data.IconThemeData.lerp((t18$6 = a, t18$6 == null ? null : t18$6.unselectedIconTheme), (t18$7 = b, t18$7 == null ? null : t18$7.unselectedIconTheme), t), selectedIconTheme: icon_theme_data.IconThemeData.lerp((t18$8 = a, t18$8 == null ? null : t18$8.selectedIconTheme), (t18$9 = b, t18$9 == null ? null : t18$9.selectedIconTheme), t), groupAlignment: ui.lerpDouble((t18$10 = a, t18$10 == null ? null : t18$10.groupAlignment), (t18$11 = b, t18$11 == null ? null : t18$11.groupAlignment), t), labelType: dart.notNull(t) < 0.5 ? (t18$12 = a, t18$12 == null ? null : t18$12.labelType) : (t18$13 = b, t18$13 == null ? null : t18$13.labelType)});
    }
    get hashCode() {
      return ui.hashValues(this.backgroundColor, this.elevation, this.unselectedLabelTextStyle, this.selectedLabelTextStyle, this.unselectedIconTheme, this.selectedIconTheme, this.groupAlignment, this.labelType);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return navigation_rail_theme.NavigationRailThemeData.is(other) && dart.equals(other.backgroundColor, this.backgroundColor) && other.elevation == this.elevation && dart.equals(other.unselectedLabelTextStyle, this.unselectedLabelTextStyle) && dart.equals(other.selectedLabelTextStyle, this.selectedLabelTextStyle) && dart.equals(other.unselectedIconTheme, this.unselectedIconTheme) && dart.equals(other.selectedIconTheme, this.selectedIconTheme) && other.groupAlignment == this.groupAlignment && other.labelType == this.labelType;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[56], 156, 56, "properties");
      super.debugFillProperties(properties);
      let defaultData = C[363] || CT.C363;
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: defaultData.backgroundColor}));
      properties.add(new diagnostics.DoubleProperty.new("elevation", this.elevation, {defaultValue: defaultData.elevation}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("unselectedLabelTextStyle", this.unselectedLabelTextStyle, {defaultValue: defaultData.unselectedLabelTextStyle}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("selectedLabelTextStyle", this.selectedLabelTextStyle, {defaultValue: defaultData.selectedLabelTextStyle}));
      properties.add(new (T$.DiagnosticsPropertyOfIconThemeData()).new("unselectedIconTheme", this.unselectedIconTheme, {defaultValue: defaultData.unselectedIconTheme}));
      properties.add(new (T$.DiagnosticsPropertyOfIconThemeData()).new("selectedIconTheme", this.selectedIconTheme, {defaultValue: defaultData.selectedIconTheme}));
      properties.add(new diagnostics.DoubleProperty.new("groupAlignment", this.groupAlignment, {defaultValue: defaultData.groupAlignment}));
      properties.add(new (T$.DiagnosticsPropertyOfNavigationRailLabelType()).new("labelType", this.labelType, {defaultValue: defaultData.labelType}));
    }
  };
  (navigation_rail_theme.NavigationRailThemeData.new = function(opts) {
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let unselectedLabelTextStyle = opts && 'unselectedLabelTextStyle' in opts ? opts.unselectedLabelTextStyle : null;
    let selectedLabelTextStyle = opts && 'selectedLabelTextStyle' in opts ? opts.selectedLabelTextStyle : null;
    let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
    let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
    let groupAlignment = opts && 'groupAlignment' in opts ? opts.groupAlignment : null;
    let labelType = opts && 'labelType' in opts ? opts.labelType : null;
    this[S$.backgroundColor$6] = backgroundColor;
    this[S$.elevation$7] = elevation;
    this[S$.unselectedLabelTextStyle$1] = unselectedLabelTextStyle;
    this[S$.selectedLabelTextStyle$1] = selectedLabelTextStyle;
    this[S$.unselectedIconTheme$1] = unselectedIconTheme;
    this[S$.selectedIconTheme$1] = selectedIconTheme;
    this[S$.groupAlignment$1] = groupAlignment;
    this[S$.labelType$1] = labelType;
    ;
  }).prototype = navigation_rail_theme.NavigationRailThemeData.prototype;
  dart.addTypeTests(navigation_rail_theme.NavigationRailThemeData);
  dart.addTypeCaches(navigation_rail_theme.NavigationRailThemeData);
  dart.setMethodSignature(navigation_rail_theme.NavigationRailThemeData, () => ({
    __proto__: dart.getMethods(navigation_rail_theme.NavigationRailThemeData.__proto__),
    copyWith: dart.fnType(navigation_rail_theme.NavigationRailThemeData, [], {backgroundColor: dart.nullable(ui.Color), elevation: dart.nullable(core.double), groupAlignment: dart.nullable(core.double), labelType: dart.nullable(navigation_rail.NavigationRailLabelType), selectedIconTheme: dart.nullable(icon_theme_data.IconThemeData), selectedLabelTextStyle: dart.nullable(text_style.TextStyle), unselectedIconTheme: dart.nullable(icon_theme_data.IconThemeData), unselectedLabelTextStyle: dart.nullable(text_style.TextStyle)}, {})
  }));
  dart.setLibraryUri(navigation_rail_theme.NavigationRailThemeData, I[57]);
  dart.setFieldSignature(navigation_rail_theme.NavigationRailThemeData, () => ({
    __proto__: dart.getFields(navigation_rail_theme.NavigationRailThemeData.__proto__),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    unselectedLabelTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    selectedLabelTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    unselectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    selectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    groupAlignment: dart.finalFieldType(dart.nullable(core.double)),
    labelType: dart.finalFieldType(dart.nullable(navigation_rail.NavigationRailLabelType))
  }));
  dart.defineExtensionMethods(navigation_rail_theme.NavigationRailThemeData, ['_equals']);
  dart.defineExtensionAccessors(navigation_rail_theme.NavigationRailThemeData, ['hashCode']);
  navigation_rail_theme.NavigationRailTheme = class NavigationRailTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S$.data$11];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t18, t18$;
      if (context == null) dart.nullFailed(I[56], 202, 50, "context");
      let navigationRailTheme = context.dependOnInheritedWidgetOfExactType(navigation_rail_theme.NavigationRailTheme);
      t18$ = (t18 = navigationRailTheme, t18 == null ? null : t18.data);
      return t18$ == null ? theme$.Theme.of(context).navigationRailTheme : t18$;
    }
    wrap(context, child) {
      if (context == null) dart.nullFailed(I[56], 208, 28, "context");
      if (child == null) dart.nullFailed(I[56], 208, 44, "child");
      return new navigation_rail_theme.NavigationRailTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[364] || CT.C364});
    }
    updateShouldNotify(oldWidget) {
      navigation_rail_theme.NavigationRailTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[56], 213, 47, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (navigation_rail_theme.NavigationRailTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[56], 183, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[56], 184, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.data$11] = data;
    if (!(data != null)) dart.assertFailed(null, I[56], 185, 15, "data != null");
    navigation_rail_theme.NavigationRailTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigation_rail_theme.NavigationRailTheme.prototype;
  dart.addTypeTests(navigation_rail_theme.NavigationRailTheme);
  dart.addTypeCaches(navigation_rail_theme.NavigationRailTheme);
  dart.setMethodSignature(navigation_rail_theme.NavigationRailTheme, () => ({
    __proto__: dart.getMethods(navigation_rail_theme.NavigationRailTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(navigation_rail_theme.NavigationRailTheme, I[57]);
  dart.setFieldSignature(navigation_rail_theme.NavigationRailTheme, () => ({
    __proto__: dart.getFields(navigation_rail_theme.NavigationRailTheme.__proto__),
    data: dart.finalFieldType(navigation_rail_theme.NavigationRailThemeData)
  }));
  input_decorator._InputBorderGap = class _InputBorderGap extends change_notifier.ChangeNotifier {
    get start() {
      return this[S$._start];
    }
    set start(value) {
      if (value != this[S$._start]) {
        this[S$._start] = value;
        this.notifyListeners();
      }
    }
    get extent() {
      return this[S$._extent];
    }
    set extent(value) {
      if (value == null) dart.nullFailed(I[58], 36, 21, "value");
      if (value != this[S$._extent]) {
        this[S$._extent] = value;
        this.notifyListeners();
      }
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return input_decorator._InputBorderGap.is(other) && other.start == this.start && other.extent == this.extent;
    }
    get hashCode() {
      return ui.hashValues(this.start, this.extent);
    }
  };
  (input_decorator._InputBorderGap.new = function() {
    this[S$._start] = null;
    this[S$._extent] = 0.0;
    input_decorator._InputBorderGap.__proto__.new.call(this);
    ;
  }).prototype = input_decorator._InputBorderGap.prototype;
  dart.addTypeTests(input_decorator._InputBorderGap);
  dart.addTypeCaches(input_decorator._InputBorderGap);
  dart.setGetterSignature(input_decorator._InputBorderGap, () => ({
    __proto__: dart.getGetters(input_decorator._InputBorderGap.__proto__),
    start: dart.nullable(core.double),
    extent: core.double
  }));
  dart.setSetterSignature(input_decorator._InputBorderGap, () => ({
    __proto__: dart.getSetters(input_decorator._InputBorderGap.__proto__),
    start: dart.nullable(core.double),
    extent: core.double
  }));
  dart.setLibraryUri(input_decorator._InputBorderGap, I[59]);
  dart.setFieldSignature(input_decorator._InputBorderGap, () => ({
    __proto__: dart.getFields(input_decorator._InputBorderGap.__proto__),
    [S$._start]: dart.fieldType(dart.nullable(core.double)),
    [S$._extent]: dart.fieldType(core.double)
  }));
  dart.defineExtensionMethods(input_decorator._InputBorderGap, ['_equals']);
  dart.defineExtensionAccessors(input_decorator._InputBorderGap, ['hashCode']);
  input_decorator._InputBorderTween = class _InputBorderTween extends tween.Tween$(input_border.InputBorder) {
    lerp(t) {
      if (t == null) dart.nullFailed(I[58], 65, 27, "t");
      return input_border.InputBorder.as(dart.nullCheck(borders.ShapeBorder.lerp(this.begin, this.end, t)));
    }
  };
  (input_decorator._InputBorderTween.new = function(opts) {
    let begin = opts && 'begin' in opts ? opts.begin : null;
    let end = opts && 'end' in opts ? opts.end : null;
    input_decorator._InputBorderTween.__proto__.new.call(this, {begin: begin, end: end});
    ;
  }).prototype = input_decorator._InputBorderTween.prototype;
  dart.addTypeTests(input_decorator._InputBorderTween);
  dart.addTypeCaches(input_decorator._InputBorderTween);
  dart.setLibraryUri(input_decorator._InputBorderTween, I[59]);
  input_decorator._InputBorderPainter = class _InputBorderPainter extends custom_paint.CustomPainter {
    get blendedColor() {
      return ui.Color.alphaBlend(dart.nullCheck(this.hoverColorTween.evaluate(this.hoverAnimation)), this.fillColor);
    }
    paint(canvas, size) {
      let t18;
      if (canvas == null) dart.nullFailed(I[58], 94, 21, "canvas");
      if (size == null) dart.nullFailed(I[58], 94, 34, "size");
      let borderValue = this.border.evaluate(this.borderAnimation);
      let canvasRect = ui.Offset.zero['&'](size);
      let blendedFillColor = this.blendedColor;
      if (dart.notNull(blendedFillColor.alpha) > 0) {
        canvas.drawPath(borderValue.getOuterPath(canvasRect, {textDirection: this.textDirection}), (t18 = ui.Paint.new(), (() => {
          t18.color = blendedFillColor;
          t18.style = ui.PaintingStyle.fill;
          return t18;
        })()));
      }
      borderValue.paint(canvas, canvasRect, {gapStart: this.gap.start, gapExtent: this.gap.extent, gapPercentage: this.gapAnimation.value, textDirection: this.textDirection});
    }
    shouldRepaint(oldPainter) {
      input_decorator._InputBorderPainter.as(oldPainter);
      if (oldPainter == null) dart.nullFailed(I[58], 118, 42, "oldPainter");
      return !dart.equals(this.borderAnimation, oldPainter.borderAnimation) || !dart.equals(this.hoverAnimation, oldPainter.hoverAnimation) || !dart.equals(this.gapAnimation, oldPainter.gapAnimation) || !dart.equals(this.border, oldPainter.border) || !dart.equals(this.gap, oldPainter.gap) || this.textDirection != oldPainter.textDirection;
    }
  };
  (input_decorator._InputBorderPainter.new = function(opts) {
    let repaint = opts && 'repaint' in opts ? opts.repaint : null;
    if (repaint == null) dart.nullFailed(I[58], 71, 25, "repaint");
    let borderAnimation = opts && 'borderAnimation' in opts ? opts.borderAnimation : null;
    if (borderAnimation == null) dart.nullFailed(I[58], 72, 19, "borderAnimation");
    let border = opts && 'border' in opts ? opts.border : null;
    if (border == null) dart.nullFailed(I[58], 73, 19, "border");
    let gapAnimation = opts && 'gapAnimation' in opts ? opts.gapAnimation : null;
    if (gapAnimation == null) dart.nullFailed(I[58], 74, 19, "gapAnimation");
    let gap = opts && 'gap' in opts ? opts.gap : null;
    if (gap == null) dart.nullFailed(I[58], 75, 19, "gap");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    if (textDirection == null) dart.nullFailed(I[58], 76, 19, "textDirection");
    let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
    if (fillColor == null) dart.nullFailed(I[58], 77, 19, "fillColor");
    let hoverAnimation = opts && 'hoverAnimation' in opts ? opts.hoverAnimation : null;
    if (hoverAnimation == null) dart.nullFailed(I[58], 78, 19, "hoverAnimation");
    let hoverColorTween = opts && 'hoverColorTween' in opts ? opts.hoverColorTween : null;
    if (hoverColorTween == null) dart.nullFailed(I[58], 79, 19, "hoverColorTween");
    this.borderAnimation = borderAnimation;
    this.border = border;
    this.gapAnimation = gapAnimation;
    this.gap = gap;
    this.textDirection = textDirection;
    this.fillColor = fillColor;
    this.hoverAnimation = hoverAnimation;
    this.hoverColorTween = hoverColorTween;
    input_decorator._InputBorderPainter.__proto__.new.call(this, {repaint: repaint});
    ;
  }).prototype = input_decorator._InputBorderPainter.prototype;
  dart.addTypeTests(input_decorator._InputBorderPainter);
  dart.addTypeCaches(input_decorator._InputBorderPainter);
  dart.setMethodSignature(input_decorator._InputBorderPainter, () => ({
    __proto__: dart.getMethods(input_decorator._InputBorderPainter.__proto__),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Size]),
    shouldRepaint: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(input_decorator._InputBorderPainter, () => ({
    __proto__: dart.getGetters(input_decorator._InputBorderPainter.__proto__),
    blendedColor: ui.Color
  }));
  dart.setLibraryUri(input_decorator._InputBorderPainter, I[59]);
  dart.setFieldSignature(input_decorator._InputBorderPainter, () => ({
    __proto__: dart.getFields(input_decorator._InputBorderPainter.__proto__),
    borderAnimation: dart.finalFieldType(animation.Animation$(core.double)),
    border: dart.finalFieldType(input_decorator._InputBorderTween),
    gapAnimation: dart.finalFieldType(animation.Animation$(core.double)),
    gap: dart.finalFieldType(input_decorator._InputBorderGap),
    textDirection: dart.finalFieldType(ui.TextDirection),
    fillColor: dart.finalFieldType(ui.Color),
    hoverColorTween: dart.finalFieldType(tween.ColorTween),
    hoverAnimation: dart.finalFieldType(animation.Animation$(core.double))
  }));
  input_decorator._BorderContainer = class _BorderContainer extends framework.StatefulWidget {
    get border() {
      return this[S$.border];
    }
    set border(value) {
      super.border = value;
    }
    get gap() {
      return this[S$.gap];
    }
    set gap(value) {
      super.gap = value;
    }
    get gapAnimation() {
      return this[S$.gapAnimation];
    }
    set gapAnimation(value) {
      super.gapAnimation = value;
    }
    get fillColor() {
      return this[S$.fillColor$2];
    }
    set fillColor(value) {
      super.fillColor = value;
    }
    get hoverColor() {
      return this[S$.hoverColor$3];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get isHovering() {
      return this[S$.isHovering];
    }
    set isHovering(value) {
      super.isHovering = value;
    }
    get child() {
      return this[S$.child$8];
    }
    set child(value) {
      super.child = value;
    }
    createState() {
      return new input_decorator._BorderContainerState.new();
    }
  };
  (input_decorator._BorderContainer.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let border = opts && 'border' in opts ? opts.border : null;
    if (border == null) dart.nullFailed(I[58], 135, 19, "border");
    let gap = opts && 'gap' in opts ? opts.gap : null;
    if (gap == null) dart.nullFailed(I[58], 136, 19, "gap");
    let gapAnimation = opts && 'gapAnimation' in opts ? opts.gapAnimation : null;
    if (gapAnimation == null) dart.nullFailed(I[58], 137, 19, "gapAnimation");
    let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
    if (fillColor == null) dart.nullFailed(I[58], 138, 19, "fillColor");
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    if (hoverColor == null) dart.nullFailed(I[58], 139, 19, "hoverColor");
    let isHovering = opts && 'isHovering' in opts ? opts.isHovering : null;
    if (isHovering == null) dart.nullFailed(I[58], 140, 19, "isHovering");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.border] = border;
    this[S$.gap] = gap;
    this[S$.gapAnimation] = gapAnimation;
    this[S$.fillColor$2] = fillColor;
    this[S$.hoverColor$3] = hoverColor;
    this[S$.isHovering] = isHovering;
    this[S$.child$8] = child;
    if (!(border != null)) dart.assertFailed(null, I[58], 142, 15, "border != null");
    if (!(gap != null)) dart.assertFailed(null, I[58], 143, 15, "gap != null");
    if (!(fillColor != null)) dart.assertFailed(null, I[58], 144, 15, "fillColor != null");
    input_decorator._BorderContainer.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = input_decorator._BorderContainer.prototype;
  dart.addTypeTests(input_decorator._BorderContainer);
  dart.addTypeCaches(input_decorator._BorderContainer);
  dart.setMethodSignature(input_decorator._BorderContainer, () => ({
    __proto__: dart.getMethods(input_decorator._BorderContainer.__proto__),
    createState: dart.fnType(input_decorator._BorderContainerState, [])
  }));
  dart.setLibraryUri(input_decorator._BorderContainer, I[59]);
  dart.setFieldSignature(input_decorator._BorderContainer, () => ({
    __proto__: dart.getFields(input_decorator._BorderContainer.__proto__),
    border: dart.finalFieldType(input_border.InputBorder),
    gap: dart.finalFieldType(input_decorator._InputBorderGap),
    gapAnimation: dart.finalFieldType(animation.Animation$(core.double)),
    fillColor: dart.finalFieldType(ui.Color),
    hoverColor: dart.finalFieldType(ui.Color),
    isHovering: dart.finalFieldType(core.bool),
    child: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  const State_TickerProviderStateMixin$36$0 = class State_TickerProviderStateMixin extends framework.State$(input_decorator._BorderContainer) {};
  (State_TickerProviderStateMixin$36$0.new = function() {
    ticker_provider.TickerProviderStateMixin$(input_decorator._BorderContainer)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$0.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$0.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$0, ticker_provider.TickerProviderStateMixin$(input_decorator._BorderContainer));
  input_decorator._BorderContainerState = class _BorderContainerState extends State_TickerProviderStateMixin$36$0 {
    get [S$._controller$3]() {
      let t18;
      return dart.test(this[S$.___BorderContainerState__controller_isSet]) ? (t18 = this[S$.___BorderContainerState__controller], t18) : dart.throw(new _internal.LateError.fieldNI("_controller"));
    }
    set [S$._controller$3](t18) {
      if (t18 == null) dart.nullFailed(I[58], 162, 28, "null");
      this[S$.___BorderContainerState__controller_isSet] = true;
      this[S$.___BorderContainerState__controller] = t18;
    }
    get [S$._hoverColorController]() {
      let t19;
      return dart.test(this[S$.___BorderContainerState__hoverColorController_isSet]) ? (t19 = this[S$.___BorderContainerState__hoverColorController], t19) : dart.throw(new _internal.LateError.fieldNI("_hoverColorController"));
    }
    set [S$._hoverColorController](t19) {
      if (t19 == null) dart.nullFailed(I[58], 163, 28, "null");
      this[S$.___BorderContainerState__hoverColorController_isSet] = true;
      this[S$.___BorderContainerState__hoverColorController] = t19;
    }
    get [S$._borderAnimation]() {
      let t20;
      return dart.test(this[S$.___BorderContainerState__borderAnimation_isSet]) ? (t20 = this[S$.___BorderContainerState__borderAnimation], t20) : dart.throw(new _internal.LateError.fieldNI("_borderAnimation"));
    }
    set [S$._borderAnimation](t20) {
      if (t20 == null) dart.nullFailed(I[58], 164, 26, "null");
      this[S$.___BorderContainerState__borderAnimation_isSet] = true;
      this[S$.___BorderContainerState__borderAnimation] = t20;
    }
    get [S$._border]() {
      let t21;
      return dart.test(this[S$.___BorderContainerState__border_isSet]) ? (t21 = this[S$.___BorderContainerState__border], t21) : dart.throw(new _internal.LateError.fieldNI("_border"));
    }
    set [S$._border](t21) {
      if (t21 == null) dart.nullFailed(I[58], 165, 26, "null");
      this[S$.___BorderContainerState__border_isSet] = true;
      this[S$.___BorderContainerState__border] = t21;
    }
    get [S$._hoverAnimation]() {
      let t22;
      return dart.test(this[S$.___BorderContainerState__hoverAnimation_isSet]) ? (t22 = this[S$.___BorderContainerState__hoverAnimation], t22) : dart.throw(new _internal.LateError.fieldNI("_hoverAnimation"));
    }
    set [S$._hoverAnimation](t22) {
      if (t22 == null) dart.nullFailed(I[58], 166, 26, "null");
      this[S$.___BorderContainerState__hoverAnimation_isSet] = true;
      this[S$.___BorderContainerState__hoverAnimation] = t22;
    }
    get [S$._hoverColorTween]() {
      let t23;
      return dart.test(this[S$.___BorderContainerState__hoverColorTween_isSet]) ? (t23 = this[S$.___BorderContainerState__hoverColorTween], t23) : dart.throw(new _internal.LateError.fieldNI("_hoverColorTween"));
    }
    set [S$._hoverColorTween](t23) {
      if (t23 == null) dart.nullFailed(I[58], 167, 19, "null");
      this[S$.___BorderContainerState__hoverColorTween_isSet] = true;
      this[S$.___BorderContainerState__hoverColorTween] = t23;
    }
    initState() {
      super.initState();
      this[S$._hoverColorController] = new animation_controller.AnimationController.new({duration: input_decorator._BorderContainerState._kHoverDuration, value: dart.test(this.widget.isHovering) ? 1.0 : 0.0, vsync: this});
      this[S$._controller$3] = new animation_controller.AnimationController.new({duration: input_decorator._kTransitionDuration, vsync: this});
      this[S$._borderAnimation] = new animations.CurvedAnimation.new({parent: this[S$._controller$3], curve: input_decorator._kTransitionCurve});
      this[S$._border] = new input_decorator._InputBorderTween.new({begin: this.widget.border, end: this.widget.border});
      this[S$._hoverAnimation] = new animations.CurvedAnimation.new({parent: this[S$._hoverColorController], curve: curves.Curves.linear});
      this[S$._hoverColorTween] = new tween.ColorTween.new({begin: colors$.Colors.transparent, end: this.widget.hoverColor});
    }
    dispose() {
      this[S$._controller$3].dispose();
      this[S$._hoverColorController].dispose();
      super.dispose();
    }
    didUpdateWidget(oldWidget) {
      let t24;
      input_decorator._BorderContainer.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[58], 204, 41, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.border, oldWidget.border)) {
        this[S$._border] = new input_decorator._InputBorderTween.new({begin: oldWidget.border, end: this.widget.border});
        t24 = this[S$._controller$3];
        (() => {
          t24.value = 0.0;
          t24.forward();
          return t24;
        })();
      }
      if (!dart.equals(this.widget.hoverColor, oldWidget.hoverColor)) {
        this[S$._hoverColorTween] = new tween.ColorTween.new({begin: colors$.Colors.transparent, end: this.widget.hoverColor});
      }
      if (this.widget.isHovering != oldWidget.isHovering) {
        if (dart.test(this.widget.isHovering)) {
          this[S$._hoverColorController].forward();
        } else {
          this[S$._hoverColorController].reverse();
        }
      }
    }
    build(context) {
      if (context == null) dart.nullFailed(I[58], 228, 29, "context");
      return new basic.CustomPaint.new({foregroundPainter: new input_decorator._InputBorderPainter.new({repaint: new change_notifier._MergingListenable.new(T$.JSArrayOfListenable().of([this[S$._borderAnimation], this.widget.gap, this[S$._hoverColorController]])), borderAnimation: this[S$._borderAnimation], border: this[S$._border], gapAnimation: this.widget.gapAnimation, gap: this.widget.gap, textDirection: basic.Directionality.of(context), fillColor: this.widget.fillColor, hoverColorTween: this[S$._hoverColorTween], hoverAnimation: this[S$._hoverAnimation]}), child: this.widget.child, $creationLocationd_0dea112b090073317d4: C[365] || CT.C365});
    }
  };
  (input_decorator._BorderContainerState.new = function() {
    this[S$.___BorderContainerState__controller] = null;
    this[S$.___BorderContainerState__controller_isSet] = false;
    this[S$.___BorderContainerState__hoverColorController] = null;
    this[S$.___BorderContainerState__hoverColorController_isSet] = false;
    this[S$.___BorderContainerState__borderAnimation] = null;
    this[S$.___BorderContainerState__borderAnimation_isSet] = false;
    this[S$.___BorderContainerState__border] = null;
    this[S$.___BorderContainerState__border_isSet] = false;
    this[S$.___BorderContainerState__hoverAnimation] = null;
    this[S$.___BorderContainerState__hoverAnimation_isSet] = false;
    this[S$.___BorderContainerState__hoverColorTween] = null;
    this[S$.___BorderContainerState__hoverColorTween_isSet] = false;
    input_decorator._BorderContainerState.__proto__.new.call(this);
    ;
  }).prototype = input_decorator._BorderContainerState.prototype;
  dart.addTypeTests(input_decorator._BorderContainerState);
  dart.addTypeCaches(input_decorator._BorderContainerState);
  dart.setMethodSignature(input_decorator._BorderContainerState, () => ({
    __proto__: dart.getMethods(input_decorator._BorderContainerState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(input_decorator._BorderContainerState, () => ({
    __proto__: dart.getGetters(input_decorator._BorderContainerState.__proto__),
    [S$._controller$3]: animation_controller.AnimationController,
    [S$._hoverColorController]: animation_controller.AnimationController,
    [S$._borderAnimation]: animation.Animation$(core.double),
    [S$._border]: input_decorator._InputBorderTween,
    [S$._hoverAnimation]: animation.Animation$(core.double),
    [S$._hoverColorTween]: tween.ColorTween
  }));
  dart.setSetterSignature(input_decorator._BorderContainerState, () => ({
    __proto__: dart.getSetters(input_decorator._BorderContainerState.__proto__),
    [S$._controller$3]: animation_controller.AnimationController,
    [S$._hoverColorController]: animation_controller.AnimationController,
    [S$._borderAnimation]: animation.Animation$(core.double),
    [S$._border]: input_decorator._InputBorderTween,
    [S$._hoverAnimation]: animation.Animation$(core.double),
    [S$._hoverColorTween]: tween.ColorTween
  }));
  dart.setLibraryUri(input_decorator._BorderContainerState, I[59]);
  dart.setFieldSignature(input_decorator._BorderContainerState, () => ({
    __proto__: dart.getFields(input_decorator._BorderContainerState.__proto__),
    [S$.___BorderContainerState__controller]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$.___BorderContainerState__controller_isSet]: dart.fieldType(core.bool),
    [S$.___BorderContainerState__hoverColorController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$.___BorderContainerState__hoverColorController_isSet]: dart.fieldType(core.bool),
    [S$.___BorderContainerState__borderAnimation]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
    [S$.___BorderContainerState__borderAnimation_isSet]: dart.fieldType(core.bool),
    [S$.___BorderContainerState__border]: dart.fieldType(dart.nullable(input_decorator._InputBorderTween)),
    [S$.___BorderContainerState__border_isSet]: dart.fieldType(core.bool),
    [S$.___BorderContainerState__hoverAnimation]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
    [S$.___BorderContainerState__hoverAnimation_isSet]: dart.fieldType(core.bool),
    [S$.___BorderContainerState__hoverColorTween]: dart.fieldType(dart.nullable(tween.ColorTween)),
    [S$.___BorderContainerState__hoverColorTween_isSet]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(input_decorator._BorderContainerState, {
    /*input_decorator._BorderContainerState._kHoverDuration*/get _kHoverDuration() {
      return C[366] || CT.C366;
    }
  }, false);
  input_decorator._Shaker = class _Shaker extends transitions.AnimatedWidget {
    get child() {
      return this[S$.child$9];
    }
    set child(value) {
      super.child = value;
    }
    get animation() {
      return T$.AnimationOfdouble().as(this.listenable);
    }
    get translateX() {
      let t = this.animation.value;
      if (dart.notNull(t) <= 0.25)
        return -dart.notNull(t) * 4;
      else if (dart.notNull(t) < 0.75)
        return (dart.notNull(t) - 0.5) * 4;
      else
        return (1.0 - dart.notNull(t)) * 4.0 * 4;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[58], 275, 29, "context");
      return new basic.Transform.new({transform: vector_math_64.Matrix4.translationValues(this.translateX, 0.0, 0.0), child: this.child, $creationLocationd_0dea112b090073317d4: C[367] || CT.C367});
    }
  };
  (input_decorator._Shaker.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    if (animation == null) dart.nullFailed(I[58], 255, 32, "animation");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.child$9] = child;
    input_decorator._Shaker.__proto__.new.call(this, {key: key, listenable: animation, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = input_decorator._Shaker.prototype;
  dart.addTypeTests(input_decorator._Shaker);
  dart.addTypeCaches(input_decorator._Shaker);
  dart.setMethodSignature(input_decorator._Shaker, () => ({
    __proto__: dart.getMethods(input_decorator._Shaker.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(input_decorator._Shaker, () => ({
    __proto__: dart.getGetters(input_decorator._Shaker.__proto__),
    animation: animation.Animation$(core.double),
    translateX: core.double
  }));
  dart.setLibraryUri(input_decorator._Shaker, I[59]);
  dart.setFieldSignature(input_decorator._Shaker, () => ({
    __proto__: dart.getFields(input_decorator._Shaker.__proto__),
    child: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  input_decorator._HelperError = class _HelperError extends framework.StatefulWidget {
    get textAlign() {
      return this[S$.textAlign];
    }
    set textAlign(value) {
      super.textAlign = value;
    }
    get helperText() {
      return this[S$.helperText];
    }
    set helperText(value) {
      super.helperText = value;
    }
    get helperStyle() {
      return this[S$.helperStyle];
    }
    set helperStyle(value) {
      super.helperStyle = value;
    }
    get helperMaxLines() {
      return this[S$.helperMaxLines];
    }
    set helperMaxLines(value) {
      super.helperMaxLines = value;
    }
    get errorText() {
      return this[S$.errorText];
    }
    set errorText(value) {
      super.errorText = value;
    }
    get errorStyle() {
      return this[S$.errorStyle];
    }
    set errorStyle(value) {
      super.errorStyle = value;
    }
    get errorMaxLines() {
      return this[S$.errorMaxLines];
    }
    set errorMaxLines(value) {
      super.errorMaxLines = value;
    }
    createState() {
      return new input_decorator._HelperErrorState.new();
    }
  };
  (input_decorator._HelperError.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let textAlign = opts && 'textAlign' in opts ? opts.textAlign : null;
    let helperText = opts && 'helperText' in opts ? opts.helperText : null;
    let helperStyle = opts && 'helperStyle' in opts ? opts.helperStyle : null;
    let helperMaxLines = opts && 'helperMaxLines' in opts ? opts.helperMaxLines : null;
    let errorText = opts && 'errorText' in opts ? opts.errorText : null;
    let errorStyle = opts && 'errorStyle' in opts ? opts.errorStyle : null;
    let errorMaxLines = opts && 'errorMaxLines' in opts ? opts.errorMaxLines : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.textAlign] = textAlign;
    this[S$.helperText] = helperText;
    this[S$.helperStyle] = helperStyle;
    this[S$.helperMaxLines] = helperMaxLines;
    this[S$.errorText] = errorText;
    this[S$.errorStyle] = errorStyle;
    this[S$.errorMaxLines] = errorMaxLines;
    input_decorator._HelperError.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = input_decorator._HelperError.prototype;
  dart.addTypeTests(input_decorator._HelperError);
  dart.addTypeCaches(input_decorator._HelperError);
  dart.setMethodSignature(input_decorator._HelperError, () => ({
    __proto__: dart.getMethods(input_decorator._HelperError.__proto__),
    createState: dart.fnType(input_decorator._HelperErrorState, [])
  }));
  dart.setLibraryUri(input_decorator._HelperError, I[59]);
  dart.setFieldSignature(input_decorator._HelperError, () => ({
    __proto__: dart.getFields(input_decorator._HelperError.__proto__),
    textAlign: dart.finalFieldType(dart.nullable(ui.TextAlign)),
    helperText: dart.finalFieldType(dart.nullable(core.String)),
    helperStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    helperMaxLines: dart.finalFieldType(dart.nullable(core.int)),
    errorText: dart.finalFieldType(dart.nullable(core.String)),
    errorStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    errorMaxLines: dart.finalFieldType(dart.nullable(core.int))
  }));
  const State_SingleTickerProviderStateMixin$36 = class State_SingleTickerProviderStateMixin extends framework.State$(input_decorator._HelperError) {};
  (State_SingleTickerProviderStateMixin$36.new = function() {
    ticker_provider.SingleTickerProviderStateMixin$(input_decorator._HelperError)[dart.mixinNew].call(this);
    State_SingleTickerProviderStateMixin$36.__proto__.new.call(this);
  }).prototype = State_SingleTickerProviderStateMixin$36.prototype;
  dart.applyMixin(State_SingleTickerProviderStateMixin$36, ticker_provider.SingleTickerProviderStateMixin$(input_decorator._HelperError));
  input_decorator._HelperErrorState = class _HelperErrorState extends State_SingleTickerProviderStateMixin$36 {
    get [S$._controller$3]() {
      let t24;
      return dart.test(this[S$.___HelperErrorState__controller_isSet]) ? (t24 = this[S$.___HelperErrorState__controller], t24) : dart.throw(new _internal.LateError.fieldNI("_controller"));
    }
    set [S$._controller$3](t24) {
      if (t24 == null) dart.nullFailed(I[58], 315, 28, "null");
      this[S$.___HelperErrorState__controller_isSet] = true;
      this[S$.___HelperErrorState__controller] = t24;
    }
    initState() {
      super.initState();
      this[S$._controller$3] = new animation_controller.AnimationController.new({duration: input_decorator._kTransitionDuration, vsync: this});
      if (this.widget.errorText != null) {
        this[S$._error] = this[S$._buildError]();
        this[S$._controller$3].value = 1.0;
      } else if (this.widget.helperText != null) {
        this[S$._helper] = this[S$._buildHelper]();
      }
      this[S$._controller$3].addListener(dart.bind(this, S$._handleChange));
    }
    dispose() {
      this[S$._controller$3].dispose();
      super.dispose();
    }
    [S$._handleChange]() {
      this.setState(dart.fn(() => {
      }, T$.VoidTovoid()));
    }
    didUpdateWidget(old) {
      input_decorator._HelperError.as(old);
      if (old == null) dart.nullFailed(I[58], 348, 37, "old");
      super.didUpdateWidget(old);
      let newErrorText = this.widget.errorText;
      let newHelperText = this.widget.helperText;
      let oldErrorText = old.errorText;
      let oldHelperText = old.helperText;
      let errorTextStateChanged = newErrorText != null !== (oldErrorText != null);
      let helperTextStateChanged = newErrorText == null && newHelperText != null !== (oldHelperText != null);
      if (errorTextStateChanged || helperTextStateChanged) {
        if (newErrorText != null) {
          this[S$._error] = this[S$._buildError]();
          this[S$._controller$3].forward();
        } else if (newHelperText != null) {
          this[S$._helper] = this[S$._buildHelper]();
          this[S$._controller$3].reverse();
        } else {
          this[S$._controller$3].reverse();
        }
      }
    }
    [S$._buildHelper]() {
      if (!(this.widget.helperText != null)) dart.assertFailed(null, I[58], 373, 12, "widget.helperText != null");
      return new basic.Semantics.new({container: true, child: new basic.Opacity.new({opacity: 1.0 - dart.notNull(this[S$._controller$3].value), child: new text$.Text.new(dart.nullCheck(this.widget.helperText), {style: this.widget.helperStyle, textAlign: this.widget.textAlign, overflow: text_painter.TextOverflow.ellipsis, maxLines: this.widget.helperMaxLines, $creationLocationd_0dea112b090073317d4: C[368] || CT.C368}), $creationLocationd_0dea112b090073317d4: C[369] || CT.C369}), $creationLocationd_0dea112b090073317d4: C[370] || CT.C370});
    }
    [S$._buildError]() {
      if (!(this.widget.errorText != null)) dart.assertFailed(null, I[58], 390, 12, "widget.errorText != null");
      return new basic.Semantics.new({container: true, liveRegion: true, child: new basic.Opacity.new({opacity: this[S$._controller$3].value, child: new basic.FractionalTranslation.new({translation: new (T$.TweenOfOffset()).new({begin: C[371] || CT.C371, end: ui.Offset.zero}).evaluate(this[S$._controller$3].view), child: new text$.Text.new(dart.nullCheck(this.widget.errorText), {style: this.widget.errorStyle, textAlign: this.widget.textAlign, overflow: text_painter.TextOverflow.ellipsis, maxLines: this.widget.errorMaxLines, $creationLocationd_0dea112b090073317d4: C[372] || CT.C372}), $creationLocationd_0dea112b090073317d4: C[373] || CT.C373}), $creationLocationd_0dea112b090073317d4: C[374] || CT.C374}), $creationLocationd_0dea112b090073317d4: C[375] || CT.C375});
    }
    build(context) {
      if (context == null) dart.nullFailed(I[58], 414, 29, "context");
      if (dart.test(this[S$._controller$3].isDismissed)) {
        this[S$._error] = null;
        if (this.widget.helperText != null) {
          return this[S$._helper] = this[S$._buildHelper]();
        } else {
          this[S$._helper] = null;
          return input_decorator._HelperErrorState.empty;
        }
      }
      if (dart.test(this[S$._controller$3].isCompleted)) {
        this[S$._helper] = null;
        if (this.widget.errorText != null) {
          return this[S$._error] = this[S$._buildError]();
        } else {
          this[S$._error] = null;
          return input_decorator._HelperErrorState.empty;
        }
      }
      if (this[S$._helper] == null && this.widget.errorText != null) return this[S$._buildError]();
      if (this[S$._error] == null && this.widget.helperText != null) return this[S$._buildHelper]();
      if (this.widget.errorText != null) {
        return new basic.Stack.new({children: T$.JSArrayOfWidget().of([new basic.Opacity.new({opacity: 1.0 - dart.notNull(this[S$._controller$3].value), child: this[S$._helper], $creationLocationd_0dea112b090073317d4: C[376] || CT.C376}), this[S$._buildError]()]), $creationLocationd_0dea112b090073317d4: C[377] || CT.C377});
      }
      if (this.widget.helperText != null) {
        return new basic.Stack.new({children: T$.JSArrayOfWidget().of([this[S$._buildHelper](), new basic.Opacity.new({opacity: this[S$._controller$3].value, child: this[S$._error], $creationLocationd_0dea112b090073317d4: C[378] || CT.C378})]), $creationLocationd_0dea112b090073317d4: C[379] || CT.C379});
      }
      return input_decorator._HelperErrorState.empty;
    }
  };
  (input_decorator._HelperErrorState.new = function() {
    this[S$.___HelperErrorState__controller] = null;
    this[S$.___HelperErrorState__controller_isSet] = false;
    this[S$._helper] = null;
    this[S$._error] = null;
    input_decorator._HelperErrorState.__proto__.new.call(this);
    ;
  }).prototype = input_decorator._HelperErrorState.prototype;
  dart.addTypeTests(input_decorator._HelperErrorState);
  dart.addTypeCaches(input_decorator._HelperErrorState);
  dart.setMethodSignature(input_decorator._HelperErrorState, () => ({
    __proto__: dart.getMethods(input_decorator._HelperErrorState.__proto__),
    [S$._handleChange]: dart.fnType(dart.void, []),
    [S$._buildHelper]: dart.fnType(framework.Widget, []),
    [S$._buildError]: dart.fnType(framework.Widget, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(input_decorator._HelperErrorState, () => ({
    __proto__: dart.getGetters(input_decorator._HelperErrorState.__proto__),
    [S$._controller$3]: animation_controller.AnimationController
  }));
  dart.setSetterSignature(input_decorator._HelperErrorState, () => ({
    __proto__: dart.getSetters(input_decorator._HelperErrorState.__proto__),
    [S$._controller$3]: animation_controller.AnimationController
  }));
  dart.setLibraryUri(input_decorator._HelperErrorState, I[59]);
  dart.setFieldSignature(input_decorator._HelperErrorState, () => ({
    __proto__: dart.getFields(input_decorator._HelperErrorState.__proto__),
    [S$.___HelperErrorState__controller]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$.___HelperErrorState__controller_isSet]: dart.fieldType(core.bool),
    [S$._helper]: dart.fieldType(dart.nullable(framework.Widget)),
    [S$._error]: dart.fieldType(dart.nullable(framework.Widget))
  }));
  dart.defineLazy(input_decorator._HelperErrorState, {
    /*input_decorator._HelperErrorState.empty*/get empty() {
      return C[380] || CT.C380;
    }
  }, false);
  input_decorator.FloatingLabelBehavior = class FloatingLabelBehavior extends core.Object {
    toString() {
      return this[S$._name$14];
    }
  };
  (input_decorator.FloatingLabelBehavior.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[58], 470, 6, "index");
    if (_name == null) dart.nullFailed(I[58], 470, 6, "_name");
    this.index = index;
    this[S$._name$14] = _name;
    ;
  }).prototype = input_decorator.FloatingLabelBehavior.prototype;
  dart.addTypeTests(input_decorator.FloatingLabelBehavior);
  dart.addTypeCaches(input_decorator.FloatingLabelBehavior);
  input_decorator.FloatingLabelBehavior[dart.implements] = () => [core.Enum];
  dart.setLibraryUri(input_decorator.FloatingLabelBehavior, I[59]);
  dart.setFieldSignature(input_decorator.FloatingLabelBehavior, () => ({
    __proto__: dart.getFields(input_decorator.FloatingLabelBehavior.__proto__),
    index: dart.finalFieldType(core.int),
    [S$._name$14]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(input_decorator.FloatingLabelBehavior, ['toString']);
  input_decorator.FloatingLabelBehavior.never = C[382] || CT.C382;
  input_decorator.FloatingLabelBehavior.auto = C[383] || CT.C383;
  input_decorator.FloatingLabelBehavior.always = C[384] || CT.C384;
  input_decorator.FloatingLabelBehavior.values = C[385] || CT.C385;
  input_decorator._DecorationSlot = class _DecorationSlot extends core.Object {
    toString() {
      return this[S$._name$14];
    }
  };
  (input_decorator._DecorationSlot.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[58], 480, 6, "index");
    if (_name == null) dart.nullFailed(I[58], 480, 6, "_name");
    this.index = index;
    this[S$._name$14] = _name;
    ;
  }).prototype = input_decorator._DecorationSlot.prototype;
  dart.addTypeTests(input_decorator._DecorationSlot);
  dart.addTypeCaches(input_decorator._DecorationSlot);
  input_decorator._DecorationSlot[dart.implements] = () => [core.Enum];
  dart.setLibraryUri(input_decorator._DecorationSlot, I[59]);
  dart.setFieldSignature(input_decorator._DecorationSlot, () => ({
    __proto__: dart.getFields(input_decorator._DecorationSlot.__proto__),
    index: dart.finalFieldType(core.int),
    [S$._name$14]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(input_decorator._DecorationSlot, ['toString']);
  input_decorator._DecorationSlot.icon = C[386] || CT.C386;
  input_decorator._DecorationSlot.input = C[387] || CT.C387;
  input_decorator._DecorationSlot.label = C[388] || CT.C388;
  input_decorator._DecorationSlot.hint = C[389] || CT.C389;
  input_decorator._DecorationSlot.prefix = C[390] || CT.C390;
  input_decorator._DecorationSlot.suffix = C[391] || CT.C391;
  input_decorator._DecorationSlot.prefixIcon = C[392] || CT.C392;
  input_decorator._DecorationSlot.suffixIcon = C[393] || CT.C393;
  input_decorator._DecorationSlot.helperError = C[394] || CT.C394;
  input_decorator._DecorationSlot.counter = C[395] || CT.C395;
  input_decorator._DecorationSlot.container = C[396] || CT.C396;
  input_decorator._DecorationSlot.values = C[397] || CT.C397;
  input_decorator._Decoration = class _Decoration extends core.Object {
    get contentPadding() {
      return this[S$.contentPadding];
    }
    set contentPadding(value) {
      super.contentPadding = value;
    }
    get isCollapsed() {
      return this[S$.isCollapsed];
    }
    set isCollapsed(value) {
      super.isCollapsed = value;
    }
    get floatingLabelHeight() {
      return this[S$.floatingLabelHeight];
    }
    set floatingLabelHeight(value) {
      super.floatingLabelHeight = value;
    }
    get floatingLabelProgress() {
      return this[S$.floatingLabelProgress];
    }
    set floatingLabelProgress(value) {
      super.floatingLabelProgress = value;
    }
    get border() {
      return this[S$.border$1];
    }
    set border(value) {
      super.border = value;
    }
    get borderGap() {
      return this[S$.borderGap];
    }
    set borderGap(value) {
      super.borderGap = value;
    }
    get alignLabelWithHint() {
      return this[S$.alignLabelWithHint];
    }
    set alignLabelWithHint(value) {
      super.alignLabelWithHint = value;
    }
    get isDense() {
      return this[S$.isDense];
    }
    set isDense(value) {
      super.isDense = value;
    }
    get visualDensity() {
      return this[S$.visualDensity$2];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get icon() {
      return this[S$.icon$4];
    }
    set icon(value) {
      super.icon = value;
    }
    get input() {
      return this[S$.input];
    }
    set input(value) {
      super.input = value;
    }
    get label() {
      return this[S$.label$3];
    }
    set label(value) {
      super.label = value;
    }
    get hint() {
      return this[S$.hint];
    }
    set hint(value) {
      super.hint = value;
    }
    get prefix() {
      return this[S$.prefix];
    }
    set prefix(value) {
      super.prefix = value;
    }
    get suffix() {
      return this[S$.suffix];
    }
    set suffix(value) {
      super.suffix = value;
    }
    get prefixIcon() {
      return this[S$.prefixIcon];
    }
    set prefixIcon(value) {
      super.prefixIcon = value;
    }
    get suffixIcon() {
      return this[S$.suffixIcon];
    }
    set suffixIcon(value) {
      super.suffixIcon = value;
    }
    get helperError() {
      return this[S$.helperError];
    }
    set helperError(value) {
      super.helperError = value;
    }
    get counter() {
      return this[S$.counter];
    }
    set counter(value) {
      super.counter = value;
    }
    get container() {
      return this[S$.container];
    }
    set container(value) {
      super.container = value;
    }
    get fixTextFieldOutlineLabel() {
      return this[S$.fixTextFieldOutlineLabel];
    }
    set fixTextFieldOutlineLabel(value) {
      super.fixTextFieldOutlineLabel = value;
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return input_decorator._Decoration.is(other) && dart.equals(other.contentPadding, this.contentPadding) && other.isCollapsed == this.isCollapsed && other.floatingLabelHeight == this.floatingLabelHeight && other.floatingLabelProgress == this.floatingLabelProgress && dart.equals(other.border, this.border) && dart.equals(other.borderGap, this.borderGap) && other.alignLabelWithHint == this.alignLabelWithHint && other.isDense == this.isDense && dart.equals(other.visualDensity, this.visualDensity) && dart.equals(other.icon, this.icon) && dart.equals(other.input, this.input) && dart.equals(other.label, this.label) && dart.equals(other.hint, this.hint) && dart.equals(other.prefix, this.prefix) && dart.equals(other.suffix, this.suffix) && dart.equals(other.prefixIcon, this.prefixIcon) && dart.equals(other.suffixIcon, this.suffixIcon) && dart.equals(other.helperError, this.helperError) && dart.equals(other.counter, this.counter) && dart.equals(other.container, this.container) && other.fixTextFieldOutlineLabel == this.fixTextFieldOutlineLabel;
    }
    get hashCode() {
      return ui.hashValues(this.contentPadding, this.floatingLabelHeight, this.floatingLabelProgress, this.border, this.borderGap, this.alignLabelWithHint, this.isDense, this.visualDensity, this.icon, this.input, this.label, this.hint, this.prefix, this.suffix, this.prefixIcon, this.suffixIcon, this.helperError, this.counter, this.container, this.fixTextFieldOutlineLabel);
    }
  };
  (input_decorator._Decoration.new = function(opts) {
    let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
    if (contentPadding == null) dart.nullFailed(I[58], 498, 19, "contentPadding");
    let isCollapsed = opts && 'isCollapsed' in opts ? opts.isCollapsed : null;
    if (isCollapsed == null) dart.nullFailed(I[58], 499, 19, "isCollapsed");
    let floatingLabelHeight = opts && 'floatingLabelHeight' in opts ? opts.floatingLabelHeight : null;
    if (floatingLabelHeight == null) dart.nullFailed(I[58], 500, 19, "floatingLabelHeight");
    let floatingLabelProgress = opts && 'floatingLabelProgress' in opts ? opts.floatingLabelProgress : null;
    if (floatingLabelProgress == null) dart.nullFailed(I[58], 501, 19, "floatingLabelProgress");
    let border = opts && 'border' in opts ? opts.border : null;
    let borderGap = opts && 'borderGap' in opts ? opts.borderGap : null;
    let alignLabelWithHint = opts && 'alignLabelWithHint' in opts ? opts.alignLabelWithHint : null;
    if (alignLabelWithHint == null) dart.nullFailed(I[58], 504, 19, "alignLabelWithHint");
    let isDense = opts && 'isDense' in opts ? opts.isDense : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let input = opts && 'input' in opts ? opts.input : null;
    let label = opts && 'label' in opts ? opts.label : null;
    let hint = opts && 'hint' in opts ? opts.hint : null;
    let prefix = opts && 'prefix' in opts ? opts.prefix : null;
    let suffix = opts && 'suffix' in opts ? opts.suffix : null;
    let prefixIcon = opts && 'prefixIcon' in opts ? opts.prefixIcon : null;
    let suffixIcon = opts && 'suffixIcon' in opts ? opts.suffixIcon : null;
    let helperError = opts && 'helperError' in opts ? opts.helperError : null;
    let counter = opts && 'counter' in opts ? opts.counter : null;
    let container = opts && 'container' in opts ? opts.container : null;
    let fixTextFieldOutlineLabel = opts && 'fixTextFieldOutlineLabel' in opts ? opts.fixTextFieldOutlineLabel : false;
    if (fixTextFieldOutlineLabel == null) dart.nullFailed(I[58], 518, 10, "fixTextFieldOutlineLabel");
    this[S$.contentPadding] = contentPadding;
    this[S$.isCollapsed] = isCollapsed;
    this[S$.floatingLabelHeight] = floatingLabelHeight;
    this[S$.floatingLabelProgress] = floatingLabelProgress;
    this[S$.border$1] = border;
    this[S$.borderGap] = borderGap;
    this[S$.alignLabelWithHint] = alignLabelWithHint;
    this[S$.isDense] = isDense;
    this[S$.visualDensity$2] = visualDensity;
    this[S$.icon$4] = icon;
    this[S$.input] = input;
    this[S$.label$3] = label;
    this[S$.hint] = hint;
    this[S$.prefix] = prefix;
    this[S$.suffix] = suffix;
    this[S$.prefixIcon] = prefixIcon;
    this[S$.suffixIcon] = suffixIcon;
    this[S$.helperError] = helperError;
    this[S$.counter] = counter;
    this[S$.container] = container;
    this[S$.fixTextFieldOutlineLabel] = fixTextFieldOutlineLabel;
    if (!(contentPadding != null)) dart.assertFailed(null, I[58], 519, 15, "contentPadding != null");
    if (!(isCollapsed != null)) dart.assertFailed(null, I[58], 520, 15, "isCollapsed != null");
    if (!(floatingLabelHeight != null)) dart.assertFailed(null, I[58], 521, 15, "floatingLabelHeight != null");
    if (!(floatingLabelProgress != null)) dart.assertFailed(null, I[58], 522, 15, "floatingLabelProgress != null");
    if (!(fixTextFieldOutlineLabel != null)) dart.assertFailed(null, I[58], 523, 15, "fixTextFieldOutlineLabel != null");
    ;
  }).prototype = input_decorator._Decoration.prototype;
  dart.addTypeTests(input_decorator._Decoration);
  dart.addTypeCaches(input_decorator._Decoration);
  dart.setLibraryUri(input_decorator._Decoration, I[59]);
  dart.setFieldSignature(input_decorator._Decoration, () => ({
    __proto__: dart.getFields(input_decorator._Decoration.__proto__),
    contentPadding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
    isCollapsed: dart.finalFieldType(core.bool),
    floatingLabelHeight: dart.finalFieldType(core.double),
    floatingLabelProgress: dart.finalFieldType(core.double),
    border: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    borderGap: dart.finalFieldType(dart.nullable(input_decorator._InputBorderGap)),
    alignLabelWithHint: dart.finalFieldType(core.bool),
    isDense: dart.finalFieldType(dart.nullable(core.bool)),
    visualDensity: dart.finalFieldType(dart.nullable(theme_data.VisualDensity)),
    icon: dart.finalFieldType(dart.nullable(framework.Widget)),
    input: dart.finalFieldType(dart.nullable(framework.Widget)),
    label: dart.finalFieldType(dart.nullable(framework.Widget)),
    hint: dart.finalFieldType(dart.nullable(framework.Widget)),
    prefix: dart.finalFieldType(dart.nullable(framework.Widget)),
    suffix: dart.finalFieldType(dart.nullable(framework.Widget)),
    prefixIcon: dart.finalFieldType(dart.nullable(framework.Widget)),
    suffixIcon: dart.finalFieldType(dart.nullable(framework.Widget)),
    helperError: dart.finalFieldType(dart.nullable(framework.Widget)),
    counter: dart.finalFieldType(dart.nullable(framework.Widget)),
    container: dart.finalFieldType(dart.nullable(framework.Widget)),
    fixTextFieldOutlineLabel: dart.finalFieldType(core.bool)
  }));
  dart.defineExtensionMethods(input_decorator._Decoration, ['_equals']);
  dart.defineExtensionAccessors(input_decorator._Decoration, ['hashCode']);
  input_decorator._RenderDecorationLayout = class _RenderDecorationLayout extends core.Object {
    get boxToBaseline() {
      return this[S$.boxToBaseline];
    }
    set boxToBaseline(value) {
      super.boxToBaseline = value;
    }
    get inputBaseline() {
      return this[S$.inputBaseline];
    }
    set inputBaseline(value) {
      super.inputBaseline = value;
    }
    get outlineBaseline() {
      return this[S$.outlineBaseline];
    }
    set outlineBaseline(value) {
      super.outlineBaseline = value;
    }
    get subtextBaseline() {
      return this[S$.subtextBaseline];
    }
    set subtextBaseline(value) {
      super.subtextBaseline = value;
    }
    get containerHeight() {
      return this[S$.containerHeight];
    }
    set containerHeight(value) {
      super.containerHeight = value;
    }
    get subtextHeight() {
      return this[S$.subtextHeight];
    }
    set subtextHeight(value) {
      super.subtextHeight = value;
    }
  };
  (input_decorator._RenderDecorationLayout.new = function(opts) {
    let boxToBaseline = opts && 'boxToBaseline' in opts ? opts.boxToBaseline : null;
    if (boxToBaseline == null) dart.nullFailed(I[58], 609, 19, "boxToBaseline");
    let inputBaseline = opts && 'inputBaseline' in opts ? opts.inputBaseline : null;
    if (inputBaseline == null) dart.nullFailed(I[58], 610, 19, "inputBaseline");
    let outlineBaseline = opts && 'outlineBaseline' in opts ? opts.outlineBaseline : null;
    if (outlineBaseline == null) dart.nullFailed(I[58], 611, 19, "outlineBaseline");
    let subtextBaseline = opts && 'subtextBaseline' in opts ? opts.subtextBaseline : null;
    if (subtextBaseline == null) dart.nullFailed(I[58], 612, 19, "subtextBaseline");
    let containerHeight = opts && 'containerHeight' in opts ? opts.containerHeight : null;
    if (containerHeight == null) dart.nullFailed(I[58], 613, 19, "containerHeight");
    let subtextHeight = opts && 'subtextHeight' in opts ? opts.subtextHeight : null;
    if (subtextHeight == null) dart.nullFailed(I[58], 614, 19, "subtextHeight");
    this[S$.boxToBaseline] = boxToBaseline;
    this[S$.inputBaseline] = inputBaseline;
    this[S$.outlineBaseline] = outlineBaseline;
    this[S$.subtextBaseline] = subtextBaseline;
    this[S$.containerHeight] = containerHeight;
    this[S$.subtextHeight] = subtextHeight;
    ;
  }).prototype = input_decorator._RenderDecorationLayout.prototype;
  dart.addTypeTests(input_decorator._RenderDecorationLayout);
  dart.addTypeCaches(input_decorator._RenderDecorationLayout);
  dart.setLibraryUri(input_decorator._RenderDecorationLayout, I[59]);
  dart.setFieldSignature(input_decorator._RenderDecorationLayout, () => ({
    __proto__: dart.getFields(input_decorator._RenderDecorationLayout.__proto__),
    boxToBaseline: dart.finalFieldType(core.Map$(dart.nullable(box$.RenderBox), core.double)),
    inputBaseline: dart.finalFieldType(core.double),
    outlineBaseline: dart.finalFieldType(core.double),
    subtextBaseline: dart.finalFieldType(core.double),
    containerHeight: dart.finalFieldType(core.double),
    subtextHeight: dart.finalFieldType(core.double)
  }));
  input_decorator._RenderDecoration = class _RenderDecoration extends box$.RenderBox {
    [S$._updateChild](oldChild, newChild, slot) {
      if (slot == null) dart.nullFailed(I[58], 648, 85, "slot");
      if (oldChild != null) {
        this.dropChild(oldChild);
        this.children[S$.$remove](slot);
      }
      if (newChild != null) {
        this.children[S.$_set](slot, newChild);
        this.adoptChild(newChild);
      }
      return newChild;
    }
    get icon() {
      return this[S$._icon];
    }
    set icon(value) {
      this[S$._icon] = this[S$._updateChild](this[S$._icon], value, input_decorator._DecorationSlot.icon);
    }
    get input() {
      return this[S$._input];
    }
    set input(value) {
      this[S$._input] = this[S$._updateChild](this[S$._input], value, input_decorator._DecorationSlot.input);
    }
    get label() {
      return this[S$._label];
    }
    set label(value) {
      this[S$._label] = this[S$._updateChild](this[S$._label], value, input_decorator._DecorationSlot.label);
    }
    get hint() {
      return this[S$._hint];
    }
    set hint(value) {
      this[S$._hint] = this[S$._updateChild](this[S$._hint], value, input_decorator._DecorationSlot.hint);
    }
    get prefix() {
      return this[S$._prefix];
    }
    set prefix(value) {
      this[S$._prefix] = this[S$._updateChild](this[S$._prefix], value, input_decorator._DecorationSlot.prefix);
    }
    get suffix() {
      return this[S$._suffix];
    }
    set suffix(value) {
      this[S$._suffix] = this[S$._updateChild](this[S$._suffix], value, input_decorator._DecorationSlot.suffix);
    }
    get prefixIcon() {
      return this[S$._prefixIcon];
    }
    set prefixIcon(value) {
      this[S$._prefixIcon] = this[S$._updateChild](this[S$._prefixIcon], value, input_decorator._DecorationSlot.prefixIcon);
    }
    get suffixIcon() {
      return this[S$._suffixIcon];
    }
    set suffixIcon(value) {
      this[S$._suffixIcon] = this[S$._updateChild](this[S$._suffixIcon], value, input_decorator._DecorationSlot.suffixIcon);
    }
    get helperError() {
      return this[S$._helperError];
    }
    set helperError(value) {
      this[S$._helperError] = this[S$._updateChild](this[S$._helperError], value, input_decorator._DecorationSlot.helperError);
    }
    get counter() {
      return this[S$._counter];
    }
    set counter(value) {
      this[S$._counter] = this[S$._updateChild](this[S$._counter], value, input_decorator._DecorationSlot.counter);
    }
    get container() {
      return this[S$._container];
    }
    set container(value) {
      this[S$._container] = this[S$._updateChild](this[S$._container], value, input_decorator._DecorationSlot.container);
    }
    get [S$._children$1]() {
      return new (T$.SyncIterableOfRenderBox()).new((function* _children() {
        if (this.icon != null) yield dart.nullCheck(this.icon);
        if (this.input != null) yield dart.nullCheck(this.input);
        if (this.prefixIcon != null) yield dart.nullCheck(this.prefixIcon);
        if (this.suffixIcon != null) yield dart.nullCheck(this.suffixIcon);
        if (this.prefix != null) yield dart.nullCheck(this.prefix);
        if (this.suffix != null) yield dart.nullCheck(this.suffix);
        if (this.label != null) yield dart.nullCheck(this.label);
        if (this.hint != null) yield dart.nullCheck(this.hint);
        if (this.helperError != null) yield dart.nullCheck(this.helperError);
        if (this.counter != null) yield dart.nullCheck(this.counter);
        if (this.container != null) yield dart.nullCheck(this.container);
      }).bind(this));
    }
    get decoration() {
      return this[S$._decoration];
    }
    set decoration(value) {
      if (value == null) dart.nullFailed(I[58], 754, 30, "value");
      if (!(value != null)) dart.assertFailed(null, I[58], 755, 12, "value != null");
      if (dart.equals(this[S$._decoration], value)) return;
      this[S$._decoration] = value;
      this.markNeedsLayout();
    }
    get textDirection() {
      return this[S$._textDirection$1];
    }
    set textDirection(value) {
      if (value == null) dart.nullFailed(I[58], 764, 35, "value");
      if (!(value != null)) dart.assertFailed(null, I[58], 765, 12, "value != null");
      if (this[S$._textDirection$1] == value) return;
      this[S$._textDirection$1] = value;
      this.markNeedsLayout();
    }
    get textBaseline() {
      return this[S$._textBaseline];
    }
    set textBaseline(value) {
      if (value == null) dart.nullFailed(I[58], 774, 33, "value");
      if (!(value != null)) dart.assertFailed(null, I[58], 775, 12, "value != null");
      if (this[S$._textBaseline] == value) return;
      this[S$._textBaseline] = value;
      this.markNeedsLayout();
    }
    get [S$._defaultTextAlignVertical]() {
      return dart.test(this[S$._isOutlineAligned]) ? alignment.TextAlignVertical.center : alignment.TextAlignVertical.top;
    }
    get textAlignVertical() {
      let t25;
      t25 = this[S$._textAlignVertical];
      return t25 == null ? this[S$._defaultTextAlignVertical] : t25;
    }
    set textAlignVertical(value) {
      let t25, t25$;
      if (dart.equals(this[S$._textAlignVertical], value)) {
        return;
      }
      if (dart.nullCheck(this.textAlignVertical).y == (t25$ = (t25 = value, t25 == null ? null : t25.y), t25$ == null ? this[S$._defaultTextAlignVertical].y : t25$)) {
        this[S$._textAlignVertical] = value;
        return;
      }
      this[S$._textAlignVertical] = value;
      this.markNeedsLayout();
    }
    get isFocused() {
      return this[S$._isFocused];
    }
    set isFocused(value) {
      if (value == null) dart.nullFailed(I[58], 802, 22, "value");
      if (!(value != null)) dart.assertFailed(null, I[58], 803, 12, "value != null");
      if (this[S$._isFocused] == value) return;
      this[S$._isFocused] = value;
      this.markNeedsSemanticsUpdate();
    }
    get expands() {
      return this[S$._expands];
    }
    set expands(value) {
      if (value == null) dart.nullFailed(I[58], 812, 20, "value");
      if (!(value != null)) dart.assertFailed(null, I[58], 813, 12, "value != null");
      if (this[S$._expands] == value) return;
      this[S$._expands] = value;
      this.markNeedsLayout();
    }
    get [S$._isOutlineAligned]() {
      return !dart.test(this.decoration.isCollapsed) && dart.test(dart.nullCheck(this.decoration.border).isOutline);
    }
    attach(owner) {
      object.PipelineOwner.as(owner);
      if (owner == null) dart.nullFailed(I[58], 827, 29, "owner");
      super.attach(owner);
      for (let child of this[S$._children$1])
        child.attach(owner);
    }
    detach() {
      super.detach();
      for (let child of this[S$._children$1])
        child.detach();
    }
    redepthChildren() {
      this[S$._children$1][S$.$forEach](dart.bind(this, 'redepthChild'));
    }
    visitChildren(visitor) {
      if (visitor == null) dart.nullFailed(I[58], 846, 42, "visitor");
      this[S$._children$1][S$.$forEach](visitor);
    }
    visitChildrenForSemantics(visitor) {
      if (visitor == null) dart.nullFailed(I[58], 851, 54, "visitor");
      if (this.icon != null) visitor(dart.nullCheck(this.icon));
      if (this.prefix != null) visitor(dart.nullCheck(this.prefix));
      if (this.prefixIcon != null) visitor(dart.nullCheck(this.prefixIcon));
      if (this.label != null) {
        visitor(dart.nullCheck(this.label));
      }
      if (this.hint != null) {
        if (dart.test(this.isFocused)) {
          visitor(dart.nullCheck(this.hint));
        } else if (this.label == null) {
          visitor(dart.nullCheck(this.hint));
        }
      }
      if (this.input != null) visitor(dart.nullCheck(this.input));
      if (this.suffixIcon != null) visitor(dart.nullCheck(this.suffixIcon));
      if (this.suffix != null) visitor(dart.nullCheck(this.suffix));
      if (this.container != null) visitor(dart.nullCheck(this.container));
      if (this.helperError != null) visitor(dart.nullCheck(this.helperError));
      if (this.counter != null) visitor(dart.nullCheck(this.counter));
    }
    debugDescribeChildren() {
      let value = T$.JSArrayOfDiagnosticsNode().of([]);
      function add(child, name) {
        if (name == null) dart.nullFailed(I[58], 887, 39, "name");
        if (child != null) value[S.$add](child.toDiagnosticsNode({name: name}));
      }
      dart.fn(add, T$.RenderBoxNAndStringTovoid());
      add(this.icon, "icon");
      add(this.input, "input");
      add(this.label, "label");
      add(this.hint, "hint");
      add(this.prefix, "prefix");
      add(this.suffix, "suffix");
      add(this.prefixIcon, "prefixIcon");
      add(this.suffixIcon, "suffixIcon");
      add(this.helperError, "helperError");
      add(this.counter, "counter");
      add(this.container, "container");
      return value;
    }
    get sizedByParent() {
      return false;
    }
    static _minWidth(box, height) {
      if (height == null) dart.nullFailed(I[58], 908, 50, "height");
      return box == null ? 0.0 : box.getMinIntrinsicWidth(height);
    }
    static _maxWidth(box, height) {
      if (height == null) dart.nullFailed(I[58], 912, 50, "height");
      return box == null ? 0.0 : box.getMaxIntrinsicWidth(height);
    }
    static _minHeight(box, width) {
      if (width == null) dart.nullFailed(I[58], 916, 51, "width");
      return box == null ? 0.0 : box.getMinIntrinsicHeight(width);
    }
    static _boxSize(box) {
      return box == null ? ui.Size.zero : box.size;
    }
    static _boxParentData(box) {
      if (box == null) dart.nullFailed(I[58], 922, 49, "box");
      return box$.BoxParentData.as(dart.nullCheck(box.parentData));
    }
    get contentPadding() {
      return edge_insets.EdgeInsets.as(this.decoration.contentPadding);
    }
    [S$._layoutLineBox](box, constraints) {
      if (constraints == null) dart.nullFailed(I[58], 927, 56, "constraints");
      if (box == null) {
        return 0.0;
      }
      box.layout(constraints, {parentUsesSize: true});
      let baseline = dart.nullCheck(box.getDistanceToBaseline(ui.TextBaseline.alphabetic));
      if (!dart.test(dart.fn(() => {
        if (baseline >= 0) return true;
        dart.throw(new assertions.FlutterError.fromParts(T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("One of InputDecorator's children reported a negative baseline offset."), new assertions.ErrorDescription.new(dart.str(dart.runtimeType(box)) + ", of size " + dart.str(box.size) + ", reported a negative " + "alphabetic baseline of " + dart.str(baseline) + ".")])));
      }, T$.VoidTobool())())) dart.assertFailed(null, I[58], 940, 12, "() {\r\n      if (baseline >= 0)\r\n        return true;\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary(\"One of InputDecorator's children reported a negative baseline offset.\"),\r\n        ErrorDescription(\r\n          '${box.runtimeType}, of size ${box.size}, reported a negative '\r\n          'alphabetic baseline of $baseline.',\r\n        ),\r\n      ]);\r\n    }()");
      return baseline;
    }
    [S$._layout](layoutConstraints) {
      let t25, t25$, t25$0, t25$1, t25$2;
      if (layoutConstraints == null) dart.nullFailed(I[58], 957, 50, "layoutConstraints");
      if (!(dart.notNull(layoutConstraints.maxWidth) < 1 / 0)) dart.assertFailed("An InputDecorator, which is typically created by a TextField, cannot " + "have an unbounded width.\n" + "This happens when the parent widget does not provide a finite width " + "constraint. For example, if the InputDecorator is contained by a Row, " + "then its width must be constrained. An Expanded widget or a SizedBox " + "can be used to constrain the width of the InputDecorator or the " + "TextField that contains it.", I[58], 959, 7, "layoutConstraints.maxWidth < double.infinity");
      let boxToBaseline = new (T$.LinkedMapOfRenderBoxN$double()).new();
      let boxConstraints = layoutConstraints.loosen();
      boxToBaseline[S.$_set](this.prefix, this[S$._layoutLineBox](this.prefix, boxConstraints));
      boxToBaseline[S.$_set](this.suffix, this[S$._layoutLineBox](this.suffix, boxConstraints));
      boxToBaseline[S.$_set](this.icon, this[S$._layoutLineBox](this.icon, boxConstraints));
      boxToBaseline[S.$_set](this.prefixIcon, this[S$._layoutLineBox](this.prefixIcon, boxConstraints));
      boxToBaseline[S.$_set](this.suffixIcon, this[S$._layoutLineBox](this.suffixIcon, boxConstraints));
      let inputWidth = math.max(core.double, 0.0, dart.notNull(this.constraints.maxWidth) - (dart.notNull(input_decorator._RenderDecoration._boxSize(this.icon).width) + dart.notNull(this.contentPadding.left) + dart.notNull(input_decorator._RenderDecoration._boxSize(this.prefixIcon).width) + dart.notNull(input_decorator._RenderDecoration._boxSize(this.prefix).width) + dart.notNull(input_decorator._RenderDecoration._boxSize(this.suffix).width) + dart.notNull(input_decorator._RenderDecoration._boxSize(this.suffixIcon).width) + dart.notNull(this.contentPadding.right)));
      let invertedLabelScale = dart.nullCheck(ui.lerpDouble(1.0, 1 / 0.75, this.decoration.floatingLabelProgress));
      let suffixIconWidth = input_decorator._RenderDecoration._boxSize(this.suffixIcon).width;
      if (dart.test(dart.nullCheck(this.decoration.border).isOutline)) {
        suffixIconWidth = dart.nullCheck(ui.lerpDouble(suffixIconWidth, 0.0, this.decoration.floatingLabelProgress));
      }
      let labelWidth = math.max(core.double, 0.0, dart.notNull(this.constraints.maxWidth) - (dart.notNull(input_decorator._RenderDecoration._boxSize(this.icon).width) + dart.notNull(this.contentPadding.left) + dart.notNull(input_decorator._RenderDecoration._boxSize(this.prefixIcon).width) + dart.notNull(suffixIconWidth) + dart.notNull(this.contentPadding.right)));
      boxToBaseline[S.$_set](this.label, this[S$._layoutLineBox](this.label, boxConstraints.copyWith({maxWidth: labelWidth * invertedLabelScale})));
      boxToBaseline[S.$_set](this.hint, this[S$._layoutLineBox](this.hint, boxConstraints.copyWith({minWidth: inputWidth, maxWidth: inputWidth})));
      boxToBaseline[S.$_set](this.counter, this[S$._layoutLineBox](this.counter, boxConstraints));
      boxToBaseline[S.$_set](this.helperError, this[S$._layoutLineBox](this.helperError, boxConstraints.copyWith({maxWidth: math.max(core.double, 0.0, dart.notNull(boxConstraints.maxWidth) - dart.notNull(input_decorator._RenderDecoration._boxSize(this.icon).width) - dart.notNull(input_decorator._RenderDecoration._boxSize(this.counter).width) - dart.notNull(this.contentPadding.horizontal))})));
      let labelHeight = this.label == null ? 0.0 : this.decoration.floatingLabelHeight;
      let topHeight = dart.test(dart.nullCheck(this.decoration.border).isOutline) ? math.max(core.double, dart.notNull(labelHeight) - dart.nullCheck(boxToBaseline[S.$_get](this.label)), 0.0) : labelHeight;
      let counterHeight = this.counter == null ? 0.0 : dart.nullCheck(boxToBaseline[S.$_get](this.counter)) + 8;
      let helperErrorExists = (t25 = this.helperError, t25 == null ? null : t25.size) != null && dart.notNull(dart.nullCheck(this.helperError).size.height) > 0;
      let helperErrorHeight = !helperErrorExists ? 0.0 : dart.notNull(dart.nullCheck(this.helperError).size.height) + 8;
      let bottomHeight = math.max(core.double, counterHeight, helperErrorHeight);
      let densityOffset = dart.nullCheck(this.decoration.visualDensity).baseSizeAdjustment;
      boxToBaseline[S.$_set](this.input, this[S$._layoutLineBox](this.input, boxConstraints.deflate(new edge_insets.EdgeInsets.only({top: dart.notNull(this.contentPadding.top) + dart.notNull(topHeight) + dart.notNull(densityOffset.dy) / 2, bottom: dart.notNull(this.contentPadding.bottom) + bottomHeight + dart.notNull(densityOffset.dy) / 2})).copyWith({minWidth: inputWidth, maxWidth: inputWidth})));
      let hintHeight = this.hint == null ? 0.0 : dart.nullCheck(this.hint).size.height;
      let inputDirectHeight = this.input == null ? 0.0 : dart.nullCheck(this.input).size.height;
      let inputHeight = math.max(core.double, hintHeight, inputDirectHeight);
      let inputInternalBaseline = math.max(core.double, dart.nullCheck(boxToBaseline[S.$_get](this.input)), dart.nullCheck(boxToBaseline[S.$_get](this.hint)));
      let prefixHeight = (t25$0 = (t25$ = this.prefix, t25$ == null ? null : t25$.size.height), t25$0 == null ? 0.0 : t25$0);
      let suffixHeight = (t25$2 = (t25$1 = this.suffix, t25$1 == null ? null : t25$1.size.height), t25$2 == null ? 0.0 : t25$2);
      let fixHeight = math.max(core.double, dart.nullCheck(boxToBaseline[S.$_get](this.prefix)), dart.nullCheck(boxToBaseline[S.$_get](this.suffix)));
      let fixAboveInput = math.max(core.double, 0.0, fixHeight - inputInternalBaseline);
      let fixBelowBaseline = math.max(core.double, dart.notNull(prefixHeight) - dart.nullCheck(boxToBaseline[S.$_get](this.prefix)), dart.notNull(suffixHeight) - dart.nullCheck(boxToBaseline[S.$_get](this.suffix)));
      let fixBelowInput = math.max(core.double, 0.0, fixBelowBaseline - (inputHeight - inputInternalBaseline));
      let prefixIconHeight = this.prefixIcon == null ? 0.0 : dart.nullCheck(this.prefixIcon).size.height;
      let suffixIconHeight = this.suffixIcon == null ? 0.0 : dart.nullCheck(this.suffixIcon).size.height;
      let fixIconHeight = math.max(core.double, prefixIconHeight, suffixIconHeight);
      let contentHeight = math.max(core.double, fixIconHeight, dart.notNull(topHeight) + dart.notNull(this.contentPadding.top) + fixAboveInput + inputHeight + fixBelowInput + dart.notNull(this.contentPadding.bottom) + dart.notNull(densityOffset.dy));
      let minContainerHeight = dart.nullCheck(this.decoration.isDense) || dart.test(this.decoration.isCollapsed) || dart.test(this.expands) ? 0.0 : 48;
      let maxContainerHeight = dart.notNull(boxConstraints.maxHeight) - bottomHeight;
      let containerHeight = dart.test(this.expands) ? maxContainerHeight : math.min(core.double, math.max(core.double, contentHeight, minContainerHeight), maxContainerHeight);
      let interactiveAdjustment = minContainerHeight > contentHeight ? (minContainerHeight - contentHeight) / 2.0 : 0.0;
      let overflow = math.max(core.double, 0.0, contentHeight - maxContainerHeight);
      let textAlignVerticalFactor = (dart.notNull(dart.nullCheck(this.textAlignVertical).y) + 1.0) / 2.0;
      let baselineAdjustment = fixAboveInput - overflow * (1 - textAlignVerticalFactor);
      let topInputBaseline = dart.notNull(this.contentPadding.top) + dart.notNull(topHeight) + inputInternalBaseline + baselineAdjustment + interactiveAdjustment;
      let maxContentHeight = containerHeight - dart.notNull(this.contentPadding.top) - dart.notNull(topHeight) - dart.notNull(this.contentPadding.bottom);
      let alignableHeight = fixAboveInput + inputHeight + fixBelowInput;
      let maxVerticalOffset = maxContentHeight - alignableHeight;
      let textAlignVerticalOffset = maxVerticalOffset * textAlignVerticalFactor;
      let inputBaseline = topInputBaseline + textAlignVerticalOffset + dart.notNull(densityOffset.dy) / 2.0;
      let outlineCenterBaseline = inputInternalBaseline + baselineAdjustment / 2.0 + (containerHeight - (2.0 + inputHeight)) / 2.0;
      let outlineTopBaseline = topInputBaseline;
      let outlineBottomBaseline = topInputBaseline + maxVerticalOffset;
      let outlineBaseline = this[S$._interpolateThree](outlineTopBaseline, outlineCenterBaseline, outlineBottomBaseline, dart.nullCheck(this.textAlignVertical));
      let subtextCounterBaseline = 0.0;
      let subtextHelperBaseline = 0.0;
      let subtextCounterHeight = 0.0;
      let subtextHelperHeight = 0.0;
      if (this.counter != null) {
        subtextCounterBaseline = containerHeight + 8 + dart.nullCheck(boxToBaseline[S.$_get](this.counter));
        subtextCounterHeight = dart.notNull(dart.nullCheck(this.counter).size.height) + 8;
      }
      if (helperErrorExists) {
        subtextHelperBaseline = containerHeight + 8 + dart.nullCheck(boxToBaseline[S.$_get](this.helperError));
        subtextHelperHeight = helperErrorHeight;
      }
      let subtextBaseline = math.max(core.double, subtextCounterBaseline, subtextHelperBaseline);
      let subtextHeight = math.max(core.double, subtextCounterHeight, subtextHelperHeight);
      return new input_decorator._RenderDecorationLayout.new({boxToBaseline: boxToBaseline, containerHeight: containerHeight, inputBaseline: inputBaseline, outlineBaseline: outlineBaseline, subtextBaseline: subtextBaseline, subtextHeight: subtextHeight});
    }
    [S$._interpolateThree](begin, middle, end, textAlignVertical) {
      if (begin == null) dart.nullFailed(I[58], 1209, 35, "begin");
      if (middle == null) dart.nullFailed(I[58], 1209, 49, "middle");
      if (end == null) dart.nullFailed(I[58], 1209, 64, "end");
      if (textAlignVertical == null) dart.nullFailed(I[58], 1209, 87, "textAlignVertical");
      if (dart.notNull(textAlignVertical.y) <= 0) {
        if (dart.notNull(begin) >= dart.notNull(middle)) {
          return middle;
        }
        let t = dart.notNull(textAlignVertical.y) + 1;
        return dart.notNull(begin) + (dart.notNull(middle) - dart.notNull(begin)) * t;
      }
      if (dart.notNull(middle) >= dart.notNull(end)) {
        return middle;
      }
      let t = textAlignVertical.y;
      return dart.notNull(middle) + (dart.notNull(end) - dart.notNull(middle)) * dart.notNull(t);
    }
    computeMinIntrinsicWidth(height) {
      if (height == null) dart.nullFailed(I[58], 1232, 42, "height");
      return dart.notNull(input_decorator._RenderDecoration._minWidth(this.icon, height)) + dart.notNull(this.contentPadding.left) + dart.notNull(input_decorator._RenderDecoration._minWidth(this.prefixIcon, height)) + dart.notNull(input_decorator._RenderDecoration._minWidth(this.prefix, height)) + math.max(core.num, input_decorator._RenderDecoration._minWidth(this.input, height), input_decorator._RenderDecoration._minWidth(this.hint, height)) + dart.notNull(input_decorator._RenderDecoration._minWidth(this.suffix, height)) + dart.notNull(input_decorator._RenderDecoration._minWidth(this.suffixIcon, height)) + dart.notNull(this.contentPadding.right);
    }
    computeMaxIntrinsicWidth(height) {
      if (height == null) dart.nullFailed(I[58], 1244, 42, "height");
      return dart.notNull(input_decorator._RenderDecoration._maxWidth(this.icon, height)) + dart.notNull(this.contentPadding.left) + dart.notNull(input_decorator._RenderDecoration._maxWidth(this.prefixIcon, height)) + dart.notNull(input_decorator._RenderDecoration._maxWidth(this.prefix, height)) + math.max(core.num, input_decorator._RenderDecoration._maxWidth(this.input, height), input_decorator._RenderDecoration._maxWidth(this.hint, height)) + dart.notNull(input_decorator._RenderDecoration._maxWidth(this.suffix, height)) + dart.notNull(input_decorator._RenderDecoration._maxWidth(this.suffixIcon, height)) + dart.notNull(this.contentPadding.right);
    }
    [S$._lineHeight](width, boxes) {
      if (width == null) dart.nullFailed(I[58], 1255, 29, "width");
      if (boxes == null) dart.nullFailed(I[58], 1255, 53, "boxes");
      let height = 0.0;
      for (let box of boxes) {
        if (box == null) continue;
        height = math.max(core.double, input_decorator._RenderDecoration._minHeight(box, width), height);
      }
      return height;
    }
    computeMinIntrinsicHeight(width) {
      if (width == null) dart.nullFailed(I[58], 1269, 43, "width");
      let subtextHeight = this[S$._lineHeight](width, T$.JSArrayOfRenderBoxN().of([this.helperError, this.counter]));
      if (dart.notNull(subtextHeight) > 0.0) subtextHeight = dart.notNull(subtextHeight) + 8;
      let densityOffset = dart.nullCheck(this.decoration.visualDensity).baseSizeAdjustment;
      let containerHeight = dart.notNull(this.contentPadding.top) + dart.notNull(this.label == null ? 0.0 : this.decoration.floatingLabelHeight) + dart.notNull(this[S$._lineHeight](width, T$.JSArrayOfRenderBoxN().of([this.prefix, this.input, this.suffix]))) + dart.notNull(this.contentPadding.bottom) + dart.notNull(densityOffset.dy);
      let minContainerHeight = dart.nullCheck(this.decoration.isDense) || dart.test(this.expands) ? 0.0 : 48;
      return math.max(core.double, containerHeight, minContainerHeight) + dart.notNull(subtextHeight);
    }
    computeMaxIntrinsicHeight(width) {
      if (width == null) dart.nullFailed(I[58], 1286, 43, "width");
      return this.computeMinIntrinsicHeight(width);
    }
    computeDistanceToActualBaseline(baseline) {
      if (baseline == null) dart.nullFailed(I[58], 1291, 55, "baseline");
      return dart.notNull(input_decorator._RenderDecoration._boxParentData(dart.nullCheck(this.input)).offset.dy) + dart.nullCheck(dart.nullCheck(this.input).computeDistanceToActualBaseline(baseline));
    }
    computeDryLayout(constraints) {
      if (constraints == null) dart.nullFailed(I[58], 1299, 40, "constraints");
      if (!dart.test(this.debugCannotComputeDryLayout({reason: "Layout requires baseline metrics, which are only available after a full layout."}))) dart.assertFailed(null, I[58], 1300, 12, "debugCannotComputeDryLayout(\r\n      reason: 'Layout requires baseline metrics, which are only available after a full layout.',\r\n    )");
      return ui.Size.zero;
    }
    performLayout() {
      let constraints = this.constraints;
      this[S$._labelTransform] = null;
      let layout = this[S$._layout](constraints);
      let overallWidth = constraints.maxWidth;
      let overallHeight = dart.notNull(layout.containerHeight) + dart.notNull(layout.subtextHeight);
      if (this.container != null) {
        let containerConstraints = new box$.BoxConstraints.tightFor({height: layout.containerHeight, width: dart.notNull(overallWidth) - dart.notNull(input_decorator._RenderDecoration._boxSize(this.icon).width)});
        dart.nullCheck(this.container).layout(containerConstraints, {parentUsesSize: true});
        let x = null;
        switch (this.textDirection) {
          case C[137] || CT.C137:
          {
            x = 0.0;
            break;
          }
          case C[138] || CT.C138:
          {
            x = input_decorator._RenderDecoration._boxSize(this.icon).width;
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
        input_decorator._RenderDecoration._boxParentData(dart.nullCheck(this.container)).offset = new ui.Offset.new(x, 0.0);
      }
      let height = null;
      function centerLayout(box, x) {
        if (box == null) dart.nullFailed(I[58], 1334, 35, "box");
        if (x == null) dart.nullFailed(I[58], 1334, 47, "x");
        input_decorator._RenderDecoration._boxParentData(box).offset = new ui.Offset.new(x, (dart.nullCheck(height) - dart.notNull(box.size.height)) / 2.0);
        return box.size.width;
      }
      dart.fn(centerLayout, T$.RenderBoxAnddoubleTodouble());
      let baseline = null;
      function baselineLayout(box, x) {
        if (box == null) dart.nullFailed(I[58], 1340, 37, "box");
        if (x == null) dart.nullFailed(I[58], 1340, 49, "x");
        input_decorator._RenderDecoration._boxParentData(box).offset = new ui.Offset.new(x, dart.nullCheck(baseline) - dart.nullCheck(layout.boxToBaseline[S.$_get](box)));
        return box.size.width;
      }
      dart.fn(baselineLayout, T$.RenderBoxAnddoubleTodouble());
      let left = this.contentPadding.left;
      let right = dart.notNull(overallWidth) - dart.notNull(this.contentPadding.right);
      height = layout.containerHeight;
      baseline = dart.test(this[S$._isOutlineAligned]) ? layout.outlineBaseline : layout.inputBaseline;
      if (this.icon != null) {
        let x = null;
        switch (this.textDirection) {
          case C[137] || CT.C137:
          {
            x = dart.notNull(overallWidth) - dart.notNull(dart.nullCheck(this.icon).size.width);
            break;
          }
          case C[138] || CT.C138:
          {
            x = 0.0;
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
        centerLayout(dart.nullCheck(this.icon), x);
      }
      switch (this.textDirection) {
        case C[137] || CT.C137:
        {
          {
            let start = right - dart.notNull(input_decorator._RenderDecoration._boxSize(this.icon).width);
            let end = left;
            if (this.prefixIcon != null) {
              start = start + dart.notNull(this.contentPadding.left);
              start = start - dart.notNull(centerLayout(dart.nullCheck(this.prefixIcon), start - dart.notNull(dart.nullCheck(this.prefixIcon).size.width)));
            }
            if (this.label != null) {
              if (dart.test(this.decoration.alignLabelWithHint)) {
                baselineLayout(dart.nullCheck(this.label), start - dart.notNull(dart.nullCheck(this.label).size.width));
              } else {
                centerLayout(dart.nullCheck(this.label), start - dart.notNull(dart.nullCheck(this.label).size.width));
              }
            }
            if (this.prefix != null) start = start - dart.notNull(baselineLayout(dart.nullCheck(this.prefix), start - dart.notNull(dart.nullCheck(this.prefix).size.width)));
            if (this.input != null) baselineLayout(dart.nullCheck(this.input), start - dart.notNull(dart.nullCheck(this.input).size.width));
            if (this.hint != null) baselineLayout(dart.nullCheck(this.hint), start - dart.notNull(dart.nullCheck(this.hint).size.width));
            if (this.suffixIcon != null) {
              end = dart.notNull(end) - dart.notNull(this.contentPadding.left);
              end = dart.notNull(end) + dart.notNull(centerLayout(dart.nullCheck(this.suffixIcon), end));
            }
            if (this.suffix != null) end = dart.notNull(end) + dart.notNull(baselineLayout(dart.nullCheck(this.suffix), end));
            break;
          }
        }
        case C[138] || CT.C138:
        {
          {
            let start = dart.notNull(left) + dart.notNull(input_decorator._RenderDecoration._boxSize(this.icon).width);
            let end = right;
            if (this.prefixIcon != null) {
              start = start - dart.notNull(this.contentPadding.left);
              start = start + dart.notNull(centerLayout(dart.nullCheck(this.prefixIcon), start));
            }
            if (this.label != null) {
              if (dart.test(this.decoration.alignLabelWithHint)) {
                baselineLayout(dart.nullCheck(this.label), start);
              } else {
                centerLayout(dart.nullCheck(this.label), start);
              }
            }
            if (this.prefix != null) start = start + dart.notNull(baselineLayout(dart.nullCheck(this.prefix), start));
            if (this.input != null) baselineLayout(dart.nullCheck(this.input), start);
            if (this.hint != null) baselineLayout(dart.nullCheck(this.hint), start);
            if (this.suffixIcon != null) {
              end = end + dart.notNull(this.contentPadding.right);
              end = end - dart.notNull(centerLayout(dart.nullCheck(this.suffixIcon), end - dart.notNull(dart.nullCheck(this.suffixIcon).size.width)));
            }
            if (this.suffix != null) end = end - dart.notNull(baselineLayout(dart.nullCheck(this.suffix), end - dart.notNull(dart.nullCheck(this.suffix).size.width)));
            break;
          }
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      if (this.helperError != null || this.counter != null) {
        height = layout.subtextHeight;
        baseline = layout.subtextBaseline;
        switch (this.textDirection) {
          case C[137] || CT.C137:
          {
            if (this.helperError != null) baselineLayout(dart.nullCheck(this.helperError), right - dart.notNull(dart.nullCheck(this.helperError).size.width) - dart.notNull(input_decorator._RenderDecoration._boxSize(this.icon).width));
            if (this.counter != null) baselineLayout(dart.nullCheck(this.counter), left);
            break;
          }
          case C[138] || CT.C138:
          {
            if (this.helperError != null) baselineLayout(dart.nullCheck(this.helperError), dart.notNull(left) + dart.notNull(input_decorator._RenderDecoration._boxSize(this.icon).width));
            if (this.counter != null) baselineLayout(dart.nullCheck(this.counter), right - dart.notNull(dart.nullCheck(this.counter).size.width));
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
      }
      if (this.label != null) {
        let labelX = input_decorator._RenderDecoration._boxParentData(dart.nullCheck(this.label)).offset.dx;
        switch (this.textDirection) {
          case C[137] || CT.C137:
          {
            dart.nullCheck(this.decoration.borderGap).start = dart.notNull(labelX) + dart.notNull(dart.nullCheck(this.label).size.width);
            break;
          }
          case C[138] || CT.C138:
          {
            dart.nullCheck(this.decoration.borderGap).start = dart.notNull(labelX) - dart.notNull(input_decorator._RenderDecoration._boxSize(this.icon).width);
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
        dart.nullCheck(this.decoration.borderGap).extent = dart.notNull(dart.nullCheck(this.label).size.width) * 0.75;
      } else {
        dart.nullCheck(this.decoration.borderGap).start = null;
        dart.nullCheck(this.decoration.borderGap).extent = 0.0;
      }
      this.size = constraints.constrain(new ui.Size.new(overallWidth, overallHeight));
      if (!(this.size.width == constraints.constrainWidth(overallWidth))) dart.assertFailed(null, I[58], 1462, 12, "size.width == constraints.constrainWidth(overallWidth)");
      if (!(this.size.height == constraints.constrainHeight(overallHeight))) dart.assertFailed(null, I[58], 1463, 12, "size.height == constraints.constrainHeight(overallHeight)");
    }
    [S$._paintLabel](context, offset) {
      if (context == null) dart.nullFailed(I[58], 1466, 36, "context");
      if (offset == null) dart.nullFailed(I[58], 1466, 52, "offset");
      context.paintChild(dart.nullCheck(this.label), offset);
    }
    paint(context, offset) {
      let t25;
      if (context == null) dart.nullFailed(I[58], 1471, 30, "context");
      if (offset == null) dart.nullFailed(I[58], 1471, 46, "offset");
      function doPaint(child) {
        if (child != null) context.paintChild(child, input_decorator._RenderDecoration._boxParentData(child).offset['+'](offset));
      }
      dart.fn(doPaint, T$.RenderBoxNTovoid());
      doPaint(this.container);
      if (this.label != null) {
        let labelOffset = input_decorator._RenderDecoration._boxParentData(dart.nullCheck(this.label)).offset;
        let labelHeight = dart.nullCheck(this.label).size.height;
        let borderWeight = dart.nullCheck(this.decoration.border).borderSide.width;
        let t = this.decoration.floatingLabelProgress;
        let isOutlineBorder = this.decoration.border != null && dart.test(dart.nullCheck(this.decoration.border).isOutline);
        let floatingY = dart.test(this.decoration.fixTextFieldOutlineLabel) ? isOutlineBorder ? -dart.notNull(labelHeight) * 0.75 / 2.0 + dart.notNull(borderWeight) / 2.0 : this.contentPadding.top : isOutlineBorder ? -dart.notNull(labelHeight) * 0.25 : this.contentPadding.top;
        let scale = dart.nullCheck(ui.lerpDouble(1.0, 0.75, t));
        let dx = null;
        switch (this.textDirection) {
          case C[137] || CT.C137:
          {
            dx = dart.notNull(labelOffset.dx) + dart.notNull(dart.nullCheck(this.label).size.width) * (1.0 - scale);
            break;
          }
          case C[138] || CT.C138:
          {
            dx = labelOffset.dx;
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
        let dy = dart.nullCheck(ui.lerpDouble(0.0, dart.notNull(floatingY) - dart.notNull(labelOffset.dy), t));
        this[S$._labelTransform] = (t25 = vector_math_64.Matrix4.identity(), (() => {
          t25.translate(dx, dart.notNull(labelOffset.dy) + dy);
          t25.scale(scale);
          return t25;
        })());
        this.layer = context.pushTransform(this.needsCompositing, offset, dart.nullCheck(this[S$._labelTransform]), dart.bind(this, S$._paintLabel), {oldLayer: T$.TransformLayerN().as(this.layer)});
      } else {
        this.layer = null;
      }
      doPaint(this.icon);
      doPaint(this.prefix);
      doPaint(this.suffix);
      doPaint(this.prefixIcon);
      doPaint(this.suffixIcon);
      doPaint(this.hint);
      doPaint(this.input);
      doPaint(this.helperError);
      doPaint(this.counter);
    }
    hitTestSelf(position) {
      if (position == null) dart.nullFailed(I[58], 1528, 27, "position");
      return true;
    }
    hitTestChildren(result, opts) {
      if (result == null) dart.nullFailed(I[58], 1531, 41, "result");
      let position = opts && 'position' in opts ? opts.position : null;
      if (position == null) dart.nullFailed(I[58], 1531, 67, "position");
      if (!(position != null)) dart.assertFailed(null, I[58], 1532, 12, "position != null");
      for (let child of this[S$._children$1]) {
        let offset = input_decorator._RenderDecoration._boxParentData(child).offset;
        let isHit = result.addWithPaintOffset({offset: offset, position: position, hitTest: dart.fn((result, transformed) => {
            if (result == null) dart.nullFailed(I[58], 1539, 36, "result");
            if (transformed == null) dart.nullFailed(I[58], 1539, 51, "transformed");
            if (!dart.equals(transformed, position['-'](offset))) dart.assertFailed(null, I[58], 1540, 18, "transformed == position - offset");
            return child.hitTest(result, {position: transformed});
          }, T$.BoxHitTestResultAndOffsetTobool())});
        if (dart.test(isHit)) return true;
      }
      return false;
    }
    applyPaintTransform(child, transform) {
      let t25;
      object.RenderObject.as(child);
      if (child == null) dart.nullFailed(I[58], 1551, 41, "child");
      if (transform == null) dart.nullFailed(I[58], 1551, 56, "transform");
      if (dart.equals(child, this.label) && this[S$._labelTransform] != null) {
        let labelOffset = input_decorator._RenderDecoration._boxParentData(dart.nullCheck(this.label)).offset;
        t25 = transform;
        (() => {
          t25.multiply(dart.nullCheck(this[S$._labelTransform]));
          t25.translate(-dart.notNull(labelOffset.dx), -dart.notNull(labelOffset.dy));
          return t25;
        })();
      }
      super.applyPaintTransform(child, transform);
    }
  };
  (input_decorator._RenderDecoration.new = function(opts) {
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    if (decoration == null) dart.nullFailed(I[58], 628, 26, "decoration");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    if (textDirection == null) dart.nullFailed(I[58], 629, 28, "textDirection");
    let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
    if (textBaseline == null) dart.nullFailed(I[58], 630, 27, "textBaseline");
    let isFocused = opts && 'isFocused' in opts ? opts.isFocused : null;
    if (isFocused == null) dart.nullFailed(I[58], 631, 19, "isFocused");
    let expands = opts && 'expands' in opts ? opts.expands : null;
    if (expands == null) dart.nullFailed(I[58], 632, 19, "expands");
    let textAlignVertical = opts && 'textAlignVertical' in opts ? opts.textAlignVertical : null;
    this.children = new (T$.LinkedMapOf_DecorationSlot$RenderBox()).new();
    this[S$._icon] = null;
    this[S$._input] = null;
    this[S$._label] = null;
    this[S$._hint] = null;
    this[S$._prefix] = null;
    this[S$._suffix] = null;
    this[S$._prefixIcon] = null;
    this[S$._suffixIcon] = null;
    this[S$._helperError] = null;
    this[S$._counter] = null;
    this[S$._container] = null;
    this[S$._expands] = false;
    this[S$._labelTransform] = null;
    if (!(decoration != null)) dart.assertFailed(null, I[58], 634, 15, "decoration != null");
    if (!(textDirection != null)) dart.assertFailed(null, I[58], 635, 15, "textDirection != null");
    if (!(textBaseline != null)) dart.assertFailed(null, I[58], 636, 15, "textBaseline != null");
    if (!(expands != null)) dart.assertFailed(null, I[58], 637, 15, "expands != null");
    this[S$._decoration] = decoration;
    this[S$._textDirection$1] = textDirection;
    this[S$._textBaseline] = textBaseline;
    this[S$._textAlignVertical] = textAlignVertical;
    this[S$._isFocused] = isFocused;
    this[S$._expands] = expands;
    input_decorator._RenderDecoration.__proto__.new.call(this);
    ;
  }).prototype = input_decorator._RenderDecoration.prototype;
  dart.addTypeTests(input_decorator._RenderDecoration);
  dart.addTypeCaches(input_decorator._RenderDecoration);
  dart.setMethodSignature(input_decorator._RenderDecoration, () => ({
    __proto__: dart.getMethods(input_decorator._RenderDecoration.__proto__),
    [S$._updateChild]: dart.fnType(dart.nullable(box$.RenderBox), [dart.nullable(box$.RenderBox), dart.nullable(box$.RenderBox), input_decorator._DecorationSlot]),
    [S$._layoutLineBox]: dart.fnType(core.double, [dart.nullable(box$.RenderBox), box$.BoxConstraints]),
    [S$._layout]: dart.fnType(input_decorator._RenderDecorationLayout, [box$.BoxConstraints]),
    [S$._interpolateThree]: dart.fnType(core.double, [core.double, core.double, core.double, alignment.TextAlignVertical]),
    [S$._lineHeight]: dart.fnType(core.double, [core.double, core.List$(dart.nullable(box$.RenderBox))]),
    computeDistanceToActualBaseline: dart.fnType(core.double, [ui.TextBaseline]),
    [S$._paintLabel]: dart.fnType(dart.void, [object.PaintingContext, ui.Offset])
  }));
  dart.setGetterSignature(input_decorator._RenderDecoration, () => ({
    __proto__: dart.getGetters(input_decorator._RenderDecoration.__proto__),
    icon: dart.nullable(box$.RenderBox),
    input: dart.nullable(box$.RenderBox),
    label: dart.nullable(box$.RenderBox),
    hint: dart.nullable(box$.RenderBox),
    prefix: dart.nullable(box$.RenderBox),
    suffix: dart.nullable(box$.RenderBox),
    prefixIcon: dart.nullable(box$.RenderBox),
    suffixIcon: dart.nullable(box$.RenderBox),
    helperError: dart.nullable(box$.RenderBox),
    counter: dart.nullable(box$.RenderBox),
    container: dart.nullable(box$.RenderBox),
    [S$._children$1]: core.Iterable$(box$.RenderBox),
    decoration: input_decorator._Decoration,
    textDirection: ui.TextDirection,
    textBaseline: ui.TextBaseline,
    [S$._defaultTextAlignVertical]: alignment.TextAlignVertical,
    textAlignVertical: dart.nullable(alignment.TextAlignVertical),
    isFocused: core.bool,
    expands: core.bool,
    [S$._isOutlineAligned]: core.bool,
    contentPadding: edge_insets.EdgeInsets
  }));
  dart.setSetterSignature(input_decorator._RenderDecoration, () => ({
    __proto__: dart.getSetters(input_decorator._RenderDecoration.__proto__),
    icon: dart.nullable(box$.RenderBox),
    input: dart.nullable(box$.RenderBox),
    label: dart.nullable(box$.RenderBox),
    hint: dart.nullable(box$.RenderBox),
    prefix: dart.nullable(box$.RenderBox),
    suffix: dart.nullable(box$.RenderBox),
    prefixIcon: dart.nullable(box$.RenderBox),
    suffixIcon: dart.nullable(box$.RenderBox),
    helperError: dart.nullable(box$.RenderBox),
    counter: dart.nullable(box$.RenderBox),
    container: dart.nullable(box$.RenderBox),
    decoration: input_decorator._Decoration,
    textDirection: ui.TextDirection,
    textBaseline: ui.TextBaseline,
    textAlignVertical: dart.nullable(alignment.TextAlignVertical),
    isFocused: core.bool,
    expands: core.bool
  }));
  dart.setLibraryUri(input_decorator._RenderDecoration, I[59]);
  dart.setFieldSignature(input_decorator._RenderDecoration, () => ({
    __proto__: dart.getFields(input_decorator._RenderDecoration.__proto__),
    children: dart.finalFieldType(core.Map$(input_decorator._DecorationSlot, box$.RenderBox)),
    [S$._icon]: dart.fieldType(dart.nullable(box$.RenderBox)),
    [S$._input]: dart.fieldType(dart.nullable(box$.RenderBox)),
    [S$._label]: dart.fieldType(dart.nullable(box$.RenderBox)),
    [S$._hint]: dart.fieldType(dart.nullable(box$.RenderBox)),
    [S$._prefix]: dart.fieldType(dart.nullable(box$.RenderBox)),
    [S$._suffix]: dart.fieldType(dart.nullable(box$.RenderBox)),
    [S$._prefixIcon]: dart.fieldType(dart.nullable(box$.RenderBox)),
    [S$._suffixIcon]: dart.fieldType(dart.nullable(box$.RenderBox)),
    [S$._helperError]: dart.fieldType(dart.nullable(box$.RenderBox)),
    [S$._counter]: dart.fieldType(dart.nullable(box$.RenderBox)),
    [S$._container]: dart.fieldType(dart.nullable(box$.RenderBox)),
    [S$._decoration]: dart.fieldType(input_decorator._Decoration),
    [S$._textDirection$1]: dart.fieldType(ui.TextDirection),
    [S$._textBaseline]: dart.fieldType(ui.TextBaseline),
    [S$._textAlignVertical]: dart.fieldType(dart.nullable(alignment.TextAlignVertical)),
    [S$._isFocused]: dart.fieldType(core.bool),
    [S$._expands]: dart.fieldType(core.bool),
    [S$._labelTransform]: dart.fieldType(dart.nullable(vector_math_64.Matrix4))
  }));
  dart.defineLazy(input_decorator._RenderDecoration, {
    /*input_decorator._RenderDecoration.subtextGap*/get subtextGap() {
      return 8;
    }
  }, false);
  input_decorator._DecorationElement = class _DecorationElement extends framework.RenderObjectElement {
    get widget() {
      return input_decorator._Decorator.as(super.widget);
    }
    get renderObject() {
      return input_decorator._RenderDecoration.as(super.renderObject);
    }
    visitChildren(visitor) {
      if (visitor == null) dart.nullFailed(I[58], 1574, 37, "visitor");
      this.slotToChild[S$.$values][S$.$forEach](visitor);
    }
    forgetChild(child) {
      if (child == null) dart.nullFailed(I[58], 1579, 28, "child");
      if (!dart.test(this.slotToChild[S$.$containsValue](child))) dart.assertFailed(null, I[58], 1580, 12, "slotToChild.containsValue(child)");
      if (!input_decorator._DecorationSlot.is(child.slot)) dart.assertFailed(null, I[58], 1581, 12, "child.slot is _DecorationSlot");
      if (!dart.test(this.slotToChild[S$.$containsKey](child.slot))) dart.assertFailed(null, I[58], 1582, 12, "slotToChild.containsKey(child.slot)");
      this.slotToChild[S$.$remove](child.slot);
      super.forgetChild(child);
    }
    [S$._mountChild](widget, slot) {
      if (slot == null) dart.nullFailed(I[58], 1587, 52, "slot");
      let oldChild = this.slotToChild[S.$_get](slot);
      let newChild = this.updateChild(oldChild, widget, slot);
      if (oldChild != null) {
        this.slotToChild[S$.$remove](slot);
      }
      if (newChild != null) {
        this.slotToChild[S.$_set](slot, newChild);
      }
    }
    mount(parent, newSlot) {
      super.mount(parent, newSlot);
      this[S$._mountChild](this.widget.decoration.icon, input_decorator._DecorationSlot.icon);
      this[S$._mountChild](this.widget.decoration.input, input_decorator._DecorationSlot.input);
      this[S$._mountChild](this.widget.decoration.label, input_decorator._DecorationSlot.label);
      this[S$._mountChild](this.widget.decoration.hint, input_decorator._DecorationSlot.hint);
      this[S$._mountChild](this.widget.decoration.prefix, input_decorator._DecorationSlot.prefix);
      this[S$._mountChild](this.widget.decoration.suffix, input_decorator._DecorationSlot.suffix);
      this[S$._mountChild](this.widget.decoration.prefixIcon, input_decorator._DecorationSlot.prefixIcon);
      this[S$._mountChild](this.widget.decoration.suffixIcon, input_decorator._DecorationSlot.suffixIcon);
      this[S$._mountChild](this.widget.decoration.helperError, input_decorator._DecorationSlot.helperError);
      this[S$._mountChild](this.widget.decoration.counter, input_decorator._DecorationSlot.counter);
      this[S$._mountChild](this.widget.decoration.container, input_decorator._DecorationSlot.container);
    }
    [S$._updateChild](widget, slot) {
      if (slot == null) dart.nullFailed(I[58], 1614, 53, "slot");
      let oldChild = this.slotToChild[S.$_get](slot);
      let newChild = this.updateChild(oldChild, widget, slot);
      if (oldChild != null) {
        this.slotToChild[S$.$remove](slot);
      }
      if (newChild != null) {
        this.slotToChild[S.$_set](slot, newChild);
      }
    }
    update(newWidget) {
      input_decorator._Decorator.as(newWidget);
      if (newWidget == null) dart.nullFailed(I[58], 1626, 26, "newWidget");
      super.update(newWidget);
      if (!dart.equals(this.widget, newWidget)) dart.assertFailed(null, I[58], 1628, 12, "widget == newWidget");
      this[S$._updateChild](this.widget.decoration.icon, input_decorator._DecorationSlot.icon);
      this[S$._updateChild](this.widget.decoration.input, input_decorator._DecorationSlot.input);
      this[S$._updateChild](this.widget.decoration.label, input_decorator._DecorationSlot.label);
      this[S$._updateChild](this.widget.decoration.hint, input_decorator._DecorationSlot.hint);
      this[S$._updateChild](this.widget.decoration.prefix, input_decorator._DecorationSlot.prefix);
      this[S$._updateChild](this.widget.decoration.suffix, input_decorator._DecorationSlot.suffix);
      this[S$._updateChild](this.widget.decoration.prefixIcon, input_decorator._DecorationSlot.prefixIcon);
      this[S$._updateChild](this.widget.decoration.suffixIcon, input_decorator._DecorationSlot.suffixIcon);
      this[S$._updateChild](this.widget.decoration.helperError, input_decorator._DecorationSlot.helperError);
      this[S$._updateChild](this.widget.decoration.counter, input_decorator._DecorationSlot.counter);
      this[S$._updateChild](this.widget.decoration.container, input_decorator._DecorationSlot.container);
    }
    [S$._updateRenderObject](child, slot) {
      if (slot == null) dart.nullFailed(I[58], 1642, 62, "slot");
      switch (slot) {
        case C[386] || CT.C386:
        {
          this.renderObject.icon = child;
          break;
        }
        case C[387] || CT.C387:
        {
          this.renderObject.input = child;
          break;
        }
        case C[388] || CT.C388:
        {
          this.renderObject.label = child;
          break;
        }
        case C[389] || CT.C389:
        {
          this.renderObject.hint = child;
          break;
        }
        case C[390] || CT.C390:
        {
          this.renderObject.prefix = child;
          break;
        }
        case C[391] || CT.C391:
        {
          this.renderObject.suffix = child;
          break;
        }
        case C[392] || CT.C392:
        {
          this.renderObject.prefixIcon = child;
          break;
        }
        case C[393] || CT.C393:
        {
          this.renderObject.suffixIcon = child;
          break;
        }
        case C[394] || CT.C394:
        {
          this.renderObject.helperError = child;
          break;
        }
        case C[395] || CT.C395:
        {
          this.renderObject.counter = child;
          break;
        }
        case C[396] || CT.C396:
        {
          this.renderObject.container = child;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    insertRenderObjectChild(child, slot) {
      object.RenderObject.as(child);
      if (child == null) dart.nullFailed(I[58], 1681, 45, "child");
      input_decorator._DecorationSlot.as(slot);
      if (slot == null) dart.nullFailed(I[58], 1681, 68, "slot");
      if (!box$.RenderBox.is(child)) dart.assertFailed(null, I[58], 1682, 12, "child is RenderBox");
      this[S$._updateRenderObject](box$.RenderBox.as(child), slot);
      if (!dart.test(this.renderObject.children[S$.$keys][S.$contains](slot))) dart.assertFailed(null, I[58], 1684, 12, "renderObject.children.keys.contains(slot)");
    }
    removeRenderObjectChild(child, slot) {
      object.RenderObject.as(child);
      if (child == null) dart.nullFailed(I[58], 1688, 45, "child");
      input_decorator._DecorationSlot.as(slot);
      if (slot == null) dart.nullFailed(I[58], 1688, 68, "slot");
      if (!box$.RenderBox.is(child)) dart.assertFailed(null, I[58], 1689, 12, "child is RenderBox");
      if (!dart.equals(this.renderObject.children[S.$_get](slot), child)) dart.assertFailed(null, I[58], 1690, 12, "renderObject.children[slot] == child");
      this[S$._updateRenderObject](null, slot);
      if (!!dart.test(this.renderObject.children[S$.$keys][S.$contains](slot))) dart.assertFailed(null, I[58], 1692, 12, "!renderObject.children.keys.contains(slot)");
    }
    moveRenderObjectChild(child, oldSlot, newSlot) {
      object.RenderObject.as(child);
      if (child == null) dart.nullFailed(I[58], 1696, 43, "child");
      if (!false) dart.assertFailed("not reachable", I[58], 1697, 12, "false");
    }
  };
  (input_decorator._DecorationElement.new = function(widget) {
    if (widget == null) dart.nullFailed(I[58], 1563, 33, "widget");
    this.slotToChild = new (T$.LinkedMapOf_DecorationSlot$Element()).new();
    input_decorator._DecorationElement.__proto__.new.call(this, widget);
    ;
  }).prototype = input_decorator._DecorationElement.prototype;
  dart.addTypeTests(input_decorator._DecorationElement);
  dart.addTypeCaches(input_decorator._DecorationElement);
  dart.setMethodSignature(input_decorator._DecorationElement, () => ({
    __proto__: dart.getMethods(input_decorator._DecorationElement.__proto__),
    [S$._mountChild]: dart.fnType(dart.void, [dart.nullable(framework.Widget), input_decorator._DecorationSlot]),
    [S$._updateChild]: dart.fnType(dart.void, [dart.nullable(framework.Widget), input_decorator._DecorationSlot]),
    [S$._updateRenderObject]: dart.fnType(dart.void, [dart.nullable(box$.RenderBox), input_decorator._DecorationSlot])
  }));
  dart.setGetterSignature(input_decorator._DecorationElement, () => ({
    __proto__: dart.getGetters(input_decorator._DecorationElement.__proto__),
    widget: input_decorator._Decorator,
    renderObject: input_decorator._RenderDecoration
  }));
  dart.setLibraryUri(input_decorator._DecorationElement, I[59]);
  dart.setFieldSignature(input_decorator._DecorationElement, () => ({
    __proto__: dart.getFields(input_decorator._DecorationElement.__proto__),
    slotToChild: dart.finalFieldType(core.Map$(input_decorator._DecorationSlot, framework.Element))
  }));
  input_decorator._Decorator = class _Decorator extends framework.RenderObjectWidget {
    get decoration() {
      return this[S$.decoration];
    }
    set decoration(value) {
      super.decoration = value;
    }
    get textDirection() {
      return this[S$.textDirection];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get textBaseline() {
      return this[S$.textBaseline];
    }
    set textBaseline(value) {
      super.textBaseline = value;
    }
    get textAlignVertical() {
      return this[S$.textAlignVertical];
    }
    set textAlignVertical(value) {
      super.textAlignVertical = value;
    }
    get isFocused() {
      return this[S$.isFocused];
    }
    set isFocused(value) {
      super.isFocused = value;
    }
    get expands() {
      return this[S$.expands];
    }
    set expands(value) {
      super.expands = value;
    }
    createElement() {
      return new input_decorator._DecorationElement.new(this);
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(I[58], 1727, 53, "context");
      return new input_decorator._RenderDecoration.new({decoration: this.decoration, textDirection: this.textDirection, textBaseline: this.textBaseline, textAlignVertical: this.textAlignVertical, isFocused: this.isFocused, expands: this.expands});
    }
    updateRenderObject(context, renderObject) {
      let t25;
      if (context == null) dart.nullFailed(I[58], 1739, 40, "context");
      input_decorator._RenderDecoration.as(renderObject);
      if (renderObject == null) dart.nullFailed(I[58], 1739, 67, "renderObject");
      t25 = renderObject;
      (() => {
        t25.decoration = this.decoration;
        t25.expands = this.expands;
        t25.isFocused = this.isFocused;
        t25.textAlignVertical = this.textAlignVertical;
        t25.textBaseline = this.textBaseline;
        t25.textDirection = this.textDirection;
        return t25;
      })();
    }
  };
  (input_decorator._Decorator.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let textAlignVertical = opts && 'textAlignVertical' in opts ? opts.textAlignVertical : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    if (decoration == null) dart.nullFailed(I[58], 1705, 19, "decoration");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    if (textDirection == null) dart.nullFailed(I[58], 1706, 19, "textDirection");
    let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
    if (textBaseline == null) dart.nullFailed(I[58], 1707, 19, "textBaseline");
    let isFocused = opts && 'isFocused' in opts ? opts.isFocused : null;
    if (isFocused == null) dart.nullFailed(I[58], 1708, 19, "isFocused");
    let expands = opts && 'expands' in opts ? opts.expands : null;
    if (expands == null) dart.nullFailed(I[58], 1709, 19, "expands");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.textAlignVertical] = textAlignVertical;
    this[S$.decoration] = decoration;
    this[S$.textDirection] = textDirection;
    this[S$.textBaseline] = textBaseline;
    this[S$.isFocused] = isFocused;
    this[S$.expands] = expands;
    if (!(decoration != null)) dart.assertFailed(null, I[58], 1710, 15, "decoration != null");
    if (!(textDirection != null)) dart.assertFailed(null, I[58], 1711, 15, "textDirection != null");
    if (!(textBaseline != null)) dart.assertFailed(null, I[58], 1712, 15, "textBaseline != null");
    if (!(expands != null)) dart.assertFailed(null, I[58], 1713, 15, "expands != null");
    input_decorator._Decorator.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = input_decorator._Decorator.prototype;
  dart.addTypeTests(input_decorator._Decorator);
  dart.addTypeCaches(input_decorator._Decorator);
  dart.setMethodSignature(input_decorator._Decorator, () => ({
    __proto__: dart.getMethods(input_decorator._Decorator.__proto__),
    createElement: dart.fnType(input_decorator._DecorationElement, []),
    createRenderObject: dart.fnType(input_decorator._RenderDecoration, [framework.BuildContext])
  }));
  dart.setLibraryUri(input_decorator._Decorator, I[59]);
  dart.setFieldSignature(input_decorator._Decorator, () => ({
    __proto__: dart.getFields(input_decorator._Decorator.__proto__),
    decoration: dart.finalFieldType(input_decorator._Decoration),
    textDirection: dart.finalFieldType(ui.TextDirection),
    textBaseline: dart.finalFieldType(ui.TextBaseline),
    textAlignVertical: dart.finalFieldType(dart.nullable(alignment.TextAlignVertical)),
    isFocused: dart.finalFieldType(core.bool),
    expands: dart.finalFieldType(core.bool)
  }));
  input_decorator._AffixText = class _AffixText extends framework.StatelessWidget {
    get labelIsFloating() {
      return this[S$.labelIsFloating];
    }
    set labelIsFloating(value) {
      super.labelIsFloating = value;
    }
    get text() {
      return this[S$.text$1];
    }
    set text(value) {
      super.text = value;
    }
    get style() {
      return this[S$.style$3];
    }
    set style(value) {
      super.style = value;
    }
    get child() {
      return this[S$.child$10];
    }
    set child(value) {
      super.child = value;
    }
    build(context) {
      let t25;
      if (context == null) dart.nullFailed(I[58], 1764, 29, "context");
      return text$.DefaultTextStyle.merge({style: this.style, child: new implicit_animations.AnimatedOpacity.new({duration: input_decorator._kTransitionDuration, curve: input_decorator._kTransitionCurve, opacity: dart.test(this.labelIsFloating) ? 1.0 : 0.0, child: (t25 = this.child, t25 == null ? this.text == null ? null : new text$.Text.new(dart.nullCheck(this.text), {style: this.style, $creationLocationd_0dea112b090073317d4: C[398] || CT.C398}) : t25), $creationLocationd_0dea112b090073317d4: C[399] || CT.C399})});
    }
  };
  (input_decorator._AffixText.new = function(opts) {
    let labelIsFloating = opts && 'labelIsFloating' in opts ? opts.labelIsFloating : null;
    if (labelIsFloating == null) dart.nullFailed(I[58], 1752, 19, "labelIsFloating");
    let text = opts && 'text' in opts ? opts.text : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.labelIsFloating] = labelIsFloating;
    this[S$.text$1] = text;
    this[S$.style$3] = style;
    this[S$.child$10] = child;
    input_decorator._AffixText.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = input_decorator._AffixText.prototype;
  dart.addTypeTests(input_decorator._AffixText);
  dart.addTypeCaches(input_decorator._AffixText);
  dart.setMethodSignature(input_decorator._AffixText, () => ({
    __proto__: dart.getMethods(input_decorator._AffixText.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(input_decorator._AffixText, I[59]);
  dart.setFieldSignature(input_decorator._AffixText, () => ({
    __proto__: dart.getFields(input_decorator._AffixText.__proto__),
    labelIsFloating: dart.finalFieldType(core.bool),
    text: dart.finalFieldType(dart.nullable(core.String)),
    style: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    child: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  input_decorator.InputDecorator = class InputDecorator extends framework.StatefulWidget {
    get decoration() {
      return this[S$.decoration$1];
    }
    set decoration(value) {
      super.decoration = value;
    }
    get baseStyle() {
      return this[S$.baseStyle];
    }
    set baseStyle(value) {
      super.baseStyle = value;
    }
    get textAlign() {
      return this[S$.textAlign$1];
    }
    set textAlign(value) {
      super.textAlign = value;
    }
    get textAlignVertical() {
      return this[S$.textAlignVertical$1];
    }
    set textAlignVertical(value) {
      super.textAlignVertical = value;
    }
    get isFocused() {
      return this[S$.isFocused$1];
    }
    set isFocused(value) {
      super.isFocused = value;
    }
    get isHovering() {
      return this[S$.isHovering$1];
    }
    set isHovering(value) {
      super.isHovering = value;
    }
    get expands() {
      return this[S$.expands$1];
    }
    set expands(value) {
      super.expands = value;
    }
    get isEmpty() {
      return this[S$.isEmpty];
    }
    set isEmpty(value) {
      super.isEmpty = value;
    }
    get child() {
      return this[S$.child$11];
    }
    set child(value) {
      super.child = value;
    }
    get [S$._labelShouldWithdraw]() {
      return !dart.test(this.isEmpty) || dart.test(this.isFocused) && dart.test(this.decoration.enabled);
    }
    createState() {
      return new input_decorator._InputDecoratorState.new();
    }
    static containerOf(context) {
      let t25;
      if (context == null) dart.nullFailed(I[58], 1923, 46, "context");
      let result = context.findAncestorRenderObjectOfType(input_decorator._RenderDecoration);
      t25 = result;
      return t25 == null ? null : t25.container;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[58], 1929, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfInputDecoration()).new("decoration", this.decoration));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("baseStyle", this.baseStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("isFocused", this.isFocused));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("expands", this.expands, {defaultValue: false}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("isEmpty", this.isEmpty));
    }
  };
  (input_decorator.InputDecorator.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    if (decoration == null) dart.nullFailed(I[58], 1807, 19, "decoration");
    let baseStyle = opts && 'baseStyle' in opts ? opts.baseStyle : null;
    let textAlign = opts && 'textAlign' in opts ? opts.textAlign : null;
    let textAlignVertical = opts && 'textAlignVertical' in opts ? opts.textAlignVertical : null;
    let isFocused = opts && 'isFocused' in opts ? opts.isFocused : false;
    if (isFocused == null) dart.nullFailed(I[58], 1811, 10, "isFocused");
    let isHovering = opts && 'isHovering' in opts ? opts.isHovering : false;
    if (isHovering == null) dart.nullFailed(I[58], 1812, 10, "isHovering");
    let expands = opts && 'expands' in opts ? opts.expands : false;
    if (expands == null) dart.nullFailed(I[58], 1813, 10, "expands");
    let isEmpty = opts && 'isEmpty' in opts ? opts.isEmpty : false;
    if (isEmpty == null) dart.nullFailed(I[58], 1814, 10, "isEmpty");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.decoration$1] = decoration;
    this[S$.baseStyle] = baseStyle;
    this[S$.textAlign$1] = textAlign;
    this[S$.textAlignVertical$1] = textAlignVertical;
    this[S$.isFocused$1] = isFocused;
    this[S$.isHovering$1] = isHovering;
    this[S$.expands$1] = expands;
    this[S$.isEmpty] = isEmpty;
    this[S$.child$11] = child;
    if (!(decoration != null)) dart.assertFailed(null, I[58], 1816, 15, "decoration != null");
    if (!(isFocused != null)) dart.assertFailed(null, I[58], 1817, 15, "isFocused != null");
    if (!(isHovering != null)) dart.assertFailed(null, I[58], 1818, 15, "isHovering != null");
    if (!(expands != null)) dart.assertFailed(null, I[58], 1819, 15, "expands != null");
    if (!(isEmpty != null)) dart.assertFailed(null, I[58], 1820, 15, "isEmpty != null");
    input_decorator.InputDecorator.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = input_decorator.InputDecorator.prototype;
  dart.addTypeTests(input_decorator.InputDecorator);
  dart.addTypeCaches(input_decorator.InputDecorator);
  dart.setMethodSignature(input_decorator.InputDecorator, () => ({
    __proto__: dart.getMethods(input_decorator.InputDecorator.__proto__),
    createState: dart.fnType(framework.State$(input_decorator.InputDecorator), [])
  }));
  dart.setGetterSignature(input_decorator.InputDecorator, () => ({
    __proto__: dart.getGetters(input_decorator.InputDecorator.__proto__),
    [S$._labelShouldWithdraw]: core.bool
  }));
  dart.setLibraryUri(input_decorator.InputDecorator, I[59]);
  dart.setFieldSignature(input_decorator.InputDecorator, () => ({
    __proto__: dart.getFields(input_decorator.InputDecorator.__proto__),
    decoration: dart.finalFieldType(input_decorator.InputDecoration),
    baseStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    textAlign: dart.finalFieldType(dart.nullable(ui.TextAlign)),
    textAlignVertical: dart.finalFieldType(dart.nullable(alignment.TextAlignVertical)),
    isFocused: dart.finalFieldType(core.bool),
    isHovering: dart.finalFieldType(core.bool),
    expands: dart.finalFieldType(core.bool),
    isEmpty: dart.finalFieldType(core.bool),
    child: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  const State_TickerProviderStateMixin$36$1 = class State_TickerProviderStateMixin extends framework.State$(input_decorator.InputDecorator) {};
  (State_TickerProviderStateMixin$36$1.new = function() {
    ticker_provider.TickerProviderStateMixin$(input_decorator.InputDecorator)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$1.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$1.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$1, ticker_provider.TickerProviderStateMixin$(input_decorator.InputDecorator));
  input_decorator._InputDecoratorState = class _InputDecoratorState extends State_TickerProviderStateMixin$36$1 {
    get [S$._floatingLabelController]() {
      let t25;
      return dart.test(this[S$.___InputDecoratorState__floatingLabelController_isSet]) ? (t25 = this[S$.___InputDecoratorState__floatingLabelController], t25) : dart.throw(new _internal.LateError.fieldNI("_floatingLabelController"));
    }
    set [S$._floatingLabelController](t25) {
      if (t25 == null) dart.nullFailed(I[58], 1940, 28, "null");
      this[S$.___InputDecoratorState__floatingLabelController_isSet] = true;
      this[S$.___InputDecoratorState__floatingLabelController] = t25;
    }
    get [S$._shakingLabelController]() {
      let t26;
      return dart.test(this[S$.___InputDecoratorState__shakingLabelController_isSet]) ? (t26 = this[S$.___InputDecoratorState__shakingLabelController], t26) : dart.throw(new _internal.LateError.fieldNI("_shakingLabelController"));
    }
    set [S$._shakingLabelController](t26) {
      if (t26 == null) dart.nullFailed(I[58], 1941, 28, "null");
      this[S$.___InputDecoratorState__shakingLabelController_isSet] = true;
      this[S$.___InputDecoratorState__shakingLabelController] = t26;
    }
    initState() {
      super.initState();
      let labelIsInitiallyFloating = this.widget.decoration.floatingLabelBehavior == input_decorator.FloatingLabelBehavior.always || this.widget.decoration.floatingLabelBehavior != input_decorator.FloatingLabelBehavior.never && dart.test(this.widget[S$._labelShouldWithdraw]);
      this[S$._floatingLabelController] = new animation_controller.AnimationController.new({duration: input_decorator._kTransitionDuration, vsync: this, value: labelIsInitiallyFloating ? 1.0 : 0.0});
      this[S$._floatingLabelController].addListener(dart.bind(this, S$._handleChange));
      this[S$._shakingLabelController] = new animation_controller.AnimationController.new({duration: input_decorator._kTransitionDuration, vsync: this});
    }
    didChangeDependencies() {
      super.didChangeDependencies();
      this[S$._effectiveDecoration] = null;
    }
    dispose() {
      this[S$._floatingLabelController].dispose();
      this[S$._shakingLabelController].dispose();
      super.dispose();
    }
    [S$._handleChange]() {
      this.setState(dart.fn(() => {
      }, T$.VoidTovoid()));
    }
    get decoration() {
      this[S$._effectiveDecoration] == null ? this[S$._effectiveDecoration] = this.widget.decoration.applyDefaults(theme$.Theme.of(this.context).inputDecorationTheme) : null;
      return this[S$._effectiveDecoration];
    }
    get textAlign() {
      return this.widget.textAlign;
    }
    get isFocused() {
      return this.widget.isFocused;
    }
    get isHovering() {
      return dart.test(this.widget.isHovering) && dart.test(dart.nullCheck(this.decoration).enabled);
    }
    get isEmpty() {
      return this.widget.isEmpty;
    }
    get [S$._floatingLabelEnabled]() {
      return dart.nullCheck(this.decoration).floatingLabelBehavior != input_decorator.FloatingLabelBehavior.never;
    }
    didUpdateWidget(old) {
      let t27;
      input_decorator.InputDecorator.as(old);
      if (old == null) dart.nullFailed(I[58], 2001, 39, "old");
      super.didUpdateWidget(old);
      if (!dart.equals(this.widget.decoration, old.decoration)) this[S$._effectiveDecoration] = null;
      let floatBehaviorChanged = this.widget.decoration.floatingLabelBehavior != old.decoration.floatingLabelBehavior;
      if (this.widget[S$._labelShouldWithdraw] != old[S$._labelShouldWithdraw] || floatBehaviorChanged) {
        if (dart.test(this[S$._floatingLabelEnabled]) && (dart.test(this.widget[S$._labelShouldWithdraw]) || this.widget.decoration.floatingLabelBehavior == input_decorator.FloatingLabelBehavior.always))
          this[S$._floatingLabelController].forward();
        else
          this[S$._floatingLabelController].reverse();
      }
      let errorText = dart.nullCheck(this.decoration).errorText;
      let oldErrorText = old.decoration.errorText;
      if (dart.test(this[S$._floatingLabelController].isCompleted) && errorText != null && errorText != oldErrorText) {
        t27 = this[S$._shakingLabelController];
        (() => {
          t27.value = 0.0;
          t27.forward();
          return t27;
        })();
      }
    }
    [S$._getActiveColor](themeData) {
      if (themeData == null) dart.nullFailed(I[58], 2026, 35, "themeData");
      if (dart.test(this.isFocused)) {
        return themeData.colorScheme.primary;
      }
      return themeData.hintColor;
    }
    [S$._getDefaultBorderColor](themeData) {
      let t27, t27$;
      if (themeData == null) dart.nullFailed(I[58], 2033, 42, "themeData");
      if (dart.test(this.isFocused)) {
        return themeData.colorScheme.primary;
      }
      if (dart.nullCheck(dart.nullCheck(this.decoration).filled)) {
        return themeData.hintColor;
      }
      let enabledColor = themeData.colorScheme.onSurface.withOpacity(0.38);
      if (dart.test(this.isHovering)) {
        let hoverColor = (t27$ = (t27 = dart.nullCheck(this.decoration).hoverColor, t27 == null ? themeData.inputDecorationTheme.hoverColor : t27), t27$ == null ? themeData.hoverColor : t27$);
        return ui.Color.alphaBlend(hoverColor.withOpacity(0.12), enabledColor);
      }
      return enabledColor;
    }
    [S$._getFillColor](themeData) {
      if (themeData == null) dart.nullFailed(I[58], 2048, 33, "themeData");
      if (dart.nullCheck(this.decoration).filled !== true) return colors$.Colors.transparent;
      if (dart.nullCheck(this.decoration).fillColor != null) return dart.nullCheck(dart.nullCheck(this.decoration).fillColor);
      let darkEnabled = C[400] || CT.C400;
      let darkDisabled = C[401] || CT.C401;
      let lightEnabled = C[402] || CT.C402;
      let lightDisabled = C[403] || CT.C403;
      switch (themeData.brightness) {
        case C[404] || CT.C404:
        {
          return dart.test(dart.nullCheck(this.decoration).enabled) ? darkEnabled : darkDisabled;
        }
        case C[405] || CT.C405:
        {
          return dart.test(dart.nullCheck(this.decoration).enabled) ? lightEnabled : lightDisabled;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    [S$._getHoverColor](themeData) {
      let t27, t27$;
      if (themeData == null) dart.nullFailed(I[58], 2069, 34, "themeData");
      if (dart.nullCheck(this.decoration).filled == null || !dart.nullCheck(dart.nullCheck(this.decoration).filled) || dart.test(this.isFocused) || !dart.test(dart.nullCheck(this.decoration).enabled)) return colors$.Colors.transparent;
      t27$ = (t27 = dart.nullCheck(this.decoration).hoverColor, t27 == null ? themeData.inputDecorationTheme.hoverColor : t27);
      return t27$ == null ? themeData.hoverColor : t27$;
    }
    [S$._getDefaultIconColor](themeData) {
      if (themeData == null) dart.nullFailed(I[58], 2075, 40, "themeData");
      if (!dart.test(dart.nullCheck(this.decoration).enabled) && !dart.test(this.isFocused)) return themeData.disabledColor;
      switch (themeData.brightness) {
        case C[404] || CT.C404:
        {
          return colors$.Colors.white70;
        }
        case C[405] || CT.C405:
        {
          return colors$.Colors.black45;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    get [S$._hasInlineLabel]() {
      return !dart.test(this.widget[S$._labelShouldWithdraw]) && dart.nullCheck(this.decoration).labelText != null && dart.nullCheck(this.decoration).floatingLabelBehavior != input_decorator.FloatingLabelBehavior.always;
    }
    get [S$._shouldShowLabel]() {
      return dart.test(this[S$._hasInlineLabel]) || dart.test(this[S$._floatingLabelEnabled]);
    }
    [S$._getInlineStyle](themeData) {
      if (themeData == null) dart.nullFailed(I[58], 2102, 39, "themeData");
      return dart.nullCheck(themeData.textTheme.subtitle1).merge(this.widget.baseStyle).copyWith({color: dart.test(dart.nullCheck(this.decoration).enabled) ? themeData.hintColor : themeData.disabledColor});
    }
    [S$._getFloatingLabelStyle](themeData) {
      let t27, t27$;
      if (themeData == null) dart.nullFailed(I[58], 2107, 46, "themeData");
      let color = dart.nullCheck(this.decoration).errorText != null ? (t27$ = (t27 = dart.nullCheck(this.decoration).errorStyle, t27 == null ? null : t27.color), t27$ == null ? themeData.errorColor : t27$) : this[S$._getActiveColor](themeData);
      let style = dart.nullCheck(themeData.textTheme.subtitle1).merge(this.widget.baseStyle);
      return dart.test(themeData.fixTextFieldOutlineLabel) ? style.copyWith({height: 1.0, color: dart.test(dart.nullCheck(this.decoration).enabled) ? color : themeData.disabledColor}).merge(dart.nullCheck(this.decoration).labelStyle) : style.copyWith({color: dart.test(dart.nullCheck(this.decoration).enabled) ? color : themeData.disabledColor}).merge(dart.nullCheck(this.decoration).labelStyle);
    }
    [S$._getHelperStyle](themeData) {
      if (themeData == null) dart.nullFailed(I[58], 2125, 39, "themeData");
      let color = dart.test(dart.nullCheck(this.decoration).enabled) ? themeData.hintColor : colors$.Colors.transparent;
      return dart.nullCheck(themeData.textTheme.caption).copyWith({color: color}).merge(dart.nullCheck(this.decoration).helperStyle);
    }
    [S$._getErrorStyle](themeData) {
      if (themeData == null) dart.nullFailed(I[58], 2130, 38, "themeData");
      let color = dart.test(dart.nullCheck(this.decoration).enabled) ? themeData.errorColor : colors$.Colors.transparent;
      return dart.nullCheck(themeData.textTheme.caption).copyWith({color: color}).merge(dart.nullCheck(this.decoration).errorStyle);
    }
    [S$._getDefaultBorder](themeData) {
      let t27, t27$, t27$0, t27$1;
      if (themeData == null) dart.nullFailed(I[58], 2135, 43, "themeData");
      if (dart.equals((t27 = dart.nullCheck(this.decoration).border, t27 == null ? null : t27.borderSide), borders.BorderSide.none)) {
        return dart.nullCheck(dart.nullCheck(this.decoration).border);
      }
      let borderColor = null;
      if (dart.test(dart.nullCheck(this.decoration).enabled) || dart.test(this.isFocused)) {
        borderColor = dart.nullCheck(this.decoration).errorText == null ? this[S$._getDefaultBorderColor](themeData) : themeData.errorColor;
      } else {
        borderColor = dart.nullCheck(this.decoration).filled === true && (t27$ = dart.nullCheck(this.decoration).border, t27$ == null ? null : t27$.isOutline) !== true ? colors$.Colors.transparent : themeData.disabledColor;
      }
      let borderWeight = null;
      if (dart.test(dart.nullCheck(this.decoration).isCollapsed) || dart.equals((t27$0 = this.decoration, t27$0 == null ? null : t27$0.border), input_border.InputBorder.none) || !dart.test(dart.nullCheck(this.decoration).enabled))
        borderWeight = 0.0;
      else
        borderWeight = dart.test(this.isFocused) ? 2.0 : 1.0;
      let border = (t27$1 = dart.nullCheck(this.decoration).border, t27$1 == null ? C[406] || CT.C406 : t27$1);
      return border.copyWith({borderSide: new borders.BorderSide.new({color: borderColor, width: borderWeight})});
    }
    build(context) {
      let t27, t27$, t27$0, t27$1, t27$2, t27$3, t27$4, t27$5, t27$6, t27$7, t27$8;
      if (context == null) dart.nullFailed(I[58], 2162, 29, "context");
      let themeData = theme$.Theme.of(context);
      let inlineStyle = this[S$._getInlineStyle](themeData);
      let textBaseline = dart.nullCheck(inlineStyle.textBaseline);
      let hintStyle = inlineStyle.merge(dart.nullCheck(this.decoration).hintStyle);
      let hint = dart.nullCheck(this.decoration).hintText == null ? null : new implicit_animations.AnimatedOpacity.new({opacity: dart.test(this.isEmpty) && !dart.test(this[S$._hasInlineLabel]) ? 1.0 : 0.0, duration: input_decorator._kTransitionDuration, curve: input_decorator._kTransitionCurve, alwaysIncludeSemantics: true, child: new text$.Text.new(dart.nullCheck(dart.nullCheck(this.decoration).hintText), {style: hintStyle, textDirection: dart.nullCheck(this.decoration).hintTextDirection, overflow: text_painter.TextOverflow.ellipsis, textAlign: this.textAlign, maxLines: dart.nullCheck(this.decoration).hintMaxLines, $creationLocationd_0dea112b090073317d4: C[410] || CT.C410}), $creationLocationd_0dea112b090073317d4: C[411] || CT.C411});
      let isError = dart.nullCheck(this.decoration).errorText != null;
      let border = null;
      if (!dart.test(dart.nullCheck(this.decoration).enabled))
        border = isError ? dart.nullCheck(this.decoration).errorBorder : dart.nullCheck(this.decoration).disabledBorder;
      else if (dart.test(this.isFocused))
        border = isError ? dart.nullCheck(this.decoration).focusedErrorBorder : dart.nullCheck(this.decoration).focusedBorder;
      else
        border = isError ? dart.nullCheck(this.decoration).errorBorder : dart.nullCheck(this.decoration).enabledBorder;
      border == null ? border = this[S$._getDefaultBorder](themeData) : null;
      let container = new input_decorator._BorderContainer.new({border: border, gap: this[S$._borderGap], gapAnimation: this[S$._floatingLabelController].view, fillColor: this[S$._getFillColor](themeData), hoverColor: this[S$._getHoverColor](themeData), isHovering: this.isHovering, $creationLocationd_0dea112b090073317d4: C[412] || CT.C412});
      let inlineLabelStyle = dart.test(themeData.fixTextFieldOutlineLabel) ? inlineStyle.merge(dart.nullCheck(this.decoration).labelStyle).copyWith({height: 1.0}) : inlineStyle.merge(dart.nullCheck(this.decoration).labelStyle);
      let label = dart.nullCheck(this.decoration).labelText == null ? null : new input_decorator._Shaker.new({animation: this[S$._shakingLabelController].view, child: new implicit_animations.AnimatedOpacity.new({duration: input_decorator._kTransitionDuration, curve: input_decorator._kTransitionCurve, opacity: dart.test(this[S$._shouldShowLabel]) ? 1.0 : 0.0, child: new implicit_animations.AnimatedDefaultTextStyle.new({duration: input_decorator._kTransitionDuration, curve: input_decorator._kTransitionCurve, style: dart.test(this.widget[S$._labelShouldWithdraw]) ? this[S$._getFloatingLabelStyle](themeData) : inlineLabelStyle, child: new text$.Text.new(dart.nullCheck(dart.nullCheck(this.decoration).labelText), {overflow: text_painter.TextOverflow.ellipsis, textAlign: this.textAlign, $creationLocationd_0dea112b090073317d4: C[413] || CT.C413}), $creationLocationd_0dea112b090073317d4: C[414] || CT.C414}), $creationLocationd_0dea112b090073317d4: C[415] || CT.C415}), $creationLocationd_0dea112b090073317d4: C[416] || CT.C416});
      let prefix = dart.nullCheck(this.decoration).prefix == null && dart.nullCheck(this.decoration).prefixText == null ? null : new input_decorator._AffixText.new({labelIsFloating: this.widget[S$._labelShouldWithdraw], text: dart.nullCheck(this.decoration).prefixText, style: (t27 = dart.nullCheck(this.decoration).prefixStyle, t27 == null ? hintStyle : t27), child: dart.nullCheck(this.decoration).prefix, $creationLocationd_0dea112b090073317d4: C[417] || CT.C417});
      let suffix = dart.nullCheck(this.decoration).suffix == null && dart.nullCheck(this.decoration).suffixText == null ? null : new input_decorator._AffixText.new({labelIsFloating: this.widget[S$._labelShouldWithdraw], text: dart.nullCheck(this.decoration).suffixText, style: (t27$ = dart.nullCheck(this.decoration).suffixStyle, t27$ == null ? hintStyle : t27$), child: dart.nullCheck(this.decoration).suffix, $creationLocationd_0dea112b090073317d4: C[418] || CT.C418});
      let activeColor = this[S$._getActiveColor](themeData);
      let decorationIsDense = dart.nullCheck(this.decoration).isDense === true;
      let iconSize = decorationIsDense ? 18.0 : 24.0;
      let iconColor = dart.test(this.isFocused) ? activeColor : this[S$._getDefaultIconColor](themeData);
      let icon = dart.nullCheck(this.decoration).icon == null ? null : new basic.Padding.new({padding: C[419] || CT.C419, child: icon_theme.IconTheme.merge({data: new icon_theme_data.IconThemeData.new({color: iconColor, size: iconSize}), child: dart.nullCheck(dart.nullCheck(this.decoration).icon)}), $creationLocationd_0dea112b090073317d4: C[420] || CT.C420});
      let prefixIcon = dart.nullCheck(this.decoration).prefixIcon == null ? null : new basic.Center.new({widthFactor: 1.0, heightFactor: 1.0, child: new basic.ConstrainedBox.new({constraints: (t27$0 = dart.nullCheck(this.decoration).prefixIconConstraints, t27$0 == null ? themeData.visualDensity.effectiveConstraints(C[3] || CT.C3) : t27$0), child: icon_theme.IconTheme.merge({data: new icon_theme_data.IconThemeData.new({color: iconColor, size: iconSize}), child: dart.nullCheck(dart.nullCheck(this.decoration).prefixIcon)}), $creationLocationd_0dea112b090073317d4: C[421] || CT.C421}), $creationLocationd_0dea112b090073317d4: C[422] || CT.C422});
      let suffixIcon = dart.nullCheck(this.decoration).suffixIcon == null ? null : new basic.Center.new({widthFactor: 1.0, heightFactor: 1.0, child: new basic.ConstrainedBox.new({constraints: (t27$1 = dart.nullCheck(this.decoration).suffixIconConstraints, t27$1 == null ? themeData.visualDensity.effectiveConstraints(C[3] || CT.C3) : t27$1), child: icon_theme.IconTheme.merge({data: new icon_theme_data.IconThemeData.new({color: iconColor, size: iconSize}), child: dart.nullCheck(dart.nullCheck(this.decoration).suffixIcon)}), $creationLocationd_0dea112b090073317d4: C[423] || CT.C423}), $creationLocationd_0dea112b090073317d4: C[424] || CT.C424});
      let helperError = new input_decorator._HelperError.new({textAlign: this.textAlign, helperText: dart.nullCheck(this.decoration).helperText, helperStyle: this[S$._getHelperStyle](themeData), helperMaxLines: dart.nullCheck(this.decoration).helperMaxLines, errorText: dart.nullCheck(this.decoration).errorText, errorStyle: this[S$._getErrorStyle](themeData), errorMaxLines: dart.nullCheck(this.decoration).errorMaxLines, $creationLocationd_0dea112b090073317d4: C[425] || CT.C425});
      let counter = null;
      if (dart.nullCheck(this.decoration).counter != null) {
        counter = dart.nullCheck(this.decoration).counter;
      } else if (dart.nullCheck(this.decoration).counterText != null && dart.nullCheck(this.decoration).counterText !== "") {
        counter = new basic.Semantics.new({container: true, liveRegion: this.isFocused, child: new text$.Text.new(dart.nullCheck(dart.nullCheck(this.decoration).counterText), {style: this[S$._getHelperStyle](themeData).merge(dart.nullCheck(this.decoration).counterStyle), overflow: text_painter.TextOverflow.ellipsis, semanticsLabel: dart.nullCheck(this.decoration).semanticCounterText, $creationLocationd_0dea112b090073317d4: C[426] || CT.C426}), $creationLocationd_0dea112b090073317d4: C[427] || CT.C427});
      }
      let textDirection = basic.Directionality.of(context);
      let decorationContentPadding = (t27$2 = dart.nullCheck(this.decoration).contentPadding, t27$2 == null ? null : t27$2.resolve(textDirection));
      let contentPadding = null;
      let floatingLabelHeight = null;
      if (dart.test(dart.nullCheck(this.decoration).isCollapsed)) {
        floatingLabelHeight = 0.0;
        contentPadding = (t27$3 = decorationContentPadding, t27$3 == null ? edge_insets.EdgeInsets.zero : t27$3);
      } else if (!dart.test(border.isOutline)) {
        floatingLabelHeight = (4.0 + 0.75 * dart.nullCheck(inlineLabelStyle.fontSize)) * dart.notNull(media_query.MediaQuery.textScaleFactorOf(context));
        if (dart.nullCheck(this.decoration).filled === true) {
          contentPadding = (t27$4 = decorationContentPadding, t27$4 == null ? decorationIsDense ? C[428] || CT.C428 : C[429] || CT.C429 : t27$4);
        } else {
          contentPadding = (t27$5 = decorationContentPadding, t27$5 == null ? decorationIsDense ? C[430] || CT.C430 : C[431] || CT.C431 : t27$5);
        }
      } else {
        floatingLabelHeight = 0.0;
        contentPadding = (t27$6 = decorationContentPadding, t27$6 == null ? decorationIsDense ? C[432] || CT.C432 : C[433] || CT.C433 : t27$6);
      }
      let decorator = new input_decorator._Decorator.new({decoration: new input_decorator._Decoration.new({contentPadding: contentPadding, isCollapsed: dart.nullCheck(this.decoration).isCollapsed, floatingLabelHeight: floatingLabelHeight, floatingLabelProgress: this[S$._floatingLabelController].value, border: border, borderGap: this[S$._borderGap], alignLabelWithHint: (t27$7 = dart.nullCheck(this.decoration).alignLabelWithHint, t27$7 == null ? false : t27$7), isDense: dart.nullCheck(this.decoration).isDense, visualDensity: themeData.visualDensity, icon: icon, input: this.widget.child, label: label, hint: hint, prefix: prefix, suffix: suffix, prefixIcon: prefixIcon, suffixIcon: suffixIcon, helperError: helperError, counter: counter, container: container, fixTextFieldOutlineLabel: themeData.fixTextFieldOutlineLabel}), textDirection: textDirection, textBaseline: textBaseline, textAlignVertical: this.widget.textAlignVertical, isFocused: this.isFocused, expands: this.widget.expands, $creationLocationd_0dea112b090073317d4: C[434] || CT.C434});
      let constraints = (t27$8 = dart.nullCheck(this.decoration).constraints, t27$8 == null ? themeData.inputDecorationTheme.constraints : t27$8);
      if (constraints != null) {
        return new basic.ConstrainedBox.new({constraints: constraints, child: decorator, $creationLocationd_0dea112b090073317d4: C[435] || CT.C435});
      }
      return decorator;
    }
  };
  (input_decorator._InputDecoratorState.new = function() {
    this[S$.___InputDecoratorState__floatingLabelController] = null;
    this[S$.___InputDecoratorState__floatingLabelController_isSet] = false;
    this[S$.___InputDecoratorState__shakingLabelController] = null;
    this[S$.___InputDecoratorState__shakingLabelController_isSet] = false;
    this[S$._borderGap] = new input_decorator._InputBorderGap.new();
    this[S$._effectiveDecoration] = null;
    input_decorator._InputDecoratorState.__proto__.new.call(this);
    ;
  }).prototype = input_decorator._InputDecoratorState.prototype;
  dart.addTypeTests(input_decorator._InputDecoratorState);
  dart.addTypeCaches(input_decorator._InputDecoratorState);
  dart.setMethodSignature(input_decorator._InputDecoratorState, () => ({
    __proto__: dart.getMethods(input_decorator._InputDecoratorState.__proto__),
    [S$._handleChange]: dart.fnType(dart.void, []),
    [S$._getActiveColor]: dart.fnType(ui.Color, [theme_data.ThemeData]),
    [S$._getDefaultBorderColor]: dart.fnType(ui.Color, [theme_data.ThemeData]),
    [S$._getFillColor]: dart.fnType(ui.Color, [theme_data.ThemeData]),
    [S$._getHoverColor]: dart.fnType(ui.Color, [theme_data.ThemeData]),
    [S$._getDefaultIconColor]: dart.fnType(ui.Color, [theme_data.ThemeData]),
    [S$._getInlineStyle]: dart.fnType(text_style.TextStyle, [theme_data.ThemeData]),
    [S$._getFloatingLabelStyle]: dart.fnType(text_style.TextStyle, [theme_data.ThemeData]),
    [S$._getHelperStyle]: dart.fnType(text_style.TextStyle, [theme_data.ThemeData]),
    [S$._getErrorStyle]: dart.fnType(text_style.TextStyle, [theme_data.ThemeData]),
    [S$._getDefaultBorder]: dart.fnType(input_border.InputBorder, [theme_data.ThemeData]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(input_decorator._InputDecoratorState, () => ({
    __proto__: dart.getGetters(input_decorator._InputDecoratorState.__proto__),
    [S$._floatingLabelController]: animation_controller.AnimationController,
    [S$._shakingLabelController]: animation_controller.AnimationController,
    decoration: dart.nullable(input_decorator.InputDecoration),
    textAlign: dart.nullable(ui.TextAlign),
    isFocused: core.bool,
    isHovering: core.bool,
    isEmpty: core.bool,
    [S$._floatingLabelEnabled]: core.bool,
    [S$._hasInlineLabel]: core.bool,
    [S$._shouldShowLabel]: core.bool
  }));
  dart.setSetterSignature(input_decorator._InputDecoratorState, () => ({
    __proto__: dart.getSetters(input_decorator._InputDecoratorState.__proto__),
    [S$._floatingLabelController]: animation_controller.AnimationController,
    [S$._shakingLabelController]: animation_controller.AnimationController
  }));
  dart.setLibraryUri(input_decorator._InputDecoratorState, I[59]);
  dart.setFieldSignature(input_decorator._InputDecoratorState, () => ({
    __proto__: dart.getFields(input_decorator._InputDecoratorState.__proto__),
    [S$.___InputDecoratorState__floatingLabelController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$.___InputDecoratorState__floatingLabelController_isSet]: dart.fieldType(core.bool),
    [S$.___InputDecoratorState__shakingLabelController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$.___InputDecoratorState__shakingLabelController_isSet]: dart.fieldType(core.bool),
    [S$._borderGap]: dart.finalFieldType(input_decorator._InputBorderGap),
    [S$._effectiveDecoration]: dart.fieldType(dart.nullable(input_decorator.InputDecoration))
  }));
  input_decorator.InputDecoration = class InputDecoration extends core.Object {
    get icon() {
      return this[S$.icon$5];
    }
    set icon(value) {
      super.icon = value;
    }
    get labelText() {
      return this[S$.labelText];
    }
    set labelText(value) {
      super.labelText = value;
    }
    get labelStyle() {
      return this[S$.labelStyle$3];
    }
    set labelStyle(value) {
      super.labelStyle = value;
    }
    get helperText() {
      return this[S$.helperText$1];
    }
    set helperText(value) {
      super.helperText = value;
    }
    get helperStyle() {
      return this[S$.helperStyle$1];
    }
    set helperStyle(value) {
      super.helperStyle = value;
    }
    get helperMaxLines() {
      return this[S$.helperMaxLines$1];
    }
    set helperMaxLines(value) {
      super.helperMaxLines = value;
    }
    get hintText() {
      return this[S$.hintText];
    }
    set hintText(value) {
      super.hintText = value;
    }
    get hintStyle() {
      return this[S$.hintStyle];
    }
    set hintStyle(value) {
      super.hintStyle = value;
    }
    get hintTextDirection() {
      return this[S$.hintTextDirection];
    }
    set hintTextDirection(value) {
      super.hintTextDirection = value;
    }
    get hintMaxLines() {
      return this[S$.hintMaxLines];
    }
    set hintMaxLines(value) {
      super.hintMaxLines = value;
    }
    get errorText() {
      return this[S$.errorText$1];
    }
    set errorText(value) {
      super.errorText = value;
    }
    get errorStyle() {
      return this[S$.errorStyle$1];
    }
    set errorStyle(value) {
      super.errorStyle = value;
    }
    get errorMaxLines() {
      return this[S$.errorMaxLines$1];
    }
    set errorMaxLines(value) {
      super.errorMaxLines = value;
    }
    get floatingLabelBehavior() {
      return this[S$.floatingLabelBehavior];
    }
    set floatingLabelBehavior(value) {
      super.floatingLabelBehavior = value;
    }
    get isDense() {
      return this[S$.isDense$1];
    }
    set isDense(value) {
      super.isDense = value;
    }
    get contentPadding() {
      return this[S$.contentPadding$1];
    }
    set contentPadding(value) {
      super.contentPadding = value;
    }
    get isCollapsed() {
      return this[S$.isCollapsed$1];
    }
    set isCollapsed(value) {
      super.isCollapsed = value;
    }
    get prefixIcon() {
      return this[S$.prefixIcon$1];
    }
    set prefixIcon(value) {
      super.prefixIcon = value;
    }
    get prefixIconConstraints() {
      return this[S$.prefixIconConstraints];
    }
    set prefixIconConstraints(value) {
      super.prefixIconConstraints = value;
    }
    get prefix() {
      return this[S$.prefix$1];
    }
    set prefix(value) {
      super.prefix = value;
    }
    get prefixText() {
      return this[S$.prefixText];
    }
    set prefixText(value) {
      super.prefixText = value;
    }
    get prefixStyle() {
      return this[S$.prefixStyle];
    }
    set prefixStyle(value) {
      super.prefixStyle = value;
    }
    get suffixIcon() {
      return this[S$.suffixIcon$1];
    }
    set suffixIcon(value) {
      super.suffixIcon = value;
    }
    get suffix() {
      return this[S$.suffix$1];
    }
    set suffix(value) {
      super.suffix = value;
    }
    get suffixText() {
      return this[S$.suffixText];
    }
    set suffixText(value) {
      super.suffixText = value;
    }
    get suffixStyle() {
      return this[S$.suffixStyle];
    }
    set suffixStyle(value) {
      super.suffixStyle = value;
    }
    get suffixIconConstraints() {
      return this[S$.suffixIconConstraints];
    }
    set suffixIconConstraints(value) {
      super.suffixIconConstraints = value;
    }
    get counterText() {
      return this[S$.counterText];
    }
    set counterText(value) {
      super.counterText = value;
    }
    get counter() {
      return this[S$.counter$1];
    }
    set counter(value) {
      super.counter = value;
    }
    get counterStyle() {
      return this[S$.counterStyle];
    }
    set counterStyle(value) {
      super.counterStyle = value;
    }
    get filled() {
      return this[S$.filled];
    }
    set filled(value) {
      super.filled = value;
    }
    get fillColor() {
      return this[S$.fillColor$3];
    }
    set fillColor(value) {
      super.fillColor = value;
    }
    get focusColor() {
      return this[S$.focusColor$3];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[S$.hoverColor$4];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get errorBorder() {
      return this[S$.errorBorder];
    }
    set errorBorder(value) {
      super.errorBorder = value;
    }
    get focusedBorder() {
      return this[S$.focusedBorder];
    }
    set focusedBorder(value) {
      super.focusedBorder = value;
    }
    get focusedErrorBorder() {
      return this[S$.focusedErrorBorder];
    }
    set focusedErrorBorder(value) {
      super.focusedErrorBorder = value;
    }
    get disabledBorder() {
      return this[S$.disabledBorder];
    }
    set disabledBorder(value) {
      super.disabledBorder = value;
    }
    get enabledBorder() {
      return this[S$.enabledBorder];
    }
    set enabledBorder(value) {
      super.enabledBorder = value;
    }
    get border() {
      return this[S$.border$2];
    }
    set border(value) {
      super.border = value;
    }
    get enabled() {
      return this[S$.enabled];
    }
    set enabled(value) {
      super.enabled = value;
    }
    get semanticCounterText() {
      return this[S$.semanticCounterText];
    }
    set semanticCounterText(value) {
      super.semanticCounterText = value;
    }
    get alignLabelWithHint() {
      return this[S$.alignLabelWithHint$1];
    }
    set alignLabelWithHint(value) {
      super.alignLabelWithHint = value;
    }
    get constraints() {
      return this[S$.constraints$2];
    }
    set constraints(value) {
      super.constraints = value;
    }
    copyWith(opts) {
      let t27, t27$, t27$0, t27$1, t27$2, t27$3, t27$4, t27$5, t27$6, t27$7, t27$8, t27$9, t27$10, t27$11, t27$12, t27$13, t27$14, t27$15, t27$16, t27$17, t27$18, t27$19, t27$20, t27$21, t27$22, t27$23, t27$24, t27$25, t27$26, t27$27, t27$28, t27$29, t27$30, t27$31, t27$32, t27$33, t27$34, t27$35, t27$36, t27$37, t27$38, t27$39, t27$40, t27$41;
      let icon = opts && 'icon' in opts ? opts.icon : null;
      let labelText = opts && 'labelText' in opts ? opts.labelText : null;
      let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
      let helperText = opts && 'helperText' in opts ? opts.helperText : null;
      let helperStyle = opts && 'helperStyle' in opts ? opts.helperStyle : null;
      let helperMaxLines = opts && 'helperMaxLines' in opts ? opts.helperMaxLines : null;
      let hintText = opts && 'hintText' in opts ? opts.hintText : null;
      let hintStyle = opts && 'hintStyle' in opts ? opts.hintStyle : null;
      let hintTextDirection = opts && 'hintTextDirection' in opts ? opts.hintTextDirection : null;
      let hintMaxLines = opts && 'hintMaxLines' in opts ? opts.hintMaxLines : null;
      let errorText = opts && 'errorText' in opts ? opts.errorText : null;
      let errorStyle = opts && 'errorStyle' in opts ? opts.errorStyle : null;
      let errorMaxLines = opts && 'errorMaxLines' in opts ? opts.errorMaxLines : null;
      let floatingLabelBehavior = opts && 'floatingLabelBehavior' in opts ? opts.floatingLabelBehavior : null;
      let isCollapsed = opts && 'isCollapsed' in opts ? opts.isCollapsed : null;
      let isDense = opts && 'isDense' in opts ? opts.isDense : null;
      let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
      let prefixIcon = opts && 'prefixIcon' in opts ? opts.prefixIcon : null;
      let prefix = opts && 'prefix' in opts ? opts.prefix : null;
      let prefixText = opts && 'prefixText' in opts ? opts.prefixText : null;
      let prefixIconConstraints = opts && 'prefixIconConstraints' in opts ? opts.prefixIconConstraints : null;
      let prefixStyle = opts && 'prefixStyle' in opts ? opts.prefixStyle : null;
      let suffixIcon = opts && 'suffixIcon' in opts ? opts.suffixIcon : null;
      let suffix = opts && 'suffix' in opts ? opts.suffix : null;
      let suffixText = opts && 'suffixText' in opts ? opts.suffixText : null;
      let suffixStyle = opts && 'suffixStyle' in opts ? opts.suffixStyle : null;
      let suffixIconConstraints = opts && 'suffixIconConstraints' in opts ? opts.suffixIconConstraints : null;
      let counter = opts && 'counter' in opts ? opts.counter : null;
      let counterText = opts && 'counterText' in opts ? opts.counterText : null;
      let counterStyle = opts && 'counterStyle' in opts ? opts.counterStyle : null;
      let filled = opts && 'filled' in opts ? opts.filled : null;
      let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let errorBorder = opts && 'errorBorder' in opts ? opts.errorBorder : null;
      let focusedBorder = opts && 'focusedBorder' in opts ? opts.focusedBorder : null;
      let focusedErrorBorder = opts && 'focusedErrorBorder' in opts ? opts.focusedErrorBorder : null;
      let disabledBorder = opts && 'disabledBorder' in opts ? opts.disabledBorder : null;
      let enabledBorder = opts && 'enabledBorder' in opts ? opts.enabledBorder : null;
      let border = opts && 'border' in opts ? opts.border : null;
      let enabled = opts && 'enabled' in opts ? opts.enabled : null;
      let semanticCounterText = opts && 'semanticCounterText' in opts ? opts.semanticCounterText : null;
      let alignLabelWithHint = opts && 'alignLabelWithHint' in opts ? opts.alignLabelWithHint : null;
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      return new input_decorator.InputDecoration.new({icon: (t27 = icon, t27 == null ? this.icon : t27), labelText: (t27$ = labelText, t27$ == null ? this.labelText : t27$), labelStyle: (t27$0 = labelStyle, t27$0 == null ? this.labelStyle : t27$0), helperText: (t27$1 = helperText, t27$1 == null ? this.helperText : t27$1), helperStyle: (t27$2 = helperStyle, t27$2 == null ? this.helperStyle : t27$2), helperMaxLines: (t27$3 = helperMaxLines, t27$3 == null ? this.helperMaxLines : t27$3), hintText: (t27$4 = hintText, t27$4 == null ? this.hintText : t27$4), hintStyle: (t27$5 = hintStyle, t27$5 == null ? this.hintStyle : t27$5), hintTextDirection: (t27$6 = hintTextDirection, t27$6 == null ? this.hintTextDirection : t27$6), hintMaxLines: (t27$7 = hintMaxLines, t27$7 == null ? this.hintMaxLines : t27$7), errorText: (t27$8 = errorText, t27$8 == null ? this.errorText : t27$8), errorStyle: (t27$9 = errorStyle, t27$9 == null ? this.errorStyle : t27$9), errorMaxLines: (t27$10 = errorMaxLines, t27$10 == null ? this.errorMaxLines : t27$10), floatingLabelBehavior: (t27$11 = floatingLabelBehavior, t27$11 == null ? this.floatingLabelBehavior : t27$11), isCollapsed: (t27$12 = isCollapsed, t27$12 == null ? this.isCollapsed : t27$12), isDense: (t27$13 = isDense, t27$13 == null ? this.isDense : t27$13), contentPadding: (t27$14 = contentPadding, t27$14 == null ? this.contentPadding : t27$14), prefixIcon: (t27$15 = prefixIcon, t27$15 == null ? this.prefixIcon : t27$15), prefix: (t27$16 = prefix, t27$16 == null ? this.prefix : t27$16), prefixText: (t27$17 = prefixText, t27$17 == null ? this.prefixText : t27$17), prefixStyle: (t27$18 = prefixStyle, t27$18 == null ? this.prefixStyle : t27$18), prefixIconConstraints: (t27$19 = prefixIconConstraints, t27$19 == null ? this.prefixIconConstraints : t27$19), suffixIcon: (t27$20 = suffixIcon, t27$20 == null ? this.suffixIcon : t27$20), suffix: (t27$21 = suffix, t27$21 == null ? this.suffix : t27$21), suffixText: (t27$22 = suffixText, t27$22 == null ? this.suffixText : t27$22), suffixStyle: (t27$23 = suffixStyle, t27$23 == null ? this.suffixStyle : t27$23), suffixIconConstraints: (t27$24 = suffixIconConstraints, t27$24 == null ? this.suffixIconConstraints : t27$24), counter: (t27$25 = counter, t27$25 == null ? this.counter : t27$25), counterText: (t27$26 = counterText, t27$26 == null ? this.counterText : t27$26), counterStyle: (t27$27 = counterStyle, t27$27 == null ? this.counterStyle : t27$27), filled: (t27$28 = filled, t27$28 == null ? this.filled : t27$28), fillColor: (t27$29 = fillColor, t27$29 == null ? this.fillColor : t27$29), focusColor: (t27$30 = focusColor, t27$30 == null ? this.focusColor : t27$30), hoverColor: (t27$31 = hoverColor, t27$31 == null ? this.hoverColor : t27$31), errorBorder: (t27$32 = errorBorder, t27$32 == null ? this.errorBorder : t27$32), focusedBorder: (t27$33 = focusedBorder, t27$33 == null ? this.focusedBorder : t27$33), focusedErrorBorder: (t27$34 = focusedErrorBorder, t27$34 == null ? this.focusedErrorBorder : t27$34), disabledBorder: (t27$35 = disabledBorder, t27$35 == null ? this.disabledBorder : t27$35), enabledBorder: (t27$36 = enabledBorder, t27$36 == null ? this.enabledBorder : t27$36), border: (t27$37 = border, t27$37 == null ? this.border : t27$37), enabled: (t27$38 = enabled, t27$38 == null ? this.enabled : t27$38), semanticCounterText: (t27$39 = semanticCounterText, t27$39 == null ? this.semanticCounterText : t27$39), alignLabelWithHint: (t27$40 = alignLabelWithHint, t27$40 == null ? this.alignLabelWithHint : t27$40), constraints: (t27$41 = constraints, t27$41 == null ? this.constraints : t27$41)});
    }
    applyDefaults(theme) {
      let t27, t27$, t27$0, t27$1, t27$2, t27$3, t27$4, t27$5, t27$6, t27$7, t27$8, t27$9, t27$10, t27$11, t27$12, t27$13, t27$14, t27$15, t27$16, t27$17, t27$18, t27$19, t27$20, t27$21;
      if (theme == null) dart.nullFailed(I[58], 3416, 54, "theme");
      return this.copyWith({labelStyle: (t27 = this.labelStyle, t27 == null ? theme.labelStyle : t27), helperStyle: (t27$ = this.helperStyle, t27$ == null ? theme.helperStyle : t27$), helperMaxLines: (t27$0 = this.helperMaxLines, t27$0 == null ? theme.helperMaxLines : t27$0), hintStyle: (t27$1 = this.hintStyle, t27$1 == null ? theme.hintStyle : t27$1), errorStyle: (t27$2 = this.errorStyle, t27$2 == null ? theme.errorStyle : t27$2), errorMaxLines: (t27$3 = this.errorMaxLines, t27$3 == null ? theme.errorMaxLines : t27$3), floatingLabelBehavior: (t27$4 = this.floatingLabelBehavior, t27$4 == null ? theme.floatingLabelBehavior : t27$4), isCollapsed: this.isCollapsed, isDense: (t27$5 = this.isDense, t27$5 == null ? theme.isDense : t27$5), contentPadding: (t27$6 = this.contentPadding, t27$6 == null ? theme.contentPadding : t27$6), prefixStyle: (t27$7 = this.prefixStyle, t27$7 == null ? theme.prefixStyle : t27$7), suffixStyle: (t27$8 = this.suffixStyle, t27$8 == null ? theme.suffixStyle : t27$8), counterStyle: (t27$9 = this.counterStyle, t27$9 == null ? theme.counterStyle : t27$9), filled: (t27$10 = this.filled, t27$10 == null ? theme.filled : t27$10), fillColor: (t27$11 = this.fillColor, t27$11 == null ? theme.fillColor : t27$11), focusColor: (t27$12 = this.focusColor, t27$12 == null ? theme.focusColor : t27$12), hoverColor: (t27$13 = this.hoverColor, t27$13 == null ? theme.hoverColor : t27$13), errorBorder: (t27$14 = this.errorBorder, t27$14 == null ? theme.errorBorder : t27$14), focusedBorder: (t27$15 = this.focusedBorder, t27$15 == null ? theme.focusedBorder : t27$15), focusedErrorBorder: (t27$16 = this.focusedErrorBorder, t27$16 == null ? theme.focusedErrorBorder : t27$16), disabledBorder: (t27$17 = this.disabledBorder, t27$17 == null ? theme.disabledBorder : t27$17), enabledBorder: (t27$18 = this.enabledBorder, t27$18 == null ? theme.enabledBorder : t27$18), border: (t27$19 = this.border, t27$19 == null ? theme.border : t27$19), alignLabelWithHint: (t27$20 = this.alignLabelWithHint, t27$20 == null ? theme.alignLabelWithHint : t27$20), constraints: (t27$21 = this.constraints, t27$21 == null ? theme.constraints : t27$21)});
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return input_decorator.InputDecoration.is(other) && dart.equals(other.icon, this.icon) && other.labelText == this.labelText && dart.equals(other.labelStyle, this.labelStyle) && other.helperText == this.helperText && dart.equals(other.helperStyle, this.helperStyle) && other.helperMaxLines == this.helperMaxLines && other.hintText == this.hintText && dart.equals(other.hintStyle, this.hintStyle) && other.hintTextDirection == this.hintTextDirection && other.hintMaxLines == this.hintMaxLines && other.errorText == this.errorText && dart.equals(other.errorStyle, this.errorStyle) && other.errorMaxLines == this.errorMaxLines && other.floatingLabelBehavior == this.floatingLabelBehavior && other.isDense == this.isDense && dart.equals(other.contentPadding, this.contentPadding) && other.isCollapsed == this.isCollapsed && dart.equals(other.prefixIcon, this.prefixIcon) && dart.equals(other.prefix, this.prefix) && other.prefixText == this.prefixText && dart.equals(other.prefixStyle, this.prefixStyle) && dart.equals(other.prefixIconConstraints, this.prefixIconConstraints) && dart.equals(other.suffixIcon, this.suffixIcon) && dart.equals(other.suffix, this.suffix) && other.suffixText == this.suffixText && dart.equals(other.suffixStyle, this.suffixStyle) && dart.equals(other.suffixIconConstraints, this.suffixIconConstraints) && dart.equals(other.counter, this.counter) && other.counterText == this.counterText && dart.equals(other.counterStyle, this.counterStyle) && other.filled == this.filled && dart.equals(other.fillColor, this.fillColor) && dart.equals(other.focusColor, this.focusColor) && dart.equals(other.hoverColor, this.hoverColor) && dart.equals(other.errorBorder, this.errorBorder) && dart.equals(other.focusedBorder, this.focusedBorder) && dart.equals(other.focusedErrorBorder, this.focusedErrorBorder) && dart.equals(other.disabledBorder, this.disabledBorder) && dart.equals(other.enabledBorder, this.enabledBorder) && dart.equals(other.border, this.border) && other.enabled == this.enabled && other.semanticCounterText == this.semanticCounterText && other.alignLabelWithHint == this.alignLabelWithHint && dart.equals(other.constraints, this.constraints);
    }
    get hashCode() {
      let values = T$.JSArrayOfObjectN().of([this.icon, this.labelText, this.labelStyle, this.helperText, this.helperStyle, this.helperMaxLines, this.hintText, this.hintStyle, this.hintTextDirection, this.hintMaxLines, this.errorText, this.errorStyle, this.errorMaxLines, this.floatingLabelBehavior, this.isDense, this.contentPadding, this.isCollapsed, this.filled, this.fillColor, this.focusColor, this.hoverColor, this.border, this.enabled, this.prefixIcon, this.prefix, this.prefixText, this.prefixStyle, this.prefixIconConstraints, this.suffixIcon, this.suffix, this.suffixText, this.suffixStyle, this.suffixIconConstraints, this.counter, this.counterText, this.counterStyle, this.errorBorder, this.focusedBorder, this.focusedErrorBorder, this.disabledBorder, this.enabledBorder, this.border, this.enabled, this.semanticCounterText, this.alignLabelWithHint, this.constraints]);
      return ui.hashList(values);
    }
    toString() {
      let t28;
      let description = (() => {
        let t27 = T$.JSArrayOfString().of([]);
        if (this.icon != null) t27[S.$add]("icon: " + dart.str(this.icon));
        if (this.labelText != null) t27[S.$add]("labelText: \"" + dart.str(this.labelText) + "\"");
        if (this.helperText != null) t27[S.$add]("helperText: \"" + dart.str(this.helperText) + "\"");
        if (this.helperMaxLines != null) t27[S.$add]("helperMaxLines: \"" + dart.str(this.helperMaxLines) + "\"");
        if (this.hintText != null) t27[S.$add]("hintText: \"" + dart.str(this.hintText) + "\"");
        if (this.hintMaxLines != null) t27[S.$add]("hintMaxLines: \"" + dart.str(this.hintMaxLines) + "\"");
        if (this.errorText != null) t27[S.$add]("errorText: \"" + dart.str(this.errorText) + "\"");
        if (this.errorStyle != null) t27[S.$add]("errorStyle: \"" + dart.str(this.errorStyle) + "\"");
        if (this.errorMaxLines != null) t27[S.$add]("errorMaxLines: \"" + dart.str(this.errorMaxLines) + "\"");
        if (this.floatingLabelBehavior != null) t27[S.$add]("floatingLabelBehavior: " + dart.str(this.floatingLabelBehavior));
        if (dart.test((t28 = this.isDense, t28 == null ? false : t28))) t27[S.$add]("isDense: " + dart.str(this.isDense));
        if (this.contentPadding != null) t27[S.$add]("contentPadding: " + dart.str(this.contentPadding));
        if (dart.test(this.isCollapsed)) t27[S.$add]("isCollapsed: " + dart.str(this.isCollapsed));
        if (this.prefixIcon != null) t27[S.$add]("prefixIcon: " + dart.str(this.prefixIcon));
        if (this.prefix != null) t27[S.$add]("prefix: " + dart.str(this.prefix));
        if (this.prefixText != null) t27[S.$add]("prefixText: " + dart.str(this.prefixText));
        if (this.prefixStyle != null) t27[S.$add]("prefixStyle: " + dart.str(this.prefixStyle));
        if (this.prefixIconConstraints != null) t27[S.$add]("prefixIconConstraints: " + dart.str(this.prefixIconConstraints));
        if (this.suffixIcon != null) t27[S.$add]("suffixIcon: " + dart.str(this.suffixIcon));
        if (this.suffix != null) t27[S.$add]("suffix: " + dart.str(this.suffix));
        if (this.suffixText != null) t27[S.$add]("suffixText: " + dart.str(this.suffixText));
        if (this.suffixStyle != null) t27[S.$add]("suffixStyle: " + dart.str(this.suffixStyle));
        if (this.suffixIconConstraints != null) t27[S.$add]("suffixIconConstraints: " + dart.str(this.suffixIconConstraints));
        if (this.counter != null) t27[S.$add]("counter: " + dart.str(this.counter));
        if (this.counterText != null) t27[S.$add]("counterText: " + dart.str(this.counterText));
        if (this.counterStyle != null) t27[S.$add]("counterStyle: " + dart.str(this.counterStyle));
        if (this.filled === true) t27[S.$add]("filled: true");
        if (this.fillColor != null) t27[S.$add]("fillColor: " + dart.str(this.fillColor));
        if (this.focusColor != null) t27[S.$add]("focusColor: " + dart.str(this.focusColor));
        if (this.hoverColor != null) t27[S.$add]("hoverColor: " + dart.str(this.hoverColor));
        if (this.errorBorder != null) t27[S.$add]("errorBorder: " + dart.str(this.errorBorder));
        if (this.focusedBorder != null) t27[S.$add]("focusedBorder: " + dart.str(this.focusedBorder));
        if (this.focusedErrorBorder != null) t27[S.$add]("focusedErrorBorder: " + dart.str(this.focusedErrorBorder));
        if (this.disabledBorder != null) t27[S.$add]("disabledBorder: " + dart.str(this.disabledBorder));
        if (this.enabledBorder != null) t27[S.$add]("enabledBorder: " + dart.str(this.enabledBorder));
        if (this.border != null) t27[S.$add]("border: " + dart.str(this.border));
        if (!dart.test(this.enabled)) t27[S.$add]("enabled: false");
        if (this.semanticCounterText != null) t27[S.$add]("semanticCounterText: " + dart.str(this.semanticCounterText));
        if (this.alignLabelWithHint != null) t27[S.$add]("alignLabelWithHint: " + dart.str(this.alignLabelWithHint));
        if (this.constraints != null) t27[S.$add]("constraints: " + dart.str(this.constraints));
        return t27;
      })();
      return "InputDecoration(" + dart.str(description[S$.$join](", ")) + ")";
    }
  };
  (input_decorator.InputDecoration.new = function(opts) {
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let labelText = opts && 'labelText' in opts ? opts.labelText : null;
    let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
    let helperText = opts && 'helperText' in opts ? opts.helperText : null;
    let helperStyle = opts && 'helperStyle' in opts ? opts.helperStyle : null;
    let helperMaxLines = opts && 'helperMaxLines' in opts ? opts.helperMaxLines : null;
    let hintText = opts && 'hintText' in opts ? opts.hintText : null;
    let hintStyle = opts && 'hintStyle' in opts ? opts.hintStyle : null;
    let hintTextDirection = opts && 'hintTextDirection' in opts ? opts.hintTextDirection : null;
    let hintMaxLines = opts && 'hintMaxLines' in opts ? opts.hintMaxLines : null;
    let errorText = opts && 'errorText' in opts ? opts.errorText : null;
    let errorStyle = opts && 'errorStyle' in opts ? opts.errorStyle : null;
    let errorMaxLines = opts && 'errorMaxLines' in opts ? opts.errorMaxLines : null;
    let floatingLabelBehavior = opts && 'floatingLabelBehavior' in opts ? opts.floatingLabelBehavior : null;
    let isCollapsed = opts && 'isCollapsed' in opts ? opts.isCollapsed : false;
    if (isCollapsed == null) dart.nullFailed(I[58], 2537, 10, "isCollapsed");
    let isDense = opts && 'isDense' in opts ? opts.isDense : null;
    let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
    let prefixIcon = opts && 'prefixIcon' in opts ? opts.prefixIcon : null;
    let prefixIconConstraints = opts && 'prefixIconConstraints' in opts ? opts.prefixIconConstraints : null;
    let prefix = opts && 'prefix' in opts ? opts.prefix : null;
    let prefixText = opts && 'prefixText' in opts ? opts.prefixText : null;
    let prefixStyle = opts && 'prefixStyle' in opts ? opts.prefixStyle : null;
    let suffixIcon = opts && 'suffixIcon' in opts ? opts.suffixIcon : null;
    let suffix = opts && 'suffix' in opts ? opts.suffix : null;
    let suffixText = opts && 'suffixText' in opts ? opts.suffixText : null;
    let suffixStyle = opts && 'suffixStyle' in opts ? opts.suffixStyle : null;
    let suffixIconConstraints = opts && 'suffixIconConstraints' in opts ? opts.suffixIconConstraints : null;
    let counter = opts && 'counter' in opts ? opts.counter : null;
    let counterText = opts && 'counterText' in opts ? opts.counterText : null;
    let counterStyle = opts && 'counterStyle' in opts ? opts.counterStyle : null;
    let filled = opts && 'filled' in opts ? opts.filled : null;
    let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let errorBorder = opts && 'errorBorder' in opts ? opts.errorBorder : null;
    let focusedBorder = opts && 'focusedBorder' in opts ? opts.focusedBorder : null;
    let focusedErrorBorder = opts && 'focusedErrorBorder' in opts ? opts.focusedErrorBorder : null;
    let disabledBorder = opts && 'disabledBorder' in opts ? opts.disabledBorder : null;
    let enabledBorder = opts && 'enabledBorder' in opts ? opts.enabledBorder : null;
    let border = opts && 'border' in opts ? opts.border : null;
    let enabled = opts && 'enabled' in opts ? opts.enabled : true;
    if (enabled == null) dart.nullFailed(I[58], 2563, 10, "enabled");
    let semanticCounterText = opts && 'semanticCounterText' in opts ? opts.semanticCounterText : null;
    let alignLabelWithHint = opts && 'alignLabelWithHint' in opts ? opts.alignLabelWithHint : null;
    let constraints = opts && 'constraints' in opts ? opts.constraints : null;
    this[S$.icon$5] = icon;
    this[S$.labelText] = labelText;
    this[S$.labelStyle$3] = labelStyle;
    this[S$.helperText$1] = helperText;
    this[S$.helperStyle$1] = helperStyle;
    this[S$.helperMaxLines$1] = helperMaxLines;
    this[S$.hintText] = hintText;
    this[S$.hintStyle] = hintStyle;
    this[S$.hintTextDirection] = hintTextDirection;
    this[S$.hintMaxLines] = hintMaxLines;
    this[S$.errorText$1] = errorText;
    this[S$.errorStyle$1] = errorStyle;
    this[S$.errorMaxLines$1] = errorMaxLines;
    this[S$.floatingLabelBehavior] = floatingLabelBehavior;
    this[S$.isCollapsed$1] = isCollapsed;
    this[S$.isDense$1] = isDense;
    this[S$.contentPadding$1] = contentPadding;
    this[S$.prefixIcon$1] = prefixIcon;
    this[S$.prefixIconConstraints] = prefixIconConstraints;
    this[S$.prefix$1] = prefix;
    this[S$.prefixText] = prefixText;
    this[S$.prefixStyle] = prefixStyle;
    this[S$.suffixIcon$1] = suffixIcon;
    this[S$.suffix$1] = suffix;
    this[S$.suffixText] = suffixText;
    this[S$.suffixStyle] = suffixStyle;
    this[S$.suffixIconConstraints] = suffixIconConstraints;
    this[S$.counter$1] = counter;
    this[S$.counterText] = counterText;
    this[S$.counterStyle] = counterStyle;
    this[S$.filled] = filled;
    this[S$.fillColor$3] = fillColor;
    this[S$.focusColor$3] = focusColor;
    this[S$.hoverColor$4] = hoverColor;
    this[S$.errorBorder] = errorBorder;
    this[S$.focusedBorder] = focusedBorder;
    this[S$.focusedErrorBorder] = focusedErrorBorder;
    this[S$.disabledBorder] = disabledBorder;
    this[S$.enabledBorder] = enabledBorder;
    this[S$.border$2] = border;
    this[S$.enabled] = enabled;
    this[S$.semanticCounterText] = semanticCounterText;
    this[S$.alignLabelWithHint$1] = alignLabelWithHint;
    this[S$.constraints$2] = constraints;
    if (!(enabled != null)) dart.assertFailed(null, I[58], 2567, 15, "enabled != null");
    if (!!(prefix != null && prefixText != null)) dart.assertFailed("Declaring both prefix and prefixText is not supported.", I[58], 2568, 15, "!(prefix != null && prefixText != null)");
    if (!!(suffix != null && suffixText != null)) dart.assertFailed("Declaring both suffix and suffixText is not supported.", I[58], 2569, 15, "!(suffix != null && suffixText != null)");
    ;
  }).prototype = input_decorator.InputDecoration.prototype;
  (input_decorator.InputDecoration.collapsed = function(opts) {
    let hintText = opts && 'hintText' in opts ? opts.hintText : null;
    let floatingLabelBehavior = opts && 'floatingLabelBehavior' in opts ? opts.floatingLabelBehavior : null;
    let hintStyle = opts && 'hintStyle' in opts ? opts.hintStyle : null;
    let hintTextDirection = opts && 'hintTextDirection' in opts ? opts.hintTextDirection : null;
    let filled = opts && 'filled' in opts ? opts.filled : false;
    let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let border = opts && 'border' in opts ? opts.border : C[436] || CT.C436;
    let enabled = opts && 'enabled' in opts ? opts.enabled : true;
    if (enabled == null) dart.nullFailed(I[58], 2586, 10, "enabled");
    this[S$.hintText] = hintText;
    this[S$.floatingLabelBehavior] = floatingLabelBehavior;
    this[S$.hintStyle] = hintStyle;
    this[S$.hintTextDirection] = hintTextDirection;
    this[S$.filled] = filled;
    this[S$.fillColor$3] = fillColor;
    this[S$.focusColor$3] = focusColor;
    this[S$.hoverColor$4] = hoverColor;
    this[S$.border$2] = border;
    this[S$.enabled] = enabled;
    if (!(enabled != null)) dart.assertFailed(null, I[58], 2587, 15, "enabled != null");
    this[S$.icon$5] = null;
    this[S$.labelText] = null;
    this[S$.labelStyle$3] = null;
    this[S$.helperText$1] = null;
    this[S$.helperStyle$1] = null;
    this[S$.helperMaxLines$1] = null;
    this[S$.hintMaxLines] = null;
    this[S$.errorText$1] = null;
    this[S$.errorStyle$1] = null;
    this[S$.errorMaxLines$1] = null;
    this[S$.isDense$1] = false;
    this[S$.contentPadding$1] = edge_insets.EdgeInsets.zero;
    this[S$.isCollapsed$1] = true;
    this[S$.prefixIcon$1] = null;
    this[S$.prefix$1] = null;
    this[S$.prefixText] = null;
    this[S$.prefixStyle] = null;
    this[S$.prefixIconConstraints] = null;
    this[S$.suffix$1] = null;
    this[S$.suffixIcon$1] = null;
    this[S$.suffixText] = null;
    this[S$.suffixStyle] = null;
    this[S$.suffixIconConstraints] = null;
    this[S$.counter$1] = null;
    this[S$.counterText] = null;
    this[S$.counterStyle] = null;
    this[S$.errorBorder] = null;
    this[S$.focusedBorder] = null;
    this[S$.focusedErrorBorder] = null;
    this[S$.disabledBorder] = null;
    this[S$.enabledBorder] = null;
    this[S$.semanticCounterText] = null;
    this[S$.alignLabelWithHint$1] = false;
    this[S$.constraints$2] = null;
    ;
  }).prototype = input_decorator.InputDecoration.prototype;
  dart.addTypeTests(input_decorator.InputDecoration);
  dart.addTypeCaches(input_decorator.InputDecoration);
  dart.setMethodSignature(input_decorator.InputDecoration, () => ({
    __proto__: dart.getMethods(input_decorator.InputDecoration.__proto__),
    copyWith: dart.fnType(input_decorator.InputDecoration, [], {alignLabelWithHint: dart.nullable(core.bool), border: dart.nullable(input_border.InputBorder), constraints: dart.nullable(box$.BoxConstraints), contentPadding: dart.nullable(edge_insets.EdgeInsetsGeometry), counter: dart.nullable(framework.Widget), counterStyle: dart.nullable(text_style.TextStyle), counterText: dart.nullable(core.String), disabledBorder: dart.nullable(input_border.InputBorder), enabled: dart.nullable(core.bool), enabledBorder: dart.nullable(input_border.InputBorder), errorBorder: dart.nullable(input_border.InputBorder), errorMaxLines: dart.nullable(core.int), errorStyle: dart.nullable(text_style.TextStyle), errorText: dart.nullable(core.String), fillColor: dart.nullable(ui.Color), filled: dart.nullable(core.bool), floatingLabelBehavior: dart.nullable(input_decorator.FloatingLabelBehavior), focusColor: dart.nullable(ui.Color), focusedBorder: dart.nullable(input_border.InputBorder), focusedErrorBorder: dart.nullable(input_border.InputBorder), helperMaxLines: dart.nullable(core.int), helperStyle: dart.nullable(text_style.TextStyle), helperText: dart.nullable(core.String), hintMaxLines: dart.nullable(core.int), hintStyle: dart.nullable(text_style.TextStyle), hintText: dart.nullable(core.String), hintTextDirection: dart.nullable(ui.TextDirection), hoverColor: dart.nullable(ui.Color), icon: dart.nullable(framework.Widget), isCollapsed: dart.nullable(core.bool), isDense: dart.nullable(core.bool), labelStyle: dart.nullable(text_style.TextStyle), labelText: dart.nullable(core.String), prefix: dart.nullable(framework.Widget), prefixIcon: dart.nullable(framework.Widget), prefixIconConstraints: dart.nullable(box$.BoxConstraints), prefixStyle: dart.nullable(text_style.TextStyle), prefixText: dart.nullable(core.String), semanticCounterText: dart.nullable(core.String), suffix: dart.nullable(framework.Widget), suffixIcon: dart.nullable(framework.Widget), suffixIconConstraints: dart.nullable(box$.BoxConstraints), suffixStyle: dart.nullable(text_style.TextStyle), suffixText: dart.nullable(core.String)}, {}),
    applyDefaults: dart.fnType(input_decorator.InputDecoration, [input_decorator.InputDecorationTheme])
  }));
  dart.setLibraryUri(input_decorator.InputDecoration, I[59]);
  dart.setFieldSignature(input_decorator.InputDecoration, () => ({
    __proto__: dart.getFields(input_decorator.InputDecoration.__proto__),
    icon: dart.finalFieldType(dart.nullable(framework.Widget)),
    labelText: dart.finalFieldType(dart.nullable(core.String)),
    labelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    helperText: dart.finalFieldType(dart.nullable(core.String)),
    helperStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    helperMaxLines: dart.finalFieldType(dart.nullable(core.int)),
    hintText: dart.finalFieldType(dart.nullable(core.String)),
    hintStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    hintTextDirection: dart.finalFieldType(dart.nullable(ui.TextDirection)),
    hintMaxLines: dart.finalFieldType(dart.nullable(core.int)),
    errorText: dart.finalFieldType(dart.nullable(core.String)),
    errorStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    errorMaxLines: dart.finalFieldType(dart.nullable(core.int)),
    floatingLabelBehavior: dart.finalFieldType(dart.nullable(input_decorator.FloatingLabelBehavior)),
    isDense: dart.finalFieldType(dart.nullable(core.bool)),
    contentPadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    isCollapsed: dart.finalFieldType(core.bool),
    prefixIcon: dart.finalFieldType(dart.nullable(framework.Widget)),
    prefixIconConstraints: dart.finalFieldType(dart.nullable(box$.BoxConstraints)),
    prefix: dart.finalFieldType(dart.nullable(framework.Widget)),
    prefixText: dart.finalFieldType(dart.nullable(core.String)),
    prefixStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    suffixIcon: dart.finalFieldType(dart.nullable(framework.Widget)),
    suffix: dart.finalFieldType(dart.nullable(framework.Widget)),
    suffixText: dart.finalFieldType(dart.nullable(core.String)),
    suffixStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    suffixIconConstraints: dart.finalFieldType(dart.nullable(box$.BoxConstraints)),
    counterText: dart.finalFieldType(dart.nullable(core.String)),
    counter: dart.finalFieldType(dart.nullable(framework.Widget)),
    counterStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    filled: dart.finalFieldType(dart.nullable(core.bool)),
    fillColor: dart.finalFieldType(dart.nullable(ui.Color)),
    focusColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hoverColor: dart.finalFieldType(dart.nullable(ui.Color)),
    errorBorder: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    focusedBorder: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    focusedErrorBorder: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    disabledBorder: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    enabledBorder: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    border: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    enabled: dart.finalFieldType(core.bool),
    semanticCounterText: dart.finalFieldType(dart.nullable(core.String)),
    alignLabelWithHint: dart.finalFieldType(dart.nullable(core.bool)),
    constraints: dart.finalFieldType(dart.nullable(box$.BoxConstraints))
  }));
  dart.defineExtensionMethods(input_decorator.InputDecoration, ['_equals', 'toString']);
  dart.defineExtensionAccessors(input_decorator.InputDecoration, ['hashCode']);
  const Object_Diagnosticable$36$13 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$13.new = function() {
  }).prototype = Object_Diagnosticable$36$13.prototype;
  dart.applyMixin(Object_Diagnosticable$36$13, diagnostics.Diagnosticable);
  input_decorator.InputDecorationTheme = class InputDecorationTheme extends Object_Diagnosticable$36$13 {
    get labelStyle() {
      return this[S$.labelStyle$4];
    }
    set labelStyle(value) {
      super.labelStyle = value;
    }
    get helperStyle() {
      return this[S$.helperStyle$2];
    }
    set helperStyle(value) {
      super.helperStyle = value;
    }
    get helperMaxLines() {
      return this[S$.helperMaxLines$2];
    }
    set helperMaxLines(value) {
      super.helperMaxLines = value;
    }
    get hintStyle() {
      return this[S$.hintStyle$1];
    }
    set hintStyle(value) {
      super.hintStyle = value;
    }
    get errorStyle() {
      return this[S$.errorStyle$2];
    }
    set errorStyle(value) {
      super.errorStyle = value;
    }
    get errorMaxLines() {
      return this[S$.errorMaxLines$2];
    }
    set errorMaxLines(value) {
      super.errorMaxLines = value;
    }
    get floatingLabelBehavior() {
      return this[S$.floatingLabelBehavior$1];
    }
    set floatingLabelBehavior(value) {
      super.floatingLabelBehavior = value;
    }
    get isDense() {
      return this[S$.isDense$2];
    }
    set isDense(value) {
      super.isDense = value;
    }
    get contentPadding() {
      return this[S$.contentPadding$2];
    }
    set contentPadding(value) {
      super.contentPadding = value;
    }
    get isCollapsed() {
      return this[S$.isCollapsed$2];
    }
    set isCollapsed(value) {
      super.isCollapsed = value;
    }
    get prefixStyle() {
      return this[S$.prefixStyle$1];
    }
    set prefixStyle(value) {
      super.prefixStyle = value;
    }
    get suffixStyle() {
      return this[S$.suffixStyle$1];
    }
    set suffixStyle(value) {
      super.suffixStyle = value;
    }
    get counterStyle() {
      return this[S$.counterStyle$1];
    }
    set counterStyle(value) {
      super.counterStyle = value;
    }
    get filled() {
      return this[S$.filled$1];
    }
    set filled(value) {
      super.filled = value;
    }
    get fillColor() {
      return this[S$.fillColor$4];
    }
    set fillColor(value) {
      super.fillColor = value;
    }
    get focusColor() {
      return this[S$.focusColor$4];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[S$.hoverColor$5];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get errorBorder() {
      return this[S$.errorBorder$1];
    }
    set errorBorder(value) {
      super.errorBorder = value;
    }
    get focusedBorder() {
      return this[S$.focusedBorder$1];
    }
    set focusedBorder(value) {
      super.focusedBorder = value;
    }
    get focusedErrorBorder() {
      return this[S$.focusedErrorBorder$1];
    }
    set focusedErrorBorder(value) {
      super.focusedErrorBorder = value;
    }
    get disabledBorder() {
      return this[S$.disabledBorder$1];
    }
    set disabledBorder(value) {
      super.disabledBorder = value;
    }
    get enabledBorder() {
      return this[S$.enabledBorder$1];
    }
    set enabledBorder(value) {
      super.enabledBorder = value;
    }
    get border() {
      return this[S$.border$3];
    }
    set border(value) {
      super.border = value;
    }
    get alignLabelWithHint() {
      return this[S$.alignLabelWithHint$2];
    }
    set alignLabelWithHint(value) {
      super.alignLabelWithHint = value;
    }
    get constraints() {
      return this[S$.constraints$3];
    }
    set constraints(value) {
      super.constraints = value;
    }
    copyWith(opts) {
      let t28, t28$, t28$0, t28$1, t28$2, t28$3, t28$4, t28$5, t28$6, t28$7, t28$8, t28$9, t28$10, t28$11, t28$12, t28$13, t28$14, t28$15, t28$16, t28$17, t28$18, t28$19, t28$20, t28$21, t28$22;
      let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
      let helperStyle = opts && 'helperStyle' in opts ? opts.helperStyle : null;
      let helperMaxLines = opts && 'helperMaxLines' in opts ? opts.helperMaxLines : null;
      let hintStyle = opts && 'hintStyle' in opts ? opts.hintStyle : null;
      let errorStyle = opts && 'errorStyle' in opts ? opts.errorStyle : null;
      let errorMaxLines = opts && 'errorMaxLines' in opts ? opts.errorMaxLines : null;
      let floatingLabelBehavior = opts && 'floatingLabelBehavior' in opts ? opts.floatingLabelBehavior : null;
      let isDense = opts && 'isDense' in opts ? opts.isDense : null;
      let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
      let isCollapsed = opts && 'isCollapsed' in opts ? opts.isCollapsed : null;
      let prefixStyle = opts && 'prefixStyle' in opts ? opts.prefixStyle : null;
      let suffixStyle = opts && 'suffixStyle' in opts ? opts.suffixStyle : null;
      let counterStyle = opts && 'counterStyle' in opts ? opts.counterStyle : null;
      let filled = opts && 'filled' in opts ? opts.filled : null;
      let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let errorBorder = opts && 'errorBorder' in opts ? opts.errorBorder : null;
      let focusedBorder = opts && 'focusedBorder' in opts ? opts.focusedBorder : null;
      let focusedErrorBorder = opts && 'focusedErrorBorder' in opts ? opts.focusedErrorBorder : null;
      let disabledBorder = opts && 'disabledBorder' in opts ? opts.disabledBorder : null;
      let enabledBorder = opts && 'enabledBorder' in opts ? opts.enabledBorder : null;
      let border = opts && 'border' in opts ? opts.border : null;
      let alignLabelWithHint = opts && 'alignLabelWithHint' in opts ? opts.alignLabelWithHint : null;
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      return new input_decorator.InputDecorationTheme.new({labelStyle: (t28 = labelStyle, t28 == null ? this.labelStyle : t28), helperStyle: (t28$ = helperStyle, t28$ == null ? this.helperStyle : t28$), helperMaxLines: (t28$0 = helperMaxLines, t28$0 == null ? this.helperMaxLines : t28$0), hintStyle: (t28$1 = hintStyle, t28$1 == null ? this.hintStyle : t28$1), errorStyle: (t28$2 = errorStyle, t28$2 == null ? this.errorStyle : t28$2), errorMaxLines: (t28$3 = errorMaxLines, t28$3 == null ? this.errorMaxLines : t28$3), floatingLabelBehavior: (t28$4 = floatingLabelBehavior, t28$4 == null ? this.floatingLabelBehavior : t28$4), isDense: (t28$5 = isDense, t28$5 == null ? this.isDense : t28$5), contentPadding: (t28$6 = contentPadding, t28$6 == null ? this.contentPadding : t28$6), isCollapsed: (t28$7 = isCollapsed, t28$7 == null ? this.isCollapsed : t28$7), prefixStyle: (t28$8 = prefixStyle, t28$8 == null ? this.prefixStyle : t28$8), suffixStyle: (t28$9 = suffixStyle, t28$9 == null ? this.suffixStyle : t28$9), counterStyle: (t28$10 = counterStyle, t28$10 == null ? this.counterStyle : t28$10), filled: (t28$11 = filled, t28$11 == null ? this.filled : t28$11), fillColor: (t28$12 = fillColor, t28$12 == null ? this.fillColor : t28$12), focusColor: (t28$13 = focusColor, t28$13 == null ? this.focusColor : t28$13), hoverColor: (t28$14 = hoverColor, t28$14 == null ? this.hoverColor : t28$14), errorBorder: (t28$15 = errorBorder, t28$15 == null ? this.errorBorder : t28$15), focusedBorder: (t28$16 = focusedBorder, t28$16 == null ? this.focusedBorder : t28$16), focusedErrorBorder: (t28$17 = focusedErrorBorder, t28$17 == null ? this.focusedErrorBorder : t28$17), disabledBorder: (t28$18 = disabledBorder, t28$18 == null ? this.disabledBorder : t28$18), enabledBorder: (t28$19 = enabledBorder, t28$19 == null ? this.enabledBorder : t28$19), border: (t28$20 = border, t28$20 == null ? this.border : t28$20), alignLabelWithHint: (t28$21 = alignLabelWithHint, t28$21 == null ? this.alignLabelWithHint : t28$21), constraints: (t28$22 = constraints, t28$22 == null ? this.constraints : t28$22)});
    }
    get hashCode() {
      return ui.hashList([this.labelStyle, this.helperStyle, this.helperMaxLines, this.hintStyle, this.errorStyle, this.errorMaxLines, this.floatingLabelBehavior, this.isDense, this.contentPadding, this.isCollapsed, this.prefixStyle, this.suffixStyle, this.counterStyle, this.filled, this.fillColor, this.focusColor, this.hoverColor, this.errorBorder, this.focusedBorder, this.focusedErrorBorder, this.disabledBorder, this.enabledBorder, this.border, this.alignLabelWithHint, this.constraints]);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return input_decorator.InputDecorationTheme.is(other) && dart.equals(other.labelStyle, this.labelStyle) && dart.equals(other.helperStyle, this.helperStyle) && other.helperMaxLines == this.helperMaxLines && dart.equals(other.hintStyle, this.hintStyle) && dart.equals(other.errorStyle, this.errorStyle) && other.errorMaxLines == this.errorMaxLines && other.isDense == this.isDense && dart.equals(other.contentPadding, this.contentPadding) && other.isCollapsed == this.isCollapsed && dart.equals(other.prefixStyle, this.prefixStyle) && dart.equals(other.suffixStyle, this.suffixStyle) && dart.equals(other.counterStyle, this.counterStyle) && other.floatingLabelBehavior == this.floatingLabelBehavior && other.filled == this.filled && dart.equals(other.fillColor, this.fillColor) && dart.equals(other.focusColor, this.focusColor) && dart.equals(other.hoverColor, this.hoverColor) && dart.equals(other.errorBorder, this.errorBorder) && dart.equals(other.focusedBorder, this.focusedBorder) && dart.equals(other.focusedErrorBorder, this.focusedErrorBorder) && dart.equals(other.disabledBorder, this.disabledBorder) && dart.equals(other.enabledBorder, this.enabledBorder) && dart.equals(other.border, this.border) && other.alignLabelWithHint == this.alignLabelWithHint && dart.equals(other.constraints, this.constraints) && dart.equals(other.disabledBorder, this.disabledBorder);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[58], 4087, 56, "properties");
      super.debugFillProperties(properties);
      let defaultTheme = C[437] || CT.C437;
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("labelStyle", this.labelStyle, {defaultValue: defaultTheme.labelStyle}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("helperStyle", this.helperStyle, {defaultValue: defaultTheme.helperStyle}));
      properties.add(new diagnostics.IntProperty.new("helperMaxLines", this.helperMaxLines, {defaultValue: defaultTheme.helperMaxLines}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("hintStyle", this.hintStyle, {defaultValue: defaultTheme.hintStyle}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("errorStyle", this.errorStyle, {defaultValue: defaultTheme.errorStyle}));
      properties.add(new diagnostics.IntProperty.new("errorMaxLines", this.errorMaxLines, {defaultValue: defaultTheme.errorMaxLines}));
      properties.add(new (T$.DiagnosticsPropertyOfFloatingLabelBehavior()).new("floatingLabelBehavior", this.floatingLabelBehavior, {defaultValue: defaultTheme.floatingLabelBehavior}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("isDense", this.isDense, {defaultValue: defaultTheme.isDense}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("contentPadding", this.contentPadding, {defaultValue: defaultTheme.contentPadding}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("isCollapsed", this.isCollapsed, {defaultValue: defaultTheme.isCollapsed}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("prefixStyle", this.prefixStyle, {defaultValue: defaultTheme.prefixStyle}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("suffixStyle", this.suffixStyle, {defaultValue: defaultTheme.suffixStyle}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("counterStyle", this.counterStyle, {defaultValue: defaultTheme.counterStyle}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("filled", this.filled, {defaultValue: defaultTheme.filled}));
      properties.add(new colors.ColorProperty.new("fillColor", this.fillColor, {defaultValue: defaultTheme.fillColor}));
      properties.add(new colors.ColorProperty.new("focusColor", this.focusColor, {defaultValue: defaultTheme.focusColor}));
      properties.add(new colors.ColorProperty.new("hoverColor", this.hoverColor, {defaultValue: defaultTheme.hoverColor}));
      properties.add(new (T$.DiagnosticsPropertyOfInputBorder()).new("errorBorder", this.errorBorder, {defaultValue: defaultTheme.errorBorder}));
      properties.add(new (T$.DiagnosticsPropertyOfInputBorder()).new("focusedBorder", this.focusedBorder, {defaultValue: defaultTheme.focusedErrorBorder}));
      properties.add(new (T$.DiagnosticsPropertyOfInputBorder()).new("focusedErrorBorder", this.focusedErrorBorder, {defaultValue: defaultTheme.focusedErrorBorder}));
      properties.add(new (T$.DiagnosticsPropertyOfInputBorder()).new("disabledBorder", this.disabledBorder, {defaultValue: defaultTheme.disabledBorder}));
      properties.add(new (T$.DiagnosticsPropertyOfInputBorder()).new("enabledBorder", this.enabledBorder, {defaultValue: defaultTheme.enabledBorder}));
      properties.add(new (T$.DiagnosticsPropertyOfInputBorder()).new("border", this.border, {defaultValue: defaultTheme.border}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("alignLabelWithHint", this.alignLabelWithHint, {defaultValue: defaultTheme.alignLabelWithHint}));
      properties.add(new (T$.DiagnosticsPropertyOfBoxConstraints()).new("constraints", this.constraints, {defaultValue: defaultTheme.constraints}));
    }
  };
  (input_decorator.InputDecorationTheme.new = function(opts) {
    let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
    let helperStyle = opts && 'helperStyle' in opts ? opts.helperStyle : null;
    let helperMaxLines = opts && 'helperMaxLines' in opts ? opts.helperMaxLines : null;
    let hintStyle = opts && 'hintStyle' in opts ? opts.hintStyle : null;
    let errorStyle = opts && 'errorStyle' in opts ? opts.errorStyle : null;
    let errorMaxLines = opts && 'errorMaxLines' in opts ? opts.errorMaxLines : null;
    let floatingLabelBehavior = opts && 'floatingLabelBehavior' in opts ? opts.floatingLabelBehavior : C[383] || CT.C383;
    if (floatingLabelBehavior == null) dart.nullFailed(I[58], 3623, 10, "floatingLabelBehavior");
    let isDense = opts && 'isDense' in opts ? opts.isDense : false;
    if (isDense == null) dart.nullFailed(I[58], 3624, 10, "isDense");
    let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
    let isCollapsed = opts && 'isCollapsed' in opts ? opts.isCollapsed : false;
    if (isCollapsed == null) dart.nullFailed(I[58], 3626, 10, "isCollapsed");
    let prefixStyle = opts && 'prefixStyle' in opts ? opts.prefixStyle : null;
    let suffixStyle = opts && 'suffixStyle' in opts ? opts.suffixStyle : null;
    let counterStyle = opts && 'counterStyle' in opts ? opts.counterStyle : null;
    let filled = opts && 'filled' in opts ? opts.filled : false;
    if (filled == null) dart.nullFailed(I[58], 3630, 10, "filled");
    let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let errorBorder = opts && 'errorBorder' in opts ? opts.errorBorder : null;
    let focusedBorder = opts && 'focusedBorder' in opts ? opts.focusedBorder : null;
    let focusedErrorBorder = opts && 'focusedErrorBorder' in opts ? opts.focusedErrorBorder : null;
    let disabledBorder = opts && 'disabledBorder' in opts ? opts.disabledBorder : null;
    let enabledBorder = opts && 'enabledBorder' in opts ? opts.enabledBorder : null;
    let border = opts && 'border' in opts ? opts.border : null;
    let alignLabelWithHint = opts && 'alignLabelWithHint' in opts ? opts.alignLabelWithHint : false;
    if (alignLabelWithHint == null) dart.nullFailed(I[58], 3640, 10, "alignLabelWithHint");
    let constraints = opts && 'constraints' in opts ? opts.constraints : null;
    this[S$.labelStyle$4] = labelStyle;
    this[S$.helperStyle$2] = helperStyle;
    this[S$.helperMaxLines$2] = helperMaxLines;
    this[S$.hintStyle$1] = hintStyle;
    this[S$.errorStyle$2] = errorStyle;
    this[S$.errorMaxLines$2] = errorMaxLines;
    this[S$.floatingLabelBehavior$1] = floatingLabelBehavior;
    this[S$.isDense$2] = isDense;
    this[S$.contentPadding$2] = contentPadding;
    this[S$.isCollapsed$2] = isCollapsed;
    this[S$.prefixStyle$1] = prefixStyle;
    this[S$.suffixStyle$1] = suffixStyle;
    this[S$.counterStyle$1] = counterStyle;
    this[S$.filled$1] = filled;
    this[S$.fillColor$4] = fillColor;
    this[S$.focusColor$4] = focusColor;
    this[S$.hoverColor$5] = hoverColor;
    this[S$.errorBorder$1] = errorBorder;
    this[S$.focusedBorder$1] = focusedBorder;
    this[S$.focusedErrorBorder$1] = focusedErrorBorder;
    this[S$.disabledBorder$1] = disabledBorder;
    this[S$.enabledBorder$1] = enabledBorder;
    this[S$.border$3] = border;
    this[S$.alignLabelWithHint$2] = alignLabelWithHint;
    this[S$.constraints$3] = constraints;
    if (!(isDense != null)) dart.assertFailed(null, I[58], 3642, 15, "isDense != null");
    if (!(isCollapsed != null)) dart.assertFailed(null, I[58], 3643, 15, "isCollapsed != null");
    if (!(filled != null)) dart.assertFailed(null, I[58], 3644, 15, "filled != null");
    if (!(alignLabelWithHint != null)) dart.assertFailed(null, I[58], 3645, 15, "alignLabelWithHint != null");
    ;
  }).prototype = input_decorator.InputDecorationTheme.prototype;
  dart.addTypeTests(input_decorator.InputDecorationTheme);
  dart.addTypeCaches(input_decorator.InputDecorationTheme);
  dart.setMethodSignature(input_decorator.InputDecorationTheme, () => ({
    __proto__: dart.getMethods(input_decorator.InputDecorationTheme.__proto__),
    copyWith: dart.fnType(input_decorator.InputDecorationTheme, [], {alignLabelWithHint: dart.nullable(core.bool), border: dart.nullable(input_border.InputBorder), constraints: dart.nullable(box$.BoxConstraints), contentPadding: dart.nullable(edge_insets.EdgeInsetsGeometry), counterStyle: dart.nullable(text_style.TextStyle), disabledBorder: dart.nullable(input_border.InputBorder), enabledBorder: dart.nullable(input_border.InputBorder), errorBorder: dart.nullable(input_border.InputBorder), errorMaxLines: dart.nullable(core.int), errorStyle: dart.nullable(text_style.TextStyle), fillColor: dart.nullable(ui.Color), filled: dart.nullable(core.bool), floatingLabelBehavior: dart.nullable(input_decorator.FloatingLabelBehavior), focusColor: dart.nullable(ui.Color), focusedBorder: dart.nullable(input_border.InputBorder), focusedErrorBorder: dart.nullable(input_border.InputBorder), helperMaxLines: dart.nullable(core.int), helperStyle: dart.nullable(text_style.TextStyle), hintStyle: dart.nullable(text_style.TextStyle), hoverColor: dart.nullable(ui.Color), isCollapsed: dart.nullable(core.bool), isDense: dart.nullable(core.bool), labelStyle: dart.nullable(text_style.TextStyle), prefixStyle: dart.nullable(text_style.TextStyle), suffixStyle: dart.nullable(text_style.TextStyle)}, {})
  }));
  dart.setLibraryUri(input_decorator.InputDecorationTheme, I[59]);
  dart.setFieldSignature(input_decorator.InputDecorationTheme, () => ({
    __proto__: dart.getFields(input_decorator.InputDecorationTheme.__proto__),
    labelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    helperStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    helperMaxLines: dart.finalFieldType(dart.nullable(core.int)),
    hintStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    errorStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    errorMaxLines: dart.finalFieldType(dart.nullable(core.int)),
    floatingLabelBehavior: dart.finalFieldType(input_decorator.FloatingLabelBehavior),
    isDense: dart.finalFieldType(core.bool),
    contentPadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    isCollapsed: dart.finalFieldType(core.bool),
    prefixStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    suffixStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    counterStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    filled: dart.finalFieldType(core.bool),
    fillColor: dart.finalFieldType(dart.nullable(ui.Color)),
    focusColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hoverColor: dart.finalFieldType(dart.nullable(ui.Color)),
    errorBorder: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    focusedBorder: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    focusedErrorBorder: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    disabledBorder: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    enabledBorder: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    border: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    alignLabelWithHint: dart.finalFieldType(core.bool),
    constraints: dart.finalFieldType(dart.nullable(box$.BoxConstraints))
  }));
  dart.defineExtensionMethods(input_decorator.InputDecorationTheme, ['_equals']);
  dart.defineExtensionAccessors(input_decorator.InputDecorationTheme, ['hashCode']);
  dart.defineLazy(input_decorator, {
    /*input_decorator._kTransitionDuration*/get _kTransitionDuration() {
      return C[143] || CT.C143;
    },
    /*input_decorator._kTransitionCurve*/get _kTransitionCurve() {
      return C[116] || CT.C116;
    },
    /*input_decorator._kFinalLabelScale*/get _kFinalLabelScale() {
      return 0.75;
    }
  }, false);
  ink_splash._InkSplashFactory = class _InkSplashFactory extends ink_well.InteractiveInkFeatureFactory {
    create(opts) {
      let controller = opts && 'controller' in opts ? opts.controller : null;
      if (controller == null) dart.nullFailed(I[60], 49, 36, "controller");
      let referenceBox = opts && 'referenceBox' in opts ? opts.referenceBox : null;
      if (referenceBox == null) dart.nullFailed(I[60], 50, 24, "referenceBox");
      let position = opts && 'position' in opts ? opts.position : null;
      if (position == null) dart.nullFailed(I[60], 51, 21, "position");
      let color = opts && 'color' in opts ? opts.color : null;
      if (color == null) dart.nullFailed(I[60], 52, 20, "color");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (textDirection == null) dart.nullFailed(I[60], 53, 28, "textDirection");
      let containedInkWell = opts && 'containedInkWell' in opts ? opts.containedInkWell : false;
      if (containedInkWell == null) dart.nullFailed(I[60], 54, 10, "containedInkWell");
      let rectCallback = opts && 'rectCallback' in opts ? opts.rectCallback : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
      let radius = opts && 'radius' in opts ? opts.radius : null;
      let onRemoved = opts && 'onRemoved' in opts ? opts.onRemoved : null;
      return new ink_splash.InkSplash.new({controller: controller, referenceBox: referenceBox, position: position, color: color, containedInkWell: containedInkWell, rectCallback: rectCallback, borderRadius: borderRadius, customBorder: customBorder, radius: radius, onRemoved: onRemoved, textDirection: textDirection});
    }
  };
  (ink_splash._InkSplashFactory.new = function() {
    ink_splash._InkSplashFactory.__proto__.new.call(this);
    ;
  }).prototype = ink_splash._InkSplashFactory.prototype;
  dart.addTypeTests(ink_splash._InkSplashFactory);
  dart.addTypeCaches(ink_splash._InkSplashFactory);
  dart.setMethodSignature(ink_splash._InkSplashFactory, () => ({
    __proto__: dart.getMethods(ink_splash._InkSplashFactory.__proto__),
    create: dart.fnType(ink_well.InteractiveInkFeature, [], {borderRadius: dart.nullable(border_radius.BorderRadius), containedInkWell: core.bool, customBorder: dart.nullable(borders.ShapeBorder), onRemoved: dart.nullable(dart.fnType(dart.void, [])), radius: dart.nullable(core.double), rectCallback: dart.nullable(dart.fnType(ui.Rect, []))}, {color: ui.Color, controller: material.MaterialInkController, position: ui.Offset, referenceBox: box$.RenderBox, textDirection: ui.TextDirection})
  }));
  dart.setLibraryUri(ink_splash._InkSplashFactory, I[61]);
  ink_splash.InkSplash = class InkSplash extends ink_well.InteractiveInkFeature {
    get [S$._radius$1]() {
      let t28;
      return dart.test(this[S$.__InkSplash__radius_isSet]) ? (t28 = this[S$.__InkSplash__radius], t28) : dart.throw(new _internal.LateError.fieldNI("_radius"));
    }
    set [S$._radius$1](t28) {
      if (t28 == null) dart.nullFailed(I[60], 163, 26, "null");
      this[S$.__InkSplash__radius_isSet] = true;
      this[S$.__InkSplash__radius] = t28;
    }
    get [S$._radiusController$1]() {
      let t29;
      return dart.test(this[S$.__InkSplash__radiusController_isSet]) ? (t29 = this[S$.__InkSplash__radiusController], t29) : dart.throw(new _internal.LateError.fieldNI("_radiusController"));
    }
    set [S$._radiusController$1](t29) {
      if (t29 == null) dart.nullFailed(I[60], 164, 28, "null");
      this[S$.__InkSplash__radiusController_isSet] = true;
      this[S$.__InkSplash__radiusController] = t29;
    }
    get [S$._alpha]() {
      let t30;
      return dart.test(this[S$.__InkSplash__alpha_isSet]) ? (t30 = this[S$.__InkSplash__alpha], t30) : dart.throw(new _internal.LateError.fieldNI("_alpha"));
    }
    set [S$._alpha](t30) {
      if (t30 == null) dart.nullFailed(I[60], 166, 23, "null");
      this[S$.__InkSplash__alpha_isSet] = true;
      this[S$.__InkSplash__alpha] = t30;
    }
    confirm() {
      let t31;
      let duration = (dart.notNull(this[S$._targetRadius$1]) / 1)[S.$floor]();
      t31 = this[S$._radiusController$1];
      (() => {
        t31.duration = new core.Duration.new({milliseconds: duration});
        t31.forward();
        return t31;
      })();
      dart.nullCheck(this[S$._alphaController]).forward();
    }
    cancel() {
      let t31;
      t31 = this[S$._alphaController];
      t31 == null ? null : t31.forward();
    }
    [S$._handleAlphaStatusChanged$1](status) {
      if (status == null) dart.nullFailed(I[60], 187, 50, "status");
      if (status == animation.AnimationStatus.completed) this.dispose();
    }
    dispose() {
      this[S$._radiusController$1].dispose();
      dart.nullCheck(this[S$._alphaController]).dispose();
      this[S$._alphaController] = null;
      super.dispose();
    }
    paintFeature(canvas, transform) {
      let t31;
      if (canvas == null) dart.nullFailed(I[60], 201, 28, "canvas");
      if (transform == null) dart.nullFailed(I[60], 201, 44, "transform");
      let paint = (t31 = ui.Paint.new(), (() => {
        t31.color = this.color.withAlpha(this[S$._alpha].value);
        return t31;
      })());
      let center = this[S$._position$1];
      if (dart.test(this[S$._repositionToReferenceBox])) center = ui.Offset.lerp(center, this.referenceBox.size.center(ui.Offset.zero), this[S$._radiusController$1].value);
      this.paintInkCircle({canvas: canvas, transform: transform, paint: paint, center: dart.nullCheck(center), textDirection: this[S$._textDirection$2], radius: this[S$._radius$1].value, customBorder: this[S$._customBorder$1], borderRadius: this[S$._borderRadius$1], clipCallback: this[S$._clipCallback$1]});
    }
  };
  (ink_splash.InkSplash.new = function(opts) {
    let t28, t28$, t28$0, t28$1;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    if (controller == null) dart.nullFailed(I[60], 116, 36, "controller");
    let referenceBox = opts && 'referenceBox' in opts ? opts.referenceBox : null;
    if (referenceBox == null) dart.nullFailed(I[60], 117, 24, "referenceBox");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    if (textDirection == null) dart.nullFailed(I[60], 118, 28, "textDirection");
    let position = opts && 'position' in opts ? opts.position : null;
    let color = opts && 'color' in opts ? opts.color : null;
    if (color == null) dart.nullFailed(I[60], 120, 20, "color");
    let containedInkWell = opts && 'containedInkWell' in opts ? opts.containedInkWell : false;
    if (containedInkWell == null) dart.nullFailed(I[60], 121, 10, "containedInkWell");
    let rectCallback = opts && 'rectCallback' in opts ? opts.rectCallback : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let onRemoved = opts && 'onRemoved' in opts ? opts.onRemoved : null;
    this[S$.__InkSplash__radius] = null;
    this[S$.__InkSplash__radius_isSet] = false;
    this[S$.__InkSplash__radiusController] = null;
    this[S$.__InkSplash__radiusController_isSet] = false;
    this[S$.__InkSplash__alpha] = null;
    this[S$.__InkSplash__alpha_isSet] = false;
    this[S$._alphaController] = null;
    if (!(textDirection != null)) dart.assertFailed(null, I[60], 127, 15, "textDirection != null");
    this[S$._position$1] = position;
    this[S$._borderRadius$1] = (t28 = borderRadius, t28 == null ? border_radius.BorderRadius.zero : t28);
    this[S$._customBorder$1] = customBorder;
    this[S$._targetRadius$1] = (t28$ = radius, t28$ == null ? ink_splash._getTargetRadius(referenceBox, containedInkWell, rectCallback, dart.nullCheck(position)) : t28$);
    this[S$._clipCallback$1] = ink_splash._getClipCallback(referenceBox, containedInkWell, rectCallback);
    this[S$._repositionToReferenceBox] = !dart.test(containedInkWell);
    this[S$._textDirection$2] = textDirection;
    ink_splash.InkSplash.__proto__.new.call(this, {controller: controller, referenceBox: referenceBox, color: color, onRemoved: onRemoved});
    if (!(this[S$._borderRadius$1] != null)) dart.assertFailed(null, I[60], 136, 12, "_borderRadius != null");
    this[S$._radiusController$1] = (t28$0 = new animation_controller.AnimationController.new({duration: ink_splash._kUnconfirmedSplashDuration, vsync: controller.vsync}), (() => {
      t28$0.addListener(dart.bind(controller, 'markNeedsPaint'));
      t28$0.forward();
      return t28$0;
    })());
    this[S$._radius$1] = this[S$._radiusController$1].drive(core.double, new (T$.TweenOfdouble()).new({begin: 0, end: this[S$._targetRadius$1]}));
    this[S$._alphaController] = (t28$1 = new animation_controller.AnimationController.new({duration: ink_splash._kSplashFadeDuration, vsync: controller.vsync}), (() => {
      t28$1.addListener(dart.bind(controller, 'markNeedsPaint'));
      t28$1.addStatusListener(dart.bind(this, S$._handleAlphaStatusChanged$1));
      return t28$1;
    })());
    this[S$._alpha] = dart.nullCheck(this[S$._alphaController]).drive(core.int, new tween.IntTween.new({begin: color.alpha, end: 0}));
    controller.addInkFeature(this);
  }).prototype = ink_splash.InkSplash.prototype;
  dart.addTypeTests(ink_splash.InkSplash);
  dart.addTypeCaches(ink_splash.InkSplash);
  dart.setMethodSignature(ink_splash.InkSplash, () => ({
    __proto__: dart.getMethods(ink_splash.InkSplash.__proto__),
    [S$._handleAlphaStatusChanged$1]: dart.fnType(dart.void, [animation.AnimationStatus]),
    paintFeature: dart.fnType(dart.void, [ui.Canvas, vector_math_64.Matrix4])
  }));
  dart.setGetterSignature(ink_splash.InkSplash, () => ({
    __proto__: dart.getGetters(ink_splash.InkSplash.__proto__),
    [S$._radius$1]: animation.Animation$(core.double),
    [S$._radiusController$1]: animation_controller.AnimationController,
    [S$._alpha]: animation.Animation$(core.int)
  }));
  dart.setSetterSignature(ink_splash.InkSplash, () => ({
    __proto__: dart.getSetters(ink_splash.InkSplash.__proto__),
    [S$._radius$1]: animation.Animation$(core.double),
    [S$._radiusController$1]: animation_controller.AnimationController,
    [S$._alpha]: animation.Animation$(core.int)
  }));
  dart.setLibraryUri(ink_splash.InkSplash, I[61]);
  dart.setFieldSignature(ink_splash.InkSplash, () => ({
    __proto__: dart.getFields(ink_splash.InkSplash.__proto__),
    [S$._position$1]: dart.finalFieldType(dart.nullable(ui.Offset)),
    [S$._borderRadius$1]: dart.finalFieldType(border_radius.BorderRadius),
    [S$._customBorder$1]: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    [S$._targetRadius$1]: dart.finalFieldType(core.double),
    [S$._clipCallback$1]: dart.finalFieldType(dart.nullable(dart.fnType(ui.Rect, []))),
    [S$._repositionToReferenceBox]: dart.finalFieldType(core.bool),
    [S$._textDirection$2]: dart.finalFieldType(ui.TextDirection),
    [S$.__InkSplash__radius]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
    [S$.__InkSplash__radius_isSet]: dart.fieldType(core.bool),
    [S$.__InkSplash__radiusController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$.__InkSplash__radiusController_isSet]: dart.fieldType(core.bool),
    [S$.__InkSplash__alpha]: dart.fieldType(dart.nullable(animation.Animation$(core.int))),
    [S$.__InkSplash__alpha_isSet]: dart.fieldType(core.bool),
    [S$._alphaController]: dart.fieldType(dart.nullable(animation_controller.AnimationController))
  }));
  dart.defineLazy(ink_splash.InkSplash, {
    /*ink_splash.InkSplash.splashFactory*/get splashFactory() {
      return C[438] || CT.C438;
    }
  }, false);
  ink_splash._getClipCallback = function _getClipCallback$(referenceBox, containedInkWell, rectCallback) {
    if (referenceBox == null) dart.nullFailed(I[60], 18, 42, "referenceBox");
    if (containedInkWell == null) dart.nullFailed(I[60], 18, 61, "containedInkWell");
    if (rectCallback != null) {
      if (!dart.test(containedInkWell)) dart.assertFailed(null, I[60], 20, 12, "containedInkWell");
      return rectCallback;
    }
    if (dart.test(containedInkWell)) return dart.fn(() => ui.Offset.zero['&'](referenceBox.size), T$.VoidToRect());
    return null;
  };
  ink_splash._getTargetRadius = function _getTargetRadius$(referenceBox, containedInkWell, rectCallback, position) {
    if (referenceBox == null) dart.nullFailed(I[60], 28, 35, "referenceBox");
    if (containedInkWell == null) dart.nullFailed(I[60], 28, 54, "containedInkWell");
    if (position == null) dart.nullFailed(I[60], 28, 107, "position");
    if (dart.test(containedInkWell)) {
      let size = rectCallback != null ? rectCallback().size : referenceBox.size;
      return ink_splash._getSplashRadiusForPositionInSize(size, position);
    }
    return 35;
  };
  ink_splash._getSplashRadiusForPositionInSize = function _getSplashRadiusForPositionInSize(bounds, position) {
    if (bounds == null) dart.nullFailed(I[60], 36, 47, "bounds");
    if (position == null) dart.nullFailed(I[60], 36, 62, "position");
    let d1 = position['-'](bounds.topLeft(ui.Offset.zero)).distance;
    let d2 = position['-'](bounds.topRight(ui.Offset.zero)).distance;
    let d3 = position['-'](bounds.bottomLeft(ui.Offset.zero)).distance;
    let d4 = position['-'](bounds.bottomRight(ui.Offset.zero)).distance;
    return math.max(core.double, math.max(core.double, d1, d2), math.max(core.double, d3, d4))[S$.$ceilToDouble]();
  };
  dart.defineLazy(ink_splash, {
    /*ink_splash._kUnconfirmedSplashDuration*/get _kUnconfirmedSplashDuration() {
      return C[44] || CT.C44;
    },
    /*ink_splash._kSplashFadeDuration*/get _kSplashFadeDuration() {
      return C[143] || CT.C143;
    },
    /*ink_splash._kSplashInitialSize*/get _kSplashInitialSize() {
      return 0;
    },
    /*ink_splash._kSplashConfirmedVelocity*/get _kSplashConfirmedVelocity() {
      return 1;
    }
  }, false);
  const Object_Diagnosticable$36$14 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$14.new = function() {
  }).prototype = Object_Diagnosticable$36$14.prototype;
  dart.applyMixin(Object_Diagnosticable$36$14, diagnostics.Diagnosticable);
  button_style.ButtonStyle = class ButtonStyle extends Object_Diagnosticable$36$14 {
    get textStyle() {
      return this[S$.textStyle$2];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get backgroundColor() {
      return this[S$.backgroundColor$7];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get foregroundColor() {
      return this[S$.foregroundColor$1];
    }
    set foregroundColor(value) {
      super.foregroundColor = value;
    }
    get overlayColor() {
      return this[S$.overlayColor$4];
    }
    set overlayColor(value) {
      super.overlayColor = value;
    }
    get shadowColor() {
      return this[S$.shadowColor];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get elevation() {
      return this[S$.elevation$8];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get padding() {
      return this[S$.padding$4];
    }
    set padding(value) {
      super.padding = value;
    }
    get minimumSize() {
      return this[S$.minimumSize];
    }
    set minimumSize(value) {
      super.minimumSize = value;
    }
    get fixedSize() {
      return this[S$.fixedSize];
    }
    set fixedSize(value) {
      super.fixedSize = value;
    }
    get maximumSize() {
      return this[S$.maximumSize];
    }
    set maximumSize(value) {
      super.maximumSize = value;
    }
    get side() {
      return this[S$.side];
    }
    set side(value) {
      super.side = value;
    }
    get shape() {
      return this[S$.shape$5];
    }
    set shape(value) {
      super.shape = value;
    }
    get mouseCursor() {
      return this[S$.mouseCursor$5];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get visualDensity() {
      return this[S$.visualDensity$3];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get tapTargetSize() {
      return this[S$.tapTargetSize];
    }
    set tapTargetSize(value) {
      super.tapTargetSize = value;
    }
    get animationDuration() {
      return this[S$.animationDuration];
    }
    set animationDuration(value) {
      super.animationDuration = value;
    }
    get enableFeedback() {
      return this[S$.enableFeedback$4];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get alignment() {
      return this[S$.alignment$1];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get splashFactory() {
      return this[S$.splashFactory];
    }
    set splashFactory(value) {
      super.splashFactory = value;
    }
    copyWith(opts) {
      let t31, t31$, t31$0, t31$1, t31$2, t31$3, t31$4, t31$5, t31$6, t31$7, t31$8, t31$9, t31$10, t31$11, t31$12, t31$13, t31$14, t31$15, t31$16;
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
      let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let minimumSize = opts && 'minimumSize' in opts ? opts.minimumSize : null;
      let fixedSize = opts && 'fixedSize' in opts ? opts.fixedSize : null;
      let maximumSize = opts && 'maximumSize' in opts ? opts.maximumSize : null;
      let side = opts && 'side' in opts ? opts.side : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      let tapTargetSize = opts && 'tapTargetSize' in opts ? opts.tapTargetSize : null;
      let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      let alignment = opts && 'alignment' in opts ? opts.alignment : null;
      let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
      return new button_style.ButtonStyle.new({textStyle: (t31 = textStyle, t31 == null ? this.textStyle : t31), backgroundColor: (t31$ = backgroundColor, t31$ == null ? this.backgroundColor : t31$), foregroundColor: (t31$0 = foregroundColor, t31$0 == null ? this.foregroundColor : t31$0), overlayColor: (t31$1 = overlayColor, t31$1 == null ? this.overlayColor : t31$1), shadowColor: (t31$2 = shadowColor, t31$2 == null ? this.shadowColor : t31$2), elevation: (t31$3 = elevation, t31$3 == null ? this.elevation : t31$3), padding: (t31$4 = padding, t31$4 == null ? this.padding : t31$4), minimumSize: (t31$5 = minimumSize, t31$5 == null ? this.minimumSize : t31$5), fixedSize: (t31$6 = fixedSize, t31$6 == null ? this.fixedSize : t31$6), maximumSize: (t31$7 = maximumSize, t31$7 == null ? this.maximumSize : t31$7), side: (t31$8 = side, t31$8 == null ? this.side : t31$8), shape: (t31$9 = shape, t31$9 == null ? this.shape : t31$9), mouseCursor: (t31$10 = mouseCursor, t31$10 == null ? this.mouseCursor : t31$10), visualDensity: (t31$11 = visualDensity, t31$11 == null ? this.visualDensity : t31$11), tapTargetSize: (t31$12 = tapTargetSize, t31$12 == null ? this.tapTargetSize : t31$12), animationDuration: (t31$13 = animationDuration, t31$13 == null ? this.animationDuration : t31$13), enableFeedback: (t31$14 = enableFeedback, t31$14 == null ? this.enableFeedback : t31$14), alignment: (t31$15 = alignment, t31$15 == null ? this.alignment : t31$15), splashFactory: (t31$16 = splashFactory, t31$16 == null ? this.splashFactory : t31$16)});
    }
    merge(style) {
      let t31, t31$, t31$0, t31$1, t31$2, t31$3, t31$4, t31$5, t31$6, t31$7, t31$8, t31$9, t31$10, t31$11, t31$12, t31$13, t31$14, t31$15, t31$16;
      if (style == null) return this;
      return this.copyWith({textStyle: (t31 = this.textStyle, t31 == null ? style.textStyle : t31), backgroundColor: (t31$ = this.backgroundColor, t31$ == null ? style.backgroundColor : t31$), foregroundColor: (t31$0 = this.foregroundColor, t31$0 == null ? style.foregroundColor : t31$0), overlayColor: (t31$1 = this.overlayColor, t31$1 == null ? style.overlayColor : t31$1), shadowColor: (t31$2 = this.shadowColor, t31$2 == null ? style.shadowColor : t31$2), elevation: (t31$3 = this.elevation, t31$3 == null ? style.elevation : t31$3), padding: (t31$4 = this.padding, t31$4 == null ? style.padding : t31$4), minimumSize: (t31$5 = this.minimumSize, t31$5 == null ? style.minimumSize : t31$5), fixedSize: (t31$6 = this.fixedSize, t31$6 == null ? style.fixedSize : t31$6), maximumSize: (t31$7 = this.maximumSize, t31$7 == null ? style.maximumSize : t31$7), side: (t31$8 = this.side, t31$8 == null ? style.side : t31$8), shape: (t31$9 = this.shape, t31$9 == null ? style.shape : t31$9), mouseCursor: (t31$10 = this.mouseCursor, t31$10 == null ? style.mouseCursor : t31$10), visualDensity: (t31$11 = this.visualDensity, t31$11 == null ? style.visualDensity : t31$11), tapTargetSize: (t31$12 = this.tapTargetSize, t31$12 == null ? style.tapTargetSize : t31$12), animationDuration: (t31$13 = this.animationDuration, t31$13 == null ? style.animationDuration : t31$13), enableFeedback: (t31$14 = this.enableFeedback, t31$14 == null ? style.enableFeedback : t31$14), alignment: (t31$15 = this.alignment, t31$15 == null ? style.alignment : t31$15), splashFactory: (t31$16 = this.splashFactory, t31$16 == null ? style.splashFactory : t31$16)});
    }
    get hashCode() {
      return ui.hashValues(this.textStyle, this.backgroundColor, this.foregroundColor, this.overlayColor, this.shadowColor, this.elevation, this.padding, this.minimumSize, this.fixedSize, this.maximumSize, this.side, this.shape, this.mouseCursor, this.visualDensity, this.tapTargetSize, this.animationDuration, this.enableFeedback, this.alignment, this.splashFactory);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return button_style.ButtonStyle.is(other) && dart.equals(other.textStyle, this.textStyle) && dart.equals(other.backgroundColor, this.backgroundColor) && dart.equals(other.foregroundColor, this.foregroundColor) && dart.equals(other.overlayColor, this.overlayColor) && dart.equals(other.shadowColor, this.shadowColor) && dart.equals(other.elevation, this.elevation) && dart.equals(other.padding, this.padding) && dart.equals(other.minimumSize, this.minimumSize) && dart.equals(other.fixedSize, this.fixedSize) && dart.equals(other.maximumSize, this.maximumSize) && dart.equals(other.side, this.side) && dart.equals(other.shape, this.shape) && dart.equals(other.mouseCursor, this.mouseCursor) && dart.equals(other.visualDensity, this.visualDensity) && other.tapTargetSize == this.tapTargetSize && dart.equals(other.animationDuration, this.animationDuration) && other.enableFeedback == this.enableFeedback && dart.equals(other.alignment, this.alignment) && dart.equals(other.splashFactory, this.splashFactory);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[62], 393, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfTextStyleN()).new("textStyle", this.textStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("backgroundColor", this.backgroundColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("foregroundColor", this.foregroundColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("overlayColor", this.overlayColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("shadowColor", this.shadowColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfdoubleN()).new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfEdgeInsetsGeometryN()).new("padding", this.padding, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfSizeN()).new("minimumSize", this.minimumSize, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfSizeN()).new("fixedSize", this.fixedSize, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfSizeN()).new("maximumSize", this.maximumSize, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfBorderSideN()).new("side", this.side, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfOutlinedBorderN()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfMouseCursorN()).new("mouseCursor", this.mouseCursor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfVisualDensity()).new("visualDensity", this.visualDensity, {defaultValue: null}));
      properties.add(new (T$.EnumPropertyOfMaterialTapTargetSize()).new("tapTargetSize", this.tapTargetSize, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfDuration()).new("animationDuration", this.animationDuration, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("enableFeedback", this.enableFeedback, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfAlignmentGeometry()).new("alignment", this.alignment, {defaultValue: null}));
    }
    static lerp(a, b, t) {
      let t31, t31$, t31$0, t31$1, t31$2, t31$3, t31$4, t31$5, t31$6, t31$7, t31$8, t31$9, t31$10, t31$11, t31$12, t31$13, t31$14, t31$15, t31$16, t31$17, t31$18, t31$19, t31$20, t31$21, t31$22, t31$23, t31$24, t31$25, t31$26, t31$27, t31$28, t31$29, t31$30, t31$31, t31$32, t31$33, t31$34, t31$35;
      if (t == null) dart.nullFailed(I[62], 416, 67, "t");
      if (!(t != null)) dart.assertFailed(null, I[62], 417, 13, "t != null");
      if (a == null && b == null) return null;
      return new button_style.ButtonStyle.new({textStyle: button_style.ButtonStyle._lerpProperties(T$.TextStyleN(), (t31 = a, t31 == null ? null : t31.textStyle), (t31$ = b, t31$ == null ? null : t31$.textStyle), t, C[439] || CT.C439), backgroundColor: button_style.ButtonStyle._lerpProperties(T$.ColorN(), (t31$0 = a, t31$0 == null ? null : t31$0.backgroundColor), (t31$1 = b, t31$1 == null ? null : t31$1.backgroundColor), t, C[243] || CT.C243), foregroundColor: button_style.ButtonStyle._lerpProperties(T$.ColorN(), (t31$2 = a, t31$2 == null ? null : t31$2.foregroundColor), (t31$3 = b, t31$3 == null ? null : t31$3.foregroundColor), t, C[243] || CT.C243), overlayColor: button_style.ButtonStyle._lerpProperties(T$.ColorN(), (t31$4 = a, t31$4 == null ? null : t31$4.overlayColor), (t31$5 = b, t31$5 == null ? null : t31$5.overlayColor), t, C[243] || CT.C243), shadowColor: button_style.ButtonStyle._lerpProperties(T$.ColorN(), (t31$6 = a, t31$6 == null ? null : t31$6.shadowColor), (t31$7 = b, t31$7 == null ? null : t31$7.shadowColor), t, C[243] || CT.C243), elevation: button_style.ButtonStyle._lerpProperties(T$.doubleN(), (t31$8 = a, t31$8 == null ? null : t31$8.elevation), (t31$9 = b, t31$9 == null ? null : t31$9.elevation), t, C[271] || CT.C271), padding: button_style.ButtonStyle._lerpProperties(T$.EdgeInsetsGeometryN(), (t31$10 = a, t31$10 == null ? null : t31$10.padding), (t31$11 = b, t31$11 == null ? null : t31$11.padding), t, C[440] || CT.C440), minimumSize: button_style.ButtonStyle._lerpProperties(T$.SizeN(), (t31$12 = a, t31$12 == null ? null : t31$12.minimumSize), (t31$13 = b, t31$13 == null ? null : t31$13.minimumSize), t, C[441] || CT.C441), fixedSize: button_style.ButtonStyle._lerpProperties(T$.SizeN(), (t31$14 = a, t31$14 == null ? null : t31$14.fixedSize), (t31$15 = b, t31$15 == null ? null : t31$15.fixedSize), t, C[441] || CT.C441), maximumSize: button_style.ButtonStyle._lerpProperties(T$.SizeN(), (t31$16 = a, t31$16 == null ? null : t31$16.maximumSize), (t31$17 = b, t31$17 == null ? null : t31$17.maximumSize), t, C[441] || CT.C441), side: button_style.ButtonStyle._lerpSides((t31$18 = a, t31$18 == null ? null : t31$18.side), (t31$19 = b, t31$19 == null ? null : t31$19.side), t), shape: button_style.ButtonStyle._lerpShapes((t31$20 = a, t31$20 == null ? null : t31$20.shape), (t31$21 = b, t31$21 == null ? null : t31$21.shape), t), mouseCursor: dart.notNull(t) < 0.5 ? (t31$22 = a, t31$22 == null ? null : t31$22.mouseCursor) : (t31$23 = b, t31$23 == null ? null : t31$23.mouseCursor), visualDensity: dart.notNull(t) < 0.5 ? (t31$24 = a, t31$24 == null ? null : t31$24.visualDensity) : (t31$25 = b, t31$25 == null ? null : t31$25.visualDensity), tapTargetSize: dart.notNull(t) < 0.5 ? (t31$26 = a, t31$26 == null ? null : t31$26.tapTargetSize) : (t31$27 = b, t31$27 == null ? null : t31$27.tapTargetSize), animationDuration: dart.notNull(t) < 0.5 ? (t31$28 = a, t31$28 == null ? null : t31$28.animationDuration) : (t31$29 = b, t31$29 == null ? null : t31$29.animationDuration), enableFeedback: dart.notNull(t) < 0.5 ? (t31$30 = a, t31$30 == null ? null : t31$30.enableFeedback) : (t31$31 = b, t31$31 == null ? null : t31$31.enableFeedback), alignment: alignment.AlignmentGeometry.lerp((t31$32 = a, t31$32 == null ? null : t31$32.alignment), (t31$33 = b, t31$33 == null ? null : t31$33.alignment), t), splashFactory: dart.notNull(t) < 0.5 ? (t31$34 = a, t31$34 == null ? null : t31$34.splashFactory) : (t31$35 = b, t31$35 == null ? null : t31$35.splashFactory)});
    }
    static _lerpProperties(T, a, b, t, lerpFunction) {
      if (t == null) dart.nullFailed(I[62], 443, 121, "t");
      if (lerpFunction == null) dart.nullFailed(I[62], 443, 152, "lerpFunction");
      if (a == null && b == null) return null;
      return new (button_style._LerpProperties$(T)).new(a, b, t, lerpFunction);
    }
    static _lerpSides(a, b, t) {
      if (t == null) dart.nullFailed(I[62], 451, 142, "t");
      if (a == null && b == null) return null;
      return new button_style._LerpSides.new(a, b, t);
    }
    static _lerpShapes(a, b, t) {
      if (t == null) dart.nullFailed(I[62], 458, 155, "t");
      if (a == null && b == null) return null;
      return new button_style._LerpShapes.new(a, b, t);
    }
  };
  (button_style.ButtonStyle.new = function(opts) {
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let minimumSize = opts && 'minimumSize' in opts ? opts.minimumSize : null;
    let fixedSize = opts && 'fixedSize' in opts ? opts.fixedSize : null;
    let maximumSize = opts && 'maximumSize' in opts ? opts.maximumSize : null;
    let side = opts && 'side' in opts ? opts.side : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let tapTargetSize = opts && 'tapTargetSize' in opts ? opts.tapTargetSize : null;
    let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : null;
    let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
    this[S$.textStyle$2] = textStyle;
    this[S$.backgroundColor$7] = backgroundColor;
    this[S$.foregroundColor$1] = foregroundColor;
    this[S$.overlayColor$4] = overlayColor;
    this[S$.shadowColor] = shadowColor;
    this[S$.elevation$8] = elevation;
    this[S$.padding$4] = padding;
    this[S$.minimumSize] = minimumSize;
    this[S$.fixedSize] = fixedSize;
    this[S$.maximumSize] = maximumSize;
    this[S$.side] = side;
    this[S$.shape$5] = shape;
    this[S$.mouseCursor$5] = mouseCursor;
    this[S$.visualDensity$3] = visualDensity;
    this[S$.tapTargetSize] = tapTargetSize;
    this[S$.animationDuration] = animationDuration;
    this[S$.enableFeedback$4] = enableFeedback;
    this[S$.alignment$1] = alignment;
    this[S$.splashFactory] = splashFactory;
    ;
  }).prototype = button_style.ButtonStyle.prototype;
  dart.addTypeTests(button_style.ButtonStyle);
  dart.addTypeCaches(button_style.ButtonStyle);
  dart.setMethodSignature(button_style.ButtonStyle, () => ({
    __proto__: dart.getMethods(button_style.ButtonStyle.__proto__),
    copyWith: dart.fnType(button_style.ButtonStyle, [], {alignment: dart.nullable(alignment.AlignmentGeometry), animationDuration: dart.nullable(core.Duration), backgroundColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), elevation: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(core.double))), enableFeedback: dart.nullable(core.bool), fixedSize: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Size))), foregroundColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), maximumSize: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Size))), minimumSize: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Size))), mouseCursor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor))), overlayColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), padding: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(edge_insets.EdgeInsetsGeometry))), shadowColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), shape: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(borders.OutlinedBorder))), side: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(borders.BorderSide))), splashFactory: dart.nullable(ink_well.InteractiveInkFeatureFactory), tapTargetSize: dart.nullable(theme_data.MaterialTapTargetSize), textStyle: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(text_style.TextStyle))), visualDensity: dart.nullable(theme_data.VisualDensity)}, {}),
    merge: dart.fnType(button_style.ButtonStyle, [dart.nullable(button_style.ButtonStyle)])
  }));
  dart.setLibraryUri(button_style.ButtonStyle, I[63]);
  dart.setFieldSignature(button_style.ButtonStyle, () => ({
    __proto__: dart.getFields(button_style.ButtonStyle.__proto__),
    textStyle: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(text_style.TextStyle)))),
    backgroundColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    foregroundColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    overlayColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    shadowColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    elevation: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(core.double)))),
    padding: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(edge_insets.EdgeInsetsGeometry)))),
    minimumSize: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Size)))),
    fixedSize: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Size)))),
    maximumSize: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Size)))),
    side: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(borders.BorderSide)))),
    shape: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(borders.OutlinedBorder)))),
    mouseCursor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor)))),
    visualDensity: dart.finalFieldType(dart.nullable(theme_data.VisualDensity)),
    tapTargetSize: dart.finalFieldType(dart.nullable(theme_data.MaterialTapTargetSize)),
    animationDuration: dart.finalFieldType(dart.nullable(core.Duration)),
    enableFeedback: dart.finalFieldType(dart.nullable(core.bool)),
    alignment: dart.finalFieldType(dart.nullable(alignment.AlignmentGeometry)),
    splashFactory: dart.finalFieldType(dart.nullable(ink_well.InteractiveInkFeatureFactory))
  }));
  dart.defineExtensionMethods(button_style.ButtonStyle, ['_equals']);
  dart.defineExtensionAccessors(button_style.ButtonStyle, ['hashCode']);
  const _is__LerpProperties_default$1 = Symbol('_is__LerpProperties_default');
  button_style._LerpProperties$ = dart.generic(T => {
    class _LerpProperties extends core.Object {
      get a() {
        return this[S$.a$3];
      }
      set a(value) {
        super.a = value;
      }
      get b() {
        return this[S$.b$3];
      }
      set b(value) {
        super.b = value;
      }
      get t() {
        return this[S$.t$3];
      }
      set t(value) {
        super.t = value;
      }
      get lerpFunction() {
        return this[S$.lerpFunction$3];
      }
      set lerpFunction(value) {
        super.lerpFunction = value;
      }
      resolve(states) {
        let t31, t31$, t33, t32, t31$0;
        if (states == null) dart.nullFailed(I[62], 474, 33, "states");
        let resolvedA = (t31 = this.a, t31 == null ? null : t31.resolve(states));
        let resolvedB = (t31$ = this.b, t31$ == null ? null : t31$.resolve(states));
        t31$0 = resolvedA;
        t32 = resolvedB;
        t33 = this.t;
        return this.lerpFunction(t31$0, t32, t33);
      }
    }
    (_LerpProperties.new = function(a, b, t, lerpFunction) {
      if (t == null) dart.nullFailed(I[62], 466, 46, "t");
      if (lerpFunction == null) dart.nullFailed(I[62], 466, 54, "lerpFunction");
      this[S$.a$3] = a;
      this[S$.b$3] = b;
      this[S$.t$3] = t;
      this[S$.lerpFunction$3] = lerpFunction;
      ;
    }).prototype = _LerpProperties.prototype;
    dart.addTypeTests(_LerpProperties);
    _LerpProperties.prototype[_is__LerpProperties_default$1] = true;
    dart.addTypeCaches(_LerpProperties);
    _LerpProperties[dart.implements] = () => [material_state.MaterialStateProperty$(dart.nullable(T))];
    dart.setMethodSignature(_LerpProperties, () => ({
      __proto__: dart.getMethods(_LerpProperties.__proto__),
      resolve: dart.fnType(dart.nullable(T), [core.Set$(material_state.MaterialState)])
    }));
    dart.setLibraryUri(_LerpProperties, I[63]);
    dart.setFieldSignature(_LerpProperties, () => ({
      __proto__: dart.getFields(_LerpProperties.__proto__),
      a: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(T))),
      b: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(T))),
      t: dart.finalFieldType(core.double),
      lerpFunction: dart.finalFieldType(dart.fnType(dart.nullable(T), [dart.nullable(T), dart.nullable(T), core.double]))
    }));
    return _LerpProperties;
  });
  button_style._LerpProperties = button_style._LerpProperties$();
  dart.addTypeTests(button_style._LerpProperties, _is__LerpProperties_default$1);
  button_style._LerpSides = class _LerpSides extends core.Object {
    get a() {
      return this[S$.a$4];
    }
    set a(value) {
      super.a = value;
    }
    get b() {
      return this[S$.b$4];
    }
    set b(value) {
      super.b = value;
    }
    get t() {
      return this[S$.t$4];
    }
    set t(value) {
      super.t = value;
    }
    resolve(states) {
      let t31, t31$;
      if (states == null) dart.nullFailed(I[62], 489, 42, "states");
      let resolvedA = (t31 = this.a, t31 == null ? null : t31.resolve(states));
      let resolvedB = (t31$ = this.b, t31$ == null ? null : t31$.resolve(states));
      if (resolvedA == null && resolvedB == null) return null;
      if (resolvedA == null) return borders.BorderSide.lerp(new borders.BorderSide.new({width: 0.0, color: dart.nullCheck(resolvedB).color.withAlpha(0)}), resolvedB, this.t);
      if (resolvedB == null) return borders.BorderSide.lerp(resolvedA, new borders.BorderSide.new({width: 0.0, color: resolvedA.color.withAlpha(0)}), this.t);
      return borders.BorderSide.lerp(resolvedA, resolvedB, this.t);
    }
  };
  (button_style._LerpSides.new = function(a, b, t) {
    if (t == null) dart.nullFailed(I[62], 482, 41, "t");
    this[S$.a$4] = a;
    this[S$.b$4] = b;
    this[S$.t$4] = t;
    ;
  }).prototype = button_style._LerpSides.prototype;
  dart.addTypeTests(button_style._LerpSides);
  dart.addTypeCaches(button_style._LerpSides);
  button_style._LerpSides[dart.implements] = () => [material_state.MaterialStateProperty$(dart.nullable(borders.BorderSide))];
  dart.setMethodSignature(button_style._LerpSides, () => ({
    __proto__: dart.getMethods(button_style._LerpSides.__proto__),
    resolve: dart.fnType(dart.nullable(borders.BorderSide), [core.Set$(material_state.MaterialState)])
  }));
  dart.setLibraryUri(button_style._LerpSides, I[63]);
  dart.setFieldSignature(button_style._LerpSides, () => ({
    __proto__: dart.getFields(button_style._LerpSides.__proto__),
    a: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(borders.BorderSide)))),
    b: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(borders.BorderSide)))),
    t: dart.finalFieldType(core.double)
  }));
  button_style._LerpShapes = class _LerpShapes extends core.Object {
    get a() {
      return this[S$.a$5];
    }
    set a(value) {
      super.a = value;
    }
    get b() {
      return this[S$.b$5];
    }
    set b(value) {
      super.b = value;
    }
    get t() {
      return this[S$.t$5];
    }
    set t(value) {
      super.t = value;
    }
    resolve(states) {
      let t31, t31$;
      if (states == null) dart.nullFailed(I[62], 510, 46, "states");
      let resolvedA = (t31 = this.a, t31 == null ? null : t31.resolve(states));
      let resolvedB = (t31$ = this.b, t31$ == null ? null : t31$.resolve(states));
      return T$.OutlinedBorderN().as(borders.ShapeBorder.lerp(resolvedA, resolvedB, this.t));
    }
  };
  (button_style._LerpShapes.new = function(a, b, t) {
    if (t == null) dart.nullFailed(I[62], 503, 42, "t");
    this[S$.a$5] = a;
    this[S$.b$5] = b;
    this[S$.t$5] = t;
    ;
  }).prototype = button_style._LerpShapes.prototype;
  dart.addTypeTests(button_style._LerpShapes);
  dart.addTypeCaches(button_style._LerpShapes);
  button_style._LerpShapes[dart.implements] = () => [material_state.MaterialStateProperty$(dart.nullable(borders.OutlinedBorder))];
  dart.setMethodSignature(button_style._LerpShapes, () => ({
    __proto__: dart.getMethods(button_style._LerpShapes.__proto__),
    resolve: dart.fnType(dart.nullable(borders.OutlinedBorder), [core.Set$(material_state.MaterialState)])
  }));
  dart.setLibraryUri(button_style._LerpShapes, I[63]);
  dart.setFieldSignature(button_style._LerpShapes, () => ({
    __proto__: dart.getFields(button_style._LerpShapes.__proto__),
    a: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(borders.OutlinedBorder)))),
    b: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(borders.OutlinedBorder)))),
    t: dart.finalFieldType(core.double)
  }));
  const Object_Diagnosticable$36$15 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$15.new = function() {
  }).prototype = Object_Diagnosticable$36$15.prototype;
  dart.applyMixin(Object_Diagnosticable$36$15, diagnostics.Diagnosticable);
  elevated_button_theme.ElevatedButtonThemeData = class ElevatedButtonThemeData extends Object_Diagnosticable$36$15 {
    get style() {
      return this[S$.style$4];
    }
    set style(value) {
      super.style = value;
    }
    static lerp(a, b, t) {
      let t31, t31$;
      if (t == null) dart.nullFailed(I[64], 48, 103, "t");
      if (!(t != null)) dart.assertFailed(null, I[64], 49, 13, "t != null");
      if (a == null && b == null) return null;
      return new elevated_button_theme.ElevatedButtonThemeData.new({style: button_style.ButtonStyle.lerp((t31 = a, t31 == null ? null : t31.style), (t31$ = b, t31$ == null ? null : t31$.style), t)});
    }
    get hashCode() {
      return dart.hashCode(this.style);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return elevated_button_theme.ElevatedButtonThemeData.is(other) && dart.equals(other.style, this.style);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[64], 72, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfButtonStyle()).new("style", this.style, {defaultValue: null}));
    }
  };
  (elevated_button_theme.ElevatedButtonThemeData.new = function(opts) {
    let style = opts && 'style' in opts ? opts.style : null;
    this[S$.style$4] = style;
    ;
  }).prototype = elevated_button_theme.ElevatedButtonThemeData.prototype;
  dart.addTypeTests(elevated_button_theme.ElevatedButtonThemeData);
  dart.addTypeCaches(elevated_button_theme.ElevatedButtonThemeData);
  dart.setLibraryUri(elevated_button_theme.ElevatedButtonThemeData, I[65]);
  dart.setFieldSignature(elevated_button_theme.ElevatedButtonThemeData, () => ({
    __proto__: dart.getFields(elevated_button_theme.ElevatedButtonThemeData.__proto__),
    style: dart.finalFieldType(dart.nullable(button_style.ButtonStyle))
  }));
  dart.defineExtensionMethods(elevated_button_theme.ElevatedButtonThemeData, ['_equals']);
  dart.defineExtensionAccessors(elevated_button_theme.ElevatedButtonThemeData, ['hashCode']);
  elevated_button_theme.ElevatedButtonTheme = class ElevatedButtonTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S$.data$12];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t31, t31$;
      if (context == null) dart.nullFailed(I[64], 112, 50, "context");
      let buttonTheme = context.dependOnInheritedWidgetOfExactType(elevated_button_theme.ElevatedButtonTheme);
      t31$ = (t31 = buttonTheme, t31 == null ? null : t31.data);
      return t31$ == null ? theme$.Theme.of(context).elevatedButtonTheme : t31$;
    }
    wrap(context, child) {
      if (context == null) dart.nullFailed(I[64], 118, 28, "context");
      if (child == null) dart.nullFailed(I[64], 118, 44, "child");
      return new elevated_button_theme.ElevatedButtonTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[442] || CT.C442});
    }
    updateShouldNotify(oldWidget) {
      elevated_button_theme.ElevatedButtonTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[64], 123, 47, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (elevated_button_theme.ElevatedButtonTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[64], 95, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[64], 96, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.data$12] = data;
    if (!(data != null)) dart.assertFailed(null, I[64], 97, 15, "data != null");
    elevated_button_theme.ElevatedButtonTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = elevated_button_theme.ElevatedButtonTheme.prototype;
  dart.addTypeTests(elevated_button_theme.ElevatedButtonTheme);
  dart.addTypeCaches(elevated_button_theme.ElevatedButtonTheme);
  dart.setMethodSignature(elevated_button_theme.ElevatedButtonTheme, () => ({
    __proto__: dart.getMethods(elevated_button_theme.ElevatedButtonTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(elevated_button_theme.ElevatedButtonTheme, I[65]);
  dart.setFieldSignature(elevated_button_theme.ElevatedButtonTheme, () => ({
    __proto__: dart.getFields(elevated_button_theme.ElevatedButtonTheme.__proto__),
    data: dart.finalFieldType(elevated_button_theme.ElevatedButtonThemeData)
  }));
  const Object_Diagnosticable$36$16 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$16.new = function() {
  }).prototype = Object_Diagnosticable$36$16.prototype;
  dart.applyMixin(Object_Diagnosticable$36$16, diagnostics.Diagnosticable);
  dialog_theme.DialogTheme = class DialogTheme extends Object_Diagnosticable$36$16 {
    get backgroundColor() {
      return this[S$.backgroundColor$8];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get elevation() {
      return this[S$.elevation$9];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get shape() {
      return this[S$.shape$6];
    }
    set shape(value) {
      super.shape = value;
    }
    get titleTextStyle() {
      return this[S$.titleTextStyle];
    }
    set titleTextStyle(value) {
      super.titleTextStyle = value;
    }
    get contentTextStyle() {
      return this[S$.contentTextStyle$1];
    }
    set contentTextStyle(value) {
      super.contentTextStyle = value;
    }
    copyWith(opts) {
      let t31, t31$, t31$0, t31$1, t31$2;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
      let contentTextStyle = opts && 'contentTextStyle' in opts ? opts.contentTextStyle : null;
      return new dialog_theme.DialogTheme.new({backgroundColor: (t31 = backgroundColor, t31 == null ? this.backgroundColor : t31), elevation: (t31$ = elevation, t31$ == null ? this.elevation : t31$), shape: (t31$0 = shape, t31$0 == null ? this.shape : t31$0), titleTextStyle: (t31$1 = titleTextStyle, t31$1 == null ? this.titleTextStyle : t31$1), contentTextStyle: (t31$2 = contentTextStyle, t31$2 == null ? this.contentTextStyle : t31$2)});
    }
    static of(context) {
      if (context == null) dart.nullFailed(I[66], 84, 38, "context");
      return theme$.Theme.of(context).dialogTheme;
    }
    static lerp(a, b, t) {
      let t31, t31$, t31$0, t31$1, t31$2, t31$3, t31$4, t31$5, t31$6, t31$7;
      if (t == null) dart.nullFailed(I[66], 93, 66, "t");
      if (!(t != null)) dart.assertFailed(null, I[66], 94, 12, "t != null");
      return new dialog_theme.DialogTheme.new({backgroundColor: ui.Color.lerp((t31 = a, t31 == null ? null : t31.backgroundColor), (t31$ = b, t31$ == null ? null : t31$.backgroundColor), t), elevation: ui.lerpDouble((t31$0 = a, t31$0 == null ? null : t31$0.elevation), (t31$1 = b, t31$1 == null ? null : t31$1.elevation), t), shape: borders.ShapeBorder.lerp((t31$2 = a, t31$2 == null ? null : t31$2.shape), (t31$3 = b, t31$3 == null ? null : t31$3.shape), t), titleTextStyle: text_style.TextStyle.lerp((t31$4 = a, t31$4 == null ? null : t31$4.titleTextStyle), (t31$5 = b, t31$5 == null ? null : t31$5.titleTextStyle), t), contentTextStyle: text_style.TextStyle.lerp((t31$6 = a, t31$6 == null ? null : t31$6.contentTextStyle), (t31$7 = b, t31$7 == null ? null : t31$7.contentTextStyle), t)});
    }
    get hashCode() {
      return dart.hashCode(this.shape);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return dialog_theme.DialogTheme.is(other) && dart.equals(other.backgroundColor, this.backgroundColor) && other.elevation == this.elevation && dart.equals(other.shape, this.shape) && dart.equals(other.titleTextStyle, this.titleTextStyle) && dart.equals(other.contentTextStyle, this.contentTextStyle);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[66], 122, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("elevation", this.elevation));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("titleTextStyle", this.titleTextStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("contentTextStyle", this.contentTextStyle, {defaultValue: null}));
    }
  };
  (dialog_theme.DialogTheme.new = function(opts) {
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
    let contentTextStyle = opts && 'contentTextStyle' in opts ? opts.contentTextStyle : null;
    this[S$.backgroundColor$8] = backgroundColor;
    this[S$.elevation$9] = elevation;
    this[S$.shape$6] = shape;
    this[S$.titleTextStyle] = titleTextStyle;
    this[S$.contentTextStyle$1] = contentTextStyle;
    ;
  }).prototype = dialog_theme.DialogTheme.prototype;
  dart.addTypeTests(dialog_theme.DialogTheme);
  dart.addTypeCaches(dialog_theme.DialogTheme);
  dart.setMethodSignature(dialog_theme.DialogTheme, () => ({
    __proto__: dart.getMethods(dialog_theme.DialogTheme.__proto__),
    copyWith: dart.fnType(dialog_theme.DialogTheme, [], {backgroundColor: dart.nullable(ui.Color), contentTextStyle: dart.nullable(text_style.TextStyle), elevation: dart.nullable(core.double), shape: dart.nullable(borders.ShapeBorder), titleTextStyle: dart.nullable(text_style.TextStyle)}, {})
  }));
  dart.setLibraryUri(dialog_theme.DialogTheme, I[67]);
  dart.setFieldSignature(dialog_theme.DialogTheme, () => ({
    __proto__: dart.getFields(dialog_theme.DialogTheme.__proto__),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    titleTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    contentTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle))
  }));
  dart.defineExtensionMethods(dialog_theme.DialogTheme, ['_equals']);
  dart.defineExtensionAccessors(dialog_theme.DialogTheme, ['hashCode']);
  const Object_Diagnosticable$36$17 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$17.new = function() {
  }).prototype = Object_Diagnosticable$36$17.prototype;
  dart.applyMixin(Object_Diagnosticable$36$17, diagnostics.Diagnosticable);
  data_table_theme.DataTableThemeData = class DataTableThemeData extends Object_Diagnosticable$36$17 {
    get decoration() {
      return this[S$.decoration$2];
    }
    set decoration(value) {
      super.decoration = value;
    }
    get dataRowColor() {
      return this[S$.dataRowColor];
    }
    set dataRowColor(value) {
      super.dataRowColor = value;
    }
    get dataRowHeight() {
      return this[S$.dataRowHeight];
    }
    set dataRowHeight(value) {
      super.dataRowHeight = value;
    }
    get dataTextStyle() {
      return this[S$.dataTextStyle];
    }
    set dataTextStyle(value) {
      super.dataTextStyle = value;
    }
    get headingRowColor() {
      return this[S$.headingRowColor];
    }
    set headingRowColor(value) {
      super.headingRowColor = value;
    }
    get headingRowHeight() {
      return this[S$.headingRowHeight];
    }
    set headingRowHeight(value) {
      super.headingRowHeight = value;
    }
    get headingTextStyle() {
      return this[S$.headingTextStyle];
    }
    set headingTextStyle(value) {
      super.headingTextStyle = value;
    }
    get horizontalMargin() {
      return this[S$.horizontalMargin];
    }
    set horizontalMargin(value) {
      super.horizontalMargin = value;
    }
    get columnSpacing() {
      return this[S$.columnSpacing];
    }
    set columnSpacing(value) {
      super.columnSpacing = value;
    }
    get dividerThickness() {
      return this[S$.dividerThickness];
    }
    set dividerThickness(value) {
      super.dividerThickness = value;
    }
    get checkboxHorizontalMargin() {
      return this[S$.checkboxHorizontalMargin];
    }
    set checkboxHorizontalMargin(value) {
      super.checkboxHorizontalMargin = value;
    }
    copyWith(opts) {
      let t31, t31$, t31$0, t31$1, t31$2, t31$3, t31$4, t31$5, t31$6, t31$7, t31$8;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let dataRowColor = opts && 'dataRowColor' in opts ? opts.dataRowColor : null;
      let dataRowHeight = opts && 'dataRowHeight' in opts ? opts.dataRowHeight : null;
      let dataTextStyle = opts && 'dataTextStyle' in opts ? opts.dataTextStyle : null;
      let headingRowColor = opts && 'headingRowColor' in opts ? opts.headingRowColor : null;
      let headingRowHeight = opts && 'headingRowHeight' in opts ? opts.headingRowHeight : null;
      let headingTextStyle = opts && 'headingTextStyle' in opts ? opts.headingTextStyle : null;
      let horizontalMargin = opts && 'horizontalMargin' in opts ? opts.horizontalMargin : null;
      let columnSpacing = opts && 'columnSpacing' in opts ? opts.columnSpacing : null;
      let dividerThickness = opts && 'dividerThickness' in opts ? opts.dividerThickness : null;
      let checkboxHorizontalMargin = opts && 'checkboxHorizontalMargin' in opts ? opts.checkboxHorizontalMargin : null;
      return new data_table_theme.DataTableThemeData.new({decoration: (t31 = decoration, t31 == null ? this.decoration : t31), dataRowColor: (t31$ = dataRowColor, t31$ == null ? this.dataRowColor : t31$), dataRowHeight: (t31$0 = dataRowHeight, t31$0 == null ? this.dataRowHeight : t31$0), dataTextStyle: (t31$1 = dataTextStyle, t31$1 == null ? this.dataTextStyle : t31$1), headingRowColor: (t31$2 = headingRowColor, t31$2 == null ? this.headingRowColor : t31$2), headingRowHeight: (t31$3 = headingRowHeight, t31$3 == null ? this.headingRowHeight : t31$3), headingTextStyle: (t31$4 = headingTextStyle, t31$4 == null ? this.headingTextStyle : t31$4), horizontalMargin: (t31$5 = horizontalMargin, t31$5 == null ? this.horizontalMargin : t31$5), columnSpacing: (t31$6 = columnSpacing, t31$6 == null ? this.columnSpacing : t31$6), dividerThickness: (t31$7 = dividerThickness, t31$7 == null ? this.dividerThickness : t31$7), checkboxHorizontalMargin: (t31$8 = checkboxHorizontalMargin, t31$8 == null ? this.checkboxHorizontalMargin : t31$8)});
    }
    static lerp(a, b, t) {
      if (a == null) dart.nullFailed(I[68], 121, 53, "a");
      if (b == null) dart.nullFailed(I[68], 121, 75, "b");
      if (t == null) dart.nullFailed(I[68], 121, 85, "t");
      if (!(t != null)) dart.assertFailed(null, I[68], 122, 12, "t != null");
      return new data_table_theme.DataTableThemeData.new({decoration: decoration.Decoration.lerp(a.decoration, b.decoration, t), dataRowColor: data_table_theme.DataTableThemeData._lerpProperties(T$.ColorN(), a.dataRowColor, b.dataRowColor, t, C[243] || CT.C243), dataRowHeight: ui.lerpDouble(a.dataRowHeight, b.dataRowHeight, t), dataTextStyle: text_style.TextStyle.lerp(a.dataTextStyle, b.dataTextStyle, t), headingRowColor: data_table_theme.DataTableThemeData._lerpProperties(T$.ColorN(), a.headingRowColor, b.headingRowColor, t, C[243] || CT.C243), headingRowHeight: ui.lerpDouble(a.headingRowHeight, b.headingRowHeight, t), headingTextStyle: text_style.TextStyle.lerp(a.headingTextStyle, b.headingTextStyle, t), horizontalMargin: ui.lerpDouble(a.horizontalMargin, b.horizontalMargin, t), columnSpacing: ui.lerpDouble(a.columnSpacing, b.columnSpacing, t), dividerThickness: ui.lerpDouble(a.dividerThickness, b.dividerThickness, t), checkboxHorizontalMargin: ui.lerpDouble(a.checkboxHorizontalMargin, b.checkboxHorizontalMargin, t)});
    }
    get hashCode() {
      return ui.hashValues(this.decoration, this.dataRowColor, this.dataRowHeight, this.dataTextStyle, this.headingRowColor, this.headingRowHeight, this.headingTextStyle, this.horizontalMargin, this.columnSpacing, this.dividerThickness, this.checkboxHorizontalMargin);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return data_table_theme.DataTableThemeData.is(other) && dart.equals(other.decoration, this.decoration) && dart.equals(other.dataRowColor, this.dataRowColor) && other.dataRowHeight == this.dataRowHeight && dart.equals(other.dataTextStyle, this.dataTextStyle) && dart.equals(other.headingRowColor, this.headingRowColor) && other.headingRowHeight == this.headingRowHeight && dart.equals(other.headingTextStyle, this.headingTextStyle) && other.horizontalMargin == this.horizontalMargin && other.columnSpacing == this.columnSpacing && other.dividerThickness == this.dividerThickness && other.checkboxHorizontalMargin == this.checkboxHorizontalMargin;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[68], 176, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfDecoration()).new("decoration", this.decoration, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("dataRowColor", this.dataRowColor, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("dataRowHeight", this.dataRowHeight, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("dataTextStyle", this.dataTextStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("headingRowColor", this.headingRowColor, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("headingRowHeight", this.headingRowHeight, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("headingTextStyle", this.headingTextStyle, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("horizontalMargin", this.horizontalMargin, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("columnSpacing", this.columnSpacing, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("dividerThickness", this.dividerThickness, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("checkboxHorizontalMargin", this.checkboxHorizontalMargin, {defaultValue: null}));
    }
    static _lerpProperties(T, a, b, t, lerpFunction) {
      if (t == null) dart.nullFailed(I[68], 191, 120, "t");
      if (lerpFunction == null) dart.nullFailed(I[68], 191, 150, "lerpFunction");
      if (a == null && b == null) return null;
      return new (data_table_theme._LerpProperties$(T)).new(a, b, t, lerpFunction);
    }
  };
  (data_table_theme.DataTableThemeData.new = function(opts) {
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    let dataRowColor = opts && 'dataRowColor' in opts ? opts.dataRowColor : null;
    let dataRowHeight = opts && 'dataRowHeight' in opts ? opts.dataRowHeight : null;
    let dataTextStyle = opts && 'dataTextStyle' in opts ? opts.dataTextStyle : null;
    let headingRowColor = opts && 'headingRowColor' in opts ? opts.headingRowColor : null;
    let headingRowHeight = opts && 'headingRowHeight' in opts ? opts.headingRowHeight : null;
    let headingTextStyle = opts && 'headingTextStyle' in opts ? opts.headingTextStyle : null;
    let horizontalMargin = opts && 'horizontalMargin' in opts ? opts.horizontalMargin : null;
    let columnSpacing = opts && 'columnSpacing' in opts ? opts.columnSpacing : null;
    let dividerThickness = opts && 'dividerThickness' in opts ? opts.dividerThickness : null;
    let checkboxHorizontalMargin = opts && 'checkboxHorizontalMargin' in opts ? opts.checkboxHorizontalMargin : null;
    this[S$.decoration$2] = decoration;
    this[S$.dataRowColor] = dataRowColor;
    this[S$.dataRowHeight] = dataRowHeight;
    this[S$.dataTextStyle] = dataTextStyle;
    this[S$.headingRowColor] = headingRowColor;
    this[S$.headingRowHeight] = headingRowHeight;
    this[S$.headingTextStyle] = headingTextStyle;
    this[S$.horizontalMargin] = horizontalMargin;
    this[S$.columnSpacing] = columnSpacing;
    this[S$.dividerThickness] = dividerThickness;
    this[S$.checkboxHorizontalMargin] = checkboxHorizontalMargin;
    ;
  }).prototype = data_table_theme.DataTableThemeData.prototype;
  dart.addTypeTests(data_table_theme.DataTableThemeData);
  dart.addTypeCaches(data_table_theme.DataTableThemeData);
  dart.setMethodSignature(data_table_theme.DataTableThemeData, () => ({
    __proto__: dart.getMethods(data_table_theme.DataTableThemeData.__proto__),
    copyWith: dart.fnType(data_table_theme.DataTableThemeData, [], {checkboxHorizontalMargin: dart.nullable(core.double), columnSpacing: dart.nullable(core.double), dataRowColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), dataRowHeight: dart.nullable(core.double), dataTextStyle: dart.nullable(text_style.TextStyle), decoration: dart.nullable(decoration.Decoration), dividerThickness: dart.nullable(core.double), headingRowColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), headingRowHeight: dart.nullable(core.double), headingTextStyle: dart.nullable(text_style.TextStyle), horizontalMargin: dart.nullable(core.double)}, {})
  }));
  dart.setLibraryUri(data_table_theme.DataTableThemeData, I[69]);
  dart.setFieldSignature(data_table_theme.DataTableThemeData, () => ({
    __proto__: dart.getFields(data_table_theme.DataTableThemeData.__proto__),
    decoration: dart.finalFieldType(dart.nullable(decoration.Decoration)),
    dataRowColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    dataRowHeight: dart.finalFieldType(dart.nullable(core.double)),
    dataTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    headingRowColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    headingRowHeight: dart.finalFieldType(dart.nullable(core.double)),
    headingTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    horizontalMargin: dart.finalFieldType(dart.nullable(core.double)),
    columnSpacing: dart.finalFieldType(dart.nullable(core.double)),
    dividerThickness: dart.finalFieldType(dart.nullable(core.double)),
    checkboxHorizontalMargin: dart.finalFieldType(dart.nullable(core.double))
  }));
  dart.defineExtensionMethods(data_table_theme.DataTableThemeData, ['_equals']);
  dart.defineExtensionAccessors(data_table_theme.DataTableThemeData, ['hashCode']);
  const _is__LerpProperties_default$2 = Symbol('_is__LerpProperties_default');
  data_table_theme._LerpProperties$ = dart.generic(T => {
    class _LerpProperties extends core.Object {
      get a() {
        return this[S$.a$6];
      }
      set a(value) {
        super.a = value;
      }
      get b() {
        return this[S$.b$6];
      }
      set b(value) {
        super.b = value;
      }
      get t() {
        return this[S$.t$6];
      }
      set t(value) {
        super.t = value;
      }
      get lerpFunction() {
        return this[S$.lerpFunction$4];
      }
      set lerpFunction(value) {
        super.lerpFunction = value;
      }
      resolve(states) {
        let t31, t31$, t33, t32, t31$0;
        if (states == null) dart.nullFailed(I[68], 208, 32, "states");
        let resolvedA = (t31 = this.a, t31 == null ? null : t31.resolve(states));
        let resolvedB = (t31$ = this.b, t31$ == null ? null : t31$.resolve(states));
        t31$0 = resolvedA;
        t32 = resolvedB;
        t33 = this.t;
        return this.lerpFunction(t31$0, t32, t33);
      }
    }
    (_LerpProperties.new = function(a, b, t, lerpFunction) {
      if (t == null) dart.nullFailed(I[68], 200, 46, "t");
      if (lerpFunction == null) dart.nullFailed(I[68], 200, 54, "lerpFunction");
      this[S$.a$6] = a;
      this[S$.b$6] = b;
      this[S$.t$6] = t;
      this[S$.lerpFunction$4] = lerpFunction;
      ;
    }).prototype = _LerpProperties.prototype;
    dart.addTypeTests(_LerpProperties);
    _LerpProperties.prototype[_is__LerpProperties_default$2] = true;
    dart.addTypeCaches(_LerpProperties);
    _LerpProperties[dart.implements] = () => [material_state.MaterialStateProperty$(T)];
    dart.setMethodSignature(_LerpProperties, () => ({
      __proto__: dart.getMethods(_LerpProperties.__proto__),
      resolve: dart.fnType(T, [core.Set$(material_state.MaterialState)])
    }));
    dart.setLibraryUri(_LerpProperties, I[69]);
    dart.setFieldSignature(_LerpProperties, () => ({
      __proto__: dart.getFields(_LerpProperties.__proto__),
      a: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(T))),
      b: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(T))),
      t: dart.finalFieldType(core.double),
      lerpFunction: dart.finalFieldType(dart.fnType(T, [dart.nullable(T), dart.nullable(T), core.double]))
    }));
    return _LerpProperties;
  });
  data_table_theme._LerpProperties = data_table_theme._LerpProperties$();
  dart.addTypeTests(data_table_theme._LerpProperties, _is__LerpProperties_default$2);
  data_table_theme.DataTableTheme = class DataTableTheme extends framework.InheritedWidget {
    get data() {
      return this[S$.data$13];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t31, t31$;
      if (context == null) dart.nullFailed(I[68], 252, 45, "context");
      let dataTableTheme = context.dependOnInheritedWidgetOfExactType(data_table_theme.DataTableTheme);
      t31$ = (t31 = dataTableTheme, t31 == null ? null : t31.data);
      return t31$ == null ? theme$.Theme.of(context).dataTableTheme : t31$;
    }
    updateShouldNotify(oldWidget) {
      data_table_theme.DataTableTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[68], 258, 42, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (data_table_theme.DataTableTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[68], 235, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[68], 236, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.data$13] = data;
    if (!(data != null)) dart.assertFailed(null, I[68], 237, 15, "data != null");
    data_table_theme.DataTableTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = data_table_theme.DataTableTheme.prototype;
  dart.addTypeTests(data_table_theme.DataTableTheme);
  dart.addTypeCaches(data_table_theme.DataTableTheme);
  dart.setMethodSignature(data_table_theme.DataTableTheme, () => ({
    __proto__: dart.getMethods(data_table_theme.DataTableTheme.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(data_table_theme.DataTableTheme, I[69]);
  dart.setFieldSignature(data_table_theme.DataTableTheme, () => ({
    __proto__: dart.getFields(data_table_theme.DataTableTheme.__proto__),
    data: dart.finalFieldType(data_table_theme.DataTableThemeData)
  }));
  chip_theme.ChipTheme = class ChipTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S$.data$14];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t31, t31$;
      if (context == null) dart.nullFailed(I[70], 88, 40, "context");
      let inheritedTheme = context.dependOnInheritedWidgetOfExactType(chip_theme.ChipTheme);
      t31$ = (t31 = inheritedTheme, t31 == null ? null : t31.data);
      return t31$ == null ? theme$.Theme.of(context).chipTheme : t31$;
    }
    wrap(context, child) {
      if (context == null) dart.nullFailed(I[70], 94, 28, "context");
      if (child == null) dart.nullFailed(I[70], 94, 44, "child");
      return new chip_theme.ChipTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[443] || CT.C443});
    }
    updateShouldNotify(oldWidget) {
      chip_theme.ChipTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[70], 99, 37, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (chip_theme.ChipTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[70], 48, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[70], 49, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.data$14] = data;
    if (!(child != null)) dart.assertFailed(null, I[70], 50, 15, "child != null");
    if (!(data != null)) dart.assertFailed(null, I[70], 51, 15, "data != null");
    chip_theme.ChipTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = chip_theme.ChipTheme.prototype;
  dart.addTypeTests(chip_theme.ChipTheme);
  dart.addTypeCaches(chip_theme.ChipTheme);
  dart.setMethodSignature(chip_theme.ChipTheme, () => ({
    __proto__: dart.getMethods(chip_theme.ChipTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(chip_theme.ChipTheme, I[71]);
  dart.setFieldSignature(chip_theme.ChipTheme, () => ({
    __proto__: dart.getFields(chip_theme.ChipTheme.__proto__),
    data: dart.finalFieldType(chip_theme.ChipThemeData)
  }));
  const Object_Diagnosticable$36$18 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$18.new = function() {
  }).prototype = Object_Diagnosticable$36$18.prototype;
  dart.applyMixin(Object_Diagnosticable$36$18, diagnostics.Diagnosticable);
  chip_theme.ChipThemeData = class ChipThemeData extends Object_Diagnosticable$36$18 {
    get backgroundColor() {
      return this[S$.backgroundColor$9];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get deleteIconColor() {
      return this[S$.deleteIconColor];
    }
    set deleteIconColor(value) {
      super.deleteIconColor = value;
    }
    get disabledColor() {
      return this[S$.disabledColor$2];
    }
    set disabledColor(value) {
      super.disabledColor = value;
    }
    get selectedColor() {
      return this[S$.selectedColor$2];
    }
    set selectedColor(value) {
      super.selectedColor = value;
    }
    get secondarySelectedColor() {
      return this[S$.secondarySelectedColor];
    }
    set secondarySelectedColor(value) {
      super.secondarySelectedColor = value;
    }
    get shadowColor() {
      return this[S$.shadowColor$1];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get selectedShadowColor() {
      return this[S$.selectedShadowColor];
    }
    set selectedShadowColor(value) {
      super.selectedShadowColor = value;
    }
    get showCheckmark() {
      return this[S$.showCheckmark];
    }
    set showCheckmark(value) {
      super.showCheckmark = value;
    }
    get checkmarkColor() {
      return this[S$.checkmarkColor];
    }
    set checkmarkColor(value) {
      super.checkmarkColor = value;
    }
    get labelPadding() {
      return this[S$.labelPadding$2];
    }
    set labelPadding(value) {
      super.labelPadding = value;
    }
    get padding() {
      return this[S$.padding$5];
    }
    set padding(value) {
      super.padding = value;
    }
    get side() {
      return this[S$.side$1];
    }
    set side(value) {
      super.side = value;
    }
    get shape() {
      return this[S$.shape$7];
    }
    set shape(value) {
      super.shape = value;
    }
    get labelStyle() {
      return this[S$.labelStyle$5];
    }
    set labelStyle(value) {
      super.labelStyle = value;
    }
    get secondaryLabelStyle() {
      return this[S$.secondaryLabelStyle];
    }
    set secondaryLabelStyle(value) {
      super.secondaryLabelStyle = value;
    }
    get brightness() {
      return this[S$.brightness];
    }
    set brightness(value) {
      super.brightness = value;
    }
    get elevation() {
      return this[S$.elevation$10];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get pressElevation() {
      return this[S$.pressElevation];
    }
    set pressElevation(value) {
      super.pressElevation = value;
    }
    static fromDefaults(opts) {
      let t31;
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      let primaryColor = opts && 'primaryColor' in opts ? opts.primaryColor : null;
      let secondaryColor = opts && 'secondaryColor' in opts ? opts.secondaryColor : null;
      if (secondaryColor == null) dart.nullFailed(I[70], 229, 20, "secondaryColor");
      let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
      if (labelStyle == null) dart.nullFailed(I[70], 230, 24, "labelStyle");
      if (!(primaryColor != null || brightness != null)) dart.assertFailed("One of primaryColor or brightness must be specified", I[70], 232, 12, "primaryColor != null || brightness != null");
      if (!(primaryColor == null || brightness == null)) dart.assertFailed("Only one of primaryColor or brightness may be specified", I[70], 233, 12, "primaryColor == null || brightness == null");
      if (!(secondaryColor != null)) dart.assertFailed(null, I[70], 234, 12, "secondaryColor != null");
      if (!(labelStyle != null)) dart.assertFailed(null, I[70], 235, 12, "labelStyle != null");
      if (primaryColor != null) {
        brightness = theme_data.ThemeData.estimateBrightnessForColor(primaryColor);
      }
      let padding = C[237] || CT.C237;
      primaryColor = (t31 = primaryColor, t31 == null ? brightness == ui.Brightness.light ? colors$.Colors.black : colors$.Colors.white : t31);
      let backgroundColor = primaryColor.withAlpha(31);
      let deleteIconColor = primaryColor.withAlpha(222);
      let disabledColor = primaryColor.withAlpha(12);
      let selectedColor = primaryColor.withAlpha(61);
      let secondarySelectedColor = secondaryColor.withAlpha(61);
      let secondaryLabelStyle = labelStyle.copyWith({color: secondaryColor.withAlpha(222)});
      labelStyle = labelStyle.copyWith({color: primaryColor.withAlpha(222)});
      return new chip_theme.ChipThemeData.new({backgroundColor: backgroundColor, deleteIconColor: deleteIconColor, disabledColor: disabledColor, selectedColor: selectedColor, secondarySelectedColor: secondarySelectedColor, padding: padding, labelStyle: labelStyle, secondaryLabelStyle: secondaryLabelStyle, brightness: dart.nullCheck(brightness)});
    }
    copyWith(opts) {
      let t31, t31$, t31$0, t31$1, t31$2, t31$3, t31$4, t31$5, t31$6, t31$7, t31$8, t31$9, t31$10, t31$11, t31$12, t31$13, t31$14;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let deleteIconColor = opts && 'deleteIconColor' in opts ? opts.deleteIconColor : null;
      let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
      let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
      let secondarySelectedColor = opts && 'secondarySelectedColor' in opts ? opts.secondarySelectedColor : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let selectedShadowColor = opts && 'selectedShadowColor' in opts ? opts.selectedShadowColor : null;
      let checkmarkColor = opts && 'checkmarkColor' in opts ? opts.checkmarkColor : null;
      let labelPadding = opts && 'labelPadding' in opts ? opts.labelPadding : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let side = opts && 'side' in opts ? opts.side : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
      let secondaryLabelStyle = opts && 'secondaryLabelStyle' in opts ? opts.secondaryLabelStyle : null;
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let pressElevation = opts && 'pressElevation' in opts ? opts.pressElevation : null;
      return new chip_theme.ChipThemeData.new({backgroundColor: (t31 = backgroundColor, t31 == null ? this.backgroundColor : t31), deleteIconColor: (t31$ = deleteIconColor, t31$ == null ? this.deleteIconColor : t31$), disabledColor: (t31$0 = disabledColor, t31$0 == null ? this.disabledColor : t31$0), selectedColor: (t31$1 = selectedColor, t31$1 == null ? this.selectedColor : t31$1), secondarySelectedColor: (t31$2 = secondarySelectedColor, t31$2 == null ? this.secondarySelectedColor : t31$2), shadowColor: (t31$3 = shadowColor, t31$3 == null ? this.shadowColor : t31$3), selectedShadowColor: (t31$4 = selectedShadowColor, t31$4 == null ? this.selectedShadowColor : t31$4), checkmarkColor: (t31$5 = checkmarkColor, t31$5 == null ? this.checkmarkColor : t31$5), labelPadding: (t31$6 = labelPadding, t31$6 == null ? this.labelPadding : t31$6), padding: (t31$7 = padding, t31$7 == null ? this.padding : t31$7), side: (t31$8 = side, t31$8 == null ? this.side : t31$8), shape: (t31$9 = shape, t31$9 == null ? this.shape : t31$9), labelStyle: (t31$10 = labelStyle, t31$10 == null ? this.labelStyle : t31$10), secondaryLabelStyle: (t31$11 = secondaryLabelStyle, t31$11 == null ? this.secondaryLabelStyle : t31$11), brightness: (t31$12 = brightness, t31$12 == null ? this.brightness : t31$12), elevation: (t31$13 = elevation, t31$13 == null ? this.elevation : t31$13), pressElevation: (t31$14 = pressElevation, t31$14 == null ? this.pressElevation : t31$14)});
    }
    static lerp(a, b, t) {
      let t31, t31$, t31$0, t31$1, t31$2, t31$3, t31$4, t31$5, t31$6, t31$7, t31$8, t31$9, t31$10, t31$11, t31$12, t31$13, t31$14, t31$15, t31$16, t31$17, t31$18, t31$19, t31$20, t31$21, t31$22, t31$23, t31$24, t31$25, t31$26, t31$27, t31$28, t31$29, t31$30, t31$31, t31$32, t31$33;
      if (t == null) dart.nullFailed(I[70], 459, 73, "t");
      if (!(t != null)) dart.assertFailed(null, I[70], 460, 12, "t != null");
      if (a == null && b == null) return null;
      return new chip_theme.ChipThemeData.new({backgroundColor: dart.nullCheck(ui.Color.lerp((t31 = a, t31 == null ? null : t31.backgroundColor), (t31$ = b, t31$ == null ? null : t31$.backgroundColor), t)), deleteIconColor: ui.Color.lerp((t31$0 = a, t31$0 == null ? null : t31$0.deleteIconColor), (t31$1 = b, t31$1 == null ? null : t31$1.deleteIconColor), t), disabledColor: dart.nullCheck(ui.Color.lerp((t31$2 = a, t31$2 == null ? null : t31$2.disabledColor), (t31$3 = b, t31$3 == null ? null : t31$3.disabledColor), t)), selectedColor: dart.nullCheck(ui.Color.lerp((t31$4 = a, t31$4 == null ? null : t31$4.selectedColor), (t31$5 = b, t31$5 == null ? null : t31$5.selectedColor), t)), secondarySelectedColor: dart.nullCheck(ui.Color.lerp((t31$6 = a, t31$6 == null ? null : t31$6.secondarySelectedColor), (t31$7 = b, t31$7 == null ? null : t31$7.secondarySelectedColor), t)), shadowColor: ui.Color.lerp((t31$8 = a, t31$8 == null ? null : t31$8.shadowColor), (t31$9 = b, t31$9 == null ? null : t31$9.shadowColor), t), selectedShadowColor: ui.Color.lerp((t31$10 = a, t31$10 == null ? null : t31$10.selectedShadowColor), (t31$11 = b, t31$11 == null ? null : t31$11.selectedShadowColor), t), checkmarkColor: ui.Color.lerp((t31$12 = a, t31$12 == null ? null : t31$12.checkmarkColor), (t31$13 = b, t31$13 == null ? null : t31$13.checkmarkColor), t), labelPadding: edge_insets.EdgeInsetsGeometry.lerp((t31$14 = a, t31$14 == null ? null : t31$14.labelPadding), (t31$15 = b, t31$15 == null ? null : t31$15.labelPadding), t), padding: dart.nullCheck(edge_insets.EdgeInsetsGeometry.lerp((t31$16 = a, t31$16 == null ? null : t31$16.padding), (t31$17 = b, t31$17 == null ? null : t31$17.padding), t)), side: chip_theme.ChipThemeData._lerpSides((t31$18 = a, t31$18 == null ? null : t31$18.side), (t31$19 = b, t31$19 == null ? null : t31$19.side), t), shape: chip_theme.ChipThemeData._lerpShapes((t31$20 = a, t31$20 == null ? null : t31$20.shape), (t31$21 = b, t31$21 == null ? null : t31$21.shape), t), labelStyle: dart.nullCheck(text_style.TextStyle.lerp((t31$22 = a, t31$22 == null ? null : t31$22.labelStyle), (t31$23 = b, t31$23 == null ? null : t31$23.labelStyle), t)), secondaryLabelStyle: dart.nullCheck(text_style.TextStyle.lerp((t31$24 = a, t31$24 == null ? null : t31$24.secondaryLabelStyle), (t31$25 = b, t31$25 == null ? null : t31$25.secondaryLabelStyle), t)), brightness: dart.notNull(t) < 0.5 ? (t31$27 = (t31$26 = a, t31$26 == null ? null : t31$26.brightness), t31$27 == null ? ui.Brightness.light : t31$27) : (t31$29 = (t31$28 = b, t31$28 == null ? null : t31$28.brightness), t31$29 == null ? ui.Brightness.light : t31$29), elevation: ui.lerpDouble((t31$30 = a, t31$30 == null ? null : t31$30.elevation), (t31$31 = b, t31$31 == null ? null : t31$31.elevation), t), pressElevation: ui.lerpDouble((t31$32 = a, t31$32 == null ? null : t31$32.pressElevation), (t31$33 = b, t31$33 == null ? null : t31$33.pressElevation), t)});
    }
    static _lerpSides(a, b, t) {
      if (t == null) dart.nullFailed(I[70], 485, 70, "t");
      if (a == null && b == null) return null;
      if (a == null) return borders.BorderSide.lerp(new borders.BorderSide.new({width: 0.0, color: dart.nullCheck(b).color.withAlpha(0)}), b, t);
      if (b == null) return borders.BorderSide.lerp(new borders.BorderSide.new({width: 0.0, color: a.color.withAlpha(0)}), a, t);
      return borders.BorderSide.lerp(a, b, t);
    }
    static _lerpShapes(a, b, t) {
      if (t == null) dart.nullFailed(I[70], 496, 83, "t");
      if (a == null && b == null) return null;
      return T$.OutlinedBorderN().as(borders.ShapeBorder.lerp(a, b, t));
    }
    get hashCode() {
      return ui.hashValues(this.backgroundColor, this.deleteIconColor, this.disabledColor, this.selectedColor, this.secondarySelectedColor, this.shadowColor, this.selectedShadowColor, this.checkmarkColor, this.labelPadding, this.padding, this.side, this.shape, this.labelStyle, this.secondaryLabelStyle, this.brightness, this.elevation, this.pressElevation);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) {
        return false;
      }
      return chip_theme.ChipThemeData.is(other) && dart.equals(other.backgroundColor, this.backgroundColor) && dart.equals(other.deleteIconColor, this.deleteIconColor) && dart.equals(other.disabledColor, this.disabledColor) && dart.equals(other.selectedColor, this.selectedColor) && dart.equals(other.secondarySelectedColor, this.secondarySelectedColor) && dart.equals(other.shadowColor, this.shadowColor) && dart.equals(other.selectedShadowColor, this.selectedShadowColor) && dart.equals(other.checkmarkColor, this.checkmarkColor) && dart.equals(other.labelPadding, this.labelPadding) && dart.equals(other.padding, this.padding) && dart.equals(other.side, this.side) && dart.equals(other.shape, this.shape) && dart.equals(other.labelStyle, this.labelStyle) && dart.equals(other.secondaryLabelStyle, this.secondaryLabelStyle) && other.brightness == this.brightness && other.elevation == this.elevation && other.pressElevation == this.pressElevation;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[70], 554, 56, "properties");
      super.debugFillProperties(properties);
      let defaultTheme = theme_data.ThemeData.fallback();
      let defaultData = chip_theme.ChipThemeData.fromDefaults({secondaryColor: defaultTheme.primaryColor, brightness: defaultTheme.brightness, labelStyle: dart.nullCheck(defaultTheme.textTheme.bodyText1)});
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: defaultData.backgroundColor}));
      properties.add(new colors.ColorProperty.new("deleteIconColor", this.deleteIconColor, {defaultValue: defaultData.deleteIconColor}));
      properties.add(new colors.ColorProperty.new("disabledColor", this.disabledColor, {defaultValue: defaultData.disabledColor}));
      properties.add(new colors.ColorProperty.new("selectedColor", this.selectedColor, {defaultValue: defaultData.selectedColor}));
      properties.add(new colors.ColorProperty.new("secondarySelectedColor", this.secondarySelectedColor, {defaultValue: defaultData.secondarySelectedColor}));
      properties.add(new colors.ColorProperty.new("shadowColor", this.shadowColor, {defaultValue: defaultData.shadowColor}));
      properties.add(new colors.ColorProperty.new("selectedShadowColor", this.selectedShadowColor, {defaultValue: defaultData.selectedShadowColor}));
      properties.add(new colors.ColorProperty.new("checkMarkColor", this.checkmarkColor, {defaultValue: defaultData.checkmarkColor}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("labelPadding", this.labelPadding, {defaultValue: defaultData.labelPadding}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding, {defaultValue: defaultData.padding}));
      properties.add(new (T$.DiagnosticsPropertyOfBorderSide()).new("side", this.side, {defaultValue: defaultData.side}));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape, {defaultValue: defaultData.shape}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("labelStyle", this.labelStyle, {defaultValue: defaultData.labelStyle}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("secondaryLabelStyle", this.secondaryLabelStyle, {defaultValue: defaultData.secondaryLabelStyle}));
      properties.add(new (T$.EnumPropertyOfBrightness()).new("brightness", this.brightness, {defaultValue: defaultData.brightness}));
      properties.add(new diagnostics.DoubleProperty.new("elevation", this.elevation, {defaultValue: defaultData.elevation}));
      properties.add(new diagnostics.DoubleProperty.new("pressElevation", this.pressElevation, {defaultValue: defaultData.pressElevation}));
    }
  };
  (chip_theme.ChipThemeData.new = function(opts) {
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    if (backgroundColor == null) dart.nullFailed(I[70], 182, 19, "backgroundColor");
    let deleteIconColor = opts && 'deleteIconColor' in opts ? opts.deleteIconColor : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    if (disabledColor == null) dart.nullFailed(I[70], 184, 19, "disabledColor");
    let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
    if (selectedColor == null) dart.nullFailed(I[70], 185, 19, "selectedColor");
    let secondarySelectedColor = opts && 'secondarySelectedColor' in opts ? opts.secondarySelectedColor : null;
    if (secondarySelectedColor == null) dart.nullFailed(I[70], 186, 19, "secondarySelectedColor");
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let selectedShadowColor = opts && 'selectedShadowColor' in opts ? opts.selectedShadowColor : null;
    let showCheckmark = opts && 'showCheckmark' in opts ? opts.showCheckmark : null;
    let checkmarkColor = opts && 'checkmarkColor' in opts ? opts.checkmarkColor : null;
    let labelPadding = opts && 'labelPadding' in opts ? opts.labelPadding : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    if (padding == null) dart.nullFailed(I[70], 192, 19, "padding");
    let side = opts && 'side' in opts ? opts.side : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
    if (labelStyle == null) dart.nullFailed(I[70], 195, 19, "labelStyle");
    let secondaryLabelStyle = opts && 'secondaryLabelStyle' in opts ? opts.secondaryLabelStyle : null;
    if (secondaryLabelStyle == null) dart.nullFailed(I[70], 196, 19, "secondaryLabelStyle");
    let brightness = opts && 'brightness' in opts ? opts.brightness : null;
    if (brightness == null) dart.nullFailed(I[70], 197, 19, "brightness");
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let pressElevation = opts && 'pressElevation' in opts ? opts.pressElevation : null;
    this[S$.backgroundColor$9] = backgroundColor;
    this[S$.deleteIconColor] = deleteIconColor;
    this[S$.disabledColor$2] = disabledColor;
    this[S$.selectedColor$2] = selectedColor;
    this[S$.secondarySelectedColor] = secondarySelectedColor;
    this[S$.shadowColor$1] = shadowColor;
    this[S$.selectedShadowColor] = selectedShadowColor;
    this[S$.showCheckmark] = showCheckmark;
    this[S$.checkmarkColor] = checkmarkColor;
    this[S$.labelPadding$2] = labelPadding;
    this[S$.padding$5] = padding;
    this[S$.side$1] = side;
    this[S$.shape$7] = shape;
    this[S$.labelStyle$5] = labelStyle;
    this[S$.secondaryLabelStyle] = secondaryLabelStyle;
    this[S$.brightness] = brightness;
    this[S$.elevation$10] = elevation;
    this[S$.pressElevation] = pressElevation;
    if (!(backgroundColor != null)) dart.assertFailed(null, I[70], 200, 15, "backgroundColor != null");
    if (!(disabledColor != null)) dart.assertFailed(null, I[70], 201, 15, "disabledColor != null");
    if (!(selectedColor != null)) dart.assertFailed(null, I[70], 202, 15, "selectedColor != null");
    if (!(secondarySelectedColor != null)) dart.assertFailed(null, I[70], 203, 15, "secondarySelectedColor != null");
    if (!(padding != null)) dart.assertFailed(null, I[70], 204, 15, "padding != null");
    if (!(labelStyle != null)) dart.assertFailed(null, I[70], 205, 15, "labelStyle != null");
    if (!(secondaryLabelStyle != null)) dart.assertFailed(null, I[70], 206, 15, "secondaryLabelStyle != null");
    if (!(brightness != null)) dart.assertFailed(null, I[70], 207, 15, "brightness != null");
    ;
  }).prototype = chip_theme.ChipThemeData.prototype;
  dart.addTypeTests(chip_theme.ChipThemeData);
  dart.addTypeCaches(chip_theme.ChipThemeData);
  dart.setMethodSignature(chip_theme.ChipThemeData, () => ({
    __proto__: dart.getMethods(chip_theme.ChipThemeData.__proto__),
    copyWith: dart.fnType(chip_theme.ChipThemeData, [], {backgroundColor: dart.nullable(ui.Color), brightness: dart.nullable(ui.Brightness), checkmarkColor: dart.nullable(ui.Color), deleteIconColor: dart.nullable(ui.Color), disabledColor: dart.nullable(ui.Color), elevation: dart.nullable(core.double), labelPadding: dart.nullable(edge_insets.EdgeInsetsGeometry), labelStyle: dart.nullable(text_style.TextStyle), padding: dart.nullable(edge_insets.EdgeInsetsGeometry), pressElevation: dart.nullable(core.double), secondaryLabelStyle: dart.nullable(text_style.TextStyle), secondarySelectedColor: dart.nullable(ui.Color), selectedColor: dart.nullable(ui.Color), selectedShadowColor: dart.nullable(ui.Color), shadowColor: dart.nullable(ui.Color), shape: dart.nullable(borders.OutlinedBorder), side: dart.nullable(borders.BorderSide)}, {})
  }));
  dart.setLibraryUri(chip_theme.ChipThemeData, I[71]);
  dart.setFieldSignature(chip_theme.ChipThemeData, () => ({
    __proto__: dart.getFields(chip_theme.ChipThemeData.__proto__),
    backgroundColor: dart.finalFieldType(ui.Color),
    deleteIconColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledColor: dart.finalFieldType(ui.Color),
    selectedColor: dart.finalFieldType(ui.Color),
    secondarySelectedColor: dart.finalFieldType(ui.Color),
    shadowColor: dart.finalFieldType(dart.nullable(ui.Color)),
    selectedShadowColor: dart.finalFieldType(dart.nullable(ui.Color)),
    showCheckmark: dart.finalFieldType(dart.nullable(core.bool)),
    checkmarkColor: dart.finalFieldType(dart.nullable(ui.Color)),
    labelPadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    padding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
    side: dart.finalFieldType(dart.nullable(borders.BorderSide)),
    shape: dart.finalFieldType(dart.nullable(borders.OutlinedBorder)),
    labelStyle: dart.finalFieldType(text_style.TextStyle),
    secondaryLabelStyle: dart.finalFieldType(text_style.TextStyle),
    brightness: dart.finalFieldType(ui.Brightness),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    pressElevation: dart.finalFieldType(dart.nullable(core.double))
  }));
  dart.defineExtensionMethods(chip_theme.ChipThemeData, ['_equals']);
  dart.defineExtensionAccessors(chip_theme.ChipThemeData, ['hashCode']);
  const Object_Diagnosticable$36$19 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$19.new = function() {
  }).prototype = Object_Diagnosticable$36$19.prototype;
  dart.applyMixin(Object_Diagnosticable$36$19, diagnostics.Diagnosticable);
  checkbox_theme.CheckboxThemeData = class CheckboxThemeData extends Object_Diagnosticable$36$19 {
    get mouseCursor() {
      return this[S$.mouseCursor$6];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get fillColor() {
      return this[S$.fillColor$5];
    }
    set fillColor(value) {
      super.fillColor = value;
    }
    get checkColor() {
      return this[S$.checkColor];
    }
    set checkColor(value) {
      super.checkColor = value;
    }
    get overlayColor() {
      return this[S$.overlayColor$5];
    }
    set overlayColor(value) {
      super.overlayColor = value;
    }
    get splashRadius() {
      return this[S$.splashRadius$3];
    }
    set splashRadius(value) {
      super.splashRadius = value;
    }
    get materialTapTargetSize() {
      return this[S$.materialTapTargetSize$3];
    }
    set materialTapTargetSize(value) {
      super.materialTapTargetSize = value;
    }
    get visualDensity() {
      return this[S$.visualDensity$4];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get shape() {
      return this[S$.shape$8];
    }
    set shape(value) {
      super.shape = value;
    }
    get side() {
      return this[S$.side$2];
    }
    set side(value) {
      super.side = value;
    }
    copyWith(opts) {
      let t31, t31$, t31$0, t31$1, t31$2, t31$3, t31$4, t31$5, t31$6;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
      let checkColor = opts && 'checkColor' in opts ? opts.checkColor : null;
      let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
      let splashRadius = opts && 'splashRadius' in opts ? opts.splashRadius : null;
      let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let side = opts && 'side' in opts ? opts.side : null;
      return new checkbox_theme.CheckboxThemeData.new({mouseCursor: (t31 = mouseCursor, t31 == null ? this.mouseCursor : t31), fillColor: (t31$ = fillColor, t31$ == null ? this.fillColor : t31$), checkColor: (t31$0 = checkColor, t31$0 == null ? this.checkColor : t31$0), overlayColor: (t31$1 = overlayColor, t31$1 == null ? this.overlayColor : t31$1), splashRadius: (t31$2 = splashRadius, t31$2 == null ? this.splashRadius : t31$2), materialTapTargetSize: (t31$3 = materialTapTargetSize, t31$3 == null ? this.materialTapTargetSize : t31$3), visualDensity: (t31$4 = visualDensity, t31$4 == null ? this.visualDensity : t31$4), shape: (t31$5 = shape, t31$5 == null ? this.shape : t31$5), side: (t31$6 = side, t31$6 == null ? this.side : t31$6)});
    }
    static lerp(a, b, t) {
      let t31, t31$, t31$0, t31$1, t31$2, t31$3, t31$4, t31$5, t31$6, t31$7, t31$8, t31$9, t31$10, t31$11, t31$12, t31$13, t31$14, t31$15;
      if (t == null) dart.nullFailed(I[72], 129, 84, "t");
      return new checkbox_theme.CheckboxThemeData.new({mouseCursor: dart.notNull(t) < 0.5 ? (t31 = a, t31 == null ? null : t31.mouseCursor) : (t31$ = b, t31$ == null ? null : t31$.mouseCursor), fillColor: checkbox_theme.CheckboxThemeData._lerpProperties(T$.ColorN(), (t31$0 = a, t31$0 == null ? null : t31$0.fillColor), (t31$1 = b, t31$1 == null ? null : t31$1.fillColor), t, C[243] || CT.C243), checkColor: checkbox_theme.CheckboxThemeData._lerpProperties(T$.ColorN(), (t31$2 = a, t31$2 == null ? null : t31$2.checkColor), (t31$3 = b, t31$3 == null ? null : t31$3.checkColor), t, C[243] || CT.C243), overlayColor: checkbox_theme.CheckboxThemeData._lerpProperties(T$.ColorN(), (t31$4 = a, t31$4 == null ? null : t31$4.overlayColor), (t31$5 = b, t31$5 == null ? null : t31$5.overlayColor), t, C[243] || CT.C243), splashRadius: ui.lerpDouble((t31$6 = a, t31$6 == null ? null : t31$6.splashRadius), (t31$7 = b, t31$7 == null ? null : t31$7.splashRadius), t), materialTapTargetSize: dart.notNull(t) < 0.5 ? (t31$8 = a, t31$8 == null ? null : t31$8.materialTapTargetSize) : (t31$9 = b, t31$9 == null ? null : t31$9.materialTapTargetSize), visualDensity: dart.notNull(t) < 0.5 ? (t31$10 = a, t31$10 == null ? null : t31$10.visualDensity) : (t31$11 = b, t31$11 == null ? null : t31$11.visualDensity), shape: T$.OutlinedBorderN().as(borders.ShapeBorder.lerp((t31$12 = a, t31$12 == null ? null : t31$12.shape), (t31$13 = b, t31$13 == null ? null : t31$13.shape), t)), side: checkbox_theme.CheckboxThemeData._lerpSides((t31$14 = a, t31$14 == null ? null : t31$14.side), (t31$15 = b, t31$15 == null ? null : t31$15.side), t)});
    }
    get hashCode() {
      return ui.hashValues(this.mouseCursor, this.fillColor, this.checkColor, this.overlayColor, this.splashRadius, this.materialTapTargetSize, this.visualDensity, this.shape, this.side);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return checkbox_theme.CheckboxThemeData.is(other) && dart.equals(other.mouseCursor, this.mouseCursor) && dart.equals(other.fillColor, this.fillColor) && dart.equals(other.checkColor, this.checkColor) && dart.equals(other.overlayColor, this.overlayColor) && other.splashRadius == this.splashRadius && other.materialTapTargetSize == this.materialTapTargetSize && dart.equals(other.visualDensity, this.visualDensity) && dart.equals(other.shape, this.shape) && dart.equals(other.side, this.side);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[72], 177, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfMouseCursorN()).new("mouseCursor", this.mouseCursor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("fillColor", this.fillColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("checkColor", this.checkColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("overlayColor", this.overlayColor, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("splashRadius", this.splashRadius, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialTapTargetSize()).new("materialTapTargetSize", this.materialTapTargetSize, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfVisualDensity()).new("visualDensity", this.visualDensity, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfOutlinedBorder()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfBorderSide()).new("side", this.side, {defaultValue: null}));
    }
    static _lerpProperties(T, a, b, t, lerpFunction) {
      if (t == null) dart.nullFailed(I[72], 193, 12, "t");
      if (lerpFunction == null) dart.nullFailed(I[72], 194, 32, "lerpFunction");
      if (a == null && b == null) return null;
      return new (checkbox_theme._LerpProperties$(T)).new(a, b, t, lerpFunction);
    }
    static _lerpSides(a, b, t) {
      if (t == null) dart.nullFailed(I[72], 203, 70, "t");
      if (a == null && b == null) return null;
      return borders.BorderSide.lerp(dart.nullCheck(a), dart.nullCheck(b), t);
    }
  };
  (checkbox_theme.CheckboxThemeData.new = function(opts) {
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
    let checkColor = opts && 'checkColor' in opts ? opts.checkColor : null;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let splashRadius = opts && 'splashRadius' in opts ? opts.splashRadius : null;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let side = opts && 'side' in opts ? opts.side : null;
    this[S$.mouseCursor$6] = mouseCursor;
    this[S$.fillColor$5] = fillColor;
    this[S$.checkColor] = checkColor;
    this[S$.overlayColor$5] = overlayColor;
    this[S$.splashRadius$3] = splashRadius;
    this[S$.materialTapTargetSize$3] = materialTapTargetSize;
    this[S$.visualDensity$4] = visualDensity;
    this[S$.shape$8] = shape;
    this[S$.side$2] = side;
    ;
  }).prototype = checkbox_theme.CheckboxThemeData.prototype;
  dart.addTypeTests(checkbox_theme.CheckboxThemeData);
  dart.addTypeCaches(checkbox_theme.CheckboxThemeData);
  dart.setMethodSignature(checkbox_theme.CheckboxThemeData, () => ({
    __proto__: dart.getMethods(checkbox_theme.CheckboxThemeData.__proto__),
    copyWith: dart.fnType(checkbox_theme.CheckboxThemeData, [], {checkColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), fillColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), materialTapTargetSize: dart.nullable(theme_data.MaterialTapTargetSize), mouseCursor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor))), overlayColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), shape: dart.nullable(borders.OutlinedBorder), side: dart.nullable(borders.BorderSide), splashRadius: dart.nullable(core.double), visualDensity: dart.nullable(theme_data.VisualDensity)}, {})
  }));
  dart.setLibraryUri(checkbox_theme.CheckboxThemeData, I[73]);
  dart.setFieldSignature(checkbox_theme.CheckboxThemeData, () => ({
    __proto__: dart.getFields(checkbox_theme.CheckboxThemeData.__proto__),
    mouseCursor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor)))),
    fillColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    checkColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    overlayColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    splashRadius: dart.finalFieldType(dart.nullable(core.double)),
    materialTapTargetSize: dart.finalFieldType(dart.nullable(theme_data.MaterialTapTargetSize)),
    visualDensity: dart.finalFieldType(dart.nullable(theme_data.VisualDensity)),
    shape: dart.finalFieldType(dart.nullable(borders.OutlinedBorder)),
    side: dart.finalFieldType(dart.nullable(borders.BorderSide))
  }));
  dart.defineExtensionMethods(checkbox_theme.CheckboxThemeData, ['_equals']);
  dart.defineExtensionAccessors(checkbox_theme.CheckboxThemeData, ['hashCode']);
  const _is__LerpProperties_default$3 = Symbol('_is__LerpProperties_default');
  checkbox_theme._LerpProperties$ = dart.generic(T => {
    class _LerpProperties extends core.Object {
      get a() {
        return this[S$.a$7];
      }
      set a(value) {
        super.a = value;
      }
      get b() {
        return this[S$.b$7];
      }
      set b(value) {
        super.b = value;
      }
      get t() {
        return this[S$.t$7];
      }
      set t(value) {
        super.t = value;
      }
      get lerpFunction() {
        return this[S$.lerpFunction$5];
      }
      set lerpFunction(value) {
        super.lerpFunction = value;
      }
      resolve(states) {
        let t31, t31$, t33, t32, t31$0;
        if (states == null) dart.nullFailed(I[72], 219, 32, "states");
        let resolvedA = (t31 = this.a, t31 == null ? null : t31.resolve(states));
        let resolvedB = (t31$ = this.b, t31$ == null ? null : t31$.resolve(states));
        t31$0 = resolvedA;
        t32 = resolvedB;
        t33 = this.t;
        return this.lerpFunction(t31$0, t32, t33);
      }
    }
    (_LerpProperties.new = function(a, b, t, lerpFunction) {
      if (t == null) dart.nullFailed(I[72], 211, 46, "t");
      if (lerpFunction == null) dart.nullFailed(I[72], 211, 54, "lerpFunction");
      this[S$.a$7] = a;
      this[S$.b$7] = b;
      this[S$.t$7] = t;
      this[S$.lerpFunction$5] = lerpFunction;
      ;
    }).prototype = _LerpProperties.prototype;
    dart.addTypeTests(_LerpProperties);
    _LerpProperties.prototype[_is__LerpProperties_default$3] = true;
    dart.addTypeCaches(_LerpProperties);
    _LerpProperties[dart.implements] = () => [material_state.MaterialStateProperty$(T)];
    dart.setMethodSignature(_LerpProperties, () => ({
      __proto__: dart.getMethods(_LerpProperties.__proto__),
      resolve: dart.fnType(T, [core.Set$(material_state.MaterialState)])
    }));
    dart.setLibraryUri(_LerpProperties, I[73]);
    dart.setFieldSignature(_LerpProperties, () => ({
      __proto__: dart.getFields(_LerpProperties.__proto__),
      a: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(T))),
      b: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(T))),
      t: dart.finalFieldType(core.double),
      lerpFunction: dart.finalFieldType(dart.fnType(T, [dart.nullable(T), dart.nullable(T), core.double]))
    }));
    return _LerpProperties;
  });
  checkbox_theme._LerpProperties = checkbox_theme._LerpProperties$();
  dart.addTypeTests(checkbox_theme._LerpProperties, _is__LerpProperties_default$3);
  checkbox_theme.CheckboxTheme = class CheckboxTheme extends framework.InheritedWidget {
    get data() {
      return this[S$.data$15];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t31, t31$;
      if (context == null) dart.nullFailed(I[72], 259, 44, "context");
      let checkboxTheme = context.dependOnInheritedWidgetOfExactType(checkbox_theme.CheckboxTheme);
      t31$ = (t31 = checkboxTheme, t31 == null ? null : t31.data);
      return t31$ == null ? theme$.Theme.of(context).checkboxTheme : t31$;
    }
    updateShouldNotify(oldWidget) {
      checkbox_theme.CheckboxTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[72], 265, 41, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (checkbox_theme.CheckboxTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[72], 244, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[72], 245, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.data$15] = data;
    checkbox_theme.CheckboxTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = checkbox_theme.CheckboxTheme.prototype;
  dart.addTypeTests(checkbox_theme.CheckboxTheme);
  dart.addTypeCaches(checkbox_theme.CheckboxTheme);
  dart.setMethodSignature(checkbox_theme.CheckboxTheme, () => ({
    __proto__: dart.getMethods(checkbox_theme.CheckboxTheme.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(checkbox_theme.CheckboxTheme, I[73]);
  dart.setFieldSignature(checkbox_theme.CheckboxTheme, () => ({
    __proto__: dart.getFields(checkbox_theme.CheckboxTheme.__proto__),
    data: dart.finalFieldType(checkbox_theme.CheckboxThemeData)
  }));
  const Object_Diagnosticable$36$20 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$20.new = function() {
  }).prototype = Object_Diagnosticable$36$20.prototype;
  dart.applyMixin(Object_Diagnosticable$36$20, diagnostics.Diagnosticable);
  card_theme.CardTheme = class CardTheme extends Object_Diagnosticable$36$20 {
    get clipBehavior() {
      return this[S$.clipBehavior$2];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get color() {
      return this[S$.color$7];
    }
    set color(value) {
      super.color = value;
    }
    get shadowColor() {
      return this[S$.shadowColor$2];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get elevation() {
      return this[S$.elevation$11];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get margin() {
      return this[S$.margin$1];
    }
    set margin(value) {
      super.margin = value;
    }
    get shape() {
      return this[S$.shape$9];
    }
    set shape(value) {
      super.shape = value;
    }
    copyWith(opts) {
      let t31, t31$, t31$0, t31$1, t31$2, t31$3;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let margin = opts && 'margin' in opts ? opts.margin : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      return new card_theme.CardTheme.new({clipBehavior: (t31 = clipBehavior, t31 == null ? this.clipBehavior : t31), color: (t31$ = color, t31$ == null ? this.color : t31$), shadowColor: (t31$0 = shadowColor, t31$0 == null ? this.shadowColor : t31$0), elevation: (t31$1 = elevation, t31$1 == null ? this.elevation : t31$1), margin: (t31$2 = margin, t31$2 == null ? this.margin : t31$2), shape: (t31$3 = shape, t31$3 == null ? this.shape : t31$3)});
    }
    static of(context) {
      if (context == null) dart.nullFailed(I[74], 97, 36, "context");
      return theme$.Theme.of(context).cardTheme;
    }
    static lerp(a, b, t) {
      let t31, t31$, t31$0, t31$1, t31$2, t31$3, t31$4, t31$5, t31$6, t31$7, t31$8, t31$9;
      if (t == null) dart.nullFailed(I[74], 106, 60, "t");
      if (!(t != null)) dart.assertFailed(null, I[74], 107, 12, "t != null");
      return new card_theme.CardTheme.new({clipBehavior: dart.notNull(t) < 0.5 ? (t31 = a, t31 == null ? null : t31.clipBehavior) : (t31$ = b, t31$ == null ? null : t31$.clipBehavior), color: ui.Color.lerp((t31$0 = a, t31$0 == null ? null : t31$0.color), (t31$1 = b, t31$1 == null ? null : t31$1.color), t), shadowColor: ui.Color.lerp((t31$2 = a, t31$2 == null ? null : t31$2.shadowColor), (t31$3 = b, t31$3 == null ? null : t31$3.shadowColor), t), elevation: ui.lerpDouble((t31$4 = a, t31$4 == null ? null : t31$4.elevation), (t31$5 = b, t31$5 == null ? null : t31$5.elevation), t), margin: edge_insets.EdgeInsetsGeometry.lerp((t31$6 = a, t31$6 == null ? null : t31$6.margin), (t31$7 = b, t31$7 == null ? null : t31$7.margin), t), shape: borders.ShapeBorder.lerp((t31$8 = a, t31$8 == null ? null : t31$8.shape), (t31$9 = b, t31$9 == null ? null : t31$9.shape), t)});
    }
    get hashCode() {
      return ui.hashValues(this.clipBehavior, this.color, this.shadowColor, this.elevation, this.margin, this.shape);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return card_theme.CardTheme.is(other) && other.clipBehavior == this.clipBehavior && dart.equals(other.color, this.color) && dart.equals(other.shadowColor, this.shadowColor) && other.elevation == this.elevation && dart.equals(other.margin, this.margin) && dart.equals(other.shape, this.shape);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[74], 146, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfClip()).new("clipBehavior", this.clipBehavior, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("shadowColor", this.shadowColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfdouble()).new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("margin", this.margin, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape, {defaultValue: null}));
    }
  };
  (card_theme.CardTheme.new = function(opts) {
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let margin = opts && 'margin' in opts ? opts.margin : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    this[S$.clipBehavior$2] = clipBehavior;
    this[S$.color$7] = color;
    this[S$.shadowColor$2] = shadowColor;
    this[S$.elevation$11] = elevation;
    this[S$.margin$1] = margin;
    this[S$.shape$9] = shape;
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[74], 42, 15, "elevation == null || elevation >= 0.0");
    ;
  }).prototype = card_theme.CardTheme.prototype;
  dart.addTypeTests(card_theme.CardTheme);
  dart.addTypeCaches(card_theme.CardTheme);
  dart.setMethodSignature(card_theme.CardTheme, () => ({
    __proto__: dart.getMethods(card_theme.CardTheme.__proto__),
    copyWith: dart.fnType(card_theme.CardTheme, [], {clipBehavior: dart.nullable(ui.Clip), color: dart.nullable(ui.Color), elevation: dart.nullable(core.double), margin: dart.nullable(edge_insets.EdgeInsetsGeometry), shadowColor: dart.nullable(ui.Color), shape: dart.nullable(borders.ShapeBorder)}, {})
  }));
  dart.setLibraryUri(card_theme.CardTheme, I[75]);
  dart.setFieldSignature(card_theme.CardTheme, () => ({
    __proto__: dart.getFields(card_theme.CardTheme.__proto__),
    clipBehavior: dart.finalFieldType(dart.nullable(ui.Clip)),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    shadowColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    margin: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder))
  }));
  dart.defineExtensionMethods(card_theme.CardTheme, ['_equals']);
  dart.defineExtensionAccessors(card_theme.CardTheme, ['hashCode']);
  material_button.MaterialButton = class MaterialButton extends framework.StatelessWidget {
    get onPressed() {
      return this[S$.onPressed$6];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    get onLongPress() {
      return this[S$.onLongPress$1];
    }
    set onLongPress(value) {
      super.onLongPress = value;
    }
    get onHighlightChanged() {
      return this[S$.onHighlightChanged];
    }
    set onHighlightChanged(value) {
      super.onHighlightChanged = value;
    }
    get mouseCursor() {
      return this[S$.mouseCursor$7];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get textTheme() {
      return this[S$.textTheme];
    }
    set textTheme(value) {
      super.textTheme = value;
    }
    get textColor() {
      return this[S$.textColor$1];
    }
    set textColor(value) {
      super.textColor = value;
    }
    get disabledTextColor() {
      return this[S$.disabledTextColor$1];
    }
    set disabledTextColor(value) {
      super.disabledTextColor = value;
    }
    get color() {
      return this[S$.color$8];
    }
    set color(value) {
      super.color = value;
    }
    get disabledColor() {
      return this[S$.disabledColor$3];
    }
    set disabledColor(value) {
      super.disabledColor = value;
    }
    get splashColor() {
      return this[S$.splashColor$3];
    }
    set splashColor(value) {
      super.splashColor = value;
    }
    get focusColor() {
      return this[S$.focusColor$5];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[S$.hoverColor$6];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get highlightColor() {
      return this[S$.highlightColor$2];
    }
    set highlightColor(value) {
      super.highlightColor = value;
    }
    get elevation() {
      return this[S$.elevation$12];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get hoverElevation() {
      return this[S$.hoverElevation$1];
    }
    set hoverElevation(value) {
      super.hoverElevation = value;
    }
    get focusElevation() {
      return this[S$.focusElevation$1];
    }
    set focusElevation(value) {
      super.focusElevation = value;
    }
    get highlightElevation() {
      return this[S$.highlightElevation$1];
    }
    set highlightElevation(value) {
      super.highlightElevation = value;
    }
    get disabledElevation() {
      return this[S$.disabledElevation$1];
    }
    set disabledElevation(value) {
      super.disabledElevation = value;
    }
    get colorBrightness() {
      return this[S$.colorBrightness];
    }
    set colorBrightness(value) {
      super.colorBrightness = value;
    }
    get child() {
      return this[S$.child$12];
    }
    set child(value) {
      super.child = value;
    }
    get padding() {
      return this[S$.padding$6];
    }
    set padding(value) {
      super.padding = value;
    }
    get visualDensity() {
      return this[S$.visualDensity$5];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get shape() {
      return this[S$.shape$10];
    }
    set shape(value) {
      super.shape = value;
    }
    get clipBehavior() {
      return this[S$.clipBehavior$3];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get focusNode() {
      return this[S$.focusNode$3];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get autofocus() {
      return this[S$.autofocus$3];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get animationDuration() {
      return this[S$.animationDuration$1];
    }
    set animationDuration(value) {
      super.animationDuration = value;
    }
    get materialTapTargetSize() {
      return this[S$.materialTapTargetSize$4];
    }
    set materialTapTargetSize(value) {
      super.materialTapTargetSize = value;
    }
    get minWidth() {
      return this[S$.minWidth$1];
    }
    set minWidth(value) {
      super.minWidth = value;
    }
    get height() {
      return this[S$.height$1];
    }
    set height(value) {
      super.height = value;
    }
    get enableFeedback() {
      return this[S$.enableFeedback$5];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get enabled() {
      return this.onPressed != null || this.onLongPress != null;
    }
    build(context) {
      let t31, t31$, t31$0, t31$1, t31$2, t31$3, t31$4;
      if (context == null) dart.nullFailed(I[77], 399, 29, "context");
      let theme = theme$.Theme.of(context);
      let buttonTheme = button_theme.ButtonTheme.of(context);
      return new button.RawMaterialButton.new({onPressed: this.onPressed, onLongPress: this.onLongPress, enableFeedback: this.enableFeedback, onHighlightChanged: this.onHighlightChanged, mouseCursor: this.mouseCursor, fillColor: buttonTheme.getFillColor(this), textStyle: dart.nullCheck(theme.textTheme.button).copyWith({color: buttonTheme.getTextColor(this)}), focusColor: (t31 = this.focusColor, t31 == null ? buttonTheme.getFocusColor(this) : t31), hoverColor: (t31$ = this.hoverColor, t31$ == null ? buttonTheme.getHoverColor(this) : t31$), highlightColor: (t31$0 = this.highlightColor, t31$0 == null ? theme.highlightColor : t31$0), splashColor: (t31$1 = this.splashColor, t31$1 == null ? theme.splashColor : t31$1), elevation: buttonTheme.getElevation(this), focusElevation: buttonTheme.getFocusElevation(this), hoverElevation: buttonTheme.getHoverElevation(this), highlightElevation: buttonTheme.getHighlightElevation(this), padding: buttonTheme.getPadding(this), visualDensity: (t31$2 = this.visualDensity, t31$2 == null ? theme.visualDensity : t31$2), constraints: buttonTheme.getConstraints(this).copyWith({minWidth: this.minWidth, minHeight: this.height}), shape: buttonTheme.getShape(this), clipBehavior: this.clipBehavior, focusNode: this.focusNode, autofocus: this.autofocus, animationDuration: buttonTheme.getAnimationDuration(this), materialTapTargetSize: (t31$3 = this.materialTapTargetSize, t31$3 == null ? theme.materialTapTargetSize : t31$3), disabledElevation: (t31$4 = this.disabledElevation, t31$4 == null ? 0.0 : t31$4), child: this.child, $creationLocationd_0dea112b090073317d4: C[445] || CT.C445});
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[77], 437, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new diagnostics.FlagProperty.new("enabled", {value: this.enabled, ifFalse: "disabled"}));
      properties.add(new (T$.DiagnosticsPropertyOfButtonTextTheme()).new("textTheme", this.textTheme, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("textColor", this.textColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("disabledTextColor", this.disabledTextColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("disabledColor", this.disabledColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("focusColor", this.focusColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("hoverColor", this.hoverColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("highlightColor", this.highlightColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("splashColor", this.splashColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfBrightness()).new("colorBrightness", this.colorBrightness, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfVisualDensity()).new("visualDensity", this.visualDensity, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfFocusNode()).new("focusNode", this.focusNode, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialTapTargetSize()).new("materialTapTargetSize", this.materialTapTargetSize, {defaultValue: null}));
    }
  };
  (material_button.MaterialButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let disabledTextColor = opts && 'disabledTextColor' in opts ? opts.disabledTextColor : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let colorBrightness = opts && 'colorBrightness' in opts ? opts.colorBrightness : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let focusElevation = opts && 'focusElevation' in opts ? opts.focusElevation : null;
    let hoverElevation = opts && 'hoverElevation' in opts ? opts.hoverElevation : null;
    let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : null;
    let disabledElevation = opts && 'disabledElevation' in opts ? opts.disabledElevation : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[59] || CT.C59;
    if (clipBehavior == null) dart.nullFailed(I[77], 89, 10, "clipBehavior");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[77], 91, 10, "autofocus");
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : null;
    let minWidth = opts && 'minWidth' in opts ? opts.minWidth : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : true;
    if (enableFeedback == null) dart.nullFailed(I[77], 96, 10, "enableFeedback");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.onPressed$6] = onPressed;
    this[S$.onLongPress$1] = onLongPress;
    this[S$.onHighlightChanged] = onHighlightChanged;
    this[S$.mouseCursor$7] = mouseCursor;
    this[S$.textTheme] = textTheme;
    this[S$.textColor$1] = textColor;
    this[S$.disabledTextColor$1] = disabledTextColor;
    this[S$.color$8] = color;
    this[S$.disabledColor$3] = disabledColor;
    this[S$.focusColor$5] = focusColor;
    this[S$.hoverColor$6] = hoverColor;
    this[S$.highlightColor$2] = highlightColor;
    this[S$.splashColor$3] = splashColor;
    this[S$.colorBrightness] = colorBrightness;
    this[S$.elevation$12] = elevation;
    this[S$.focusElevation$1] = focusElevation;
    this[S$.hoverElevation$1] = hoverElevation;
    this[S$.highlightElevation$1] = highlightElevation;
    this[S$.disabledElevation$1] = disabledElevation;
    this[S$.padding$6] = padding;
    this[S$.visualDensity$5] = visualDensity;
    this[S$.shape$10] = shape;
    this[S$.clipBehavior$3] = clipBehavior;
    this[S$.focusNode$3] = focusNode;
    this[S$.autofocus$3] = autofocus;
    this[S$.materialTapTargetSize$4] = materialTapTargetSize;
    this[S$.animationDuration$1] = animationDuration;
    this[S$.minWidth$1] = minWidth;
    this[S$.height$1] = height;
    this[S$.enableFeedback$5] = enableFeedback;
    this[S$.child$12] = child;
    if (!(clipBehavior != null)) dart.assertFailed(null, I[77], 98, 15, "clipBehavior != null");
    if (!(autofocus != null)) dart.assertFailed(null, I[77], 99, 15, "autofocus != null");
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[77], 100, 15, "elevation == null || elevation >= 0.0");
    if (!(focusElevation == null || dart.notNull(focusElevation) >= 0.0)) dart.assertFailed(null, I[77], 101, 15, "focusElevation == null || focusElevation >= 0.0");
    if (!(hoverElevation == null || dart.notNull(hoverElevation) >= 0.0)) dart.assertFailed(null, I[77], 102, 15, "hoverElevation == null || hoverElevation >= 0.0");
    if (!(highlightElevation == null || dart.notNull(highlightElevation) >= 0.0)) dart.assertFailed(null, I[77], 103, 15, "highlightElevation == null || highlightElevation >= 0.0");
    if (!(disabledElevation == null || dart.notNull(disabledElevation) >= 0.0)) dart.assertFailed(null, I[77], 104, 15, "disabledElevation == null || disabledElevation >= 0.0");
    material_button.MaterialButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = material_button.MaterialButton.prototype;
  dart.addTypeTests(material_button.MaterialButton);
  dart.addTypeCaches(material_button.MaterialButton);
  dart.setMethodSignature(material_button.MaterialButton, () => ({
    __proto__: dart.getMethods(material_button.MaterialButton.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(material_button.MaterialButton, () => ({
    __proto__: dart.getGetters(material_button.MaterialButton.__proto__),
    enabled: core.bool
  }));
  dart.setLibraryUri(material_button.MaterialButton, I[78]);
  dart.setFieldSignature(material_button.MaterialButton, () => ({
    __proto__: dart.getFields(material_button.MaterialButton.__proto__),
    onPressed: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onLongPress: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onHighlightChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    mouseCursor: dart.finalFieldType(dart.nullable(mouse_cursor.MouseCursor)),
    textTheme: dart.finalFieldType(dart.nullable(button_theme.ButtonTextTheme)),
    textColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledTextColor: dart.finalFieldType(dart.nullable(ui.Color)),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledColor: dart.finalFieldType(dart.nullable(ui.Color)),
    splashColor: dart.finalFieldType(dart.nullable(ui.Color)),
    focusColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hoverColor: dart.finalFieldType(dart.nullable(ui.Color)),
    highlightColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    hoverElevation: dart.finalFieldType(dart.nullable(core.double)),
    focusElevation: dart.finalFieldType(dart.nullable(core.double)),
    highlightElevation: dart.finalFieldType(dart.nullable(core.double)),
    disabledElevation: dart.finalFieldType(dart.nullable(core.double)),
    colorBrightness: dart.finalFieldType(dart.nullable(ui.Brightness)),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    visualDensity: dart.finalFieldType(dart.nullable(theme_data.VisualDensity)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    clipBehavior: dart.finalFieldType(ui.Clip),
    focusNode: dart.finalFieldType(dart.nullable(focus_manager.FocusNode)),
    autofocus: dart.finalFieldType(core.bool),
    animationDuration: dart.finalFieldType(dart.nullable(core.Duration)),
    materialTapTargetSize: dart.finalFieldType(dart.nullable(theme_data.MaterialTapTargetSize)),
    minWidth: dart.finalFieldType(dart.nullable(core.double)),
    height: dart.finalFieldType(dart.nullable(core.double)),
    enableFeedback: dart.finalFieldType(core.bool)
  }));
  raised_button.RaisedButton = class RaisedButton extends material_button.MaterialButton {
    build(context) {
      let t31;
      if (context == null) dart.nullFailed(I[76], 154, 29, "context");
      let theme = theme$.Theme.of(context);
      let buttonTheme = button_theme.ButtonTheme.of(context);
      return new button.RawMaterialButton.new({onPressed: this.onPressed, onLongPress: this.onLongPress, onHighlightChanged: this.onHighlightChanged, mouseCursor: this.mouseCursor, clipBehavior: this.clipBehavior, fillColor: buttonTheme.getFillColor(this), textStyle: dart.nullCheck(theme.textTheme.button).copyWith({color: buttonTheme.getTextColor(this)}), focusColor: buttonTheme.getFocusColor(this), hoverColor: buttonTheme.getHoverColor(this), highlightColor: buttonTheme.getHighlightColor(this), splashColor: buttonTheme.getSplashColor(this), elevation: buttonTheme.getElevation(this), focusElevation: buttonTheme.getFocusElevation(this), hoverElevation: buttonTheme.getHoverElevation(this), highlightElevation: buttonTheme.getHighlightElevation(this), disabledElevation: buttonTheme.getDisabledElevation(this), padding: buttonTheme.getPadding(this), visualDensity: (t31 = this.visualDensity, t31 == null ? theme.visualDensity : t31), constraints: buttonTheme.getConstraints(this), shape: buttonTheme.getShape(this), focusNode: this.focusNode, autofocus: this.autofocus, animationDuration: buttonTheme.getAnimationDuration(this), materialTapTargetSize: buttonTheme.getMaterialTapTargetSize(this), child: this.child, $creationLocationd_0dea112b090073317d4: C[444] || CT.C444});
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[76], 187, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfdouble()).new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfdouble()).new("focusElevation", this.focusElevation, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfdouble()).new("hoverElevation", this.hoverElevation, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfdouble()).new("highlightElevation", this.highlightElevation, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfdouble()).new("disabledElevation", this.disabledElevation, {defaultValue: null}));
    }
  };
  (raised_button.RaisedButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let disabledTextColor = opts && 'disabledTextColor' in opts ? opts.disabledTextColor : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let colorBrightness = opts && 'colorBrightness' in opts ? opts.colorBrightness : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let focusElevation = opts && 'focusElevation' in opts ? opts.focusElevation : null;
    let hoverElevation = opts && 'hoverElevation' in opts ? opts.hoverElevation : null;
    let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : null;
    let disabledElevation = opts && 'disabledElevation' in opts ? opts.disabledElevation : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[59] || CT.C59;
    if (clipBehavior == null) dart.nullFailed(I[76], 66, 10, "clipBehavior");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[76], 68, 10, "autofocus");
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(autofocus != null)) dart.assertFailed(null, I[76], 72, 15, "autofocus != null");
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[76], 73, 15, "elevation == null || elevation >= 0.0");
    if (!(focusElevation == null || dart.notNull(focusElevation) >= 0.0)) dart.assertFailed(null, I[76], 74, 15, "focusElevation == null || focusElevation >= 0.0");
    if (!(hoverElevation == null || dart.notNull(hoverElevation) >= 0.0)) dart.assertFailed(null, I[76], 75, 15, "hoverElevation == null || hoverElevation >= 0.0");
    if (!(highlightElevation == null || dart.notNull(highlightElevation) >= 0.0)) dart.assertFailed(null, I[76], 76, 15, "highlightElevation == null || highlightElevation >= 0.0");
    if (!(disabledElevation == null || dart.notNull(disabledElevation) >= 0.0)) dart.assertFailed(null, I[76], 77, 15, "disabledElevation == null || disabledElevation >= 0.0");
    if (!(clipBehavior != null)) dart.assertFailed(null, I[76], 78, 15, "clipBehavior != null");
    raised_button.RaisedButton.__proto__.new.call(this, {key: key, onPressed: onPressed, onLongPress: onLongPress, onHighlightChanged: onHighlightChanged, mouseCursor: mouseCursor, textTheme: textTheme, textColor: textColor, disabledTextColor: disabledTextColor, color: color, disabledColor: disabledColor, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, splashColor: splashColor, colorBrightness: colorBrightness, elevation: elevation, focusElevation: focusElevation, hoverElevation: hoverElevation, highlightElevation: highlightElevation, disabledElevation: disabledElevation, padding: padding, visualDensity: visualDensity, shape: shape, clipBehavior: clipBehavior, focusNode: focusNode, autofocus: autofocus, materialTapTargetSize: materialTapTargetSize, animationDuration: animationDuration, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = raised_button.RaisedButton.prototype;
  dart.addTypeTests(raised_button.RaisedButton);
  dart.addTypeCaches(raised_button.RaisedButton);
  dart.setLibraryUri(raised_button.RaisedButton, I[79]);
  material_button.MaterialButtonWithIconMixin = class MaterialButtonWithIconMixin extends core.Object {};
  material_button.MaterialButtonWithIconMixin[dart.mixinOn] = Object => class MaterialButtonWithIconMixin extends Object {};
  (material_button.MaterialButtonWithIconMixin[dart.mixinNew] = function() {
  }).prototype = material_button.MaterialButtonWithIconMixin.prototype;
  dart.addTypeTests(material_button.MaterialButtonWithIconMixin);
  dart.addTypeCaches(material_button.MaterialButtonWithIconMixin);
  material_button.MaterialButtonWithIconMixin[dart.implements] = () => [core.Object];
  dart.setLibraryUri(material_button.MaterialButtonWithIconMixin, I[78]);
  const RaisedButton_MaterialButtonWithIconMixin$36 = class RaisedButton_MaterialButtonWithIconMixin extends raised_button.RaisedButton {};
  (RaisedButton_MaterialButtonWithIconMixin$36.new = function(opts) {
    RaisedButton_MaterialButtonWithIconMixin$36.__proto__.new.call(this, opts);
  }).prototype = RaisedButton_MaterialButtonWithIconMixin$36.prototype;
  dart.applyMixin(RaisedButton_MaterialButtonWithIconMixin$36, material_button.MaterialButtonWithIconMixin);
  raised_button._RaisedButtonWithIcon = class _RaisedButtonWithIcon extends RaisedButton_MaterialButtonWithIconMixin$36 {};
  (raised_button._RaisedButtonWithIcon.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let disabledTextColor = opts && 'disabledTextColor' in opts ? opts.disabledTextColor : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let colorBrightness = opts && 'colorBrightness' in opts ? opts.colorBrightness : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : null;
    let disabledElevation = opts && 'disabledElevation' in opts ? opts.disabledElevation : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[59] || CT.C59;
    if (clipBehavior == null) dart.nullFailed(I[76], 222, 10, "clipBehavior");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[76], 224, 10, "autofocus");
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    if (icon == null) dart.nullFailed(I[76], 228, 21, "icon");
    let label = opts && 'label' in opts ? opts.label : null;
    if (label == null) dart.nullFailed(I[76], 229, 21, "label");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[76], 230, 15, "elevation == null || elevation >= 0.0");
    if (!(highlightElevation == null || dart.notNull(highlightElevation) >= 0.0)) dart.assertFailed(null, I[76], 231, 15, "highlightElevation == null || highlightElevation >= 0.0");
    if (!(disabledElevation == null || dart.notNull(disabledElevation) >= 0.0)) dart.assertFailed(null, I[76], 232, 15, "disabledElevation == null || disabledElevation >= 0.0");
    if (!(clipBehavior != null)) dart.assertFailed(null, I[76], 233, 15, "clipBehavior != null");
    if (!(icon != null)) dart.assertFailed(null, I[76], 234, 15, "icon != null");
    if (!(label != null)) dart.assertFailed(null, I[76], 235, 15, "label != null");
    if (!(autofocus != null)) dart.assertFailed(null, I[76], 236, 15, "autofocus != null");
    raised_button._RaisedButtonWithIcon.__proto__.new.call(this, {key: key, onPressed: onPressed, onLongPress: onLongPress, onHighlightChanged: onHighlightChanged, mouseCursor: mouseCursor, textTheme: textTheme, textColor: textColor, disabledTextColor: disabledTextColor, color: color, disabledColor: disabledColor, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, splashColor: splashColor, colorBrightness: colorBrightness, elevation: elevation, highlightElevation: highlightElevation, disabledElevation: disabledElevation, shape: shape, clipBehavior: clipBehavior, focusNode: focusNode, autofocus: autofocus, padding: padding, materialTapTargetSize: materialTapTargetSize, animationDuration: animationDuration, child: new basic.Row.new({mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([icon, C[446] || CT.C446, label]), $creationLocationd_0dea112b090073317d4: C[448] || CT.C448}), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = raised_button._RaisedButtonWithIcon.prototype;
  dart.addTypeTests(raised_button._RaisedButtonWithIcon);
  dart.addTypeCaches(raised_button._RaisedButtonWithIcon);
  dart.setLibraryUri(raised_button._RaisedButtonWithIcon, I[79]);
  outline_button.OutlineButton = class OutlineButton extends material_button.MaterialButton {
    get highlightedBorderColor() {
      return this[S$.highlightedBorderColor];
    }
    set highlightedBorderColor(value) {
      super.highlightedBorderColor = value;
    }
    get disabledBorderColor() {
      return this[S$.disabledBorderColor$1];
    }
    set disabledBorderColor(value) {
      super.disabledBorderColor = value;
    }
    get borderSide() {
      return this[S$.borderSide];
    }
    set borderSide(value) {
      super.borderSide = value;
    }
    build(context) {
      let t31;
      if (context == null) dart.nullFailed(I[80], 173, 29, "context");
      let buttonTheme = button_theme.ButtonTheme.of(context);
      return new outline_button._OutlineButton.new({autofocus: this.autofocus, onPressed: this.onPressed, onLongPress: this.onLongPress, mouseCursor: this.mouseCursor, brightness: buttonTheme.getBrightness(this), textTheme: this.textTheme, textColor: buttonTheme.getTextColor(this), disabledTextColor: buttonTheme.getDisabledTextColor(this), color: this.color, focusColor: buttonTheme.getFocusColor(this), hoverColor: buttonTheme.getHoverColor(this), highlightColor: buttonTheme.getHighlightColor(this), splashColor: buttonTheme.getSplashColor(this), highlightElevation: buttonTheme.getHighlightElevation(this), borderSide: this.borderSide, disabledBorderColor: this.disabledBorderColor, highlightedBorderColor: (t31 = this.highlightedBorderColor, t31 == null ? dart.nullCheck(buttonTheme.colorScheme).primary : t31), padding: buttonTheme.getPadding(this), visualDensity: this.visualDensity, shape: buttonTheme.getShape(this), clipBehavior: this.clipBehavior, focusNode: this.focusNode, materialTapTargetSize: this.materialTapTargetSize, child: this.child, $creationLocationd_0dea112b090073317d4: C[449] || CT.C449});
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[80], 204, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfBorderSide()).new("borderSide", this.borderSide, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("disabledBorderColor", this.disabledBorderColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("highlightedBorderColor", this.highlightedBorderColor, {defaultValue: null}));
    }
  };
  (outline_button.OutlineButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let disabledTextColor = opts && 'disabledTextColor' in opts ? opts.disabledTextColor : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : null;
    let borderSide = opts && 'borderSide' in opts ? opts.borderSide : null;
    let disabledBorderColor = opts && 'disabledBorderColor' in opts ? opts.disabledBorderColor : null;
    let highlightedBorderColor = opts && 'highlightedBorderColor' in opts ? opts.highlightedBorderColor : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[59] || CT.C59;
    if (clipBehavior == null) dart.nullFailed(I[80], 70, 10, "clipBehavior");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[80], 72, 10, "autofocus");
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.borderSide] = borderSide;
    this[S$.disabledBorderColor$1] = disabledBorderColor;
    this[S$.highlightedBorderColor] = highlightedBorderColor;
    if (!(highlightElevation == null || dart.notNull(highlightElevation) >= 0.0)) dart.assertFailed(null, I[80], 75, 15, "highlightElevation == null || highlightElevation >= 0.0");
    if (!(clipBehavior != null)) dart.assertFailed(null, I[80], 76, 15, "clipBehavior != null");
    if (!(autofocus != null)) dart.assertFailed(null, I[80], 77, 15, "autofocus != null");
    outline_button.OutlineButton.__proto__.new.call(this, {key: key, onPressed: onPressed, onLongPress: onLongPress, mouseCursor: mouseCursor, textTheme: textTheme, textColor: textColor, disabledTextColor: disabledTextColor, color: color, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, splashColor: splashColor, highlightElevation: highlightElevation, padding: padding, visualDensity: visualDensity, shape: shape, clipBehavior: clipBehavior, focusNode: focusNode, materialTapTargetSize: materialTapTargetSize, autofocus: autofocus, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = outline_button.OutlineButton.prototype;
  dart.addTypeTests(outline_button.OutlineButton);
  dart.addTypeCaches(outline_button.OutlineButton);
  dart.setLibraryUri(outline_button.OutlineButton, I[81]);
  dart.setFieldSignature(outline_button.OutlineButton, () => ({
    __proto__: dart.getFields(outline_button.OutlineButton.__proto__),
    highlightedBorderColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledBorderColor: dart.finalFieldType(dart.nullable(ui.Color)),
    borderSide: dart.finalFieldType(dart.nullable(borders.BorderSide))
  }));
  const OutlineButton_MaterialButtonWithIconMixin$36 = class OutlineButton_MaterialButtonWithIconMixin extends outline_button.OutlineButton {};
  (OutlineButton_MaterialButtonWithIconMixin$36.new = function(opts) {
    OutlineButton_MaterialButtonWithIconMixin$36.__proto__.new.call(this, opts);
  }).prototype = OutlineButton_MaterialButtonWithIconMixin$36.prototype;
  dart.applyMixin(OutlineButton_MaterialButtonWithIconMixin$36, material_button.MaterialButtonWithIconMixin);
  outline_button._OutlineButtonWithIcon = class _OutlineButtonWithIcon extends OutlineButton_MaterialButtonWithIconMixin$36 {};
  (outline_button._OutlineButtonWithIcon.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let disabledTextColor = opts && 'disabledTextColor' in opts ? opts.disabledTextColor : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : null;
    let highlightedBorderColor = opts && 'highlightedBorderColor' in opts ? opts.highlightedBorderColor : null;
    let disabledBorderColor = opts && 'disabledBorderColor' in opts ? opts.disabledBorderColor : null;
    let borderSide = opts && 'borderSide' in opts ? opts.borderSide : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[59] || CT.C59;
    if (clipBehavior == null) dart.nullFailed(I[80], 237, 10, "clipBehavior");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[80], 239, 10, "autofocus");
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    if (icon == null) dart.nullFailed(I[80], 241, 21, "icon");
    let label = opts && 'label' in opts ? opts.label : null;
    if (label == null) dart.nullFailed(I[80], 242, 21, "label");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(highlightElevation == null || dart.notNull(highlightElevation) >= 0.0)) dart.assertFailed(null, I[80], 243, 15, "highlightElevation == null || highlightElevation >= 0.0");
    if (!(clipBehavior != null)) dart.assertFailed(null, I[80], 244, 15, "clipBehavior != null");
    if (!(autofocus != null)) dart.assertFailed(null, I[80], 245, 15, "autofocus != null");
    if (!(icon != null)) dart.assertFailed(null, I[80], 246, 15, "icon != null");
    if (!(label != null)) dart.assertFailed(null, I[80], 247, 15, "label != null");
    outline_button._OutlineButtonWithIcon.__proto__.new.call(this, {key: key, onPressed: onPressed, onLongPress: onLongPress, mouseCursor: mouseCursor, textTheme: textTheme, textColor: textColor, disabledTextColor: disabledTextColor, color: color, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, splashColor: splashColor, highlightElevation: highlightElevation, disabledBorderColor: disabledBorderColor, highlightedBorderColor: highlightedBorderColor, borderSide: borderSide, padding: padding, visualDensity: visualDensity, shape: shape, clipBehavior: clipBehavior, focusNode: focusNode, autofocus: autofocus, materialTapTargetSize: materialTapTargetSize, child: new basic.Row.new({mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([icon, C[450] || CT.C450, label]), $creationLocationd_0dea112b090073317d4: C[452] || CT.C452}), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = outline_button._OutlineButtonWithIcon.prototype;
  dart.addTypeTests(outline_button._OutlineButtonWithIcon);
  dart.addTypeCaches(outline_button._OutlineButtonWithIcon);
  dart.setLibraryUri(outline_button._OutlineButtonWithIcon, I[81]);
  outline_button._OutlineButton = class _OutlineButton extends framework.StatefulWidget {
    get onPressed() {
      return this[S$.onPressed$7];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    get onLongPress() {
      return this[S$.onLongPress$2];
    }
    set onLongPress(value) {
      super.onLongPress = value;
    }
    get mouseCursor() {
      return this[S$.mouseCursor$8];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get brightness() {
      return this[S$.brightness$1];
    }
    set brightness(value) {
      super.brightness = value;
    }
    get textTheme() {
      return this[S$.textTheme$1];
    }
    set textTheme(value) {
      super.textTheme = value;
    }
    get textColor() {
      return this[S$.textColor$2];
    }
    set textColor(value) {
      super.textColor = value;
    }
    get disabledTextColor() {
      return this[S$.disabledTextColor$2];
    }
    set disabledTextColor(value) {
      super.disabledTextColor = value;
    }
    get color() {
      return this[S$.color$9];
    }
    set color(value) {
      super.color = value;
    }
    get splashColor() {
      return this[S$.splashColor$4];
    }
    set splashColor(value) {
      super.splashColor = value;
    }
    get focusColor() {
      return this[S$.focusColor$6];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[S$.hoverColor$7];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get highlightColor() {
      return this[S$.highlightColor$3];
    }
    set highlightColor(value) {
      super.highlightColor = value;
    }
    get highlightElevation() {
      return this[S$.highlightElevation$2];
    }
    set highlightElevation(value) {
      super.highlightElevation = value;
    }
    get borderSide() {
      return this[S$.borderSide$1];
    }
    set borderSide(value) {
      super.borderSide = value;
    }
    get disabledBorderColor() {
      return this[S$.disabledBorderColor$2];
    }
    set disabledBorderColor(value) {
      super.disabledBorderColor = value;
    }
    get highlightedBorderColor() {
      return this[S$.highlightedBorderColor$1];
    }
    set highlightedBorderColor(value) {
      super.highlightedBorderColor = value;
    }
    get padding() {
      return this[S$.padding$7];
    }
    set padding(value) {
      super.padding = value;
    }
    get visualDensity() {
      return this[S$.visualDensity$6];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get shape() {
      return this[S$.shape$11];
    }
    set shape(value) {
      super.shape = value;
    }
    get clipBehavior() {
      return this[S$.clipBehavior$4];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get focusNode() {
      return this[S$.focusNode$4];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get autofocus() {
      return this[S$.autofocus$4];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get child() {
      return this[S$.child$13];
    }
    set child(value) {
      super.child = value;
    }
    get materialTapTargetSize() {
      return this[S$.materialTapTargetSize$5];
    }
    set materialTapTargetSize(value) {
      super.materialTapTargetSize = value;
    }
    get enabled() {
      return this.onPressed != null || this.onLongPress != null;
    }
    createState() {
      return new outline_button._OutlineButtonState.new();
    }
  };
  (outline_button._OutlineButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let brightness = opts && 'brightness' in opts ? opts.brightness : null;
    if (brightness == null) dart.nullFailed(I[80], 289, 19, "brightness");
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    if (textColor == null) dart.nullFailed(I[80], 291, 19, "textColor");
    let disabledTextColor = opts && 'disabledTextColor' in opts ? opts.disabledTextColor : null;
    if (disabledTextColor == null) dart.nullFailed(I[80], 292, 19, "disabledTextColor");
    let color = opts && 'color' in opts ? opts.color : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    if (focusColor == null) dart.nullFailed(I[80], 294, 19, "focusColor");
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    if (hoverColor == null) dart.nullFailed(I[80], 295, 19, "hoverColor");
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    if (highlightColor == null) dart.nullFailed(I[80], 296, 19, "highlightColor");
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    if (splashColor == null) dart.nullFailed(I[80], 297, 19, "splashColor");
    let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : null;
    if (highlightElevation == null) dart.nullFailed(I[80], 298, 19, "highlightElevation");
    let borderSide = opts && 'borderSide' in opts ? opts.borderSide : null;
    let disabledBorderColor = opts && 'disabledBorderColor' in opts ? opts.disabledBorderColor : null;
    let highlightedBorderColor = opts && 'highlightedBorderColor' in opts ? opts.highlightedBorderColor : null;
    if (highlightedBorderColor == null) dart.nullFailed(I[80], 301, 19, "highlightedBorderColor");
    let padding = opts && 'padding' in opts ? opts.padding : null;
    if (padding == null) dart.nullFailed(I[80], 302, 19, "padding");
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    if (shape == null) dart.nullFailed(I[80], 304, 19, "shape");
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[59] || CT.C59;
    if (clipBehavior == null) dart.nullFailed(I[80], 305, 10, "clipBehavior");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[80], 307, 10, "autofocus");
    let child = opts && 'child' in opts ? opts.child : null;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.onPressed$7] = onPressed;
    this[S$.onLongPress$2] = onLongPress;
    this[S$.mouseCursor$8] = mouseCursor;
    this[S$.brightness$1] = brightness;
    this[S$.textTheme$1] = textTheme;
    this[S$.textColor$2] = textColor;
    this[S$.disabledTextColor$2] = disabledTextColor;
    this[S$.color$9] = color;
    this[S$.focusColor$6] = focusColor;
    this[S$.hoverColor$7] = hoverColor;
    this[S$.highlightColor$3] = highlightColor;
    this[S$.splashColor$4] = splashColor;
    this[S$.highlightElevation$2] = highlightElevation;
    this[S$.borderSide$1] = borderSide;
    this[S$.disabledBorderColor$2] = disabledBorderColor;
    this[S$.highlightedBorderColor$1] = highlightedBorderColor;
    this[S$.padding$7] = padding;
    this[S$.visualDensity$6] = visualDensity;
    this[S$.shape$11] = shape;
    this[S$.clipBehavior$4] = clipBehavior;
    this[S$.focusNode$4] = focusNode;
    this[S$.autofocus$4] = autofocus;
    this[S$.child$13] = child;
    this[S$.materialTapTargetSize$5] = materialTapTargetSize;
    if (!(highlightElevation != null && dart.notNull(highlightElevation) >= 0.0)) dart.assertFailed(null, I[80], 310, 15, "highlightElevation != null && highlightElevation >= 0.0");
    if (!(highlightedBorderColor != null)) dart.assertFailed(null, I[80], 311, 15, "highlightedBorderColor != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, I[80], 312, 15, "clipBehavior != null");
    if (!(autofocus != null)) dart.assertFailed(null, I[80], 313, 15, "autofocus != null");
    outline_button._OutlineButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = outline_button._OutlineButton.prototype;
  dart.addTypeTests(outline_button._OutlineButton);
  dart.addTypeCaches(outline_button._OutlineButton);
  dart.setMethodSignature(outline_button._OutlineButton, () => ({
    __proto__: dart.getMethods(outline_button._OutlineButton.__proto__),
    createState: dart.fnType(outline_button._OutlineButtonState, [])
  }));
  dart.setGetterSignature(outline_button._OutlineButton, () => ({
    __proto__: dart.getGetters(outline_button._OutlineButton.__proto__),
    enabled: core.bool
  }));
  dart.setLibraryUri(outline_button._OutlineButton, I[81]);
  dart.setFieldSignature(outline_button._OutlineButton, () => ({
    __proto__: dart.getFields(outline_button._OutlineButton.__proto__),
    onPressed: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onLongPress: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    mouseCursor: dart.finalFieldType(dart.nullable(mouse_cursor.MouseCursor)),
    brightness: dart.finalFieldType(ui.Brightness),
    textTheme: dart.finalFieldType(dart.nullable(button_theme.ButtonTextTheme)),
    textColor: dart.finalFieldType(ui.Color),
    disabledTextColor: dart.finalFieldType(ui.Color),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    splashColor: dart.finalFieldType(ui.Color),
    focusColor: dart.finalFieldType(ui.Color),
    hoverColor: dart.finalFieldType(ui.Color),
    highlightColor: dart.finalFieldType(ui.Color),
    highlightElevation: dart.finalFieldType(core.double),
    borderSide: dart.finalFieldType(dart.nullable(borders.BorderSide)),
    disabledBorderColor: dart.finalFieldType(dart.nullable(ui.Color)),
    highlightedBorderColor: dart.finalFieldType(ui.Color),
    padding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
    visualDensity: dart.finalFieldType(dart.nullable(theme_data.VisualDensity)),
    shape: dart.finalFieldType(borders.ShapeBorder),
    clipBehavior: dart.finalFieldType(ui.Clip),
    focusNode: dart.finalFieldType(dart.nullable(focus_manager.FocusNode)),
    autofocus: dart.finalFieldType(core.bool),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    materialTapTargetSize: dart.finalFieldType(dart.nullable(theme_data.MaterialTapTargetSize))
  }));
  const State_SingleTickerProviderStateMixin$36$ = class State_SingleTickerProviderStateMixin extends framework.State$(outline_button._OutlineButton) {};
  (State_SingleTickerProviderStateMixin$36$.new = function() {
    ticker_provider.SingleTickerProviderStateMixin$(outline_button._OutlineButton)[dart.mixinNew].call(this);
    State_SingleTickerProviderStateMixin$36$.__proto__.new.call(this);
  }).prototype = State_SingleTickerProviderStateMixin$36$.prototype;
  dart.applyMixin(State_SingleTickerProviderStateMixin$36$, ticker_provider.SingleTickerProviderStateMixin$(outline_button._OutlineButton));
  outline_button._OutlineButtonState = class _OutlineButtonState extends State_SingleTickerProviderStateMixin$36$ {
    get [S$._controller$4]() {
      let t31;
      return dart.test(this[S$.___OutlineButtonState__controller_isSet]) ? (t31 = this[S$.___OutlineButtonState__controller], t31) : dart.throw(new _internal.LateError.fieldNI("_controller"));
    }
    set [S$._controller$4](t31) {
      if (t31 == null) dart.nullFailed(I[80], 349, 28, "null");
      this[S$.___OutlineButtonState__controller_isSet] = true;
      this[S$.___OutlineButtonState__controller] = t31;
    }
    get [S$._fillAnimation]() {
      let t32;
      return dart.test(this[S$.___OutlineButtonState__fillAnimation_isSet]) ? (t32 = this[S$.___OutlineButtonState__fillAnimation], t32) : dart.throw(new _internal.LateError.fieldNI("_fillAnimation"));
    }
    set [S$._fillAnimation](t32) {
      if (t32 == null) dart.nullFailed(I[80], 350, 26, "null");
      this[S$.___OutlineButtonState__fillAnimation_isSet] = true;
      this[S$.___OutlineButtonState__fillAnimation] = t32;
    }
    get [S$._elevationAnimation]() {
      let t33;
      return dart.test(this[S$.___OutlineButtonState__elevationAnimation_isSet]) ? (t33 = this[S$.___OutlineButtonState__elevationAnimation], t33) : dart.throw(new _internal.LateError.fieldNI("_elevationAnimation"));
    }
    set [S$._elevationAnimation](t33) {
      if (t33 == null) dart.nullFailed(I[80], 351, 26, "null");
      this[S$.___OutlineButtonState__elevationAnimation_isSet] = true;
      this[S$.___OutlineButtonState__elevationAnimation] = t33;
    }
    initState() {
      super.initState();
      this[S$._controller$4] = new animation_controller.AnimationController.new({duration: outline_button._kPressDuration, vsync: this});
      this[S$._fillAnimation] = new animations.CurvedAnimation.new({parent: this[S$._controller$4], curve: C[453] || CT.C453});
      this[S$._elevationAnimation] = new animations.CurvedAnimation.new({parent: this[S$._controller$4], curve: C[454] || CT.C454, reverseCurve: C[455] || CT.C455});
    }
    didUpdateWidget(oldWidget) {
      outline_button._OutlineButton.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[80], 384, 39, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (dart.test(this[S$._pressed]) && !dart.test(this.widget.enabled)) {
        this[S$._pressed] = false;
        this[S$._controller$4].reverse();
      }
    }
    [S$._handleHighlightChanged](value) {
      if (value == null) dart.nullFailed(I[80], 392, 37, "value");
      if (this[S$._pressed] == value) return;
      this.setState(dart.fn(() => {
        this[S$._pressed] = value;
        if (dart.test(value))
          this[S$._controller$4].forward();
        else
          this[S$._controller$4].reverse();
      }, T$.VoidTovoid()));
    }
    dispose() {
      this[S$._controller$4].dispose();
      super.dispose();
    }
    [S$._getFillColor$1]() {
      let t34;
      if (this.widget.highlightElevation == null || this.widget.highlightElevation === 0.0) return colors$.Colors.transparent;
      let color = (t34 = this.widget.color, t34 == null ? theme$.Theme.of(this.context).canvasColor : t34);
      let colorTween = new tween.ColorTween.new({begin: color.withAlpha(0), end: color.withAlpha(255)});
      return dart.nullCheck(colorTween.evaluate(this[S$._fillAnimation]));
    }
    get [S$._outlineColor]() {
      let t34, t34$;
      if (T$.MaterialStatePropertyOfColorN().is((t34 = this.widget.borderSide, t34 == null ? null : t34.color))) return dart.nullCheck(this.widget.borderSide).color;
      if (!dart.test(this.widget.enabled)) return this.widget.disabledBorderColor;
      if (dart.test(this[S$._pressed])) return this.widget.highlightedBorderColor;
      t34$ = this.widget.borderSide;
      return t34$ == null ? null : t34$.color;
    }
    [S$._getOutline]() {
      let t34, t34$, t34$0, t34$1;
      if ((t34 = this.widget.borderSide, t34 == null ? null : t34.style) == borders.BorderStyle.none) return dart.nullCheck(this.widget.borderSide);
      let themeColor = theme$.Theme.of(this.context).colorScheme.onSurface.withOpacity(0.12);
      return new borders.BorderSide.new({color: (t34$ = this[S$._outlineColor], t34$ == null ? themeColor : t34$), width: (t34$1 = (t34$0 = this.widget.borderSide, t34$0 == null ? null : t34$0.width), t34$1 == null ? 1.0 : t34$1)});
    }
    [S$._getHighlightElevation]() {
      if (this.widget.highlightElevation == null || this.widget.highlightElevation === 0.0) return 0.0;
      return new (T$.TweenOfdouble()).new({begin: 0.0, end: this.widget.highlightElevation}).evaluate(this[S$._elevationAnimation]);
    }
    build(context) {
      if (context == null) dart.nullFailed(I[80], 455, 29, "context");
      let theme = theme$.Theme.of(context);
      return new transitions.AnimatedBuilder.new({animation: this[S$._controller$4], builder: dart.fn((context, child) => {
          let t34;
          if (context == null) dart.nullFailed(I[80], 460, 30, "context");
          return new raised_button.RaisedButton.new({autofocus: this.widget.autofocus, textColor: this.widget.textColor, disabledTextColor: this.widget.disabledTextColor, color: this[S$._getFillColor$1](), splashColor: this.widget.splashColor, focusColor: this.widget.focusColor, hoverColor: this.widget.hoverColor, highlightColor: this.widget.highlightColor, disabledColor: colors$.Colors.transparent, onPressed: this.widget.onPressed, onLongPress: this.widget.onLongPress, mouseCursor: this.widget.mouseCursor, elevation: 0.0, disabledElevation: 0.0, focusElevation: 0.0, hoverElevation: 0.0, highlightElevation: this[S$._getHighlightElevation](), onHighlightChanged: dart.bind(this, S$._handleHighlightChanged), padding: this.widget.padding, visualDensity: (t34 = this.widget.visualDensity, t34 == null ? theme.visualDensity : t34), shape: new outline_button._OutlineBorder.new({shape: this.widget.shape, side: this[S$._getOutline]()}), clipBehavior: this.widget.clipBehavior, focusNode: this.widget.focusNode, animationDuration: outline_button._kElevationDuration, materialTapTargetSize: this.widget.materialTapTargetSize, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C[456] || CT.C456});
        }, T$.BuildContextAndWidgetNToRaisedButton()), $creationLocationd_0dea112b090073317d4: C[457] || CT.C457});
    }
  };
  (outline_button._OutlineButtonState.new = function() {
    this[S$.___OutlineButtonState__controller] = null;
    this[S$.___OutlineButtonState__controller_isSet] = false;
    this[S$.___OutlineButtonState__fillAnimation] = null;
    this[S$.___OutlineButtonState__fillAnimation_isSet] = false;
    this[S$.___OutlineButtonState__elevationAnimation] = null;
    this[S$.___OutlineButtonState__elevationAnimation_isSet] = false;
    this[S$._pressed] = false;
    outline_button._OutlineButtonState.__proto__.new.call(this);
    ;
  }).prototype = outline_button._OutlineButtonState.prototype;
  dart.addTypeTests(outline_button._OutlineButtonState);
  dart.addTypeCaches(outline_button._OutlineButtonState);
  dart.setMethodSignature(outline_button._OutlineButtonState, () => ({
    __proto__: dart.getMethods(outline_button._OutlineButtonState.__proto__),
    [S$._handleHighlightChanged]: dart.fnType(dart.void, [core.bool]),
    [S$._getFillColor$1]: dart.fnType(ui.Color, []),
    [S$._getOutline]: dart.fnType(borders.BorderSide, []),
    [S$._getHighlightElevation]: dart.fnType(core.double, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(outline_button._OutlineButtonState, () => ({
    __proto__: dart.getGetters(outline_button._OutlineButtonState.__proto__),
    [S$._controller$4]: animation_controller.AnimationController,
    [S$._fillAnimation]: animation.Animation$(core.double),
    [S$._elevationAnimation]: animation.Animation$(core.double),
    [S$._outlineColor]: dart.nullable(ui.Color)
  }));
  dart.setSetterSignature(outline_button._OutlineButtonState, () => ({
    __proto__: dart.getSetters(outline_button._OutlineButtonState.__proto__),
    [S$._controller$4]: animation_controller.AnimationController,
    [S$._fillAnimation]: animation.Animation$(core.double),
    [S$._elevationAnimation]: animation.Animation$(core.double)
  }));
  dart.setLibraryUri(outline_button._OutlineButtonState, I[81]);
  dart.setFieldSignature(outline_button._OutlineButtonState, () => ({
    __proto__: dart.getFields(outline_button._OutlineButtonState.__proto__),
    [S$.___OutlineButtonState__controller]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$.___OutlineButtonState__controller_isSet]: dart.fieldType(core.bool),
    [S$.___OutlineButtonState__fillAnimation]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
    [S$.___OutlineButtonState__fillAnimation_isSet]: dart.fieldType(core.bool),
    [S$.___OutlineButtonState__elevationAnimation]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
    [S$.___OutlineButtonState__elevationAnimation_isSet]: dart.fieldType(core.bool),
    [S$._pressed]: dart.fieldType(core.bool)
  }));
  outline_button._OutlineBorder = class _OutlineBorder extends borders.ShapeBorder {
    get shape() {
      return this[S$.shape$12];
    }
    set shape(value) {
      super.shape = value;
    }
    get side() {
      return this[S$.side$3];
    }
    set side(value) {
      super.side = value;
    }
    get dimensions() {
      return new edge_insets.EdgeInsets.all(this.side.width);
    }
    scale(t) {
      if (t == null) dart.nullFailed(I[80], 515, 28, "t");
      return new outline_button._OutlineBorder.new({shape: this.shape.scale(t), side: this.side.scale(t)});
    }
    lerpFrom(a, t) {
      if (t == null) dart.nullFailed(I[80], 523, 48, "t");
      if (!(t != null)) dart.assertFailed(null, I[80], 524, 12, "t != null");
      if (outline_button._OutlineBorder.is(a)) {
        return new outline_button._OutlineBorder.new({side: borders.BorderSide.lerp(a.side, this.side, t), shape: dart.nullCheck(borders.ShapeBorder.lerp(a.shape, this.shape, t))});
      }
      return super.lerpFrom(a, t);
    }
    lerpTo(b, t) {
      if (t == null) dart.nullFailed(I[80], 535, 46, "t");
      if (!(t != null)) dart.assertFailed(null, I[80], 536, 12, "t != null");
      if (outline_button._OutlineBorder.is(b)) {
        return new outline_button._OutlineBorder.new({side: borders.BorderSide.lerp(this.side, b.side, t), shape: dart.nullCheck(borders.ShapeBorder.lerp(this.shape, b.shape, t))});
      }
      return super.lerpTo(b, t);
    }
    getInnerPath(rect, opts) {
      if (rect == null) dart.nullFailed(I[80], 547, 26, "rect");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      return this.shape.getInnerPath(rect.deflate(this.side.width), {textDirection: textDirection});
    }
    getOuterPath(rect, opts) {
      if (rect == null) dart.nullFailed(I[80], 552, 26, "rect");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      return this.shape.getOuterPath(rect, {textDirection: textDirection});
    }
    paint(canvas, rect, opts) {
      if (canvas == null) dart.nullFailed(I[80], 557, 21, "canvas");
      if (rect == null) dart.nullFailed(I[80], 557, 34, "rect");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      switch (this.side.style) {
        case C[65] || CT.C65:
        {
          break;
        }
        case C[408] || CT.C408:
        {
          canvas.drawPath(this.shape.getOuterPath(rect, {textDirection: textDirection}), this.side.toPaint());
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return outline_button._OutlineBorder.is(other) && dart.equals(other.side, this.side) && dart.equals(other.shape, this.shape);
    }
    get hashCode() {
      return ui.hashValues(this.side, this.shape);
    }
    resolve(states) {
      if (states == null) dart.nullFailed(I[80], 581, 42, "states");
      return new outline_button._OutlineBorder.new({shape: this.shape, side: this.side.copyWith({color: material_state.MaterialStateProperty.resolveAs(ui.Color, this.side.color, states)})});
    }
  };
  (outline_button._OutlineBorder.new = function(opts) {
    let shape = opts && 'shape' in opts ? opts.shape : null;
    if (shape == null) dart.nullFailed(I[80], 501, 19, "shape");
    let side = opts && 'side' in opts ? opts.side : null;
    if (side == null) dart.nullFailed(I[80], 502, 19, "side");
    this[S$.shape$12] = shape;
    this[S$.side$3] = side;
    if (!(shape != null)) dart.assertFailed(null, I[80], 503, 15, "shape != null");
    if (!(side != null)) dart.assertFailed(null, I[80], 504, 15, "side != null");
    outline_button._OutlineBorder.__proto__.new.call(this);
    ;
  }).prototype = outline_button._OutlineBorder.prototype;
  dart.addTypeTests(outline_button._OutlineBorder);
  dart.addTypeCaches(outline_button._OutlineBorder);
  outline_button._OutlineBorder[dart.implements] = () => [material_state.MaterialStateProperty$(borders.ShapeBorder)];
  dart.setMethodSignature(outline_button._OutlineBorder, () => ({
    __proto__: dart.getMethods(outline_button._OutlineBorder.__proto__),
    scale: dart.fnType(borders.ShapeBorder, [core.double]),
    getInnerPath: dart.fnType(ui.Path, [ui.Rect], {textDirection: dart.nullable(ui.TextDirection)}, {}),
    getOuterPath: dart.fnType(ui.Path, [ui.Rect], {textDirection: dart.nullable(ui.TextDirection)}, {}),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Rect], {textDirection: dart.nullable(ui.TextDirection)}, {}),
    resolve: dart.fnType(borders.ShapeBorder, [core.Set$(material_state.MaterialState)])
  }));
  dart.setGetterSignature(outline_button._OutlineBorder, () => ({
    __proto__: dart.getGetters(outline_button._OutlineBorder.__proto__),
    dimensions: edge_insets.EdgeInsetsGeometry
  }));
  dart.setLibraryUri(outline_button._OutlineBorder, I[81]);
  dart.setFieldSignature(outline_button._OutlineBorder, () => ({
    __proto__: dart.getFields(outline_button._OutlineBorder.__proto__),
    shape: dart.finalFieldType(borders.ShapeBorder),
    side: dart.finalFieldType(borders.BorderSide)
  }));
  dart.defineExtensionMethods(outline_button._OutlineBorder, ['_equals']);
  dart.defineExtensionAccessors(outline_button._OutlineBorder, ['hashCode']);
  dart.defineLazy(outline_button, {
    /*outline_button._kPressDuration*/get _kPressDuration() {
      return C[458] || CT.C458;
    },
    /*outline_button._kElevationDuration*/get _kElevationDuration() {
      return C[45] || CT.C45;
    }
  }, false);
  button.RawMaterialButton = class RawMaterialButton extends framework.StatefulWidget {
    get onPressed() {
      return this[S$.onPressed$8];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    get onLongPress() {
      return this[S$.onLongPress$3];
    }
    set onLongPress(value) {
      super.onLongPress = value;
    }
    get onHighlightChanged() {
      return this[S$.onHighlightChanged$1];
    }
    set onHighlightChanged(value) {
      super.onHighlightChanged = value;
    }
    get mouseCursor() {
      return this[S$.mouseCursor$9];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get textStyle() {
      return this[S$.textStyle$3];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get fillColor() {
      return this[S$.fillColor$6];
    }
    set fillColor(value) {
      super.fillColor = value;
    }
    get focusColor() {
      return this[S$.focusColor$7];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[S$.hoverColor$8];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get highlightColor() {
      return this[S$.highlightColor$4];
    }
    set highlightColor(value) {
      super.highlightColor = value;
    }
    get splashColor() {
      return this[S$.splashColor$5];
    }
    set splashColor(value) {
      super.splashColor = value;
    }
    get elevation() {
      return this[S$.elevation$13];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get hoverElevation() {
      return this[S$.hoverElevation$2];
    }
    set hoverElevation(value) {
      super.hoverElevation = value;
    }
    get focusElevation() {
      return this[S$.focusElevation$2];
    }
    set focusElevation(value) {
      super.focusElevation = value;
    }
    get highlightElevation() {
      return this[S$.highlightElevation$3];
    }
    set highlightElevation(value) {
      super.highlightElevation = value;
    }
    get disabledElevation() {
      return this[S$.disabledElevation$2];
    }
    set disabledElevation(value) {
      super.disabledElevation = value;
    }
    get padding() {
      return this[S$.padding$8];
    }
    set padding(value) {
      super.padding = value;
    }
    get visualDensity() {
      return this[S$.visualDensity$7];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get constraints() {
      return this[S$.constraints$4];
    }
    set constraints(value) {
      super.constraints = value;
    }
    get shape() {
      return this[S$.shape$13];
    }
    set shape(value) {
      super.shape = value;
    }
    get animationDuration() {
      return this[S$.animationDuration$2];
    }
    set animationDuration(value) {
      super.animationDuration = value;
    }
    get child() {
      return this[S$.child$14];
    }
    set child(value) {
      super.child = value;
    }
    get materialTapTargetSize() {
      return this[S$.materialTapTargetSize$6];
    }
    set materialTapTargetSize(value) {
      super.materialTapTargetSize = value;
    }
    get focusNode() {
      return this[S$.focusNode$5];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get autofocus() {
      return this[S$.autofocus$5];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get clipBehavior() {
      return this[S$.clipBehavior$5];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get enableFeedback() {
      return this[S$.enableFeedback$6];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get enabled() {
      return this.onPressed != null || this.onLongPress != null;
    }
    createState() {
      return new button._RawMaterialButtonState.new();
    }
  };
  (button.RawMaterialButton.new = function(opts) {
    let t34;
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : 2;
    if (elevation == null) dart.nullFailed(I[82], 63, 10, "elevation");
    let focusElevation = opts && 'focusElevation' in opts ? opts.focusElevation : 4;
    if (focusElevation == null) dart.nullFailed(I[82], 64, 10, "focusElevation");
    let hoverElevation = opts && 'hoverElevation' in opts ? opts.hoverElevation : 4;
    if (hoverElevation == null) dart.nullFailed(I[82], 65, 10, "hoverElevation");
    let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : 8;
    if (highlightElevation == null) dart.nullFailed(I[82], 66, 10, "highlightElevation");
    let disabledElevation = opts && 'disabledElevation' in opts ? opts.disabledElevation : 0;
    if (disabledElevation == null) dart.nullFailed(I[82], 67, 10, "disabledElevation");
    let padding = opts && 'padding' in opts ? opts.padding : C[214] || CT.C214;
    if (padding == null) dart.nullFailed(I[82], 68, 10, "padding");
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : C[459] || CT.C459;
    if (visualDensity == null) dart.nullFailed(I[82], 69, 10, "visualDensity");
    let constraints = opts && 'constraints' in opts ? opts.constraints : C[460] || CT.C460;
    if (constraints == null) dart.nullFailed(I[82], 70, 10, "constraints");
    let shape = opts && 'shape' in opts ? opts.shape : C[461] || CT.C461;
    if (shape == null) dart.nullFailed(I[82], 71, 10, "shape");
    let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : C[143] || CT.C143;
    if (animationDuration == null) dart.nullFailed(I[82], 72, 10, "animationDuration");
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[59] || CT.C59;
    if (clipBehavior == null) dart.nullFailed(I[82], 73, 10, "clipBehavior");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[82], 75, 10, "autofocus");
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : true;
    if (enableFeedback == null) dart.nullFailed(I[82], 78, 10, "enableFeedback");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.onPressed$8] = onPressed;
    this[S$.onLongPress$3] = onLongPress;
    this[S$.onHighlightChanged$1] = onHighlightChanged;
    this[S$.mouseCursor$9] = mouseCursor;
    this[S$.textStyle$3] = textStyle;
    this[S$.fillColor$6] = fillColor;
    this[S$.focusColor$7] = focusColor;
    this[S$.hoverColor$8] = hoverColor;
    this[S$.highlightColor$4] = highlightColor;
    this[S$.splashColor$5] = splashColor;
    this[S$.elevation$13] = elevation;
    this[S$.focusElevation$2] = focusElevation;
    this[S$.hoverElevation$2] = hoverElevation;
    this[S$.highlightElevation$3] = highlightElevation;
    this[S$.disabledElevation$2] = disabledElevation;
    this[S$.padding$8] = padding;
    this[S$.visualDensity$7] = visualDensity;
    this[S$.constraints$4] = constraints;
    this[S$.shape$13] = shape;
    this[S$.animationDuration$2] = animationDuration;
    this[S$.clipBehavior$5] = clipBehavior;
    this[S$.focusNode$5] = focusNode;
    this[S$.autofocus$5] = autofocus;
    this[S$.child$14] = child;
    this[S$.enableFeedback$6] = enableFeedback;
    this[S$.materialTapTargetSize$6] = (t34 = materialTapTargetSize, t34 == null ? theme_data.MaterialTapTargetSize.padded : t34);
    if (!(shape != null)) dart.assertFailed(null, I[82], 80, 15, "shape != null");
    if (!(elevation != null && dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[82], 81, 15, "elevation != null && elevation >= 0.0");
    if (!(focusElevation != null && dart.notNull(focusElevation) >= 0.0)) dart.assertFailed(null, I[82], 82, 15, "focusElevation != null && focusElevation >= 0.0");
    if (!(hoverElevation != null && dart.notNull(hoverElevation) >= 0.0)) dart.assertFailed(null, I[82], 83, 15, "hoverElevation != null && hoverElevation >= 0.0");
    if (!(highlightElevation != null && dart.notNull(highlightElevation) >= 0.0)) dart.assertFailed(null, I[82], 84, 15, "highlightElevation != null && highlightElevation >= 0.0");
    if (!(disabledElevation != null && dart.notNull(disabledElevation) >= 0.0)) dart.assertFailed(null, I[82], 85, 15, "disabledElevation != null && disabledElevation >= 0.0");
    if (!(padding != null)) dart.assertFailed(null, I[82], 86, 15, "padding != null");
    if (!(constraints != null)) dart.assertFailed(null, I[82], 87, 15, "constraints != null");
    if (!(animationDuration != null)) dart.assertFailed(null, I[82], 88, 15, "animationDuration != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, I[82], 89, 15, "clipBehavior != null");
    if (!(autofocus != null)) dart.assertFailed(null, I[82], 90, 15, "autofocus != null");
    button.RawMaterialButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = button.RawMaterialButton.prototype;
  dart.addTypeTests(button.RawMaterialButton);
  dart.addTypeCaches(button.RawMaterialButton);
  dart.setMethodSignature(button.RawMaterialButton, () => ({
    __proto__: dart.getMethods(button.RawMaterialButton.__proto__),
    createState: dart.fnType(framework.State$(button.RawMaterialButton), [])
  }));
  dart.setGetterSignature(button.RawMaterialButton, () => ({
    __proto__: dart.getGetters(button.RawMaterialButton.__proto__),
    enabled: core.bool
  }));
  dart.setLibraryUri(button.RawMaterialButton, I[83]);
  dart.setFieldSignature(button.RawMaterialButton, () => ({
    __proto__: dart.getFields(button.RawMaterialButton.__proto__),
    onPressed: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onLongPress: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onHighlightChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    mouseCursor: dart.finalFieldType(dart.nullable(mouse_cursor.MouseCursor)),
    textStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    fillColor: dart.finalFieldType(dart.nullable(ui.Color)),
    focusColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hoverColor: dart.finalFieldType(dart.nullable(ui.Color)),
    highlightColor: dart.finalFieldType(dart.nullable(ui.Color)),
    splashColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(core.double),
    hoverElevation: dart.finalFieldType(core.double),
    focusElevation: dart.finalFieldType(core.double),
    highlightElevation: dart.finalFieldType(core.double),
    disabledElevation: dart.finalFieldType(core.double),
    padding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
    visualDensity: dart.finalFieldType(theme_data.VisualDensity),
    constraints: dart.finalFieldType(box$.BoxConstraints),
    shape: dart.finalFieldType(borders.ShapeBorder),
    animationDuration: dart.finalFieldType(core.Duration),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    materialTapTargetSize: dart.finalFieldType(theme_data.MaterialTapTargetSize),
    focusNode: dart.finalFieldType(dart.nullable(focus_manager.FocusNode)),
    autofocus: dart.finalFieldType(core.bool),
    clipBehavior: dart.finalFieldType(ui.Clip),
    enableFeedback: dart.finalFieldType(core.bool)
  }));
  const State_MaterialStateMixin$36$ = class State_MaterialStateMixin extends framework.State$(button.RawMaterialButton) {};
  (State_MaterialStateMixin$36$.new = function() {
    material_state_mixin.MaterialStateMixin$(button.RawMaterialButton)[dart.mixinNew].call(this);
    State_MaterialStateMixin$36$.__proto__.new.call(this);
  }).prototype = State_MaterialStateMixin$36$.prototype;
  dart.applyMixin(State_MaterialStateMixin$36$, material_state_mixin.MaterialStateMixin$(button.RawMaterialButton));
  button._RawMaterialButtonState = class _RawMaterialButtonState extends State_MaterialStateMixin$36$ {
    initState() {
      super.initState();
      this.setMaterialState(material_state.MaterialState.disabled, !dart.test(this.widget.enabled));
    }
    didUpdateWidget(oldWidget) {
      button.RawMaterialButton.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[82], 327, 42, "oldWidget");
      super.didUpdateWidget(oldWidget);
      this.setMaterialState(material_state.MaterialState.disabled, !dart.test(this.widget.enabled));
      if (dart.test(this.isDisabled) && dart.test(this.isPressed)) {
        this.removeMaterialState(material_state.MaterialState.pressed);
      }
    }
    get [S$._effectiveElevation]() {
      if (dart.test(this.isDisabled)) {
        return this.widget.disabledElevation;
      }
      if (dart.test(this.isPressed)) {
        return this.widget.highlightElevation;
      }
      if (dart.test(this.isHovered)) {
        return this.widget.hoverElevation;
      }
      if (dart.test(this.isFocused)) {
        return this.widget.focusElevation;
      }
      return this.widget.elevation;
    }
    build(context) {
      let t34, t34$, t34$0;
      if (context == null) dart.nullFailed(I[82], 358, 29, "context");
      let effectiveTextColor = material_state.MaterialStateProperty.resolveAs(T$.ColorN(), (t34 = this.widget.textStyle, t34 == null ? null : t34.color), this.materialStates);
      let effectiveShape = material_state.MaterialStateProperty.resolveAs(T$.ShapeBorderN(), this.widget.shape, this.materialStates);
      let densityAdjustment = this.widget.visualDensity.baseSizeAdjustment;
      let effectiveConstraints = this.widget.visualDensity.effectiveConstraints(this.widget.constraints);
      let effectiveMouseCursor = material_state.MaterialStateProperty.resolveAs(T$.MouseCursorN(), (t34$ = this.widget.mouseCursor, t34$ == null ? material_state.MaterialStateMouseCursor.clickable : t34$), this.materialStates);
      let padding = this.widget.padding.add(new edge_insets.EdgeInsets.only({left: densityAdjustment.dx, top: densityAdjustment.dy, right: densityAdjustment.dx, bottom: densityAdjustment.dy})).clamp(edge_insets.EdgeInsets.zero, edge_insets.EdgeInsetsGeometry.infinity);
      let result = new basic.ConstrainedBox.new({constraints: effectiveConstraints, child: new material.Material.new({elevation: this[S$._effectiveElevation], textStyle: (t34$0 = this.widget.textStyle, t34$0 == null ? null : t34$0.copyWith({color: effectiveTextColor})), shape: effectiveShape, color: this.widget.fillColor, type: this.widget.fillColor == null ? material.MaterialType.transparency : material.MaterialType.button, animationDuration: this.widget.animationDuration, clipBehavior: this.widget.clipBehavior, child: new ink_well.InkWell.new({focusNode: this.widget.focusNode, canRequestFocus: this.widget.enabled, onFocusChange: this.updateMaterialState(material_state.MaterialState.focused), autofocus: this.widget.autofocus, onHighlightChanged: this.updateMaterialState(material_state.MaterialState.pressed, {onChanged: this.widget.onHighlightChanged}), splashColor: this.widget.splashColor, highlightColor: this.widget.highlightColor, focusColor: this.widget.focusColor, hoverColor: this.widget.hoverColor, onHover: this.updateMaterialState(material_state.MaterialState.hovered), onTap: this.widget.onPressed, onLongPress: this.widget.onLongPress, enableFeedback: this.widget.enableFeedback, customBorder: effectiveShape, mouseCursor: effectiveMouseCursor, child: icon_theme.IconTheme.merge({data: new icon_theme_data.IconThemeData.new({color: effectiveTextColor}), child: new container.Container.new({padding: padding, child: new basic.Center.new({widthFactor: 1.0, heightFactor: 1.0, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C[462] || CT.C462}), $creationLocationd_0dea112b090073317d4: C[463] || CT.C463})}), $creationLocationd_0dea112b090073317d4: C[464] || CT.C464}), $creationLocationd_0dea112b090073317d4: C[465] || CT.C465}), $creationLocationd_0dea112b090073317d4: C[466] || CT.C466});
      let minSize = null;
      switch (this.widget.materialTapTargetSize) {
        case C[53] || CT.C53:
        {
          minSize = new ui.Size.new(48 + dart.notNull(densityAdjustment.dx), 48 + dart.notNull(densityAdjustment.dy));
          if (!(dart.notNull(minSize.width) >= 0.0)) dart.assertFailed(null, I[82], 424, 16, "minSize.width >= 0.0");
          if (!(dart.notNull(minSize.height) >= 0.0)) dart.assertFailed(null, I[82], 425, 16, "minSize.height >= 0.0");
          break;
        }
        case C[54] || CT.C54:
        {
          minSize = ui.Size.zero;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      return new basic.Semantics.new({container: true, button: true, enabled: this.widget.enabled, child: new button._InputPadding.new({minSize: minSize, child: result, $creationLocationd_0dea112b090073317d4: C[467] || CT.C467}), $creationLocationd_0dea112b090073317d4: C[468] || CT.C468});
    }
  };
  (button._RawMaterialButtonState.new = function() {
    button._RawMaterialButtonState.__proto__.new.call(this);
    ;
  }).prototype = button._RawMaterialButtonState.prototype;
  dart.addTypeTests(button._RawMaterialButtonState);
  dart.addTypeCaches(button._RawMaterialButtonState);
  dart.setMethodSignature(button._RawMaterialButtonState, () => ({
    __proto__: dart.getMethods(button._RawMaterialButtonState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(button._RawMaterialButtonState, () => ({
    __proto__: dart.getGetters(button._RawMaterialButtonState.__proto__),
    [S$._effectiveElevation]: core.double
  }));
  dart.setLibraryUri(button._RawMaterialButtonState, I[83]);
  button._InputPadding = class _InputPadding extends framework.SingleChildRenderObjectWidget {
    get minSize() {
      return this[S$.minSize$1];
    }
    set minSize(value) {
      super.minSize = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(I[82], 459, 48, "context");
      return new button._RenderInputPadding.new(this.minSize);
    }
    updateRenderObject(context, renderObject) {
      if (context == null) dart.nullFailed(I[82], 464, 40, "context");
      button._RenderInputPadding.as(renderObject);
      if (renderObject == null) dart.nullFailed(I[82], 464, 79, "renderObject");
      renderObject.minSize = this.minSize;
    }
  };
  (button._InputPadding.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let minSize = opts && 'minSize' in opts ? opts.minSize : null;
    if (minSize == null) dart.nullFailed(I[82], 453, 19, "minSize");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.minSize$1] = minSize;
    button._InputPadding.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = button._InputPadding.prototype;
  dart.addTypeTests(button._InputPadding);
  dart.addTypeCaches(button._InputPadding);
  dart.setMethodSignature(button._InputPadding, () => ({
    __proto__: dart.getMethods(button._InputPadding.__proto__),
    createRenderObject: dart.fnType(object.RenderObject, [framework.BuildContext])
  }));
  dart.setLibraryUri(button._InputPadding, I[83]);
  dart.setFieldSignature(button._InputPadding, () => ({
    __proto__: dart.getFields(button._InputPadding.__proto__),
    minSize: dart.finalFieldType(ui.Size)
  }));
  button._RenderInputPadding = class _RenderInputPadding extends shifted_box.RenderShiftedBox {
    get minSize() {
      return this[S$._minSize$1];
    }
    set minSize(value) {
      if (value == null) dart.nullFailed(I[82], 474, 20, "value");
      if (dart.equals(this[S$._minSize$1], value)) return;
      this[S$._minSize$1] = value;
      this.markNeedsLayout();
    }
    computeMinIntrinsicWidth(height) {
      if (height == null) dart.nullFailed(I[82], 482, 42, "height");
      if (this.child != null) return math.max(core.double, dart.nullCheck(this.child).getMinIntrinsicWidth(height), this.minSize.width);
      return 0.0;
    }
    computeMinIntrinsicHeight(width) {
      if (width == null) dart.nullFailed(I[82], 489, 43, "width");
      if (this.child != null) return math.max(core.double, dart.nullCheck(this.child).getMinIntrinsicHeight(width), this.minSize.height);
      return 0.0;
    }
    computeMaxIntrinsicWidth(height) {
      if (height == null) dart.nullFailed(I[82], 496, 42, "height");
      if (this.child != null) return math.max(core.double, dart.nullCheck(this.child).getMaxIntrinsicWidth(height), this.minSize.width);
      return 0.0;
    }
    computeMaxIntrinsicHeight(width) {
      if (width == null) dart.nullFailed(I[82], 503, 43, "width");
      if (this.child != null) return math.max(core.double, dart.nullCheck(this.child).getMaxIntrinsicHeight(width), this.minSize.height);
      return 0.0;
    }
    [S$._computeSize$1](opts) {
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      if (constraints == null) dart.nullFailed(I[82], 509, 46, "constraints");
      let layoutChild = opts && 'layoutChild' in opts ? opts.layoutChild : null;
      if (layoutChild == null) dart.nullFailed(I[82], 509, 82, "layoutChild");
      if (this.child != null) {
        let childSize = layoutChild(dart.nullCheck(this.child), constraints);
        let height = math.max(core.double, childSize.width, this.minSize.width);
        let width = math.max(core.double, childSize.height, this.minSize.height);
        return constraints.constrain(new ui.Size.new(height, width));
      }
      return ui.Size.zero;
    }
    computeDryLayout(constraints) {
      if (constraints == null) dart.nullFailed(I[82], 520, 40, "constraints");
      return this[S$._computeSize$1]({constraints: constraints, layoutChild: C[57] || CT.C57});
    }
    performLayout() {
      this.size = this[S$._computeSize$1]({constraints: this.constraints, layoutChild: C[58] || CT.C58});
      if (this.child != null) {
        let childParentData = box$.BoxParentData.as(dart.nullCheck(dart.nullCheck(this.child).parentData));
        childParentData.offset = alignment.Alignment.center.alongOffset(ui.Offset.as(this.size['-'](dart.nullCheck(this.child).size)));
      }
    }
    hitTest(result, opts) {
      if (result == null) dart.nullFailed(I[82], 540, 33, "result");
      let position = opts && 'position' in opts ? opts.position : null;
      if (position == null) dart.nullFailed(I[82], 540, 59, "position");
      if (dart.test(super.hitTest(result, {position: position}))) {
        return true;
      }
      let center = dart.nullCheck(this.child).size.center(ui.Offset.zero);
      return result.addWithRawTransform({transform: matrix_utils.MatrixUtils.forceToPoint(center), position: center, hitTest: dart.fn((result, position) => {
          if (result == null) dart.nullFailed(I[82], 548, 34, "result");
          if (!dart.equals(position, center)) dart.assertFailed(null, I[82], 549, 16, "position == center");
          return dart.nullCheck(this.child).hitTest(result, {position: center});
        }, T$.BoxHitTestResultAndOffsetNTobool())});
    }
  };
  (button._RenderInputPadding.new = function(_minSize, child = null) {
    if (_minSize == null) dart.nullFailed(I[82], 470, 28, "_minSize");
    this[S$._minSize$1] = _minSize;
    button._RenderInputPadding.__proto__.new.call(this, child);
    ;
  }).prototype = button._RenderInputPadding.prototype;
  dart.addTypeTests(button._RenderInputPadding);
  dart.addTypeCaches(button._RenderInputPadding);
  dart.setMethodSignature(button._RenderInputPadding, () => ({
    __proto__: dart.getMethods(button._RenderInputPadding.__proto__),
    [S$._computeSize$1]: dart.fnType(ui.Size, [], {}, {constraints: box$.BoxConstraints, layoutChild: dart.fnType(ui.Size, [box$.RenderBox, box$.BoxConstraints])})
  }));
  dart.setGetterSignature(button._RenderInputPadding, () => ({
    __proto__: dart.getGetters(button._RenderInputPadding.__proto__),
    minSize: ui.Size
  }));
  dart.setSetterSignature(button._RenderInputPadding, () => ({
    __proto__: dart.getSetters(button._RenderInputPadding.__proto__),
    minSize: ui.Size
  }));
  dart.setLibraryUri(button._RenderInputPadding, I[83]);
  dart.setFieldSignature(button._RenderInputPadding, () => ({
    __proto__: dart.getFields(button._RenderInputPadding.__proto__),
    [S$._minSize$1]: dart.fieldType(ui.Size)
  }));
  flat_button.FlatButton = class FlatButton extends material_button.MaterialButton {
    build(context) {
      let t34;
      if (context == null) dart.nullFailed(I[84], 133, 29, "context");
      let theme = theme$.Theme.of(context);
      let buttonTheme = button_theme.ButtonTheme.of(context);
      return new button.RawMaterialButton.new({onPressed: this.onPressed, onLongPress: this.onLongPress, onHighlightChanged: this.onHighlightChanged, mouseCursor: this.mouseCursor, fillColor: buttonTheme.getFillColor(this), textStyle: dart.nullCheck(theme.textTheme.button).copyWith({color: buttonTheme.getTextColor(this)}), focusColor: buttonTheme.getFocusColor(this), hoverColor: buttonTheme.getHoverColor(this), highlightColor: buttonTheme.getHighlightColor(this), splashColor: buttonTheme.getSplashColor(this), elevation: buttonTheme.getElevation(this), focusElevation: buttonTheme.getFocusElevation(this), hoverElevation: buttonTheme.getHoverElevation(this), highlightElevation: buttonTheme.getHighlightElevation(this), disabledElevation: buttonTheme.getDisabledElevation(this), padding: buttonTheme.getPadding(this), visualDensity: (t34 = this.visualDensity, t34 == null ? theme.visualDensity : t34), constraints: buttonTheme.getConstraints(this).copyWith({minWidth: this.minWidth, minHeight: this.height}), shape: buttonTheme.getShape(this), clipBehavior: this.clipBehavior, focusNode: this.focusNode, autofocus: this.autofocus, materialTapTargetSize: buttonTheme.getMaterialTapTargetSize(this), animationDuration: buttonTheme.getAnimationDuration(this), child: this.child, $creationLocationd_0dea112b090073317d4: C[469] || CT.C469});
    }
  };
  (flat_button.FlatButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let disabledTextColor = opts && 'disabledTextColor' in opts ? opts.disabledTextColor : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let colorBrightness = opts && 'colorBrightness' in opts ? opts.colorBrightness : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[59] || CT.C59;
    if (clipBehavior == null) dart.nullFailed(I[84], 56, 10, "clipBehavior");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[84], 58, 10, "autofocus");
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[84], 60, 21, "child");
    let height = opts && 'height' in opts ? opts.height : null;
    let minWidth = opts && 'minWidth' in opts ? opts.minWidth : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(clipBehavior != null)) dart.assertFailed(null, I[84], 63, 15, "clipBehavior != null");
    if (!(autofocus != null)) dart.assertFailed(null, I[84], 64, 15, "autofocus != null");
    flat_button.FlatButton.__proto__.new.call(this, {key: key, height: height, minWidth: minWidth, onPressed: onPressed, onLongPress: onLongPress, onHighlightChanged: onHighlightChanged, mouseCursor: mouseCursor, textTheme: textTheme, textColor: textColor, disabledTextColor: disabledTextColor, color: color, disabledColor: disabledColor, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, splashColor: splashColor, colorBrightness: colorBrightness, padding: padding, visualDensity: visualDensity, shape: shape, clipBehavior: clipBehavior, focusNode: focusNode, autofocus: autofocus, materialTapTargetSize: materialTapTargetSize, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = flat_button.FlatButton.prototype;
  dart.addTypeTests(flat_button.FlatButton);
  dart.addTypeCaches(flat_button.FlatButton);
  dart.setLibraryUri(flat_button.FlatButton, I[85]);
  const FlatButton_MaterialButtonWithIconMixin$36 = class FlatButton_MaterialButtonWithIconMixin extends flat_button.FlatButton {};
  (FlatButton_MaterialButtonWithIconMixin$36.new = function(opts) {
    FlatButton_MaterialButtonWithIconMixin$36.__proto__.new.call(this, opts);
  }).prototype = FlatButton_MaterialButtonWithIconMixin$36.prototype;
  dart.applyMixin(FlatButton_MaterialButtonWithIconMixin$36, material_button.MaterialButtonWithIconMixin);
  flat_button._FlatButtonWithIcon = class _FlatButtonWithIcon extends FlatButton_MaterialButtonWithIconMixin$36 {};
  (flat_button._FlatButtonWithIcon.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let disabledTextColor = opts && 'disabledTextColor' in opts ? opts.disabledTextColor : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let colorBrightness = opts && 'colorBrightness' in opts ? opts.colorBrightness : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[59] || CT.C59;
    if (clipBehavior == null) dart.nullFailed(I[84], 192, 10, "clipBehavior");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[84], 194, 10, "autofocus");
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    if (icon == null) dart.nullFailed(I[84], 196, 21, "icon");
    let label = opts && 'label' in opts ? opts.label : null;
    if (label == null) dart.nullFailed(I[84], 197, 21, "label");
    let minWidth = opts && 'minWidth' in opts ? opts.minWidth : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(icon != null)) dart.assertFailed(null, I[84], 200, 15, "icon != null");
    if (!(label != null)) dart.assertFailed(null, I[84], 201, 15, "label != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, I[84], 202, 15, "clipBehavior != null");
    if (!(autofocus != null)) dart.assertFailed(null, I[84], 203, 15, "autofocus != null");
    flat_button._FlatButtonWithIcon.__proto__.new.call(this, {key: key, onPressed: onPressed, onLongPress: onLongPress, onHighlightChanged: onHighlightChanged, mouseCursor: mouseCursor, textTheme: textTheme, textColor: textColor, disabledTextColor: disabledTextColor, color: color, disabledColor: disabledColor, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, splashColor: splashColor, colorBrightness: colorBrightness, padding: padding, shape: shape, clipBehavior: clipBehavior, focusNode: focusNode, autofocus: autofocus, materialTapTargetSize: materialTapTargetSize, child: new basic.Row.new({mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([icon, C[470] || CT.C470, label]), $creationLocationd_0dea112b090073317d4: C[472] || CT.C472}), minWidth: minWidth, height: height, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = flat_button._FlatButtonWithIcon.prototype;
  dart.addTypeTests(flat_button._FlatButtonWithIcon);
  dart.addTypeCaches(flat_button._FlatButtonWithIcon);
  dart.setLibraryUri(flat_button._FlatButtonWithIcon, I[85]);
  const Object_Diagnosticable$36$21 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$21.new = function() {
  }).prototype = Object_Diagnosticable$36$21.prototype;
  dart.applyMixin(Object_Diagnosticable$36$21, diagnostics.Diagnosticable);
  color_scheme.ColorScheme = class ColorScheme extends Object_Diagnosticable$36$21 {
    get primary() {
      return this[S$.primary];
    }
    set primary(value) {
      super.primary = value;
    }
    get primaryVariant() {
      return this[S$.primaryVariant];
    }
    set primaryVariant(value) {
      super.primaryVariant = value;
    }
    get secondary() {
      return this[S$.secondary];
    }
    set secondary(value) {
      super.secondary = value;
    }
    get secondaryVariant() {
      return this[S$.secondaryVariant];
    }
    set secondaryVariant(value) {
      super.secondaryVariant = value;
    }
    get surface() {
      return this[S$.surface];
    }
    set surface(value) {
      super.surface = value;
    }
    get background() {
      return this[S$.background$1];
    }
    set background(value) {
      super.background = value;
    }
    get error() {
      return this[S$.error];
    }
    set error(value) {
      super.error = value;
    }
    get onPrimary() {
      return this[S$.onPrimary];
    }
    set onPrimary(value) {
      super.onPrimary = value;
    }
    get onSecondary() {
      return this[S$.onSecondary];
    }
    set onSecondary(value) {
      super.onSecondary = value;
    }
    get onSurface() {
      return this[S$.onSurface];
    }
    set onSurface(value) {
      super.onSurface = value;
    }
    get onBackground() {
      return this[S$.onBackground];
    }
    set onBackground(value) {
      super.onBackground = value;
    }
    get onError() {
      return this[S$.onError];
    }
    set onError(value) {
      super.onError = value;
    }
    get brightness() {
      return this[S$.brightness$2];
    }
    set brightness(value) {
      super.brightness = value;
    }
    static fromSwatch(opts) {
      let t34, t34$, t34$0, t34$1, t34$2;
      let primarySwatch = opts && 'primarySwatch' in opts ? opts.primarySwatch : C[489] || CT.C489;
      if (primarySwatch == null) dart.nullFailed(I[86], 174, 19, "primarySwatch");
      let primaryColorDark = opts && 'primaryColorDark' in opts ? opts.primaryColorDark : null;
      let accentColor = opts && 'accentColor' in opts ? opts.accentColor : null;
      let cardColor = opts && 'cardColor' in opts ? opts.cardColor : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let errorColor = opts && 'errorColor' in opts ? opts.errorColor : null;
      let brightness = opts && 'brightness' in opts ? opts.brightness : C[405] || CT.C405;
      if (brightness == null) dart.nullFailed(I[86], 180, 16, "brightness");
      if (!(primarySwatch != null)) dart.assertFailed(null, I[86], 182, 12, "primarySwatch != null");
      if (!(brightness != null)) dart.assertFailed(null, I[86], 183, 12, "brightness != null");
      let isDark = brightness == ui.Brightness.dark;
      let primaryIsDark = color_scheme.ColorScheme._brightnessFor(primarySwatch) == ui.Brightness.dark;
      let secondary = (t34 = accentColor, t34 == null ? isDark ? dart.nullCheck(colors$.Colors.tealAccent._get(200)) : primarySwatch : t34);
      let secondaryIsDark = color_scheme.ColorScheme._brightnessFor(secondary) == ui.Brightness.dark;
      return new color_scheme.ColorScheme.new({primary: primarySwatch, primaryVariant: (t34$ = primaryColorDark, t34$ == null ? isDark ? colors$.Colors.black : dart.nullCheck(primarySwatch._get(700)) : t34$), secondary: secondary, secondaryVariant: isDark ? dart.nullCheck(colors$.Colors.tealAccent._get(700)) : dart.nullCheck(primarySwatch._get(700)), surface: (t34$0 = cardColor, t34$0 == null ? isDark ? dart.nullCheck(colors$.Colors.grey._get(800)) : colors$.Colors.white : t34$0), background: (t34$1 = backgroundColor, t34$1 == null ? isDark ? dart.nullCheck(colors$.Colors.grey._get(700)) : dart.nullCheck(primarySwatch._get(200)) : t34$1), error: (t34$2 = errorColor, t34$2 == null ? dart.nullCheck(colors$.Colors.red._get(700)) : t34$2), onPrimary: primaryIsDark ? colors$.Colors.white : colors$.Colors.black, onSecondary: secondaryIsDark ? colors$.Colors.white : colors$.Colors.black, onSurface: isDark ? colors$.Colors.white : colors$.Colors.black, onBackground: primaryIsDark ? colors$.Colors.white : colors$.Colors.black, onError: isDark ? colors$.Colors.black : colors$.Colors.white, brightness: brightness});
    }
    static _brightnessFor(color) {
      if (color == null) dart.nullFailed(I[86], 207, 42, "color");
      return theme_data.ThemeData.estimateBrightnessForColor(color);
    }
    copyWith(opts) {
      let t34, t34$, t34$0, t34$1, t34$2, t34$3, t34$4, t34$5, t34$6, t34$7, t34$8, t34$9, t34$10;
      let primary = opts && 'primary' in opts ? opts.primary : null;
      let primaryVariant = opts && 'primaryVariant' in opts ? opts.primaryVariant : null;
      let secondary = opts && 'secondary' in opts ? opts.secondary : null;
      let secondaryVariant = opts && 'secondaryVariant' in opts ? opts.secondaryVariant : null;
      let surface = opts && 'surface' in opts ? opts.surface : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let error = opts && 'error' in opts ? opts.error : null;
      let onPrimary = opts && 'onPrimary' in opts ? opts.onPrimary : null;
      let onSecondary = opts && 'onSecondary' in opts ? opts.onSecondary : null;
      let onSurface = opts && 'onSurface' in opts ? opts.onSurface : null;
      let onBackground = opts && 'onBackground' in opts ? opts.onBackground : null;
      let onError = opts && 'onError' in opts ? opts.onError : null;
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      return new color_scheme.ColorScheme.new({primary: (t34 = primary, t34 == null ? this.primary : t34), primaryVariant: (t34$ = primaryVariant, t34$ == null ? this.primaryVariant : t34$), secondary: (t34$0 = secondary, t34$0 == null ? this.secondary : t34$0), secondaryVariant: (t34$1 = secondaryVariant, t34$1 == null ? this.secondaryVariant : t34$1), surface: (t34$2 = surface, t34$2 == null ? this.surface : t34$2), background: (t34$3 = background, t34$3 == null ? this.background : t34$3), error: (t34$4 = error, t34$4 == null ? this.error : t34$4), onPrimary: (t34$5 = onPrimary, t34$5 == null ? this.onPrimary : t34$5), onSecondary: (t34$6 = onSecondary, t34$6 == null ? this.onSecondary : t34$6), onSurface: (t34$7 = onSurface, t34$7 == null ? this.onSurface : t34$7), onBackground: (t34$8 = onBackground, t34$8 == null ? this.onBackground : t34$8), onError: (t34$9 = onError, t34$9 == null ? this.onError : t34$9), brightness: (t34$10 = brightness, t34$10 == null ? this.brightness : t34$10)});
    }
    static lerp(a, b, t) {
      if (a == null) dart.nullFailed(I[86], 307, 39, "a");
      if (b == null) dart.nullFailed(I[86], 307, 54, "b");
      if (t == null) dart.nullFailed(I[86], 307, 64, "t");
      return new color_scheme.ColorScheme.new({primary: dart.nullCheck(ui.Color.lerp(a.primary, b.primary, t)), primaryVariant: dart.nullCheck(ui.Color.lerp(a.primaryVariant, b.primaryVariant, t)), secondary: dart.nullCheck(ui.Color.lerp(a.secondary, b.secondary, t)), secondaryVariant: dart.nullCheck(ui.Color.lerp(a.secondaryVariant, b.secondaryVariant, t)), surface: dart.nullCheck(ui.Color.lerp(a.surface, b.surface, t)), background: dart.nullCheck(ui.Color.lerp(a.background, b.background, t)), error: dart.nullCheck(ui.Color.lerp(a.error, b.error, t)), onPrimary: dart.nullCheck(ui.Color.lerp(a.onPrimary, b.onPrimary, t)), onSecondary: dart.nullCheck(ui.Color.lerp(a.onSecondary, b.onSecondary, t)), onSurface: dart.nullCheck(ui.Color.lerp(a.onSurface, b.onSurface, t)), onBackground: dart.nullCheck(ui.Color.lerp(a.onBackground, b.onBackground, t)), onError: dart.nullCheck(ui.Color.lerp(a.onError, b.onError, t)), brightness: dart.notNull(t) < 0.5 ? a.brightness : b.brightness});
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return color_scheme.ColorScheme.is(other) && dart.equals(other.primary, this.primary) && dart.equals(other.primaryVariant, this.primaryVariant) && dart.equals(other.secondary, this.secondary) && dart.equals(other.secondaryVariant, this.secondaryVariant) && dart.equals(other.surface, this.surface) && dart.equals(other.background, this.background) && dart.equals(other.error, this.error) && dart.equals(other.onPrimary, this.onPrimary) && dart.equals(other.onSecondary, this.onSecondary) && dart.equals(other.onSurface, this.onSurface) && dart.equals(other.onBackground, this.onBackground) && dart.equals(other.onError, this.onError) && other.brightness == this.brightness;
    }
    get hashCode() {
      return ui.hashValues(this.primary, this.primaryVariant, this.secondary, this.secondaryVariant, this.surface, this.background, this.error, this.onPrimary, this.onSecondary, this.onSurface, this.onBackground, this.onError, this.brightness);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[86], 367, 56, "properties");
      super.debugFillProperties(properties);
      let defaultScheme = C[501] || CT.C501;
      properties.add(new colors.ColorProperty.new("primary", this.primary, {defaultValue: defaultScheme.primary}));
      properties.add(new colors.ColorProperty.new("primaryVariant", this.primaryVariant, {defaultValue: defaultScheme.primaryVariant}));
      properties.add(new colors.ColorProperty.new("secondary", this.secondary, {defaultValue: defaultScheme.secondary}));
      properties.add(new colors.ColorProperty.new("secondaryVariant", this.secondaryVariant, {defaultValue: defaultScheme.secondaryVariant}));
      properties.add(new colors.ColorProperty.new("surface", this.surface, {defaultValue: defaultScheme.surface}));
      properties.add(new colors.ColorProperty.new("background", this.background, {defaultValue: defaultScheme.background}));
      properties.add(new colors.ColorProperty.new("error", this.error, {defaultValue: defaultScheme.error}));
      properties.add(new colors.ColorProperty.new("onPrimary", this.onPrimary, {defaultValue: defaultScheme.onPrimary}));
      properties.add(new colors.ColorProperty.new("onSecondary", this.onSecondary, {defaultValue: defaultScheme.onSecondary}));
      properties.add(new colors.ColorProperty.new("onSurface", this.onSurface, {defaultValue: defaultScheme.onSurface}));
      properties.add(new colors.ColorProperty.new("onBackground", this.onBackground, {defaultValue: defaultScheme.onBackground}));
      properties.add(new colors.ColorProperty.new("onError", this.onError, {defaultValue: defaultScheme.onError}));
      properties.add(new (T$.DiagnosticsPropertyOfBrightness()).new("brightness", this.brightness, {defaultValue: defaultScheme.brightness}));
    }
  };
  (color_scheme.ColorScheme.new = function(opts) {
    let primary = opts && 'primary' in opts ? opts.primary : null;
    if (primary == null) dart.nullFailed(I[86], 21, 19, "primary");
    let primaryVariant = opts && 'primaryVariant' in opts ? opts.primaryVariant : null;
    if (primaryVariant == null) dart.nullFailed(I[86], 22, 19, "primaryVariant");
    let secondary = opts && 'secondary' in opts ? opts.secondary : null;
    if (secondary == null) dart.nullFailed(I[86], 23, 19, "secondary");
    let secondaryVariant = opts && 'secondaryVariant' in opts ? opts.secondaryVariant : null;
    if (secondaryVariant == null) dart.nullFailed(I[86], 24, 19, "secondaryVariant");
    let surface = opts && 'surface' in opts ? opts.surface : null;
    if (surface == null) dart.nullFailed(I[86], 25, 19, "surface");
    let background = opts && 'background' in opts ? opts.background : null;
    if (background == null) dart.nullFailed(I[86], 26, 19, "background");
    let error = opts && 'error' in opts ? opts.error : null;
    if (error == null) dart.nullFailed(I[86], 27, 19, "error");
    let onPrimary = opts && 'onPrimary' in opts ? opts.onPrimary : null;
    if (onPrimary == null) dart.nullFailed(I[86], 28, 19, "onPrimary");
    let onSecondary = opts && 'onSecondary' in opts ? opts.onSecondary : null;
    if (onSecondary == null) dart.nullFailed(I[86], 29, 19, "onSecondary");
    let onSurface = opts && 'onSurface' in opts ? opts.onSurface : null;
    if (onSurface == null) dart.nullFailed(I[86], 30, 19, "onSurface");
    let onBackground = opts && 'onBackground' in opts ? opts.onBackground : null;
    if (onBackground == null) dart.nullFailed(I[86], 31, 19, "onBackground");
    let onError = opts && 'onError' in opts ? opts.onError : null;
    if (onError == null) dart.nullFailed(I[86], 32, 19, "onError");
    let brightness = opts && 'brightness' in opts ? opts.brightness : null;
    if (brightness == null) dart.nullFailed(I[86], 33, 19, "brightness");
    this[S$.primary] = primary;
    this[S$.primaryVariant] = primaryVariant;
    this[S$.secondary] = secondary;
    this[S$.secondaryVariant] = secondaryVariant;
    this[S$.surface] = surface;
    this[S$.background$1] = background;
    this[S$.error] = error;
    this[S$.onPrimary] = onPrimary;
    this[S$.onSecondary] = onSecondary;
    this[S$.onSurface] = onSurface;
    this[S$.onBackground] = onBackground;
    this[S$.onError] = onError;
    this[S$.brightness$2] = brightness;
    if (!(primary != null)) dart.assertFailed(null, I[86], 34, 15, "primary != null");
    if (!(primaryVariant != null)) dart.assertFailed(null, I[86], 35, 15, "primaryVariant != null");
    if (!(secondary != null)) dart.assertFailed(null, I[86], 36, 15, "secondary != null");
    if (!(secondaryVariant != null)) dart.assertFailed(null, I[86], 37, 15, "secondaryVariant != null");
    if (!(surface != null)) dart.assertFailed(null, I[86], 38, 15, "surface != null");
    if (!(background != null)) dart.assertFailed(null, I[86], 39, 15, "background != null");
    if (!(error != null)) dart.assertFailed(null, I[86], 40, 15, "error != null");
    if (!(onPrimary != null)) dart.assertFailed(null, I[86], 41, 15, "onPrimary != null");
    if (!(onSecondary != null)) dart.assertFailed(null, I[86], 42, 15, "onSecondary != null");
    if (!(onSurface != null)) dart.assertFailed(null, I[86], 43, 15, "onSurface != null");
    if (!(onBackground != null)) dart.assertFailed(null, I[86], 44, 15, "onBackground != null");
    if (!(onError != null)) dart.assertFailed(null, I[86], 45, 15, "onError != null");
    if (!(brightness != null)) dart.assertFailed(null, I[86], 46, 15, "brightness != null");
    ;
  }).prototype = color_scheme.ColorScheme.prototype;
  (color_scheme.ColorScheme.light = function(opts) {
    let primary = opts && 'primary' in opts ? opts.primary : C[473] || CT.C473;
    if (primary == null) dart.nullFailed(I[86], 51, 10, "primary");
    let primaryVariant = opts && 'primaryVariant' in opts ? opts.primaryVariant : C[474] || CT.C474;
    if (primaryVariant == null) dart.nullFailed(I[86], 52, 10, "primaryVariant");
    let secondary = opts && 'secondary' in opts ? opts.secondary : C[475] || CT.C475;
    if (secondary == null) dart.nullFailed(I[86], 53, 10, "secondary");
    let secondaryVariant = opts && 'secondaryVariant' in opts ? opts.secondaryVariant : C[476] || CT.C476;
    if (secondaryVariant == null) dart.nullFailed(I[86], 54, 10, "secondaryVariant");
    let surface = opts && 'surface' in opts ? opts.surface : C[477] || CT.C477;
    if (surface == null) dart.nullFailed(I[86], 55, 10, "surface");
    let background = opts && 'background' in opts ? opts.background : C[477] || CT.C477;
    if (background == null) dart.nullFailed(I[86], 56, 10, "background");
    let error = opts && 'error' in opts ? opts.error : C[478] || CT.C478;
    if (error == null) dart.nullFailed(I[86], 57, 10, "error");
    let onPrimary = opts && 'onPrimary' in opts ? opts.onPrimary : C[477] || CT.C477;
    if (onPrimary == null) dart.nullFailed(I[86], 58, 10, "onPrimary");
    let onSecondary = opts && 'onSecondary' in opts ? opts.onSecondary : C[66] || CT.C66;
    if (onSecondary == null) dart.nullFailed(I[86], 59, 10, "onSecondary");
    let onSurface = opts && 'onSurface' in opts ? opts.onSurface : C[66] || CT.C66;
    if (onSurface == null) dart.nullFailed(I[86], 60, 10, "onSurface");
    let onBackground = opts && 'onBackground' in opts ? opts.onBackground : C[66] || CT.C66;
    if (onBackground == null) dart.nullFailed(I[86], 61, 10, "onBackground");
    let onError = opts && 'onError' in opts ? opts.onError : C[477] || CT.C477;
    if (onError == null) dart.nullFailed(I[86], 62, 10, "onError");
    let brightness = opts && 'brightness' in opts ? opts.brightness : C[405] || CT.C405;
    if (brightness == null) dart.nullFailed(I[86], 63, 10, "brightness");
    this[S$.primary] = primary;
    this[S$.primaryVariant] = primaryVariant;
    this[S$.secondary] = secondary;
    this[S$.secondaryVariant] = secondaryVariant;
    this[S$.surface] = surface;
    this[S$.background$1] = background;
    this[S$.error] = error;
    this[S$.onPrimary] = onPrimary;
    this[S$.onSecondary] = onSecondary;
    this[S$.onSurface] = onSurface;
    this[S$.onBackground] = onBackground;
    this[S$.onError] = onError;
    this[S$.brightness$2] = brightness;
    if (!(primary != null)) dart.assertFailed(null, I[86], 64, 15, "primary != null");
    if (!(primaryVariant != null)) dart.assertFailed(null, I[86], 65, 15, "primaryVariant != null");
    if (!(secondary != null)) dart.assertFailed(null, I[86], 66, 15, "secondary != null");
    if (!(secondaryVariant != null)) dart.assertFailed(null, I[86], 67, 15, "secondaryVariant != null");
    if (!(surface != null)) dart.assertFailed(null, I[86], 68, 15, "surface != null");
    if (!(background != null)) dart.assertFailed(null, I[86], 69, 15, "background != null");
    if (!(error != null)) dart.assertFailed(null, I[86], 70, 15, "error != null");
    if (!(onPrimary != null)) dart.assertFailed(null, I[86], 71, 15, "onPrimary != null");
    if (!(onSecondary != null)) dart.assertFailed(null, I[86], 72, 15, "onSecondary != null");
    if (!(onSurface != null)) dart.assertFailed(null, I[86], 73, 15, "onSurface != null");
    if (!(onBackground != null)) dart.assertFailed(null, I[86], 74, 15, "onBackground != null");
    if (!(onError != null)) dart.assertFailed(null, I[86], 75, 15, "onError != null");
    if (!(brightness != null)) dart.assertFailed(null, I[86], 76, 15, "brightness != null");
    ;
  }).prototype = color_scheme.ColorScheme.prototype;
  (color_scheme.ColorScheme.dark = function(opts) {
    let primary = opts && 'primary' in opts ? opts.primary : C[479] || CT.C479;
    if (primary == null) dart.nullFailed(I[86], 81, 10, "primary");
    let primaryVariant = opts && 'primaryVariant' in opts ? opts.primaryVariant : C[474] || CT.C474;
    if (primaryVariant == null) dart.nullFailed(I[86], 82, 10, "primaryVariant");
    let secondary = opts && 'secondary' in opts ? opts.secondary : C[475] || CT.C475;
    if (secondary == null) dart.nullFailed(I[86], 83, 10, "secondary");
    let secondaryVariant = opts && 'secondaryVariant' in opts ? opts.secondaryVariant : C[475] || CT.C475;
    if (secondaryVariant == null) dart.nullFailed(I[86], 84, 10, "secondaryVariant");
    let surface = opts && 'surface' in opts ? opts.surface : C[480] || CT.C480;
    if (surface == null) dart.nullFailed(I[86], 85, 10, "surface");
    let background = opts && 'background' in opts ? opts.background : C[480] || CT.C480;
    if (background == null) dart.nullFailed(I[86], 86, 10, "background");
    let error = opts && 'error' in opts ? opts.error : C[481] || CT.C481;
    if (error == null) dart.nullFailed(I[86], 87, 10, "error");
    let onPrimary = opts && 'onPrimary' in opts ? opts.onPrimary : C[66] || CT.C66;
    if (onPrimary == null) dart.nullFailed(I[86], 88, 10, "onPrimary");
    let onSecondary = opts && 'onSecondary' in opts ? opts.onSecondary : C[66] || CT.C66;
    if (onSecondary == null) dart.nullFailed(I[86], 89, 10, "onSecondary");
    let onSurface = opts && 'onSurface' in opts ? opts.onSurface : C[477] || CT.C477;
    if (onSurface == null) dart.nullFailed(I[86], 90, 10, "onSurface");
    let onBackground = opts && 'onBackground' in opts ? opts.onBackground : C[477] || CT.C477;
    if (onBackground == null) dart.nullFailed(I[86], 91, 10, "onBackground");
    let onError = opts && 'onError' in opts ? opts.onError : C[66] || CT.C66;
    if (onError == null) dart.nullFailed(I[86], 92, 10, "onError");
    let brightness = opts && 'brightness' in opts ? opts.brightness : C[404] || CT.C404;
    if (brightness == null) dart.nullFailed(I[86], 93, 10, "brightness");
    this[S$.primary] = primary;
    this[S$.primaryVariant] = primaryVariant;
    this[S$.secondary] = secondary;
    this[S$.secondaryVariant] = secondaryVariant;
    this[S$.surface] = surface;
    this[S$.background$1] = background;
    this[S$.error] = error;
    this[S$.onPrimary] = onPrimary;
    this[S$.onSecondary] = onSecondary;
    this[S$.onSurface] = onSurface;
    this[S$.onBackground] = onBackground;
    this[S$.onError] = onError;
    this[S$.brightness$2] = brightness;
    if (!(primary != null)) dart.assertFailed(null, I[86], 94, 15, "primary != null");
    if (!(primaryVariant != null)) dart.assertFailed(null, I[86], 95, 15, "primaryVariant != null");
    if (!(secondary != null)) dart.assertFailed(null, I[86], 96, 15, "secondary != null");
    if (!(secondaryVariant != null)) dart.assertFailed(null, I[86], 97, 15, "secondaryVariant != null");
    if (!(surface != null)) dart.assertFailed(null, I[86], 98, 15, "surface != null");
    if (!(background != null)) dart.assertFailed(null, I[86], 99, 15, "background != null");
    if (!(error != null)) dart.assertFailed(null, I[86], 100, 15, "error != null");
    if (!(onPrimary != null)) dart.assertFailed(null, I[86], 101, 15, "onPrimary != null");
    if (!(onSecondary != null)) dart.assertFailed(null, I[86], 102, 15, "onSecondary != null");
    if (!(onSurface != null)) dart.assertFailed(null, I[86], 103, 15, "onSurface != null");
    if (!(onBackground != null)) dart.assertFailed(null, I[86], 104, 15, "onBackground != null");
    if (!(onError != null)) dart.assertFailed(null, I[86], 105, 15, "onError != null");
    if (!(brightness != null)) dart.assertFailed(null, I[86], 106, 15, "brightness != null");
    ;
  }).prototype = color_scheme.ColorScheme.prototype;
  (color_scheme.ColorScheme.highContrastLight = function(opts) {
    let primary = opts && 'primary' in opts ? opts.primary : C[482] || CT.C482;
    if (primary == null) dart.nullFailed(I[86], 112, 10, "primary");
    let primaryVariant = opts && 'primaryVariant' in opts ? opts.primaryVariant : C[483] || CT.C483;
    if (primaryVariant == null) dart.nullFailed(I[86], 113, 10, "primaryVariant");
    let secondary = opts && 'secondary' in opts ? opts.secondary : C[484] || CT.C484;
    if (secondary == null) dart.nullFailed(I[86], 114, 10, "secondary");
    let secondaryVariant = opts && 'secondaryVariant' in opts ? opts.secondaryVariant : C[476] || CT.C476;
    if (secondaryVariant == null) dart.nullFailed(I[86], 115, 10, "secondaryVariant");
    let surface = opts && 'surface' in opts ? opts.surface : C[477] || CT.C477;
    if (surface == null) dart.nullFailed(I[86], 116, 10, "surface");
    let background = opts && 'background' in opts ? opts.background : C[477] || CT.C477;
    if (background == null) dart.nullFailed(I[86], 117, 10, "background");
    let error = opts && 'error' in opts ? opts.error : C[485] || CT.C485;
    if (error == null) dart.nullFailed(I[86], 118, 10, "error");
    let onPrimary = opts && 'onPrimary' in opts ? opts.onPrimary : C[477] || CT.C477;
    if (onPrimary == null) dart.nullFailed(I[86], 119, 10, "onPrimary");
    let onSecondary = opts && 'onSecondary' in opts ? opts.onSecondary : C[66] || CT.C66;
    if (onSecondary == null) dart.nullFailed(I[86], 120, 10, "onSecondary");
    let onSurface = opts && 'onSurface' in opts ? opts.onSurface : C[66] || CT.C66;
    if (onSurface == null) dart.nullFailed(I[86], 121, 10, "onSurface");
    let onBackground = opts && 'onBackground' in opts ? opts.onBackground : C[66] || CT.C66;
    if (onBackground == null) dart.nullFailed(I[86], 122, 10, "onBackground");
    let onError = opts && 'onError' in opts ? opts.onError : C[477] || CT.C477;
    if (onError == null) dart.nullFailed(I[86], 123, 10, "onError");
    let brightness = opts && 'brightness' in opts ? opts.brightness : C[405] || CT.C405;
    if (brightness == null) dart.nullFailed(I[86], 124, 10, "brightness");
    this[S$.primary] = primary;
    this[S$.primaryVariant] = primaryVariant;
    this[S$.secondary] = secondary;
    this[S$.secondaryVariant] = secondaryVariant;
    this[S$.surface] = surface;
    this[S$.background$1] = background;
    this[S$.error] = error;
    this[S$.onPrimary] = onPrimary;
    this[S$.onSecondary] = onSecondary;
    this[S$.onSurface] = onSurface;
    this[S$.onBackground] = onBackground;
    this[S$.onError] = onError;
    this[S$.brightness$2] = brightness;
    if (!(primary != null)) dart.assertFailed(null, I[86], 125, 15, "primary != null");
    if (!(primaryVariant != null)) dart.assertFailed(null, I[86], 126, 16, "primaryVariant != null");
    if (!(secondary != null)) dart.assertFailed(null, I[86], 127, 16, "secondary != null");
    if (!(secondaryVariant != null)) dart.assertFailed(null, I[86], 128, 16, "secondaryVariant != null");
    if (!(surface != null)) dart.assertFailed(null, I[86], 129, 16, "surface != null");
    if (!(background != null)) dart.assertFailed(null, I[86], 130, 16, "background != null");
    if (!(error != null)) dart.assertFailed(null, I[86], 131, 16, "error != null");
    if (!(onPrimary != null)) dart.assertFailed(null, I[86], 132, 16, "onPrimary != null");
    if (!(onSecondary != null)) dart.assertFailed(null, I[86], 133, 16, "onSecondary != null");
    if (!(onSurface != null)) dart.assertFailed(null, I[86], 134, 16, "onSurface != null");
    if (!(onBackground != null)) dart.assertFailed(null, I[86], 135, 16, "onBackground != null");
    if (!(onError != null)) dart.assertFailed(null, I[86], 136, 16, "onError != null");
    if (!(brightness != null)) dart.assertFailed(null, I[86], 137, 16, "brightness != null");
    ;
  }).prototype = color_scheme.ColorScheme.prototype;
  (color_scheme.ColorScheme.highContrastDark = function(opts) {
    let primary = opts && 'primary' in opts ? opts.primary : C[486] || CT.C486;
    if (primary == null) dart.nullFailed(I[86], 142, 10, "primary");
    let primaryVariant = opts && 'primaryVariant' in opts ? opts.primaryVariant : C[487] || CT.C487;
    if (primaryVariant == null) dart.nullFailed(I[86], 143, 10, "primaryVariant");
    let secondary = opts && 'secondary' in opts ? opts.secondary : C[484] || CT.C484;
    if (secondary == null) dart.nullFailed(I[86], 144, 10, "secondary");
    let secondaryVariant = opts && 'secondaryVariant' in opts ? opts.secondaryVariant : C[484] || CT.C484;
    if (secondaryVariant == null) dart.nullFailed(I[86], 145, 10, "secondaryVariant");
    let surface = opts && 'surface' in opts ? opts.surface : C[480] || CT.C480;
    if (surface == null) dart.nullFailed(I[86], 146, 10, "surface");
    let background = opts && 'background' in opts ? opts.background : C[480] || CT.C480;
    if (background == null) dart.nullFailed(I[86], 147, 10, "background");
    let error = opts && 'error' in opts ? opts.error : C[488] || CT.C488;
    if (error == null) dart.nullFailed(I[86], 148, 10, "error");
    let onPrimary = opts && 'onPrimary' in opts ? opts.onPrimary : C[66] || CT.C66;
    if (onPrimary == null) dart.nullFailed(I[86], 149, 10, "onPrimary");
    let onSecondary = opts && 'onSecondary' in opts ? opts.onSecondary : C[66] || CT.C66;
    if (onSecondary == null) dart.nullFailed(I[86], 150, 10, "onSecondary");
    let onSurface = opts && 'onSurface' in opts ? opts.onSurface : C[477] || CT.C477;
    if (onSurface == null) dart.nullFailed(I[86], 151, 10, "onSurface");
    let onBackground = opts && 'onBackground' in opts ? opts.onBackground : C[477] || CT.C477;
    if (onBackground == null) dart.nullFailed(I[86], 152, 10, "onBackground");
    let onError = opts && 'onError' in opts ? opts.onError : C[66] || CT.C66;
    if (onError == null) dart.nullFailed(I[86], 153, 10, "onError");
    let brightness = opts && 'brightness' in opts ? opts.brightness : C[404] || CT.C404;
    if (brightness == null) dart.nullFailed(I[86], 154, 10, "brightness");
    this[S$.primary] = primary;
    this[S$.primaryVariant] = primaryVariant;
    this[S$.secondary] = secondary;
    this[S$.secondaryVariant] = secondaryVariant;
    this[S$.surface] = surface;
    this[S$.background$1] = background;
    this[S$.error] = error;
    this[S$.onPrimary] = onPrimary;
    this[S$.onSecondary] = onSecondary;
    this[S$.onSurface] = onSurface;
    this[S$.onBackground] = onBackground;
    this[S$.onError] = onError;
    this[S$.brightness$2] = brightness;
    if (!(primary != null)) dart.assertFailed(null, I[86], 155, 15, "primary != null");
    if (!(primaryVariant != null)) dart.assertFailed(null, I[86], 156, 16, "primaryVariant != null");
    if (!(secondary != null)) dart.assertFailed(null, I[86], 157, 16, "secondary != null");
    if (!(secondaryVariant != null)) dart.assertFailed(null, I[86], 158, 16, "secondaryVariant != null");
    if (!(surface != null)) dart.assertFailed(null, I[86], 159, 16, "surface != null");
    if (!(background != null)) dart.assertFailed(null, I[86], 160, 16, "background != null");
    if (!(error != null)) dart.assertFailed(null, I[86], 161, 16, "error != null");
    if (!(onPrimary != null)) dart.assertFailed(null, I[86], 162, 16, "onPrimary != null");
    if (!(onSecondary != null)) dart.assertFailed(null, I[86], 163, 16, "onSecondary != null");
    if (!(onSurface != null)) dart.assertFailed(null, I[86], 164, 16, "onSurface != null");
    if (!(onBackground != null)) dart.assertFailed(null, I[86], 165, 16, "onBackground != null");
    if (!(onError != null)) dart.assertFailed(null, I[86], 166, 16, "onError != null");
    if (!(brightness != null)) dart.assertFailed(null, I[86], 167, 16, "brightness != null");
    ;
  }).prototype = color_scheme.ColorScheme.prototype;
  dart.addTypeTests(color_scheme.ColorScheme);
  dart.addTypeCaches(color_scheme.ColorScheme);
  dart.setMethodSignature(color_scheme.ColorScheme, () => ({
    __proto__: dart.getMethods(color_scheme.ColorScheme.__proto__),
    copyWith: dart.fnType(color_scheme.ColorScheme, [], {background: dart.nullable(ui.Color), brightness: dart.nullable(ui.Brightness), error: dart.nullable(ui.Color), onBackground: dart.nullable(ui.Color), onError: dart.nullable(ui.Color), onPrimary: dart.nullable(ui.Color), onSecondary: dart.nullable(ui.Color), onSurface: dart.nullable(ui.Color), primary: dart.nullable(ui.Color), primaryVariant: dart.nullable(ui.Color), secondary: dart.nullable(ui.Color), secondaryVariant: dart.nullable(ui.Color), surface: dart.nullable(ui.Color)}, {})
  }));
  dart.setLibraryUri(color_scheme.ColorScheme, I[87]);
  dart.setFieldSignature(color_scheme.ColorScheme, () => ({
    __proto__: dart.getFields(color_scheme.ColorScheme.__proto__),
    primary: dart.finalFieldType(ui.Color),
    primaryVariant: dart.finalFieldType(ui.Color),
    secondary: dart.finalFieldType(ui.Color),
    secondaryVariant: dart.finalFieldType(ui.Color),
    surface: dart.finalFieldType(ui.Color),
    background: dart.finalFieldType(ui.Color),
    error: dart.finalFieldType(ui.Color),
    onPrimary: dart.finalFieldType(ui.Color),
    onSecondary: dart.finalFieldType(ui.Color),
    onSurface: dart.finalFieldType(ui.Color),
    onBackground: dart.finalFieldType(ui.Color),
    onError: dart.finalFieldType(ui.Color),
    brightness: dart.finalFieldType(ui.Brightness)
  }));
  dart.defineExtensionMethods(color_scheme.ColorScheme, ['_equals']);
  dart.defineExtensionAccessors(color_scheme.ColorScheme, ['hashCode']);
  button_theme.ButtonTextTheme = class ButtonTextTheme extends core.Object {
    toString() {
      return this[S$._name$15];
    }
  };
  (button_theme.ButtonTextTheme.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[88], 27, 6, "index");
    if (_name == null) dart.nullFailed(I[88], 27, 6, "_name");
    this.index = index;
    this[S$._name$15] = _name;
    ;
  }).prototype = button_theme.ButtonTextTheme.prototype;
  dart.addTypeTests(button_theme.ButtonTextTheme);
  dart.addTypeCaches(button_theme.ButtonTextTheme);
  button_theme.ButtonTextTheme[dart.implements] = () => [core.Enum];
  dart.setLibraryUri(button_theme.ButtonTextTheme, I[89]);
  dart.setFieldSignature(button_theme.ButtonTextTheme, () => ({
    __proto__: dart.getFields(button_theme.ButtonTextTheme.__proto__),
    index: dart.finalFieldType(core.int),
    [S$._name$15]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(button_theme.ButtonTextTheme, ['toString']);
  button_theme.ButtonTextTheme.normal = C[502] || CT.C502;
  button_theme.ButtonTextTheme.accent = C[503] || CT.C503;
  button_theme.ButtonTextTheme.primary = C[504] || CT.C504;
  button_theme.ButtonTextTheme.values = C[505] || CT.C505;
  button_theme.ButtonBarLayoutBehavior = class ButtonBarLayoutBehavior extends core.Object {
    toString() {
      return this[S$._name$15];
    }
  };
  (button_theme.ButtonBarLayoutBehavior.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[88], 40, 6, "index");
    if (_name == null) dart.nullFailed(I[88], 40, 6, "_name");
    this.index = index;
    this[S$._name$15] = _name;
    ;
  }).prototype = button_theme.ButtonBarLayoutBehavior.prototype;
  dart.addTypeTests(button_theme.ButtonBarLayoutBehavior);
  dart.addTypeCaches(button_theme.ButtonBarLayoutBehavior);
  button_theme.ButtonBarLayoutBehavior[dart.implements] = () => [core.Enum];
  dart.setLibraryUri(button_theme.ButtonBarLayoutBehavior, I[89]);
  dart.setFieldSignature(button_theme.ButtonBarLayoutBehavior, () => ({
    __proto__: dart.getFields(button_theme.ButtonBarLayoutBehavior.__proto__),
    index: dart.finalFieldType(core.int),
    [S$._name$15]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(button_theme.ButtonBarLayoutBehavior, ['toString']);
  button_theme.ButtonBarLayoutBehavior.constrained = C[506] || CT.C506;
  button_theme.ButtonBarLayoutBehavior.padded = C[507] || CT.C507;
  button_theme.ButtonBarLayoutBehavior.values = C[508] || CT.C508;
  button_theme.ButtonTheme = class ButtonTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S$.data$16];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t34, t34$, t34$0;
      if (context == null) dart.nullFailed(I[88], 143, 42, "context");
      let inheritedButtonTheme = context.dependOnInheritedWidgetOfExactType(button_theme.ButtonTheme);
      let buttonTheme = (t34 = inheritedButtonTheme, t34 == null ? null : t34.data);
      if ((t34$ = buttonTheme, t34$ == null ? null : t34$.colorScheme) == null) {
        let theme = theme$.Theme.of(context);
        buttonTheme == null ? buttonTheme = theme.buttonTheme : null;
        if (buttonTheme.colorScheme == null) {
          buttonTheme = buttonTheme.copyWith({colorScheme: (t34$0 = theme.buttonTheme.colorScheme, t34$0 == null ? theme.colorScheme : t34$0)});
          if (!(buttonTheme.colorScheme != null)) dart.assertFailed(null, I[88], 153, 16, "buttonTheme.colorScheme != null");
        }
      }
      return dart.nullCheck(buttonTheme);
    }
    wrap(context, child) {
      if (context == null) dart.nullFailed(I[88], 160, 28, "context");
      if (child == null) dart.nullFailed(I[88], 160, 44, "child");
      return new button_theme.ButtonTheme.fromButtonThemeData({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[509] || CT.C509});
    }
    updateShouldNotify(oldWidget) {
      button_theme.ButtonTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[88], 165, 39, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (button_theme.ButtonTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : C[502] || CT.C502;
    if (textTheme == null) dart.nullFailed(I[88], 83, 21, "textTheme");
    let layoutBehavior = opts && 'layoutBehavior' in opts ? opts.layoutBehavior : C[507] || CT.C507;
    if (layoutBehavior == null) dart.nullFailed(I[88], 84, 29, "layoutBehavior");
    let minWidth = opts && 'minWidth' in opts ? opts.minWidth : 88;
    if (minWidth == null) dart.nullFailed(I[88], 85, 12, "minWidth");
    let height = opts && 'height' in opts ? opts.height : 36;
    if (height == null) dart.nullFailed(I[88], 86, 12, "height");
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let alignedDropdown = opts && 'alignedDropdown' in opts ? opts.alignedDropdown : false;
    if (alignedDropdown == null) dart.nullFailed(I[88], 89, 10, "alignedDropdown");
    let buttonColor = opts && 'buttonColor' in opts ? opts.buttonColor : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let colorScheme = opts && 'colorScheme' in opts ? opts.colorScheme : null;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[88], 98, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(textTheme != null)) dart.assertFailed(null, I[88], 99, 15, "textTheme != null");
    if (!(minWidth != null && dart.notNull(minWidth) >= 0.0)) dart.assertFailed(null, I[88], 100, 15, "minWidth != null && minWidth >= 0.0");
    if (!(height != null && dart.notNull(height) >= 0.0)) dart.assertFailed(null, I[88], 101, 15, "height != null && height >= 0.0");
    if (!(alignedDropdown != null)) dart.assertFailed(null, I[88], 102, 15, "alignedDropdown != null");
    if (!(layoutBehavior != null)) dart.assertFailed(null, I[88], 103, 15, "layoutBehavior != null");
    this[S$.data$16] = new button_theme.ButtonThemeData.new({textTheme: textTheme, minWidth: minWidth, height: height, padding: padding, shape: shape, alignedDropdown: alignedDropdown, layoutBehavior: layoutBehavior, buttonColor: buttonColor, disabledColor: disabledColor, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, splashColor: splashColor, colorScheme: colorScheme, materialTapTargetSize: materialTapTargetSize});
    button_theme.ButtonTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = button_theme.ButtonTheme.prototype;
  (button_theme.ButtonTheme.fromButtonThemeData = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[88], 128, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[88], 129, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.data$16] = data;
    if (!(data != null)) dart.assertFailed(null, I[88], 130, 15, "data != null");
    button_theme.ButtonTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = button_theme.ButtonTheme.prototype;
  dart.addTypeTests(button_theme.ButtonTheme);
  dart.addTypeCaches(button_theme.ButtonTheme);
  dart.setMethodSignature(button_theme.ButtonTheme, () => ({
    __proto__: dart.getMethods(button_theme.ButtonTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(button_theme.ButtonTheme, I[89]);
  dart.setFieldSignature(button_theme.ButtonTheme, () => ({
    __proto__: dart.getFields(button_theme.ButtonTheme.__proto__),
    data: dart.finalFieldType(button_theme.ButtonThemeData)
  }));
  const Object_Diagnosticable$36$22 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$22.new = function() {
  }).prototype = Object_Diagnosticable$36$22.prototype;
  dart.applyMixin(Object_Diagnosticable$36$22, diagnostics.Diagnosticable);
  button_theme.ButtonThemeData = class ButtonThemeData extends Object_Diagnosticable$36$22 {
    get minWidth() {
      return this[S$.minWidth$2];
    }
    set minWidth(value) {
      super.minWidth = value;
    }
    get height() {
      return this[S$.height$2];
    }
    set height(value) {
      super.height = value;
    }
    get textTheme() {
      return this[S$.textTheme$2];
    }
    set textTheme(value) {
      super.textTheme = value;
    }
    get layoutBehavior() {
      return this[S$0.layoutBehavior];
    }
    set layoutBehavior(value) {
      super.layoutBehavior = value;
    }
    get [S$0._padding$1]() {
      return this[S$0._padding];
    }
    set [S$0._padding$1](value) {
      super[S$0._padding$1] = value;
    }
    get [S$0._shape$1]() {
      return this[S$0._shape];
    }
    set [S$0._shape$1](value) {
      super[S$0._shape$1] = value;
    }
    get alignedDropdown() {
      return this[S$0.alignedDropdown];
    }
    set alignedDropdown(value) {
      super.alignedDropdown = value;
    }
    get [S$0._buttonColor$1]() {
      return this[S$0._buttonColor];
    }
    set [S$0._buttonColor$1](value) {
      super[S$0._buttonColor$1] = value;
    }
    get [S$0._disabledColor$1]() {
      return this[S$0._disabledColor];
    }
    set [S$0._disabledColor$1](value) {
      super[S$0._disabledColor$1] = value;
    }
    get [S$0._focusColor$1]() {
      return this[S$0._focusColor];
    }
    set [S$0._focusColor$1](value) {
      super[S$0._focusColor$1] = value;
    }
    get [S$0._hoverColor$1]() {
      return this[S$0._hoverColor];
    }
    set [S$0._hoverColor$1](value) {
      super[S$0._hoverColor$1] = value;
    }
    get [S$0._highlightColor$1]() {
      return this[S$0._highlightColor];
    }
    set [S$0._highlightColor$1](value) {
      super[S$0._highlightColor$1] = value;
    }
    get [S$0._splashColor$1]() {
      return this[S$0._splashColor];
    }
    set [S$0._splashColor$1](value) {
      super[S$0._splashColor$1] = value;
    }
    get colorScheme() {
      return this[S$0.colorScheme];
    }
    set colorScheme(value) {
      super.colorScheme = value;
    }
    get [S$0._materialTapTargetSize$1]() {
      return this[S$0._materialTapTargetSize];
    }
    set [S$0._materialTapTargetSize$1](value) {
      super[S$0._materialTapTargetSize$1] = value;
    }
    get constraints() {
      return new box$.BoxConstraints.new({minWidth: this.minWidth, minHeight: this.height});
    }
    get padding() {
      if (this[S$0._padding$1] != null) return dart.nullCheck(this[S$0._padding$1]);
      switch (this.textTheme) {
        case C[502] || CT.C502:
        case C[503] || CT.C503:
        {
          return C[510] || CT.C510;
        }
        case C[504] || CT.C504:
        {
          return C[511] || CT.C511;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    get shape() {
      if (this[S$0._shape$1] != null) return dart.nullCheck(this[S$0._shape$1]);
      switch (this.textTheme) {
        case C[502] || CT.C502:
        case C[503] || CT.C503:
        {
          return C[512] || CT.C512;
        }
        case C[504] || CT.C504:
        {
          return C[63] || CT.C63;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    getBrightness(button) {
      let t34;
      if (button == null) dart.nullFailed(I[88], 435, 43, "button");
      t34 = button.colorBrightness;
      return t34 == null ? dart.nullCheck(this.colorScheme).brightness : t34;
    }
    getTextTheme(button) {
      let t34;
      if (button == null) dart.nullFailed(I[88], 444, 47, "button");
      t34 = button.textTheme;
      return t34 == null ? this.textTheme : t34;
    }
    getDisabledTextColor(button) {
      if (button == null) dart.nullFailed(I[88], 457, 45, "button");
      if (T$.MaterialStatePropertyOfColorN().is(button.textColor)) return dart.nullCheck(button.textColor);
      if (button.disabledTextColor != null) return dart.nullCheck(button.disabledTextColor);
      return dart.nullCheck(this.colorScheme).onSurface.withOpacity(0.38);
    }
    getDisabledFillColor(button) {
      if (button == null) dart.nullFailed(I[88], 475, 45, "button");
      if (button.disabledColor != null) return dart.nullCheck(button.disabledColor);
      if (this[S$0._disabledColor$1] != null) return dart.nullCheck(this[S$0._disabledColor$1]);
      return dart.nullCheck(this.colorScheme).onSurface.withOpacity(0.38);
    }
    getFillColor(button) {
      let t34;
      if (button == null) dart.nullFailed(I[88], 508, 38, "button");
      let fillColor = dart.test(button.enabled) ? button.color : button.disabledColor;
      if (fillColor != null) return fillColor;
      if (flat_button.FlatButton.is(button) || outline_button.OutlineButton.is(button) || dart.equals(dart.runtimeType(button), dart.wrapType(material_button.MaterialButton))) return null;
      if (dart.test(button.enabled) && raised_button.RaisedButton.is(button) && this[S$0._buttonColor$1] != null) return this[S$0._buttonColor$1];
      switch (this.getTextTheme(button)) {
        case C[502] || CT.C502:
        case C[503] || CT.C503:
        {
          return dart.test(button.enabled) ? dart.nullCheck(this.colorScheme).primary : this.getDisabledFillColor(button);
        }
        case C[504] || CT.C504:
        {
          return dart.test(button.enabled) ? (t34 = this[S$0._buttonColor$1], t34 == null ? dart.nullCheck(this.colorScheme).primary : t34) : dart.nullCheck(this.colorScheme).onSurface.withOpacity(0.12);
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    getTextColor(button) {
      if (button == null) dart.nullFailed(I[88], 547, 37, "button");
      if (!dart.test(button.enabled)) return this.getDisabledTextColor(button);
      if (button.textColor != null) return dart.nullCheck(button.textColor);
      switch (this.getTextTheme(button)) {
        case C[502] || CT.C502:
        {
          return this.getBrightness(button) == ui.Brightness.dark ? colors$.Colors.white : colors$.Colors.black87;
        }
        case C[503] || CT.C503:
        {
          return dart.nullCheck(this.colorScheme).secondary;
        }
        case C[504] || CT.C504:
        {
          let fillColor = this.getFillColor(button);
          let fillIsDark = fillColor != null ? theme_data.ThemeData.estimateBrightnessForColor(fillColor) == ui.Brightness.dark : this.getBrightness(button) == ui.Brightness.dark;
          if (fillIsDark) return colors$.Colors.white;
          if (flat_button.FlatButton.is(button) || outline_button.OutlineButton.is(button)) return dart.nullCheck(this.colorScheme).primary;
          return colors$.Colors.black;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    getSplashColor(button) {
      if (button == null) dart.nullFailed(I[88], 587, 39, "button");
      if (button.splashColor != null) return dart.nullCheck(button.splashColor);
      if (this[S$0._splashColor$1] != null && (raised_button.RaisedButton.is(button) || outline_button.OutlineButton.is(button))) return dart.nullCheck(this[S$0._splashColor$1]);
      if (this[S$0._splashColor$1] != null && flat_button.FlatButton.is(button)) {
        switch (this.getTextTheme(button)) {
          case C[502] || CT.C502:
          case C[503] || CT.C503:
          {
            return dart.nullCheck(this[S$0._splashColor$1]);
          }
          case C[504] || CT.C504:
          {
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
      }
      return this.getTextColor(button).withOpacity(0.12);
    }
    getFocusColor(button) {
      let t34, t34$;
      if (button == null) dart.nullFailed(I[88], 616, 38, "button");
      t34$ = (t34 = button.focusColor, t34 == null ? this[S$0._focusColor$1] : t34);
      return t34$ == null ? this.getTextColor(button).withOpacity(0.12) : t34$;
    }
    getHoverColor(button) {
      let t34, t34$;
      if (button == null) dart.nullFailed(I[88], 629, 38, "button");
      t34$ = (t34 = button.hoverColor, t34 == null ? this[S$0._hoverColor$1] : t34);
      return t34$ == null ? this.getTextColor(button).withOpacity(0.04) : t34$;
    }
    getHighlightColor(button) {
      let t34;
      if (button == null) dart.nullFailed(I[88], 642, 42, "button");
      if (button.highlightColor != null) return dart.nullCheck(button.highlightColor);
      switch (this.getTextTheme(button)) {
        case C[502] || CT.C502:
        case C[503] || CT.C503:
        {
          t34 = this[S$0._highlightColor$1];
          return t34 == null ? this.getTextColor(button).withOpacity(0.16) : t34;
        }
        case C[504] || CT.C504:
        {
          return colors$.Colors.transparent;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    getElevation(button) {
      if (button == null) dart.nullFailed(I[88], 660, 38, "button");
      if (button.elevation != null) return dart.nullCheck(button.elevation);
      if (flat_button.FlatButton.is(button)) return 0.0;
      return 2.0;
    }
    getFocusElevation(button) {
      if (button == null) dart.nullFailed(I[88], 674, 43, "button");
      if (button.focusElevation != null) return dart.nullCheck(button.focusElevation);
      if (flat_button.FlatButton.is(button)) return 0.0;
      if (outline_button.OutlineButton.is(button)) return 0.0;
      return 4.0;
    }
    getHoverElevation(button) {
      if (button == null) dart.nullFailed(I[88], 690, 43, "button");
      if (button.hoverElevation != null) return dart.nullCheck(button.hoverElevation);
      if (flat_button.FlatButton.is(button)) return 0.0;
      if (outline_button.OutlineButton.is(button)) return 0.0;
      return 4.0;
    }
    getHighlightElevation(button) {
      if (button == null) dart.nullFailed(I[88], 706, 47, "button");
      if (button.highlightElevation != null) return dart.nullCheck(button.highlightElevation);
      if (flat_button.FlatButton.is(button)) return 0.0;
      if (outline_button.OutlineButton.is(button)) return 0.0;
      return 8.0;
    }
    getDisabledElevation(button) {
      if (button == null) dart.nullFailed(I[88], 722, 46, "button");
      if (button.disabledElevation != null) return dart.nullCheck(button.disabledElevation);
      return 0.0;
    }
    getPadding(button) {
      if (button == null) dart.nullFailed(I[88], 741, 48, "button");
      if (button.padding != null) return dart.nullCheck(button.padding);
      if (material_button.MaterialButtonWithIconMixin.is(button)) return C[515] || CT.C515;
      if (this[S$0._padding$1] != null) return dart.nullCheck(this[S$0._padding$1]);
      switch (this.getTextTheme(button)) {
        case C[502] || CT.C502:
        case C[503] || CT.C503:
        {
          return C[510] || CT.C510;
        }
        case C[504] || CT.C504:
        {
          return C[511] || CT.C511;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    getShape(button) {
      let t34;
      if (button == null) dart.nullFailed(I[88], 764, 39, "button");
      t34 = button.shape;
      return t34 == null ? this.shape : t34;
    }
    getAnimationDuration(button) {
      let t34;
      if (button == null) dart.nullFailed(I[88], 772, 48, "button");
      t34 = button.animationDuration;
      return t34 == null ? constants.kThemeChangeDuration : t34;
    }
    getConstraints(button) {
      if (button == null) dart.nullFailed(I[88], 781, 48, "button");
      return this.constraints;
    }
    getMaterialTapTargetSize(button) {
      let t34, t34$;
      if (button == null) dart.nullFailed(I[88], 791, 65, "button");
      t34$ = (t34 = button.materialTapTargetSize, t34 == null ? this[S$0._materialTapTargetSize$1] : t34);
      return t34$ == null ? theme_data.MaterialTapTargetSize.padded : t34$;
    }
    copyWith(opts) {
      let t34, t34$, t34$0, t34$1, t34$2, t34$3, t34$4, t34$5, t34$6, t34$7, t34$8, t34$9, t34$10, t34$11, t34$12;
      let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
      let layoutBehavior = opts && 'layoutBehavior' in opts ? opts.layoutBehavior : null;
      let minWidth = opts && 'minWidth' in opts ? opts.minWidth : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let alignedDropdown = opts && 'alignedDropdown' in opts ? opts.alignedDropdown : null;
      let buttonColor = opts && 'buttonColor' in opts ? opts.buttonColor : null;
      let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
      let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
      let colorScheme = opts && 'colorScheme' in opts ? opts.colorScheme : null;
      let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
      return new button_theme.ButtonThemeData.new({textTheme: (t34 = textTheme, t34 == null ? this.textTheme : t34), layoutBehavior: (t34$ = layoutBehavior, t34$ == null ? this.layoutBehavior : t34$), minWidth: (t34$0 = minWidth, t34$0 == null ? this.minWidth : t34$0), height: (t34$1 = height, t34$1 == null ? this.height : t34$1), padding: (t34$2 = padding, t34$2 == null ? this.padding : t34$2), shape: (t34$3 = shape, t34$3 == null ? this.shape : t34$3), alignedDropdown: (t34$4 = alignedDropdown, t34$4 == null ? this.alignedDropdown : t34$4), buttonColor: (t34$5 = buttonColor, t34$5 == null ? this[S$0._buttonColor$1] : t34$5), disabledColor: (t34$6 = disabledColor, t34$6 == null ? this[S$0._disabledColor$1] : t34$6), focusColor: (t34$7 = focusColor, t34$7 == null ? this[S$0._focusColor$1] : t34$7), hoverColor: (t34$8 = hoverColor, t34$8 == null ? this[S$0._hoverColor$1] : t34$8), highlightColor: (t34$9 = highlightColor, t34$9 == null ? this[S$0._highlightColor$1] : t34$9), splashColor: (t34$10 = splashColor, t34$10 == null ? this[S$0._splashColor$1] : t34$10), colorScheme: (t34$11 = colorScheme, t34$11 == null ? this.colorScheme : t34$11), materialTapTargetSize: (t34$12 = materialTapTargetSize, t34$12 == null ? this[S$0._materialTapTargetSize$1] : t34$12)});
    }
    _equals(other) {
      if (other == null) return false;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return button_theme.ButtonThemeData.is(other) && other.textTheme == this.textTheme && other.minWidth == this.minWidth && other.height == this.height && dart.equals(other.padding, this.padding) && dart.equals(other.shape, this.shape) && other.alignedDropdown == this.alignedDropdown && dart.equals(other[S$0._buttonColor$1], this[S$0._buttonColor$1]) && dart.equals(other[S$0._disabledColor$1], this[S$0._disabledColor$1]) && dart.equals(other[S$0._focusColor$1], this[S$0._focusColor$1]) && dart.equals(other[S$0._hoverColor$1], this[S$0._hoverColor$1]) && dart.equals(other[S$0._highlightColor$1], this[S$0._highlightColor$1]) && dart.equals(other[S$0._splashColor$1], this[S$0._splashColor$1]) && dart.equals(other.colorScheme, this.colorScheme) && other[S$0._materialTapTargetSize$1] == this[S$0._materialTapTargetSize$1];
    }
    get hashCode() {
      return ui.hashValues(this.textTheme, this.minWidth, this.height, this.padding, this.shape, this.alignedDropdown, this[S$0._buttonColor$1], this[S$0._disabledColor$1], this[S$0._focusColor$1], this[S$0._hoverColor$1], this[S$0._highlightColor$1], this[S$0._splashColor$1], this.colorScheme, this[S$0._materialTapTargetSize$1]);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[88], 875, 56, "properties");
      super.debugFillProperties(properties);
      let defaultTheme = C[516] || CT.C516;
      properties.add(new (T$.EnumPropertyOfButtonTextTheme()).new("textTheme", this.textTheme, {defaultValue: defaultTheme.textTheme}));
      properties.add(new diagnostics.DoubleProperty.new("minWidth", this.minWidth, {defaultValue: defaultTheme.minWidth}));
      properties.add(new diagnostics.DoubleProperty.new("height", this.height, {defaultValue: defaultTheme.height}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding, {defaultValue: defaultTheme.padding}));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape, {defaultValue: defaultTheme.shape}));
      properties.add(new diagnostics.FlagProperty.new("alignedDropdown", {value: this.alignedDropdown, defaultValue: defaultTheme.alignedDropdown, ifTrue: "dropdown width matches button"}));
      properties.add(new colors.ColorProperty.new("buttonColor", this[S$0._buttonColor$1], {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("disabledColor", this[S$0._disabledColor$1], {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("focusColor", this[S$0._focusColor$1], {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("hoverColor", this[S$0._hoverColor$1], {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("highlightColor", this[S$0._highlightColor$1], {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("splashColor", this[S$0._splashColor$1], {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfColorScheme()).new("colorScheme", this.colorScheme, {defaultValue: defaultTheme.colorScheme}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialTapTargetSize()).new("materialTapTargetSize", this[S$0._materialTapTargetSize$1], {defaultValue: null}));
    }
  };
  (button_theme.ButtonThemeData.new = function(opts) {
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : C[502] || CT.C502;
    if (textTheme == null) dart.nullFailed(I[88], 203, 10, "textTheme");
    let minWidth = opts && 'minWidth' in opts ? opts.minWidth : 88;
    if (minWidth == null) dart.nullFailed(I[88], 204, 10, "minWidth");
    let height = opts && 'height' in opts ? opts.height : 36;
    if (height == null) dart.nullFailed(I[88], 205, 10, "height");
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let layoutBehavior = opts && 'layoutBehavior' in opts ? opts.layoutBehavior : C[507] || CT.C507;
    if (layoutBehavior == null) dart.nullFailed(I[88], 208, 10, "layoutBehavior");
    let alignedDropdown = opts && 'alignedDropdown' in opts ? opts.alignedDropdown : false;
    if (alignedDropdown == null) dart.nullFailed(I[88], 209, 10, "alignedDropdown");
    let buttonColor = opts && 'buttonColor' in opts ? opts.buttonColor : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let colorScheme = opts && 'colorScheme' in opts ? opts.colorScheme : null;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    this[S$.textTheme$2] = textTheme;
    this[S$.minWidth$2] = minWidth;
    this[S$.height$2] = height;
    this[S$0.layoutBehavior] = layoutBehavior;
    this[S$0.alignedDropdown] = alignedDropdown;
    this[S$0.colorScheme] = colorScheme;
    if (!(textTheme != null)) dart.assertFailed(null, I[88], 218, 15, "textTheme != null");
    if (!(minWidth != null && dart.notNull(minWidth) >= 0.0)) dart.assertFailed(null, I[88], 219, 15, "minWidth != null && minWidth >= 0.0");
    if (!(height != null && dart.notNull(height) >= 0.0)) dart.assertFailed(null, I[88], 220, 15, "height != null && height >= 0.0");
    if (!(alignedDropdown != null)) dart.assertFailed(null, I[88], 221, 15, "alignedDropdown != null");
    if (!(layoutBehavior != null)) dart.assertFailed(null, I[88], 222, 15, "layoutBehavior != null");
    this[S$0._buttonColor] = buttonColor;
    this[S$0._disabledColor] = disabledColor;
    this[S$0._focusColor] = focusColor;
    this[S$0._hoverColor] = hoverColor;
    this[S$0._highlightColor] = highlightColor;
    this[S$0._splashColor] = splashColor;
    this[S$0._padding] = padding;
    this[S$0._shape] = shape;
    this[S$0._materialTapTargetSize] = materialTapTargetSize;
    ;
  }).prototype = button_theme.ButtonThemeData.prototype;
  dart.addTypeTests(button_theme.ButtonThemeData);
  dart.addTypeCaches(button_theme.ButtonThemeData);
  dart.setMethodSignature(button_theme.ButtonThemeData, () => ({
    __proto__: dart.getMethods(button_theme.ButtonThemeData.__proto__),
    getBrightness: dart.fnType(ui.Brightness, [material_button.MaterialButton]),
    getTextTheme: dart.fnType(button_theme.ButtonTextTheme, [material_button.MaterialButton]),
    getDisabledTextColor: dart.fnType(ui.Color, [material_button.MaterialButton]),
    getDisabledFillColor: dart.fnType(ui.Color, [material_button.MaterialButton]),
    getFillColor: dart.fnType(dart.nullable(ui.Color), [material_button.MaterialButton]),
    getTextColor: dart.fnType(ui.Color, [material_button.MaterialButton]),
    getSplashColor: dart.fnType(ui.Color, [material_button.MaterialButton]),
    getFocusColor: dart.fnType(ui.Color, [material_button.MaterialButton]),
    getHoverColor: dart.fnType(ui.Color, [material_button.MaterialButton]),
    getHighlightColor: dart.fnType(ui.Color, [material_button.MaterialButton]),
    getElevation: dart.fnType(core.double, [material_button.MaterialButton]),
    getFocusElevation: dart.fnType(core.double, [material_button.MaterialButton]),
    getHoverElevation: dart.fnType(core.double, [material_button.MaterialButton]),
    getHighlightElevation: dart.fnType(core.double, [material_button.MaterialButton]),
    getDisabledElevation: dart.fnType(core.double, [material_button.MaterialButton]),
    getPadding: dart.fnType(edge_insets.EdgeInsetsGeometry, [material_button.MaterialButton]),
    getShape: dart.fnType(borders.ShapeBorder, [material_button.MaterialButton]),
    getAnimationDuration: dart.fnType(core.Duration, [material_button.MaterialButton]),
    getConstraints: dart.fnType(box$.BoxConstraints, [material_button.MaterialButton]),
    getMaterialTapTargetSize: dart.fnType(theme_data.MaterialTapTargetSize, [material_button.MaterialButton]),
    copyWith: dart.fnType(button_theme.ButtonThemeData, [], {alignedDropdown: dart.nullable(core.bool), buttonColor: dart.nullable(ui.Color), colorScheme: dart.nullable(color_scheme.ColorScheme), disabledColor: dart.nullable(ui.Color), focusColor: dart.nullable(ui.Color), height: dart.nullable(core.double), highlightColor: dart.nullable(ui.Color), hoverColor: dart.nullable(ui.Color), layoutBehavior: dart.nullable(button_theme.ButtonBarLayoutBehavior), materialTapTargetSize: dart.nullable(theme_data.MaterialTapTargetSize), minWidth: dart.nullable(core.double), padding: dart.nullable(edge_insets.EdgeInsetsGeometry), shape: dart.nullable(borders.ShapeBorder), splashColor: dart.nullable(ui.Color), textTheme: dart.nullable(button_theme.ButtonTextTheme)}, {})
  }));
  dart.setGetterSignature(button_theme.ButtonThemeData, () => ({
    __proto__: dart.getGetters(button_theme.ButtonThemeData.__proto__),
    constraints: box$.BoxConstraints,
    padding: edge_insets.EdgeInsetsGeometry,
    shape: borders.ShapeBorder
  }));
  dart.setLibraryUri(button_theme.ButtonThemeData, I[89]);
  dart.setFieldSignature(button_theme.ButtonThemeData, () => ({
    __proto__: dart.getFields(button_theme.ButtonThemeData.__proto__),
    minWidth: dart.finalFieldType(core.double),
    height: dart.finalFieldType(core.double),
    textTheme: dart.finalFieldType(button_theme.ButtonTextTheme),
    layoutBehavior: dart.finalFieldType(button_theme.ButtonBarLayoutBehavior),
    [S$0._padding$1]: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    [S$0._shape$1]: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    alignedDropdown: dart.finalFieldType(core.bool),
    [S$0._buttonColor$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$0._disabledColor$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$0._focusColor$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$0._hoverColor$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$0._highlightColor$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$0._splashColor$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    colorScheme: dart.finalFieldType(dart.nullable(color_scheme.ColorScheme)),
    [S$0._materialTapTargetSize$1]: dart.finalFieldType(dart.nullable(theme_data.MaterialTapTargetSize))
  }));
  dart.defineExtensionMethods(button_theme.ButtonThemeData, ['_equals']);
  dart.defineExtensionAccessors(button_theme.ButtonThemeData, ['hashCode']);
  const Object_Diagnosticable$36$23 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$23.new = function() {
  }).prototype = Object_Diagnosticable$36$23.prototype;
  dart.applyMixin(Object_Diagnosticable$36$23, diagnostics.Diagnosticable);
  button_bar_theme.ButtonBarThemeData = class ButtonBarThemeData extends Object_Diagnosticable$36$23 {
    get alignment() {
      return this[S$0.alignment$2];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get mainAxisSize() {
      return this[S$0.mainAxisSize];
    }
    set mainAxisSize(value) {
      super.mainAxisSize = value;
    }
    get buttonTextTheme() {
      return this[S$0.buttonTextTheme];
    }
    set buttonTextTheme(value) {
      super.buttonTextTheme = value;
    }
    get buttonMinWidth() {
      return this[S$0.buttonMinWidth];
    }
    set buttonMinWidth(value) {
      super.buttonMinWidth = value;
    }
    get buttonHeight() {
      return this[S$0.buttonHeight];
    }
    set buttonHeight(value) {
      super.buttonHeight = value;
    }
    get buttonPadding() {
      return this[S$0.buttonPadding];
    }
    set buttonPadding(value) {
      super.buttonPadding = value;
    }
    get buttonAlignedDropdown() {
      return this[S$0.buttonAlignedDropdown];
    }
    set buttonAlignedDropdown(value) {
      super.buttonAlignedDropdown = value;
    }
    get layoutBehavior() {
      return this[S$0.layoutBehavior$1];
    }
    set layoutBehavior(value) {
      super.layoutBehavior = value;
    }
    get overflowDirection() {
      return this[S$0.overflowDirection];
    }
    set overflowDirection(value) {
      super.overflowDirection = value;
    }
    copyWith(opts) {
      let t34, t34$, t34$0, t34$1, t34$2, t34$3, t34$4, t34$5, t34$6;
      let alignment = opts && 'alignment' in opts ? opts.alignment : null;
      let mainAxisSize = opts && 'mainAxisSize' in opts ? opts.mainAxisSize : null;
      let buttonTextTheme = opts && 'buttonTextTheme' in opts ? opts.buttonTextTheme : null;
      let buttonMinWidth = opts && 'buttonMinWidth' in opts ? opts.buttonMinWidth : null;
      let buttonHeight = opts && 'buttonHeight' in opts ? opts.buttonHeight : null;
      let buttonPadding = opts && 'buttonPadding' in opts ? opts.buttonPadding : null;
      let buttonAlignedDropdown = opts && 'buttonAlignedDropdown' in opts ? opts.buttonAlignedDropdown : null;
      let layoutBehavior = opts && 'layoutBehavior' in opts ? opts.layoutBehavior : null;
      let overflowDirection = opts && 'overflowDirection' in opts ? opts.overflowDirection : null;
      return new button_bar_theme.ButtonBarThemeData.new({alignment: (t34 = alignment, t34 == null ? this.alignment : t34), mainAxisSize: (t34$ = mainAxisSize, t34$ == null ? this.mainAxisSize : t34$), buttonTextTheme: (t34$0 = buttonTextTheme, t34$0 == null ? this.buttonTextTheme : t34$0), buttonMinWidth: (t34$1 = buttonMinWidth, t34$1 == null ? this.buttonMinWidth : t34$1), buttonHeight: (t34$2 = buttonHeight, t34$2 == null ? this.buttonHeight : t34$2), buttonPadding: (t34$3 = buttonPadding, t34$3 == null ? this.buttonPadding : t34$3), buttonAlignedDropdown: (t34$4 = buttonAlignedDropdown, t34$4 == null ? this.buttonAlignedDropdown : t34$4), layoutBehavior: (t34$5 = layoutBehavior, t34$5 == null ? this.layoutBehavior : t34$5), overflowDirection: (t34$6 = overflowDirection, t34$6 == null ? this.overflowDirection : t34$6)});
    }
    static lerp(a, b, t) {
      let t34, t34$, t34$0, t34$1, t34$2, t34$3, t34$4, t34$5, t34$6, t34$7, t34$8, t34$9, t34$10, t34$11, t34$12, t34$13, t34$14, t34$15;
      if (t == null) dart.nullFailed(I[90], 145, 88, "t");
      if (!(t != null)) dart.assertFailed(null, I[90], 146, 12, "t != null");
      if (a == null && b == null) return null;
      return new button_bar_theme.ButtonBarThemeData.new({alignment: dart.notNull(t) < 0.5 ? (t34 = a, t34 == null ? null : t34.alignment) : (t34$ = b, t34$ == null ? null : t34$.alignment), mainAxisSize: dart.notNull(t) < 0.5 ? (t34$0 = a, t34$0 == null ? null : t34$0.mainAxisSize) : (t34$1 = b, t34$1 == null ? null : t34$1.mainAxisSize), buttonTextTheme: dart.notNull(t) < 0.5 ? (t34$2 = a, t34$2 == null ? null : t34$2.buttonTextTheme) : (t34$3 = b, t34$3 == null ? null : t34$3.buttonTextTheme), buttonMinWidth: ui.lerpDouble((t34$4 = a, t34$4 == null ? null : t34$4.buttonMinWidth), (t34$5 = b, t34$5 == null ? null : t34$5.buttonMinWidth), t), buttonHeight: ui.lerpDouble((t34$6 = a, t34$6 == null ? null : t34$6.buttonHeight), (t34$7 = b, t34$7 == null ? null : t34$7.buttonHeight), t), buttonPadding: edge_insets.EdgeInsetsGeometry.lerp((t34$8 = a, t34$8 == null ? null : t34$8.buttonPadding), (t34$9 = b, t34$9 == null ? null : t34$9.buttonPadding), t), buttonAlignedDropdown: dart.notNull(t) < 0.5 ? (t34$10 = a, t34$10 == null ? null : t34$10.buttonAlignedDropdown) : (t34$11 = b, t34$11 == null ? null : t34$11.buttonAlignedDropdown), layoutBehavior: dart.notNull(t) < 0.5 ? (t34$12 = a, t34$12 == null ? null : t34$12.layoutBehavior) : (t34$13 = b, t34$13 == null ? null : t34$13.layoutBehavior), overflowDirection: dart.notNull(t) < 0.5 ? (t34$14 = a, t34$14 == null ? null : t34$14.overflowDirection) : (t34$15 = b, t34$15 == null ? null : t34$15.overflowDirection)});
    }
    get hashCode() {
      return ui.hashValues(this.alignment, this.mainAxisSize, this.buttonTextTheme, this.buttonMinWidth, this.buttonHeight, this.buttonPadding, this.buttonAlignedDropdown, this.layoutBehavior, this.overflowDirection);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return button_bar_theme.ButtonBarThemeData.is(other) && other.alignment == this.alignment && other.mainAxisSize == this.mainAxisSize && other.buttonTextTheme == this.buttonTextTheme && other.buttonMinWidth == this.buttonMinWidth && other.buttonHeight == this.buttonHeight && dart.equals(other.buttonPadding, this.buttonPadding) && other.buttonAlignedDropdown == this.buttonAlignedDropdown && other.layoutBehavior == this.layoutBehavior && other.overflowDirection == this.overflowDirection;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[90], 196, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfMainAxisAlignment()).new("alignment", this.alignment, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMainAxisSize()).new("mainAxisSize", this.mainAxisSize, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfButtonTextTheme()).new("textTheme", this.buttonTextTheme, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("minWidth", this.buttonMinWidth, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("height", this.buttonHeight, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.buttonPadding, {defaultValue: null}));
      properties.add(new diagnostics.FlagProperty.new("buttonAlignedDropdown", {value: this.buttonAlignedDropdown, ifTrue: "dropdown width matches button", defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfButtonBarLayoutBehavior()).new("layoutBehavior", this.layoutBehavior, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfVerticalDirection()).new("overflowDirection", this.overflowDirection, {defaultValue: null}));
    }
  };
  (button_bar_theme.ButtonBarThemeData.new = function(opts) {
    let alignment = opts && 'alignment' in opts ? opts.alignment : null;
    let mainAxisSize = opts && 'mainAxisSize' in opts ? opts.mainAxisSize : null;
    let buttonTextTheme = opts && 'buttonTextTheme' in opts ? opts.buttonTextTheme : null;
    let buttonMinWidth = opts && 'buttonMinWidth' in opts ? opts.buttonMinWidth : null;
    let buttonHeight = opts && 'buttonHeight' in opts ? opts.buttonHeight : null;
    let buttonPadding = opts && 'buttonPadding' in opts ? opts.buttonPadding : null;
    let buttonAlignedDropdown = opts && 'buttonAlignedDropdown' in opts ? opts.buttonAlignedDropdown : null;
    let layoutBehavior = opts && 'layoutBehavior' in opts ? opts.layoutBehavior : null;
    let overflowDirection = opts && 'overflowDirection' in opts ? opts.overflowDirection : null;
    this[S$0.alignment$2] = alignment;
    this[S$0.mainAxisSize] = mainAxisSize;
    this[S$0.buttonTextTheme] = buttonTextTheme;
    this[S$0.buttonMinWidth] = buttonMinWidth;
    this[S$0.buttonHeight] = buttonHeight;
    this[S$0.buttonPadding] = buttonPadding;
    this[S$0.buttonAlignedDropdown] = buttonAlignedDropdown;
    this[S$0.layoutBehavior$1] = layoutBehavior;
    this[S$0.overflowDirection] = overflowDirection;
    if (!(buttonMinWidth == null || dart.notNull(buttonMinWidth) >= 0.0)) dart.assertFailed(null, I[90], 43, 15, "buttonMinWidth == null || buttonMinWidth >= 0.0");
    if (!(buttonHeight == null || dart.notNull(buttonHeight) >= 0.0)) dart.assertFailed(null, I[90], 44, 15, "buttonHeight == null || buttonHeight >= 0.0");
    ;
  }).prototype = button_bar_theme.ButtonBarThemeData.prototype;
  dart.addTypeTests(button_bar_theme.ButtonBarThemeData);
  dart.addTypeCaches(button_bar_theme.ButtonBarThemeData);
  dart.setMethodSignature(button_bar_theme.ButtonBarThemeData, () => ({
    __proto__: dart.getMethods(button_bar_theme.ButtonBarThemeData.__proto__),
    copyWith: dart.fnType(button_bar_theme.ButtonBarThemeData, [], {alignment: dart.nullable(flex.MainAxisAlignment), buttonAlignedDropdown: dart.nullable(core.bool), buttonHeight: dart.nullable(core.double), buttonMinWidth: dart.nullable(core.double), buttonPadding: dart.nullable(edge_insets.EdgeInsetsGeometry), buttonTextTheme: dart.nullable(button_theme.ButtonTextTheme), layoutBehavior: dart.nullable(button_theme.ButtonBarLayoutBehavior), mainAxisSize: dart.nullable(flex.MainAxisSize), overflowDirection: dart.nullable(basic_types.VerticalDirection)}, {})
  }));
  dart.setLibraryUri(button_bar_theme.ButtonBarThemeData, I[91]);
  dart.setFieldSignature(button_bar_theme.ButtonBarThemeData, () => ({
    __proto__: dart.getFields(button_bar_theme.ButtonBarThemeData.__proto__),
    alignment: dart.finalFieldType(dart.nullable(flex.MainAxisAlignment)),
    mainAxisSize: dart.finalFieldType(dart.nullable(flex.MainAxisSize)),
    buttonTextTheme: dart.finalFieldType(dart.nullable(button_theme.ButtonTextTheme)),
    buttonMinWidth: dart.finalFieldType(dart.nullable(core.double)),
    buttonHeight: dart.finalFieldType(dart.nullable(core.double)),
    buttonPadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    buttonAlignedDropdown: dart.finalFieldType(dart.nullable(core.bool)),
    layoutBehavior: dart.finalFieldType(dart.nullable(button_theme.ButtonBarLayoutBehavior)),
    overflowDirection: dart.finalFieldType(dart.nullable(basic_types.VerticalDirection))
  }));
  dart.defineExtensionMethods(button_bar_theme.ButtonBarThemeData, ['_equals']);
  dart.defineExtensionAccessors(button_bar_theme.ButtonBarThemeData, ['hashCode']);
  button_bar_theme.ButtonBarTheme = class ButtonBarTheme extends framework.InheritedWidget {
    get data() {
      return this[S$0.data$17];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t34, t34$;
      if (context == null) dart.nullFailed(I[90], 254, 45, "context");
      let buttonBarTheme = context.dependOnInheritedWidgetOfExactType(button_bar_theme.ButtonBarTheme);
      t34$ = (t34 = buttonBarTheme, t34 == null ? null : t34.data);
      return t34$ == null ? theme$.Theme.of(context).buttonBarTheme : t34$;
    }
    updateShouldNotify(oldWidget) {
      button_bar_theme.ButtonBarTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[90], 260, 42, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (button_bar_theme.ButtonBarTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[90], 238, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[90], 239, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.data$17] = data;
    if (!(data != null)) dart.assertFailed(null, I[90], 240, 15, "data != null");
    button_bar_theme.ButtonBarTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = button_bar_theme.ButtonBarTheme.prototype;
  dart.addTypeTests(button_bar_theme.ButtonBarTheme);
  dart.addTypeCaches(button_bar_theme.ButtonBarTheme);
  dart.setMethodSignature(button_bar_theme.ButtonBarTheme, () => ({
    __proto__: dart.getMethods(button_bar_theme.ButtonBarTheme.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(button_bar_theme.ButtonBarTheme, I[91]);
  dart.setFieldSignature(button_bar_theme.ButtonBarTheme, () => ({
    __proto__: dart.getFields(button_bar_theme.ButtonBarTheme.__proto__),
    data: dart.finalFieldType(button_bar_theme.ButtonBarThemeData)
  }));
  const Object_Diagnosticable$36$24 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$24.new = function() {
  }).prototype = Object_Diagnosticable$36$24.prototype;
  dart.applyMixin(Object_Diagnosticable$36$24, diagnostics.Diagnosticable);
  tooltip_theme.TooltipThemeData = class TooltipThemeData extends Object_Diagnosticable$36$24 {
    get height() {
      return this[S$0.height$3];
    }
    set height(value) {
      super.height = value;
    }
    get padding() {
      return this[S$0.padding$9];
    }
    set padding(value) {
      super.padding = value;
    }
    get margin() {
      return this[S$0.margin$2];
    }
    set margin(value) {
      super.margin = value;
    }
    get verticalOffset() {
      return this[S$0.verticalOffset];
    }
    set verticalOffset(value) {
      super.verticalOffset = value;
    }
    get preferBelow() {
      return this[S$0.preferBelow];
    }
    set preferBelow(value) {
      super.preferBelow = value;
    }
    get excludeFromSemantics() {
      return this[S$0.excludeFromSemantics];
    }
    set excludeFromSemantics(value) {
      super.excludeFromSemantics = value;
    }
    get decoration() {
      return this[S$0.decoration$3];
    }
    set decoration(value) {
      super.decoration = value;
    }
    get textStyle() {
      return this[S$0.textStyle$4];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get waitDuration() {
      return this[S$0.waitDuration];
    }
    set waitDuration(value) {
      super.waitDuration = value;
    }
    get showDuration() {
      return this[S$0.showDuration];
    }
    set showDuration(value) {
      super.showDuration = value;
    }
    copyWith(opts) {
      let t34, t34$, t34$0, t34$1, t34$2, t34$3, t34$4, t34$5, t34$6, t34$7;
      let height = opts && 'height' in opts ? opts.height : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let margin = opts && 'margin' in opts ? opts.margin : null;
      let verticalOffset = opts && 'verticalOffset' in opts ? opts.verticalOffset : null;
      let preferBelow = opts && 'preferBelow' in opts ? opts.preferBelow : null;
      let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let waitDuration = opts && 'waitDuration' in opts ? opts.waitDuration : null;
      let showDuration = opts && 'showDuration' in opts ? opts.showDuration : null;
      return new tooltip_theme.TooltipThemeData.new({height: (t34 = height, t34 == null ? this.height : t34), padding: (t34$ = padding, t34$ == null ? this.padding : t34$), margin: (t34$0 = margin, t34$0 == null ? this.margin : t34$0), verticalOffset: (t34$1 = verticalOffset, t34$1 == null ? this.verticalOffset : t34$1), preferBelow: (t34$2 = preferBelow, t34$2 == null ? this.preferBelow : t34$2), excludeFromSemantics: (t34$3 = excludeFromSemantics, t34$3 == null ? this.excludeFromSemantics : t34$3), decoration: (t34$4 = decoration, t34$4 == null ? this.decoration : t34$4), textStyle: (t34$5 = textStyle, t34$5 == null ? this.textStyle : t34$5), waitDuration: (t34$6 = waitDuration, t34$6 == null ? this.waitDuration : t34$6), showDuration: (t34$7 = showDuration, t34$7 == null ? this.showDuration : t34$7)});
    }
    static lerp(a, b, t) {
      let t34, t34$, t34$0, t34$1, t34$2, t34$3, t34$4, t34$5, t34$6, t34$7, t34$8, t34$9, t34$10, t34$11, t34$12, t34$13;
      if (t == null) dart.nullFailed(I[92], 120, 82, "t");
      if (a == null && b == null) return null;
      if (!(t != null)) dart.assertFailed(null, I[92], 123, 12, "t != null");
      return new tooltip_theme.TooltipThemeData.new({height: ui.lerpDouble((t34 = a, t34 == null ? null : t34.height), (t34$ = b, t34$ == null ? null : t34$.height), t), padding: edge_insets.EdgeInsetsGeometry.lerp((t34$0 = a, t34$0 == null ? null : t34$0.padding), (t34$1 = b, t34$1 == null ? null : t34$1.padding), t), margin: edge_insets.EdgeInsetsGeometry.lerp((t34$2 = a, t34$2 == null ? null : t34$2.margin), (t34$3 = b, t34$3 == null ? null : t34$3.margin), t), verticalOffset: ui.lerpDouble((t34$4 = a, t34$4 == null ? null : t34$4.verticalOffset), (t34$5 = b, t34$5 == null ? null : t34$5.verticalOffset), t), preferBelow: dart.notNull(t) < 0.5 ? (t34$6 = a, t34$6 == null ? null : t34$6.preferBelow) : (t34$7 = b, t34$7 == null ? null : t34$7.preferBelow), excludeFromSemantics: dart.notNull(t) < 0.5 ? (t34$8 = a, t34$8 == null ? null : t34$8.excludeFromSemantics) : (t34$9 = b, t34$9 == null ? null : t34$9.excludeFromSemantics), decoration: decoration.Decoration.lerp((t34$10 = a, t34$10 == null ? null : t34$10.decoration), (t34$11 = b, t34$11 == null ? null : t34$11.decoration), t), textStyle: text_style.TextStyle.lerp((t34$12 = a, t34$12 == null ? null : t34$12.textStyle), (t34$13 = b, t34$13 == null ? null : t34$13.textStyle), t)});
    }
    get hashCode() {
      return ui.hashValues(this.height, this.padding, this.margin, this.verticalOffset, this.preferBelow, this.excludeFromSemantics, this.decoration, this.textStyle, this.waitDuration, this.showDuration);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return tooltip_theme.TooltipThemeData.is(other) && other.height == this.height && dart.equals(other.padding, this.padding) && dart.equals(other.margin, this.margin) && other.verticalOffset == this.verticalOffset && other.preferBelow == this.preferBelow && other.excludeFromSemantics == this.excludeFromSemantics && dart.equals(other.decoration, this.decoration) && dart.equals(other.textStyle, this.textStyle) && dart.equals(other.waitDuration, this.waitDuration) && dart.equals(other.showDuration, this.showDuration);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[92], 172, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new diagnostics.DoubleProperty.new("height", this.height, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("margin", this.margin, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("vertical offset", this.verticalOffset, {defaultValue: null}));
      properties.add(new diagnostics.FlagProperty.new("position", {value: this.preferBelow, ifTrue: "below", ifFalse: "above", showName: true, defaultValue: null}));
      properties.add(new diagnostics.FlagProperty.new("semantics", {value: this.excludeFromSemantics, ifTrue: "excluded", showName: true, defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfDecoration()).new("decoration", this.decoration, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("textStyle", this.textStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfDuration()).new("wait duration", this.waitDuration, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfDuration()).new("show duration", this.showDuration, {defaultValue: null}));
    }
  };
  (tooltip_theme.TooltipThemeData.new = function(opts) {
    let height = opts && 'height' in opts ? opts.height : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let margin = opts && 'margin' in opts ? opts.margin : null;
    let verticalOffset = opts && 'verticalOffset' in opts ? opts.verticalOffset : null;
    let preferBelow = opts && 'preferBelow' in opts ? opts.preferBelow : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let waitDuration = opts && 'waitDuration' in opts ? opts.waitDuration : null;
    let showDuration = opts && 'showDuration' in opts ? opts.showDuration : null;
    this[S$0.height$3] = height;
    this[S$0.padding$9] = padding;
    this[S$0.margin$2] = margin;
    this[S$0.verticalOffset] = verticalOffset;
    this[S$0.preferBelow] = preferBelow;
    this[S$0.excludeFromSemantics] = excludeFromSemantics;
    this[S$0.decoration$3] = decoration;
    this[S$0.textStyle$4] = textStyle;
    this[S$0.waitDuration] = waitDuration;
    this[S$0.showDuration] = showDuration;
    ;
  }).prototype = tooltip_theme.TooltipThemeData.prototype;
  dart.addTypeTests(tooltip_theme.TooltipThemeData);
  dart.addTypeCaches(tooltip_theme.TooltipThemeData);
  dart.setMethodSignature(tooltip_theme.TooltipThemeData, () => ({
    __proto__: dart.getMethods(tooltip_theme.TooltipThemeData.__proto__),
    copyWith: dart.fnType(tooltip_theme.TooltipThemeData, [], {decoration: dart.nullable(decoration.Decoration), excludeFromSemantics: dart.nullable(core.bool), height: dart.nullable(core.double), margin: dart.nullable(edge_insets.EdgeInsetsGeometry), padding: dart.nullable(edge_insets.EdgeInsetsGeometry), preferBelow: dart.nullable(core.bool), showDuration: dart.nullable(core.Duration), textStyle: dart.nullable(text_style.TextStyle), verticalOffset: dart.nullable(core.double), waitDuration: dart.nullable(core.Duration)}, {})
  }));
  dart.setLibraryUri(tooltip_theme.TooltipThemeData, I[93]);
  dart.setFieldSignature(tooltip_theme.TooltipThemeData, () => ({
    __proto__: dart.getFields(tooltip_theme.TooltipThemeData.__proto__),
    height: dart.finalFieldType(dart.nullable(core.double)),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    margin: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    verticalOffset: dart.finalFieldType(dart.nullable(core.double)),
    preferBelow: dart.finalFieldType(dart.nullable(core.bool)),
    excludeFromSemantics: dart.finalFieldType(dart.nullable(core.bool)),
    decoration: dart.finalFieldType(dart.nullable(decoration.Decoration)),
    textStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    waitDuration: dart.finalFieldType(dart.nullable(core.Duration)),
    showDuration: dart.finalFieldType(dart.nullable(core.Duration))
  }));
  dart.defineExtensionMethods(tooltip_theme.TooltipThemeData, ['_equals']);
  dart.defineExtensionAccessors(tooltip_theme.TooltipThemeData, ['hashCode']);
  tooltip_theme.TooltipTheme = class TooltipTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S$0.data$18];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t34, t34$;
      if (context == null) dart.nullFailed(I[92], 240, 43, "context");
      let tooltipTheme = context.dependOnInheritedWidgetOfExactType(tooltip_theme.TooltipTheme);
      t34$ = (t34 = tooltipTheme, t34 == null ? null : t34.data);
      return t34$ == null ? theme$.Theme.of(context).tooltipTheme : t34$;
    }
    wrap(context, child) {
      if (context == null) dart.nullFailed(I[92], 246, 28, "context");
      if (child == null) dart.nullFailed(I[92], 246, 44, "child");
      return new tooltip_theme.TooltipTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[517] || CT.C517});
    }
    updateShouldNotify(oldWidget) {
      tooltip_theme.TooltipTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[92], 251, 40, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (tooltip_theme.TooltipTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[92], 224, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[92], 225, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.data$18] = data;
    if (!(data != null)) dart.assertFailed(null, I[92], 226, 15, "data != null");
    tooltip_theme.TooltipTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tooltip_theme.TooltipTheme.prototype;
  dart.addTypeTests(tooltip_theme.TooltipTheme);
  dart.addTypeCaches(tooltip_theme.TooltipTheme);
  dart.setMethodSignature(tooltip_theme.TooltipTheme, () => ({
    __proto__: dart.getMethods(tooltip_theme.TooltipTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(tooltip_theme.TooltipTheme, I[93]);
  dart.setFieldSignature(tooltip_theme.TooltipTheme, () => ({
    __proto__: dart.getFields(tooltip_theme.TooltipTheme.__proto__),
    data: dart.finalFieldType(tooltip_theme.TooltipThemeData)
  }));
  tooltip.Tooltip = class Tooltip extends framework.StatefulWidget {
    get message() {
      return this[S$0.message];
    }
    set message(value) {
      super.message = value;
    }
    get height() {
      return this[S$0.height$4];
    }
    set height(value) {
      super.height = value;
    }
    get padding() {
      return this[S$0.padding$10];
    }
    set padding(value) {
      super.padding = value;
    }
    get margin() {
      return this[S$0.margin$3];
    }
    set margin(value) {
      super.margin = value;
    }
    get verticalOffset() {
      return this[S$0.verticalOffset$1];
    }
    set verticalOffset(value) {
      super.verticalOffset = value;
    }
    get preferBelow() {
      return this[S$0.preferBelow$1];
    }
    set preferBelow(value) {
      super.preferBelow = value;
    }
    get excludeFromSemantics() {
      return this[S$0.excludeFromSemantics$1];
    }
    set excludeFromSemantics(value) {
      super.excludeFromSemantics = value;
    }
    get child() {
      return this[S$0.child$15];
    }
    set child(value) {
      super.child = value;
    }
    get decoration() {
      return this[S$0.decoration$4];
    }
    set decoration(value) {
      super.decoration = value;
    }
    get textStyle() {
      return this[S$0.textStyle$5];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get waitDuration() {
      return this[S$0.waitDuration$1];
    }
    set waitDuration(value) {
      super.waitDuration = value;
    }
    get showDuration() {
      return this[S$0.showDuration$1];
    }
    set showDuration(value) {
      super.showDuration = value;
    }
    static dismissAllToolTips() {
      if (dart.test(tooltip.Tooltip._openedToolTips[S.$isNotEmpty])) {
        let openedToolTips = T$.ListOf_TooltipState().from(tooltip.Tooltip._openedToolTips);
        for (let state of openedToolTips) {
          state[S$0._hideTooltip]({immediately: true});
        }
        return true;
      }
      return false;
    }
    createState() {
      return new tooltip._TooltipState.new();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[94], 226, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new diagnostics.StringProperty.new("message", this.message, {showName: false}));
      properties.add(new diagnostics.DoubleProperty.new("height", this.height, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("margin", this.margin, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("vertical offset", this.verticalOffset, {defaultValue: null}));
      properties.add(new diagnostics.FlagProperty.new("position", {value: this.preferBelow, ifTrue: "below", ifFalse: "above", showName: true, defaultValue: null}));
      properties.add(new diagnostics.FlagProperty.new("semantics", {value: this.excludeFromSemantics, ifTrue: "excluded", showName: true, defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfDuration()).new("wait duration", this.waitDuration, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfDuration()).new("show duration", this.showDuration, {defaultValue: null}));
    }
  };
  (tooltip.Tooltip.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let message = opts && 'message' in opts ? opts.message : null;
    if (message == null) dart.nullFailed(I[94], 103, 19, "message");
    let height = opts && 'height' in opts ? opts.height : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let margin = opts && 'margin' in opts ? opts.margin : null;
    let verticalOffset = opts && 'verticalOffset' in opts ? opts.verticalOffset : null;
    let preferBelow = opts && 'preferBelow' in opts ? opts.preferBelow : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let waitDuration = opts && 'waitDuration' in opts ? opts.waitDuration : null;
    let showDuration = opts && 'showDuration' in opts ? opts.showDuration : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.message] = message;
    this[S$0.height$4] = height;
    this[S$0.padding$10] = padding;
    this[S$0.margin$3] = margin;
    this[S$0.verticalOffset$1] = verticalOffset;
    this[S$0.preferBelow$1] = preferBelow;
    this[S$0.excludeFromSemantics$1] = excludeFromSemantics;
    this[S$0.decoration$4] = decoration;
    this[S$0.textStyle$5] = textStyle;
    this[S$0.waitDuration$1] = waitDuration;
    this[S$0.showDuration$1] = showDuration;
    this[S$0.child$15] = child;
    if (!(message != null)) dart.assertFailed(null, I[94], 115, 15, "message != null");
    tooltip.Tooltip.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tooltip.Tooltip.prototype;
  dart.addTypeTests(tooltip.Tooltip);
  dart.addTypeCaches(tooltip.Tooltip);
  dart.setMethodSignature(tooltip.Tooltip, () => ({
    __proto__: dart.getMethods(tooltip.Tooltip.__proto__),
    createState: dart.fnType(framework.State$(tooltip.Tooltip), [])
  }));
  dart.setLibraryUri(tooltip.Tooltip, I[95]);
  dart.setFieldSignature(tooltip.Tooltip, () => ({
    __proto__: dart.getFields(tooltip.Tooltip.__proto__),
    message: dart.finalFieldType(core.String),
    height: dart.finalFieldType(dart.nullable(core.double)),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    margin: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    verticalOffset: dart.finalFieldType(dart.nullable(core.double)),
    preferBelow: dart.finalFieldType(dart.nullable(core.bool)),
    excludeFromSemantics: dart.finalFieldType(dart.nullable(core.bool)),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    decoration: dart.finalFieldType(dart.nullable(decoration.Decoration)),
    textStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    waitDuration: dart.finalFieldType(dart.nullable(core.Duration)),
    showDuration: dart.finalFieldType(dart.nullable(core.Duration))
  }));
  dart.defineLazy(tooltip.Tooltip, {
    /*tooltip.Tooltip._openedToolTips*/get _openedToolTips() {
      return T$.LinkedHashSetOf_TooltipState().new();
    }
  }, false);
  const State_SingleTickerProviderStateMixin$36$0 = class State_SingleTickerProviderStateMixin extends framework.State$(tooltip.Tooltip) {};
  (State_SingleTickerProviderStateMixin$36$0.new = function() {
    ticker_provider.SingleTickerProviderStateMixin$(tooltip.Tooltip)[dart.mixinNew].call(this);
    State_SingleTickerProviderStateMixin$36$0.__proto__.new.call(this);
  }).prototype = State_SingleTickerProviderStateMixin$36$0.prototype;
  dart.applyMixin(State_SingleTickerProviderStateMixin$36$0, ticker_provider.SingleTickerProviderStateMixin$(tooltip.Tooltip));
  tooltip._TooltipState = class _TooltipState extends State_SingleTickerProviderStateMixin$36$0 {
    get height() {
      let t34;
      return dart.test(this[S$0.___TooltipState_height_isSet]) ? (t34 = this[S$0.___TooltipState_height], t34) : dart.throw(new _internal.LateError.fieldNI("height"));
    }
    set height(t34) {
      if (t34 == null) dart.nullFailed(I[94], 251, 15, "null");
      this[S$0.___TooltipState_height_isSet] = true;
      this[S$0.___TooltipState_height] = t34;
    }
    get padding() {
      let t35;
      return dart.test(this[S$0.___TooltipState_padding_isSet]) ? (t35 = this[S$0.___TooltipState_padding], t35) : dart.throw(new _internal.LateError.fieldNI("padding"));
    }
    set padding(t35) {
      if (t35 == null) dart.nullFailed(I[94], 252, 27, "null");
      this[S$0.___TooltipState_padding_isSet] = true;
      this[S$0.___TooltipState_padding] = t35;
    }
    get margin() {
      let t36;
      return dart.test(this[S$0.___TooltipState_margin_isSet]) ? (t36 = this[S$0.___TooltipState_margin], t36) : dart.throw(new _internal.LateError.fieldNI("margin"));
    }
    set margin(t36) {
      if (t36 == null) dart.nullFailed(I[94], 253, 27, "null");
      this[S$0.___TooltipState_margin_isSet] = true;
      this[S$0.___TooltipState_margin] = t36;
    }
    get decoration() {
      let t37;
      return dart.test(this[S$0.___TooltipState_decoration_isSet]) ? (t37 = this[S$0.___TooltipState_decoration], t37) : dart.throw(new _internal.LateError.fieldNI("decoration"));
    }
    set decoration(t37) {
      if (t37 == null) dart.nullFailed(I[94], 254, 19, "null");
      this[S$0.___TooltipState_decoration_isSet] = true;
      this[S$0.___TooltipState_decoration] = t37;
    }
    get textStyle() {
      let t38;
      return dart.test(this[S$0.___TooltipState_textStyle_isSet]) ? (t38 = this[S$0.___TooltipState_textStyle], t38) : dart.throw(new _internal.LateError.fieldNI("textStyle"));
    }
    set textStyle(t38) {
      if (t38 == null) dart.nullFailed(I[94], 255, 18, "null");
      this[S$0.___TooltipState_textStyle_isSet] = true;
      this[S$0.___TooltipState_textStyle] = t38;
    }
    get verticalOffset() {
      let t39;
      return dart.test(this[S$0.___TooltipState_verticalOffset_isSet]) ? (t39 = this[S$0.___TooltipState_verticalOffset], t39) : dart.throw(new _internal.LateError.fieldNI("verticalOffset"));
    }
    set verticalOffset(t39) {
      if (t39 == null) dart.nullFailed(I[94], 256, 15, "null");
      this[S$0.___TooltipState_verticalOffset_isSet] = true;
      this[S$0.___TooltipState_verticalOffset] = t39;
    }
    set preferBelow(t40) {
      if (t40 == null) dart.nullFailed(I[94], 257, 13, "null");
      this[S$0.___TooltipState_preferBelow_isSet] = true;
      this[S$0.___TooltipState_preferBelow] = t40;
    }
    get preferBelow() {
      let t41;
      return dart.test(this[S$0.___TooltipState_preferBelow_isSet]) ? (t41 = this[S$0.___TooltipState_preferBelow], t41) : dart.throw(new _internal.LateError.fieldNI("preferBelow"));
    }
    get excludeFromSemantics() {
      let t41;
      return dart.test(this[S$0.___TooltipState_excludeFromSemantics_isSet]) ? (t41 = this[S$0.___TooltipState_excludeFromSemantics], t41) : dart.throw(new _internal.LateError.fieldNI("excludeFromSemantics"));
    }
    set excludeFromSemantics(t41) {
      if (t41 == null) dart.nullFailed(I[94], 258, 13, "null");
      this[S$0.___TooltipState_excludeFromSemantics_isSet] = true;
      this[S$0.___TooltipState_excludeFromSemantics] = t41;
    }
    get [S$0._controller$5]() {
      let t42;
      return dart.test(this[S$0.___TooltipState__controller_isSet]) ? (t42 = this[S$0.___TooltipState__controller], t42) : dart.throw(new _internal.LateError.fieldNI("_controller"));
    }
    set [S$0._controller$5](t42) {
      if (t42 == null) dart.nullFailed(I[94], 259, 28, "null");
      this[S$0.___TooltipState__controller_isSet] = true;
      this[S$0.___TooltipState__controller] = t42;
    }
    get showDuration() {
      let t43;
      return dart.test(this[S$0.___TooltipState_showDuration_isSet]) ? (t43 = this[S$0.___TooltipState_showDuration], t43) : dart.throw(new _internal.LateError.fieldNI("showDuration"));
    }
    set showDuration(t43) {
      if (t43 == null) dart.nullFailed(I[94], 263, 17, "null");
      this[S$0.___TooltipState_showDuration_isSet] = true;
      this[S$0.___TooltipState_showDuration] = t43;
    }
    get hoverShowDuration() {
      let t44;
      return dart.test(this[S$0.___TooltipState_hoverShowDuration_isSet]) ? (t44 = this[S$0.___TooltipState_hoverShowDuration], t44) : dart.throw(new _internal.LateError.fieldNI("hoverShowDuration"));
    }
    set hoverShowDuration(t44) {
      if (t44 == null) dart.nullFailed(I[94], 264, 17, "null");
      this[S$0.___TooltipState_hoverShowDuration_isSet] = true;
      this[S$0.___TooltipState_hoverShowDuration] = t44;
    }
    get waitDuration() {
      let t45;
      return dart.test(this[S$0.___TooltipState_waitDuration_isSet]) ? (t45 = this[S$0.___TooltipState_waitDuration], t45) : dart.throw(new _internal.LateError.fieldNI("waitDuration"));
    }
    set waitDuration(t45) {
      if (t45 == null) dart.nullFailed(I[94], 265, 17, "null");
      this[S$0.___TooltipState_waitDuration_isSet] = true;
      this[S$0.___TooltipState_waitDuration] = t45;
    }
    get [S$0._mouseIsConnected]() {
      let t46;
      return dart.test(this[S$0.___TooltipState__mouseIsConnected_isSet]) ? (t46 = this[S$0.___TooltipState__mouseIsConnected], t46) : dart.throw(new _internal.LateError.fieldNI("_mouseIsConnected"));
    }
    set [S$0._mouseIsConnected](t46) {
      if (t46 == null) dart.nullFailed(I[94], 266, 13, "null");
      this[S$0.___TooltipState__mouseIsConnected_isSet] = true;
      this[S$0.___TooltipState__mouseIsConnected] = t46;
    }
    initState() {
      let t47;
      super.initState();
      this[S$0._mouseIsConnected] = dart.nullCheck(binding.RendererBinding.instance).mouseTracker.mouseIsConnected;
      this[S$0._controller$5] = (t47 = new animation_controller.AnimationController.new({duration: tooltip._TooltipState._fadeInDuration, reverseDuration: tooltip._TooltipState._fadeOutDuration, vsync: this}), (() => {
        t47.addStatusListener(dart.bind(this, S$0._handleStatusChanged));
        return t47;
      })());
      dart.nullCheck(binding.RendererBinding.instance).mouseTracker.addListener(dart.bind(this, S$0._handleMouseTrackerChange));
      dart.nullCheck(binding$.GestureBinding.instance).pointerRouter.addGlobalRoute(dart.bind(this, S$0._handlePointerEvent));
    }
    [S$0._getDefaultTooltipHeight]() {
      let theme = theme$.Theme.of(this.context);
      switch (theme.platform) {
        case C[16] || CT.C16:
        case C[13] || CT.C13:
        case C[14] || CT.C14:
        {
          return 24.0;
        }
        default:
        {
          return 32.0;
        }
      }
    }
    [S$0._getDefaultPadding]() {
      let theme = theme$.Theme.of(this.context);
      switch (theme.platform) {
        case C[16] || CT.C16:
        case C[13] || CT.C13:
        case C[14] || CT.C14:
        {
          return C[60] || CT.C60;
        }
        default:
        {
          return C[510] || CT.C510;
        }
      }
    }
    [S$0._getDefaultFontSize]() {
      let theme = theme$.Theme.of(this.context);
      switch (theme.platform) {
        case C[16] || CT.C16:
        case C[13] || CT.C13:
        case C[14] || CT.C14:
        {
          return 10.0;
        }
        default:
        {
          return 14.0;
        }
      }
    }
    [S$0._handleMouseTrackerChange]() {
      if (!dart.test(this.mounted)) {
        return;
      }
      let mouseIsConnected = dart.nullCheck(binding.RendererBinding.instance).mouseTracker.mouseIsConnected;
      if (mouseIsConnected != this[S$0._mouseIsConnected]) {
        this.setState(dart.fn(() => {
          this[S$0._mouseIsConnected] = mouseIsConnected;
        }, T$.VoidTovoid()));
      }
    }
    [S$0._handleStatusChanged](status) {
      if (status == null) dart.nullFailed(I[94], 336, 45, "status");
      if (status == animation.AnimationStatus.dismissed) {
        this[S$0._hideTooltip]({immediately: true});
      }
    }
    [S$0._hideTooltip](opts) {
      let t47;
      let immediately = opts && 'immediately' in opts ? opts.immediately : false;
      if (immediately == null) dart.nullFailed(I[94], 342, 28, "immediately");
      t47 = this[S$0._showTimer];
      t47 == null ? null : t47.cancel();
      this[S$0._showTimer] = null;
      if (dart.test(immediately)) {
        this[S$0._removeEntry]();
        return;
      }
      if (dart.test(this[S$0._longPressActivated])) {
        this[S$0._hideTimer] == null ? this[S$0._hideTimer] = async.Timer.new(this.showDuration, dart.bind(this[S$0._controller$5], 'reverse')) : null;
      } else {
        this[S$0._hideTimer] == null ? this[S$0._hideTimer] = async.Timer.new(this.hoverShowDuration, dart.bind(this[S$0._controller$5], 'reverse')) : null;
      }
      this[S$0._longPressActivated] = false;
    }
    [S$0._showTooltip](opts) {
      let t47;
      let immediately = opts && 'immediately' in opts ? opts.immediately : false;
      if (immediately == null) dart.nullFailed(I[94], 357, 28, "immediately");
      t47 = this[S$0._hideTimer];
      t47 == null ? null : t47.cancel();
      this[S$0._hideTimer] = null;
      if (dart.test(immediately)) {
        this.ensureTooltipVisible();
        return;
      }
      this[S$0._showTimer] == null ? this[S$0._showTimer] = async.Timer.new(this.waitDuration, dart.bind(this, 'ensureTooltipVisible')) : null;
    }
    ensureTooltipVisible() {
      let t47, t47$;
      t47 = this[S$0._showTimer];
      t47 == null ? null : t47.cancel();
      this[S$0._showTimer] = null;
      if (this[S$0._entry] != null) {
        t47$ = this[S$0._hideTimer];
        t47$ == null ? null : t47$.cancel();
        this[S$0._hideTimer] = null;
        this[S$0._controller$5].forward();
        return false;
      }
      this[S$0._createNewEntry]();
      this[S$0._controller$5].forward();
      return true;
    }
    [S$0._createNewEntry]() {
      let overlayState = dart.nullCheck(overlay$.Overlay.of(this.context, {debugRequiredFor: this.widget}));
      let box = box$.RenderBox.as(dart.nullCheck(this.context.findRenderObject()));
      let target = box.localToGlobal(box.size.center(ui.Offset.zero), {ancestor: overlayState.context.findRenderObject()});
      let overlay = new basic.Directionality.new({textDirection: basic.Directionality.of(this.context), child: new tooltip._TooltipOverlay.new({message: this.widget.message, height: this.height, padding: this.padding, margin: this.margin, onEnter: dart.test(this[S$0._mouseIsConnected]) ? dart.fn(event => {
            if (event == null) dart.nullFailed(I[94], 408, 57, "event");
            return this[S$0._showTooltip]();
          }, T$.PointerEnterEventTovoid()) : null, onExit: dart.test(this[S$0._mouseIsConnected]) ? dart.fn(event => {
            if (event == null) dart.nullFailed(I[94], 409, 55, "event");
            return this[S$0._hideTooltip]();
          }, T$.PointerExitEventTovoid()) : null, decoration: this.decoration, textStyle: this.textStyle, animation: new animations.CurvedAnimation.new({parent: this[S$0._controller$5], curve: curves.Curves.fastOutSlowIn}), target: target, verticalOffset: this.verticalOffset, preferBelow: this.preferBelow, $creationLocationd_0dea112b090073317d4: C[518] || CT.C518}), $creationLocationd_0dea112b090073317d4: C[519] || CT.C519});
      this[S$0._entry] = new overlay$.OverlayEntry.new({builder: dart.fn(context => {
          if (context == null) dart.nullFailed(I[94], 421, 50, "context");
          return overlay;
        }, T$.BuildContextToWidget())});
      overlayState.insert(dart.nullCheck(this[S$0._entry]));
      semantics_service.SemanticsService.tooltip(this.widget.message);
      tooltip.Tooltip._openedToolTips.add(this);
    }
    [S$0._removeEntry]() {
      let t47, t47$, t47$0;
      tooltip.Tooltip._openedToolTips.remove(this);
      t47 = this[S$0._hideTimer];
      t47 == null ? null : t47.cancel();
      this[S$0._hideTimer] = null;
      t47$ = this[S$0._showTimer];
      t47$ == null ? null : t47$.cancel();
      this[S$0._showTimer] = null;
      t47$0 = this[S$0._entry];
      t47$0 == null ? null : t47$0.remove();
      this[S$0._entry] = null;
    }
    [S$0._handlePointerEvent](event) {
      if (event == null) dart.nullFailed(I[94], 437, 41, "event");
      if (this[S$0._entry] == null) {
        return;
      }
      if (events.PointerUpEvent.is(event) || events.PointerCancelEvent.is(event)) {
        this[S$0._hideTooltip]();
      } else if (events.PointerDownEvent.is(event)) {
        this[S$0._hideTooltip]({immediately: true});
      }
    }
    deactivate() {
      let t47;
      if (this[S$0._entry] != null) {
        this[S$0._hideTooltip]({immediately: true});
      }
      t47 = this[S$0._showTimer];
      t47 == null ? null : t47.cancel();
      super.deactivate();
    }
    dispose() {
      dart.nullCheck(binding$.GestureBinding.instance).pointerRouter.removeGlobalRoute(dart.bind(this, S$0._handlePointerEvent));
      dart.nullCheck(binding.RendererBinding.instance).mouseTracker.removeListener(dart.bind(this, S$0._handleMouseTrackerChange));
      this[S$0._removeEntry]();
      this[S$0._controller$5].dispose();
      super.dispose();
    }
    [S$0._handleLongPress]() {
      this[S$0._longPressActivated] = true;
      let tooltipCreated = this.ensureTooltipVisible();
      if (dart.test(tooltipCreated)) feedback.Feedback.forLongPress(this.context);
    }
    build(context) {
      let t47, t47$, t47$0, t47$1, t47$2, t47$3, t47$4, t47$5, t47$6, t47$7, t47$8, t47$9, t47$10, t47$11, t47$12, t47$13, t47$14, t47$15, t47$16, t47$17, t47$18, t47$19;
      if (context == null) dart.nullFailed(I[94], 474, 29, "context");
      if (!(overlay$.Overlay.of(context, {debugRequiredFor: this.widget}) != null)) dart.assertFailed(null, I[94], 475, 12, "Overlay.of(context, debugRequiredFor: widget) != null");
      let theme = theme$.Theme.of(context);
      let tooltipTheme = tooltip_theme.TooltipTheme.of(context);
      let defaultTextStyle = null;
      let defaultDecoration = null;
      if (theme.brightness == ui.Brightness.dark) {
        defaultTextStyle = dart.nullCheck(theme.textTheme.bodyText2).copyWith({color: colors$.Colors.black, fontSize: this[S$0._getDefaultFontSize]()});
        defaultDecoration = new box_decoration.BoxDecoration.new({color: colors$.Colors.white.withOpacity(0.9), borderRadius: C[67] || CT.C67});
      } else {
        defaultTextStyle = dart.nullCheck(theme.textTheme.bodyText2).copyWith({color: colors$.Colors.white, fontSize: this[S$0._getDefaultFontSize]()});
        defaultDecoration = new box_decoration.BoxDecoration.new({color: dart.nullCheck(colors$.Colors.grey._get(700)).withOpacity(0.9), borderRadius: C[67] || CT.C67});
      }
      this.height = (t47$ = (t47 = this.widget.height, t47 == null ? tooltipTheme.height : t47), t47$ == null ? this[S$0._getDefaultTooltipHeight]() : t47$);
      this.padding = (t47$1 = (t47$0 = this.widget.padding, t47$0 == null ? tooltipTheme.padding : t47$0), t47$1 == null ? this[S$0._getDefaultPadding]() : t47$1);
      this.margin = (t47$3 = (t47$2 = this.widget.margin, t47$2 == null ? tooltipTheme.margin : t47$2), t47$3 == null ? tooltip._TooltipState._defaultMargin : t47$3);
      this.verticalOffset = (t47$5 = (t47$4 = this.widget.verticalOffset, t47$4 == null ? tooltipTheme.verticalOffset : t47$4), t47$5 == null ? 24 : t47$5);
      this.preferBelow = (t47$7 = (t47$6 = this.widget.preferBelow, t47$6 == null ? tooltipTheme.preferBelow : t47$6), t47$7 == null ? true : t47$7);
      this.excludeFromSemantics = (t47$9 = (t47$8 = this.widget.excludeFromSemantics, t47$8 == null ? tooltipTheme.excludeFromSemantics : t47$8), t47$9 == null ? false : t47$9);
      this.decoration = (t47$11 = (t47$10 = this.widget.decoration, t47$10 == null ? tooltipTheme.decoration : t47$10), t47$11 == null ? defaultDecoration : t47$11);
      this.textStyle = (t47$13 = (t47$12 = this.widget.textStyle, t47$12 == null ? tooltipTheme.textStyle : t47$12), t47$13 == null ? defaultTextStyle : t47$13);
      this.waitDuration = (t47$15 = (t47$14 = this.widget.waitDuration, t47$14 == null ? tooltipTheme.waitDuration : t47$14), t47$15 == null ? tooltip._TooltipState._defaultWaitDuration : t47$15);
      this.showDuration = (t47$17 = (t47$16 = this.widget.showDuration, t47$16 == null ? tooltipTheme.showDuration : t47$16), t47$17 == null ? tooltip._TooltipState._defaultShowDuration : t47$17);
      this.hoverShowDuration = (t47$19 = (t47$18 = this.widget.showDuration, t47$18 == null ? tooltipTheme.showDuration : t47$18), t47$19 == null ? tooltip._TooltipState._defaultHoverShowDuration : t47$19);
      let result = new gesture_detector.GestureDetector.new({behavior: proxy_box.HitTestBehavior.opaque, onLongPress: dart.bind(this, S$0._handleLongPress), excludeFromSemantics: true, child: new basic.Semantics.new({label: dart.test(this.excludeFromSemantics) ? null : this.widget.message, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C[520] || CT.C520}), $creationLocationd_0dea112b090073317d4: C[521] || CT.C521});
      if (dart.test(this[S$0._mouseIsConnected])) {
        result = new basic.MouseRegion.new({onEnter: dart.fn(event => {
            if (event == null) dart.nullFailed(I[94], 525, 37, "event");
            return this[S$0._showTooltip]();
          }, T$.PointerEnterEventTovoid()), onExit: dart.fn(event => {
            if (event == null) dart.nullFailed(I[94], 526, 35, "event");
            return this[S$0._hideTooltip]();
          }, T$.PointerExitEventTovoid()), child: result, $creationLocationd_0dea112b090073317d4: C[522] || CT.C522});
      }
      return result;
    }
  };
  (tooltip._TooltipState.new = function() {
    this[S$0.___TooltipState_height] = null;
    this[S$0.___TooltipState_height_isSet] = false;
    this[S$0.___TooltipState_padding] = null;
    this[S$0.___TooltipState_padding_isSet] = false;
    this[S$0.___TooltipState_margin] = null;
    this[S$0.___TooltipState_margin_isSet] = false;
    this[S$0.___TooltipState_decoration] = null;
    this[S$0.___TooltipState_decoration_isSet] = false;
    this[S$0.___TooltipState_textStyle] = null;
    this[S$0.___TooltipState_textStyle_isSet] = false;
    this[S$0.___TooltipState_verticalOffset] = null;
    this[S$0.___TooltipState_verticalOffset_isSet] = false;
    this[S$0.___TooltipState_preferBelow] = null;
    this[S$0.___TooltipState_preferBelow_isSet] = false;
    this[S$0.___TooltipState_excludeFromSemantics] = null;
    this[S$0.___TooltipState_excludeFromSemantics_isSet] = false;
    this[S$0.___TooltipState__controller] = null;
    this[S$0.___TooltipState__controller_isSet] = false;
    this[S$0._entry] = null;
    this[S$0._hideTimer] = null;
    this[S$0._showTimer] = null;
    this[S$0.___TooltipState_showDuration] = null;
    this[S$0.___TooltipState_showDuration_isSet] = false;
    this[S$0.___TooltipState_hoverShowDuration] = null;
    this[S$0.___TooltipState_hoverShowDuration_isSet] = false;
    this[S$0.___TooltipState_waitDuration] = null;
    this[S$0.___TooltipState_waitDuration_isSet] = false;
    this[S$0.___TooltipState__mouseIsConnected] = null;
    this[S$0.___TooltipState__mouseIsConnected_isSet] = false;
    this[S$0._longPressActivated] = false;
    tooltip._TooltipState.__proto__.new.call(this);
    ;
  }).prototype = tooltip._TooltipState.prototype;
  dart.addTypeTests(tooltip._TooltipState);
  dart.addTypeCaches(tooltip._TooltipState);
  dart.setMethodSignature(tooltip._TooltipState, () => ({
    __proto__: dart.getMethods(tooltip._TooltipState.__proto__),
    [S$0._getDefaultTooltipHeight]: dart.fnType(core.double, []),
    [S$0._getDefaultPadding]: dart.fnType(edge_insets.EdgeInsets, []),
    [S$0._getDefaultFontSize]: dart.fnType(core.double, []),
    [S$0._handleMouseTrackerChange]: dart.fnType(dart.void, []),
    [S$0._handleStatusChanged]: dart.fnType(dart.void, [animation.AnimationStatus]),
    [S$0._hideTooltip]: dart.fnType(dart.void, [], {immediately: core.bool}, {}),
    [S$0._showTooltip]: dart.fnType(dart.void, [], {immediately: core.bool}, {}),
    ensureTooltipVisible: dart.fnType(core.bool, []),
    [S$0._createNewEntry]: dart.fnType(dart.void, []),
    [S$0._removeEntry]: dart.fnType(dart.void, []),
    [S$0._handlePointerEvent]: dart.fnType(dart.void, [events.PointerEvent]),
    [S$0._handleLongPress]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(tooltip._TooltipState, () => ({
    __proto__: dart.getGetters(tooltip._TooltipState.__proto__),
    height: core.double,
    padding: edge_insets.EdgeInsetsGeometry,
    margin: edge_insets.EdgeInsetsGeometry,
    decoration: decoration.Decoration,
    textStyle: text_style.TextStyle,
    verticalOffset: core.double,
    preferBelow: core.bool,
    excludeFromSemantics: core.bool,
    [S$0._controller$5]: animation_controller.AnimationController,
    showDuration: core.Duration,
    hoverShowDuration: core.Duration,
    waitDuration: core.Duration,
    [S$0._mouseIsConnected]: core.bool
  }));
  dart.setSetterSignature(tooltip._TooltipState, () => ({
    __proto__: dart.getSetters(tooltip._TooltipState.__proto__),
    height: core.double,
    padding: edge_insets.EdgeInsetsGeometry,
    margin: edge_insets.EdgeInsetsGeometry,
    decoration: decoration.Decoration,
    textStyle: text_style.TextStyle,
    verticalOffset: core.double,
    preferBelow: core.bool,
    excludeFromSemantics: core.bool,
    [S$0._controller$5]: animation_controller.AnimationController,
    showDuration: core.Duration,
    hoverShowDuration: core.Duration,
    waitDuration: core.Duration,
    [S$0._mouseIsConnected]: core.bool
  }));
  dart.setLibraryUri(tooltip._TooltipState, I[95]);
  dart.setFieldSignature(tooltip._TooltipState, () => ({
    __proto__: dart.getFields(tooltip._TooltipState.__proto__),
    [S$0.___TooltipState_height]: dart.fieldType(dart.nullable(core.double)),
    [S$0.___TooltipState_height_isSet]: dart.fieldType(core.bool),
    [S$0.___TooltipState_padding]: dart.fieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    [S$0.___TooltipState_padding_isSet]: dart.fieldType(core.bool),
    [S$0.___TooltipState_margin]: dart.fieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    [S$0.___TooltipState_margin_isSet]: dart.fieldType(core.bool),
    [S$0.___TooltipState_decoration]: dart.fieldType(dart.nullable(decoration.Decoration)),
    [S$0.___TooltipState_decoration_isSet]: dart.fieldType(core.bool),
    [S$0.___TooltipState_textStyle]: dart.fieldType(dart.nullable(text_style.TextStyle)),
    [S$0.___TooltipState_textStyle_isSet]: dart.fieldType(core.bool),
    [S$0.___TooltipState_verticalOffset]: dart.fieldType(dart.nullable(core.double)),
    [S$0.___TooltipState_verticalOffset_isSet]: dart.fieldType(core.bool),
    [S$0.___TooltipState_preferBelow]: dart.fieldType(dart.nullable(core.bool)),
    [S$0.___TooltipState_preferBelow_isSet]: dart.fieldType(core.bool),
    [S$0.___TooltipState_excludeFromSemantics]: dart.fieldType(dart.nullable(core.bool)),
    [S$0.___TooltipState_excludeFromSemantics_isSet]: dart.fieldType(core.bool),
    [S$0.___TooltipState__controller]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$0.___TooltipState__controller_isSet]: dart.fieldType(core.bool),
    [S$0._entry]: dart.fieldType(dart.nullable(overlay$.OverlayEntry)),
    [S$0._hideTimer]: dart.fieldType(dart.nullable(async.Timer)),
    [S$0._showTimer]: dart.fieldType(dart.nullable(async.Timer)),
    [S$0.___TooltipState_showDuration]: dart.fieldType(dart.nullable(core.Duration)),
    [S$0.___TooltipState_showDuration_isSet]: dart.fieldType(core.bool),
    [S$0.___TooltipState_hoverShowDuration]: dart.fieldType(dart.nullable(core.Duration)),
    [S$0.___TooltipState_hoverShowDuration_isSet]: dart.fieldType(core.bool),
    [S$0.___TooltipState_waitDuration]: dart.fieldType(dart.nullable(core.Duration)),
    [S$0.___TooltipState_waitDuration_isSet]: dart.fieldType(core.bool),
    [S$0.___TooltipState__mouseIsConnected]: dart.fieldType(dart.nullable(core.bool)),
    [S$0.___TooltipState__mouseIsConnected_isSet]: dart.fieldType(core.bool),
    [S$0._longPressActivated]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(tooltip._TooltipState, {
    /*tooltip._TooltipState._defaultVerticalOffset*/get _defaultVerticalOffset() {
      return 24;
    },
    /*tooltip._TooltipState._defaultPreferBelow*/get _defaultPreferBelow() {
      return true;
    },
    /*tooltip._TooltipState._defaultMargin*/get _defaultMargin() {
      return C[214] || CT.C214;
    },
    /*tooltip._TooltipState._fadeInDuration*/get _fadeInDuration() {
      return C[458] || CT.C458;
    },
    /*tooltip._TooltipState._fadeOutDuration*/get _fadeOutDuration() {
      return C[45] || CT.C45;
    },
    /*tooltip._TooltipState._defaultShowDuration*/get _defaultShowDuration() {
      return C[523] || CT.C523;
    },
    /*tooltip._TooltipState._defaultHoverShowDuration*/get _defaultHoverShowDuration() {
      return C[524] || CT.C524;
    },
    /*tooltip._TooltipState._defaultWaitDuration*/get _defaultWaitDuration() {
      return C[525] || CT.C525;
    },
    /*tooltip._TooltipState._defaultExcludeFromSemantics*/get _defaultExcludeFromSemantics() {
      return false;
    }
  }, false);
  tooltip._TooltipPositionDelegate = class _TooltipPositionDelegate extends shifted_box.SingleChildLayoutDelegate {
    getConstraintsForChild(constraints) {
      if (constraints == null) dart.nullFailed(I[94], 564, 56, "constraints");
      return constraints.loosen();
    }
    getPositionForChild(size, childSize) {
      if (size == null) dart.nullFailed(I[94], 567, 35, "size");
      if (childSize == null) dart.nullFailed(I[94], 567, 46, "childSize");
      return geometry.positionDependentBox({size: size, childSize: childSize, target: this.target, verticalOffset: this.verticalOffset, preferBelow: this.preferBelow});
    }
    shouldRelayout(oldDelegate) {
      tooltip._TooltipPositionDelegate.as(oldDelegate);
      if (oldDelegate == null) dart.nullFailed(I[94], 578, 48, "oldDelegate");
      return !dart.equals(this.target, oldDelegate.target) || this.verticalOffset != oldDelegate.verticalOffset || this.preferBelow != oldDelegate.preferBelow;
    }
  };
  (tooltip._TooltipPositionDelegate.new = function(opts) {
    let target = opts && 'target' in opts ? opts.target : null;
    if (target == null) dart.nullFailed(I[94], 542, 19, "target");
    let verticalOffset = opts && 'verticalOffset' in opts ? opts.verticalOffset : null;
    if (verticalOffset == null) dart.nullFailed(I[94], 543, 19, "verticalOffset");
    let preferBelow = opts && 'preferBelow' in opts ? opts.preferBelow : null;
    if (preferBelow == null) dart.nullFailed(I[94], 544, 19, "preferBelow");
    this.target = target;
    this.verticalOffset = verticalOffset;
    this.preferBelow = preferBelow;
    if (!(target != null)) dart.assertFailed(null, I[94], 545, 15, "target != null");
    if (!(verticalOffset != null)) dart.assertFailed(null, I[94], 546, 15, "verticalOffset != null");
    if (!(preferBelow != null)) dart.assertFailed(null, I[94], 547, 15, "preferBelow != null");
    tooltip._TooltipPositionDelegate.__proto__.new.call(this);
    ;
  }).prototype = tooltip._TooltipPositionDelegate.prototype;
  dart.addTypeTests(tooltip._TooltipPositionDelegate);
  dart.addTypeCaches(tooltip._TooltipPositionDelegate);
  dart.setMethodSignature(tooltip._TooltipPositionDelegate, () => ({
    __proto__: dart.getMethods(tooltip._TooltipPositionDelegate.__proto__),
    shouldRelayout: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(tooltip._TooltipPositionDelegate, I[95]);
  dart.setFieldSignature(tooltip._TooltipPositionDelegate, () => ({
    __proto__: dart.getFields(tooltip._TooltipPositionDelegate.__proto__),
    target: dart.finalFieldType(ui.Offset),
    verticalOffset: dart.finalFieldType(core.double),
    preferBelow: dart.finalFieldType(core.bool)
  }));
  tooltip._TooltipOverlay = class _TooltipOverlay extends framework.StatelessWidget {
    get message() {
      return this[S$0.message$1];
    }
    set message(value) {
      super.message = value;
    }
    get height() {
      return this[S$0.height$5];
    }
    set height(value) {
      super.height = value;
    }
    get padding() {
      return this[S$0.padding$11];
    }
    set padding(value) {
      super.padding = value;
    }
    get margin() {
      return this[S$0.margin$4];
    }
    set margin(value) {
      super.margin = value;
    }
    get decoration() {
      return this[S$0.decoration$5];
    }
    set decoration(value) {
      super.decoration = value;
    }
    get textStyle() {
      return this[S$0.textStyle$6];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get animation() {
      return this[S$0.animation$6];
    }
    set animation(value) {
      super.animation = value;
    }
    get target() {
      return this[S$0.target];
    }
    set target(value) {
      super.target = value;
    }
    get verticalOffset() {
      return this[S$0.verticalOffset$2];
    }
    set verticalOffset(value) {
      super.verticalOffset = value;
    }
    get preferBelow() {
      return this[S$0.preferBelow$2];
    }
    set preferBelow(value) {
      super.preferBelow = value;
    }
    get onEnter() {
      return this[S$0.onEnter];
    }
    set onEnter(value) {
      super.onEnter = value;
    }
    get onExit() {
      return this[S$0.onExit];
    }
    set onExit(value) {
      super.onExit = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[94], 616, 29, "context");
      let result = new basic.IgnorePointer.new({child: new transitions.FadeTransition.new({opacity: this.animation, child: new basic.ConstrainedBox.new({constraints: new box$.BoxConstraints.new({minHeight: this.height}), child: new text$.DefaultTextStyle.new({style: dart.nullCheck(theme$.Theme.of(context).textTheme.bodyText2), child: new container.Container.new({decoration: this.decoration, padding: this.padding, margin: this.margin, child: new basic.Center.new({widthFactor: 1.0, heightFactor: 1.0, child: new text$.Text.new(this.message, {style: this.textStyle, $creationLocationd_0dea112b090073317d4: C[526] || CT.C526}), $creationLocationd_0dea112b090073317d4: C[527] || CT.C527}), $creationLocationd_0dea112b090073317d4: C[528] || CT.C528}), $creationLocationd_0dea112b090073317d4: C[529] || CT.C529}), $creationLocationd_0dea112b090073317d4: C[530] || CT.C530}), $creationLocationd_0dea112b090073317d4: C[531] || CT.C531}), $creationLocationd_0dea112b090073317d4: C[532] || CT.C532});
      if (this.onEnter != null || this.onExit != null) {
        result = new basic.MouseRegion.new({onEnter: this.onEnter, onExit: this.onExit, child: result, $creationLocationd_0dea112b090073317d4: C[533] || CT.C533});
      }
      return new basic.Positioned.fill({child: new basic.CustomSingleChildLayout.new({delegate: new tooltip._TooltipPositionDelegate.new({target: this.target, verticalOffset: this.verticalOffset, preferBelow: this.preferBelow}), child: result, $creationLocationd_0dea112b090073317d4: C[534] || CT.C534}), $creationLocationd_0dea112b090073317d4: C[535] || CT.C535});
    }
  };
  (tooltip._TooltipOverlay.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let message = opts && 'message' in opts ? opts.message : null;
    if (message == null) dart.nullFailed(I[94], 588, 19, "message");
    let height = opts && 'height' in opts ? opts.height : null;
    if (height == null) dart.nullFailed(I[94], 589, 19, "height");
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let margin = opts && 'margin' in opts ? opts.margin : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    if (animation == null) dart.nullFailed(I[94], 594, 19, "animation");
    let target = opts && 'target' in opts ? opts.target : null;
    if (target == null) dart.nullFailed(I[94], 595, 19, "target");
    let verticalOffset = opts && 'verticalOffset' in opts ? opts.verticalOffset : null;
    if (verticalOffset == null) dart.nullFailed(I[94], 596, 19, "verticalOffset");
    let preferBelow = opts && 'preferBelow' in opts ? opts.preferBelow : null;
    if (preferBelow == null) dart.nullFailed(I[94], 597, 19, "preferBelow");
    let onEnter = opts && 'onEnter' in opts ? opts.onEnter : null;
    let onExit = opts && 'onExit' in opts ? opts.onExit : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.message$1] = message;
    this[S$0.height$5] = height;
    this[S$0.padding$11] = padding;
    this[S$0.margin$4] = margin;
    this[S$0.decoration$5] = decoration;
    this[S$0.textStyle$6] = textStyle;
    this[S$0.animation$6] = animation;
    this[S$0.target] = target;
    this[S$0.verticalOffset$2] = verticalOffset;
    this[S$0.preferBelow$2] = preferBelow;
    this[S$0.onEnter] = onEnter;
    this[S$0.onExit] = onExit;
    tooltip._TooltipOverlay.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tooltip._TooltipOverlay.prototype;
  dart.addTypeTests(tooltip._TooltipOverlay);
  dart.addTypeCaches(tooltip._TooltipOverlay);
  dart.setMethodSignature(tooltip._TooltipOverlay, () => ({
    __proto__: dart.getMethods(tooltip._TooltipOverlay.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(tooltip._TooltipOverlay, I[95]);
  dart.setFieldSignature(tooltip._TooltipOverlay, () => ({
    __proto__: dart.getFields(tooltip._TooltipOverlay.__proto__),
    message: dart.finalFieldType(core.String),
    height: dart.finalFieldType(core.double),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    margin: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    decoration: dart.finalFieldType(dart.nullable(decoration.Decoration)),
    textStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    animation: dart.finalFieldType(animation.Animation$(core.double)),
    target: dart.finalFieldType(ui.Offset),
    verticalOffset: dart.finalFieldType(core.double),
    preferBelow: dart.finalFieldType(core.bool),
    onEnter: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [events.PointerEnterEvent]))),
    onExit: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [events.PointerExitEvent])))
  }));
  bottom_navigation_bar.BottomNavigationBarType = class BottomNavigationBarType extends core.Object {
    toString() {
      return this[S$0._name$16];
    }
  };
  (bottom_navigation_bar.BottomNavigationBarType.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[96], 28, 6, "index");
    if (_name == null) dart.nullFailed(I[96], 28, 6, "_name");
    this.index = index;
    this[S$0._name$16] = _name;
    ;
  }).prototype = bottom_navigation_bar.BottomNavigationBarType.prototype;
  dart.addTypeTests(bottom_navigation_bar.BottomNavigationBarType);
  dart.addTypeCaches(bottom_navigation_bar.BottomNavigationBarType);
  bottom_navigation_bar.BottomNavigationBarType[dart.implements] = () => [core.Enum];
  dart.setLibraryUri(bottom_navigation_bar.BottomNavigationBarType, I[97]);
  dart.setFieldSignature(bottom_navigation_bar.BottomNavigationBarType, () => ({
    __proto__: dart.getFields(bottom_navigation_bar.BottomNavigationBarType.__proto__),
    index: dart.finalFieldType(core.int),
    [S$0._name$16]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(bottom_navigation_bar.BottomNavigationBarType, ['toString']);
  bottom_navigation_bar.BottomNavigationBarType.fixed = C[536] || CT.C536;
  bottom_navigation_bar.BottomNavigationBarType.shifting = C[537] || CT.C537;
  bottom_navigation_bar.BottomNavigationBarType.values = C[538] || CT.C538;
  bottom_navigation_bar.BottomNavigationBar = class BottomNavigationBar extends framework.StatefulWidget {
    get items() {
      return this[S$0.items];
    }
    set items(value) {
      super.items = value;
    }
    get onTap() {
      return this[S$0.onTap$1];
    }
    set onTap(value) {
      super.onTap = value;
    }
    get currentIndex() {
      return this[S$0.currentIndex];
    }
    set currentIndex(value) {
      super.currentIndex = value;
    }
    get elevation() {
      return this[S$0.elevation$14];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get type() {
      return this[S$0.type];
    }
    set type(value) {
      super.type = value;
    }
    get backgroundColor() {
      return this[S$0.backgroundColor$10];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get iconSize() {
      return this[S$0.iconSize$1];
    }
    set iconSize(value) {
      super.iconSize = value;
    }
    get selectedItemColor() {
      return this[S$0.selectedItemColor];
    }
    set selectedItemColor(value) {
      super.selectedItemColor = value;
    }
    get unselectedItemColor() {
      return this[S$0.unselectedItemColor];
    }
    set unselectedItemColor(value) {
      super.unselectedItemColor = value;
    }
    get selectedIconTheme() {
      return this[S$0.selectedIconTheme$2];
    }
    set selectedIconTheme(value) {
      super.selectedIconTheme = value;
    }
    get unselectedIconTheme() {
      return this[S$0.unselectedIconTheme$2];
    }
    set unselectedIconTheme(value) {
      super.unselectedIconTheme = value;
    }
    get selectedLabelStyle() {
      return this[S$0.selectedLabelStyle];
    }
    set selectedLabelStyle(value) {
      super.selectedLabelStyle = value;
    }
    get unselectedLabelStyle() {
      return this[S$0.unselectedLabelStyle$3];
    }
    set unselectedLabelStyle(value) {
      super.unselectedLabelStyle = value;
    }
    get selectedFontSize() {
      return this[S$0.selectedFontSize];
    }
    set selectedFontSize(value) {
      super.selectedFontSize = value;
    }
    get unselectedFontSize() {
      return this[S$0.unselectedFontSize];
    }
    set unselectedFontSize(value) {
      super.unselectedFontSize = value;
    }
    get showUnselectedLabels() {
      return this[S$0.showUnselectedLabels];
    }
    set showUnselectedLabels(value) {
      super.showUnselectedLabels = value;
    }
    get showSelectedLabels() {
      return this[S$0.showSelectedLabels];
    }
    set showSelectedLabels(value) {
      super.showSelectedLabels = value;
    }
    get mouseCursor() {
      return this[S$0.mouseCursor$10];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get enableFeedback() {
      return this[S$0.enableFeedback$7];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get fixedColor() {
      return this.selectedItemColor;
    }
    createState() {
      return new bottom_navigation_bar._BottomNavigationBarState.new();
    }
  };
  (bottom_navigation_bar.BottomNavigationBar.new = function(opts) {
    let t47;
    let key = opts && 'key' in opts ? opts.key : null;
    let items = opts && 'items' in opts ? opts.items : null;
    if (items == null) dart.nullFailed(I[96], 260, 19, "items");
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let currentIndex = opts && 'currentIndex' in opts ? opts.currentIndex : 0;
    if (currentIndex == null) dart.nullFailed(I[96], 262, 10, "currentIndex");
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let type = opts && 'type' in opts ? opts.type : null;
    let fixedColor = opts && 'fixedColor' in opts ? opts.fixedColor : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let iconSize = opts && 'iconSize' in opts ? opts.iconSize : 24;
    if (iconSize == null) dart.nullFailed(I[96], 267, 10, "iconSize");
    let selectedItemColor = opts && 'selectedItemColor' in opts ? opts.selectedItemColor : null;
    let unselectedItemColor = opts && 'unselectedItemColor' in opts ? opts.unselectedItemColor : null;
    let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
    let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
    let selectedFontSize = opts && 'selectedFontSize' in opts ? opts.selectedFontSize : 14;
    if (selectedFontSize == null) dart.nullFailed(I[96], 272, 10, "selectedFontSize");
    let unselectedFontSize = opts && 'unselectedFontSize' in opts ? opts.unselectedFontSize : 12;
    if (unselectedFontSize == null) dart.nullFailed(I[96], 273, 10, "unselectedFontSize");
    let selectedLabelStyle = opts && 'selectedLabelStyle' in opts ? opts.selectedLabelStyle : null;
    let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
    let showSelectedLabels = opts && 'showSelectedLabels' in opts ? opts.showSelectedLabels : null;
    let showUnselectedLabels = opts && 'showUnselectedLabels' in opts ? opts.showUnselectedLabels : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.items] = items;
    this[S$0.onTap$1] = onTap;
    this[S$0.currentIndex] = currentIndex;
    this[S$0.elevation$14] = elevation;
    this[S$0.type] = type;
    this[S$0.backgroundColor$10] = backgroundColor;
    this[S$0.iconSize$1] = iconSize;
    this[S$0.unselectedItemColor] = unselectedItemColor;
    this[S$0.selectedIconTheme$2] = selectedIconTheme;
    this[S$0.unselectedIconTheme$2] = unselectedIconTheme;
    this[S$0.selectedFontSize] = selectedFontSize;
    this[S$0.unselectedFontSize] = unselectedFontSize;
    this[S$0.selectedLabelStyle] = selectedLabelStyle;
    this[S$0.unselectedLabelStyle$3] = unselectedLabelStyle;
    this[S$0.showSelectedLabels] = showSelectedLabels;
    this[S$0.showUnselectedLabels] = showUnselectedLabels;
    this[S$0.mouseCursor$10] = mouseCursor;
    this[S$0.enableFeedback$7] = enableFeedback;
    if (!(items != null)) dart.assertFailed(null, I[96], 280, 15, "items != null");
    if (!(dart.notNull(items[S.$length]) >= 2)) dart.assertFailed(null, I[96], 281, 15, "items.length >= 2");
    if (!(dart.test(items[S$0.$every](dart.fn(item => {
      if (item == null) dart.nullFailed(I[96], 283, 46, "item");
      return item.title != null;
    }, T$.BottomNavigationBarItemTobool()))) || dart.test(items[S$0.$every](dart.fn(item => {
      if (item == null) dart.nullFailed(I[96], 284, 46, "item");
      return item.label != null;
    }, T$.BottomNavigationBarItemTobool()))))) dart.assertFailed("Every item must have a non-null title or label", I[96], 283, 9, "items.every((BottomNavigationBarItem item) => item.title != null) ||\r\n        items.every((BottomNavigationBarItem item) => item.label != null)");
    if (!(0 <= dart.notNull(currentIndex) && dart.notNull(currentIndex) < dart.notNull(items[S.$length]))) dart.assertFailed(null, I[96], 287, 15, "0 <= currentIndex && currentIndex < items.length");
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[96], 288, 15, "elevation == null || elevation >= 0.0");
    if (!(iconSize != null && dart.notNull(iconSize) >= 0.0)) dart.assertFailed(null, I[96], 289, 15, "iconSize != null && iconSize >= 0.0");
    if (!(selectedItemColor == null || fixedColor == null)) dart.assertFailed("Either selectedItemColor or fixedColor can be specified, but not both", I[96], 291, 10, "selectedItemColor == null || fixedColor == null");
    if (!(selectedFontSize != null && dart.notNull(selectedFontSize) >= 0.0)) dart.assertFailed(null, I[96], 294, 15, "selectedFontSize != null && selectedFontSize >= 0.0");
    if (!(unselectedFontSize != null && dart.notNull(unselectedFontSize) >= 0.0)) dart.assertFailed(null, I[96], 295, 15, "unselectedFontSize != null && unselectedFontSize >= 0.0");
    this[S$0.selectedItemColor] = (t47 = selectedItemColor, t47 == null ? fixedColor : t47);
    bottom_navigation_bar.BottomNavigationBar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = bottom_navigation_bar.BottomNavigationBar.prototype;
  dart.addTypeTests(bottom_navigation_bar.BottomNavigationBar);
  dart.addTypeCaches(bottom_navigation_bar.BottomNavigationBar);
  dart.setMethodSignature(bottom_navigation_bar.BottomNavigationBar, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar.BottomNavigationBar.__proto__),
    createState: dart.fnType(framework.State$(bottom_navigation_bar.BottomNavigationBar), [])
  }));
  dart.setGetterSignature(bottom_navigation_bar.BottomNavigationBar, () => ({
    __proto__: dart.getGetters(bottom_navigation_bar.BottomNavigationBar.__proto__),
    fixedColor: dart.nullable(ui.Color)
  }));
  dart.setLibraryUri(bottom_navigation_bar.BottomNavigationBar, I[97]);
  dart.setFieldSignature(bottom_navigation_bar.BottomNavigationBar, () => ({
    __proto__: dart.getFields(bottom_navigation_bar.BottomNavigationBar.__proto__),
    items: dart.finalFieldType(core.List$(bottom_navigation_bar_item.BottomNavigationBarItem)),
    onTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.int]))),
    currentIndex: dart.finalFieldType(core.int),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    type: dart.finalFieldType(dart.nullable(bottom_navigation_bar.BottomNavigationBarType)),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    iconSize: dart.finalFieldType(core.double),
    selectedItemColor: dart.finalFieldType(dart.nullable(ui.Color)),
    unselectedItemColor: dart.finalFieldType(dart.nullable(ui.Color)),
    selectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    unselectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    selectedLabelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    unselectedLabelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    selectedFontSize: dart.finalFieldType(core.double),
    unselectedFontSize: dart.finalFieldType(core.double),
    showUnselectedLabels: dart.finalFieldType(dart.nullable(core.bool)),
    showSelectedLabels: dart.finalFieldType(dart.nullable(core.bool)),
    mouseCursor: dart.finalFieldType(dart.nullable(mouse_cursor.MouseCursor)),
    enableFeedback: dart.finalFieldType(dart.nullable(core.bool))
  }));
  bottom_navigation_bar._BottomNavigationTile = class _BottomNavigationTile extends framework.StatelessWidget {
    get type() {
      return this[S$0.type$1];
    }
    set type(value) {
      super.type = value;
    }
    get item() {
      return this[S$0.item];
    }
    set item(value) {
      super.item = value;
    }
    get animation() {
      return this[S$0.animation$7];
    }
    set animation(value) {
      super.animation = value;
    }
    get iconSize() {
      return this[S$0.iconSize$2];
    }
    set iconSize(value) {
      super.iconSize = value;
    }
    get onTap() {
      return this[S$0.onTap$2];
    }
    set onTap(value) {
      super.onTap = value;
    }
    get colorTween() {
      return this[S$0.colorTween];
    }
    set colorTween(value) {
      super.colorTween = value;
    }
    get flex() {
      return this[S$0.flex];
    }
    set flex(value) {
      super.flex = value;
    }
    get selected() {
      return this[S$0.selected$1];
    }
    set selected(value) {
      super.selected = value;
    }
    get selectedIconTheme() {
      return this[S$0.selectedIconTheme$3];
    }
    set selectedIconTheme(value) {
      super.selectedIconTheme = value;
    }
    get unselectedIconTheme() {
      return this[S$0.unselectedIconTheme$3];
    }
    set unselectedIconTheme(value) {
      super.unselectedIconTheme = value;
    }
    get selectedLabelStyle() {
      return this[S$0.selectedLabelStyle$1];
    }
    set selectedLabelStyle(value) {
      super.selectedLabelStyle = value;
    }
    get unselectedLabelStyle() {
      return this[S$0.unselectedLabelStyle$4];
    }
    set unselectedLabelStyle(value) {
      super.unselectedLabelStyle = value;
    }
    get indexLabel() {
      return this[S$0.indexLabel];
    }
    set indexLabel(value) {
      super.indexLabel = value;
    }
    get showSelectedLabels() {
      return this[S$0.showSelectedLabels$1];
    }
    set showSelectedLabels(value) {
      super.showSelectedLabels = value;
    }
    get showUnselectedLabels() {
      return this[S$0.showUnselectedLabels$1];
    }
    set showUnselectedLabels(value) {
      super.showUnselectedLabels = value;
    }
    get mouseCursor() {
      return this[S$0.mouseCursor$11];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get enableFeedback() {
      return this[S$0.enableFeedback$8];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    build(context) {
      let t47, t47$, t47$0, t47$1, t47$2;
      if (context == null) dart.nullFailed(I[96], 477, 29, "context");
      let size = null;
      let selectedFontSize = dart.nullCheck(this.selectedLabelStyle.fontSize);
      let selectedIconSize = (t47$ = (t47 = this.selectedIconTheme, t47 == null ? null : t47.size), t47$ == null ? this.iconSize : t47$);
      let unselectedIconSize = (t47$1 = (t47$0 = this.unselectedIconTheme, t47$0 == null ? null : t47$0.size), t47$1 == null ? this.iconSize : t47$1);
      let selectedIconDiff = math.max(core.double, dart.notNull(selectedIconSize) - dart.notNull(unselectedIconSize), 0.0);
      let unselectedIconDiff = math.max(core.double, dart.notNull(unselectedIconSize) - dart.notNull(selectedIconSize), 0.0);
      let effectiveTooltip = this.item.tooltip === "" ? null : (t47$2 = this.item.tooltip, t47$2 == null ? this.item.label : t47$2);
      let bottomPadding = null;
      let topPadding = null;
      if (dart.test(this.showSelectedLabels) && !dart.test(this.showUnselectedLabels)) {
        bottomPadding = new (T$.TweenOfdouble()).new({begin: selectedIconDiff / 2.0, end: selectedFontSize / 2.0 - unselectedIconDiff / 2.0}).evaluate(this.animation);
        topPadding = new (T$.TweenOfdouble()).new({begin: selectedFontSize + selectedIconDiff / 2.0, end: selectedFontSize / 2.0 - unselectedIconDiff / 2.0}).evaluate(this.animation);
      } else if (!dart.test(this.showSelectedLabels) && !dart.test(this.showUnselectedLabels)) {
        bottomPadding = new (T$.TweenOfdouble()).new({begin: selectedIconDiff / 2.0, end: unselectedIconDiff / 2.0}).evaluate(this.animation);
        topPadding = new (T$.TweenOfdouble()).new({begin: selectedFontSize + selectedIconDiff / 2.0, end: selectedFontSize + unselectedIconDiff / 2.0}).evaluate(this.animation);
      } else {
        bottomPadding = new (T$.TweenOfdouble()).new({begin: selectedFontSize / 2.0 + selectedIconDiff / 2.0, end: selectedFontSize / 2.0 + unselectedIconDiff / 2.0}).evaluate(this.animation);
        topPadding = new (T$.TweenOfdouble()).new({begin: selectedFontSize / 2.0 + selectedIconDiff / 2.0, end: selectedFontSize / 2.0 + unselectedIconDiff / 2.0}).evaluate(this.animation);
      }
      switch (this.type) {
        case C[536] || CT.C536:
        {
          size = 1;
          break;
        }
        case C[537] || CT.C537:
        {
          size = (dart.nullCheck(this.flex) * 1000.0)[S.$round]();
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      let result = new ink_well.InkResponse.new({onTap: this.onTap, mouseCursor: this.mouseCursor, enableFeedback: this.enableFeedback, child: new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({top: topPadding, bottom: bottomPadding}), child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.center, mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([new bottom_navigation_bar._TileIcon.new({colorTween: dart.nullCheck(this.colorTween), animation: this.animation, iconSize: this.iconSize, selected: this.selected, item: this.item, selectedIconTheme: this.selectedIconTheme, unselectedIconTheme: this.unselectedIconTheme, $creationLocationd_0dea112b090073317d4: C[539] || CT.C539}), new bottom_navigation_bar._Label.new({colorTween: dart.nullCheck(this.colorTween), animation: this.animation, item: this.item, selectedLabelStyle: this.selectedLabelStyle, unselectedLabelStyle: this.unselectedLabelStyle, showSelectedLabels: this.showSelectedLabels, showUnselectedLabels: this.showUnselectedLabels, $creationLocationd_0dea112b090073317d4: C[540] || CT.C540})]), $creationLocationd_0dea112b090073317d4: C[541] || CT.C541}), $creationLocationd_0dea112b090073317d4: C[542] || CT.C542}), $creationLocationd_0dea112b090073317d4: C[543] || CT.C543});
      if (effectiveTooltip != null) {
        result = new tooltip.Tooltip.new({message: effectiveTooltip, preferBelow: false, verticalOffset: dart.notNull(selectedIconSize) + selectedFontSize, excludeFromSemantics: true, child: result, $creationLocationd_0dea112b090073317d4: C[544] || CT.C544});
      }
      result = new basic.Semantics.new({selected: this.selected, container: true, child: new basic.Stack.new({children: T$.JSArrayOfWidget().of([result, new basic.Semantics.new({label: this.indexLabel, $creationLocationd_0dea112b090073317d4: C[545] || CT.C545})]), $creationLocationd_0dea112b090073317d4: C[546] || CT.C546}), $creationLocationd_0dea112b090073317d4: C[547] || CT.C547});
      return new basic.Expanded.new({flex: size, child: result, $creationLocationd_0dea112b090073317d4: C[548] || CT.C548});
    }
  };
  (bottom_navigation_bar._BottomNavigationTile.new = function(type, item, animation, iconSize, opts) {
    if (type == null) dart.nullFailed(I[96], 433, 10, "type");
    if (item == null) dart.nullFailed(I[96], 434, 10, "item");
    if (animation == null) dart.nullFailed(I[96], 435, 10, "animation");
    if (iconSize == null) dart.nullFailed(I[96], 436, 10, "iconSize");
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let colorTween = opts && 'colorTween' in opts ? opts.colorTween : null;
    let flex = opts && 'flex' in opts ? opts.flex : null;
    let selected = opts && 'selected' in opts ? opts.selected : false;
    if (selected == null) dart.nullFailed(I[96], 440, 10, "selected");
    let selectedLabelStyle = opts && 'selectedLabelStyle' in opts ? opts.selectedLabelStyle : null;
    if (selectedLabelStyle == null) dart.nullFailed(I[96], 441, 19, "selectedLabelStyle");
    let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
    if (unselectedLabelStyle == null) dart.nullFailed(I[96], 442, 19, "unselectedLabelStyle");
    let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
    let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
    let showSelectedLabels = opts && 'showSelectedLabels' in opts ? opts.showSelectedLabels : null;
    if (showSelectedLabels == null) dart.nullFailed(I[96], 445, 19, "showSelectedLabels");
    let showUnselectedLabels = opts && 'showUnselectedLabels' in opts ? opts.showUnselectedLabels : null;
    if (showUnselectedLabels == null) dart.nullFailed(I[96], 446, 19, "showUnselectedLabels");
    let indexLabel = opts && 'indexLabel' in opts ? opts.indexLabel : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    if (mouseCursor == null) dart.nullFailed(I[96], 448, 19, "mouseCursor");
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
    if (enableFeedback == null) dart.nullFailed(I[96], 449, 19, "enableFeedback");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.type$1] = type;
    this[S$0.item] = item;
    this[S$0.animation$7] = animation;
    this[S$0.iconSize$2] = iconSize;
    this[S$0.onTap$2] = onTap;
    this[S$0.colorTween] = colorTween;
    this[S$0.flex] = flex;
    this[S$0.selected$1] = selected;
    this[S$0.selectedLabelStyle$1] = selectedLabelStyle;
    this[S$0.unselectedLabelStyle$4] = unselectedLabelStyle;
    this[S$0.selectedIconTheme$3] = selectedIconTheme;
    this[S$0.unselectedIconTheme$3] = unselectedIconTheme;
    this[S$0.showSelectedLabels$1] = showSelectedLabels;
    this[S$0.showUnselectedLabels$1] = showUnselectedLabels;
    this[S$0.indexLabel] = indexLabel;
    this[S$0.mouseCursor$11] = mouseCursor;
    this[S$0.enableFeedback$8] = enableFeedback;
    if (!(type != null)) dart.assertFailed(null, I[96], 450, 17, "type != null");
    if (!(item != null)) dart.assertFailed(null, I[96], 451, 17, "item != null");
    if (!(animation != null)) dart.assertFailed(null, I[96], 452, 17, "animation != null");
    if (!(selected != null)) dart.assertFailed(null, I[96], 453, 17, "selected != null");
    if (!(selectedLabelStyle != null)) dart.assertFailed(null, I[96], 454, 17, "selectedLabelStyle != null");
    if (!(unselectedLabelStyle != null)) dart.assertFailed(null, I[96], 455, 17, "unselectedLabelStyle != null");
    if (!(mouseCursor != null)) dart.assertFailed(null, I[96], 456, 17, "mouseCursor != null");
    bottom_navigation_bar._BottomNavigationTile.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = bottom_navigation_bar._BottomNavigationTile.prototype;
  dart.addTypeTests(bottom_navigation_bar._BottomNavigationTile);
  dart.addTypeCaches(bottom_navigation_bar._BottomNavigationTile);
  dart.setMethodSignature(bottom_navigation_bar._BottomNavigationTile, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar._BottomNavigationTile.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(bottom_navigation_bar._BottomNavigationTile, I[97]);
  dart.setFieldSignature(bottom_navigation_bar._BottomNavigationTile, () => ({
    __proto__: dart.getFields(bottom_navigation_bar._BottomNavigationTile.__proto__),
    type: dart.finalFieldType(bottom_navigation_bar.BottomNavigationBarType),
    item: dart.finalFieldType(bottom_navigation_bar_item.BottomNavigationBarItem),
    animation: dart.finalFieldType(animation.Animation$(core.double)),
    iconSize: dart.finalFieldType(core.double),
    onTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    colorTween: dart.finalFieldType(dart.nullable(tween.ColorTween)),
    flex: dart.finalFieldType(dart.nullable(core.double)),
    selected: dart.finalFieldType(core.bool),
    selectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    unselectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    selectedLabelStyle: dart.finalFieldType(text_style.TextStyle),
    unselectedLabelStyle: dart.finalFieldType(text_style.TextStyle),
    indexLabel: dart.finalFieldType(dart.nullable(core.String)),
    showSelectedLabels: dart.finalFieldType(core.bool),
    showUnselectedLabels: dart.finalFieldType(core.bool),
    mouseCursor: dart.finalFieldType(mouse_cursor.MouseCursor),
    enableFeedback: dart.finalFieldType(core.bool)
  }));
  bottom_navigation_bar._TileIcon = class _TileIcon extends framework.StatelessWidget {
    get colorTween() {
      return this[S$0.colorTween$1];
    }
    set colorTween(value) {
      super.colorTween = value;
    }
    get animation() {
      return this[S$0.animation$8];
    }
    set animation(value) {
      super.animation = value;
    }
    get iconSize() {
      return this[S$0.iconSize$3];
    }
    set iconSize(value) {
      super.iconSize = value;
    }
    get selected() {
      return this[S$0.selected$2];
    }
    set selected(value) {
      super.selected = value;
    }
    get item() {
      return this[S$0.item$1];
    }
    set item(value) {
      super.item = value;
    }
    get selectedIconTheme() {
      return this[S$0.selectedIconTheme$4];
    }
    set selectedIconTheme(value) {
      super.selectedIconTheme = value;
    }
    get unselectedIconTheme() {
      return this[S$0.unselectedIconTheme$4];
    }
    set unselectedIconTheme(value) {
      super.unselectedIconTheme = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[96], 644, 29, "context");
      let iconColor = this.colorTween.evaluate(this.animation);
      let defaultIconTheme = new icon_theme_data.IconThemeData.new({color: iconColor, size: this.iconSize});
      let iconThemeData = icon_theme_data.IconThemeData.lerp(defaultIconTheme.merge(this.unselectedIconTheme), defaultIconTheme.merge(this.selectedIconTheme), this.animation.value);
      return new basic.Align.new({alignment: alignment.Alignment.topCenter, heightFactor: 1.0, child: new icon_theme.IconTheme.new({data: iconThemeData, child: dart.test(this.selected) ? this.item.activeIcon : this.item.icon, $creationLocationd_0dea112b090073317d4: C[549] || CT.C549}), $creationLocationd_0dea112b090073317d4: C[550] || CT.C550});
    }
  };
  (bottom_navigation_bar._TileIcon.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let colorTween = opts && 'colorTween' in opts ? opts.colorTween : null;
    if (colorTween == null) dart.nullFailed(I[96], 624, 19, "colorTween");
    let animation = opts && 'animation' in opts ? opts.animation : null;
    if (animation == null) dart.nullFailed(I[96], 625, 19, "animation");
    let iconSize = opts && 'iconSize' in opts ? opts.iconSize : null;
    if (iconSize == null) dart.nullFailed(I[96], 626, 19, "iconSize");
    let selected = opts && 'selected' in opts ? opts.selected : null;
    if (selected == null) dart.nullFailed(I[96], 627, 19, "selected");
    let item = opts && 'item' in opts ? opts.item : null;
    if (item == null) dart.nullFailed(I[96], 628, 19, "item");
    let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
    let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.colorTween$1] = colorTween;
    this[S$0.animation$8] = animation;
    this[S$0.iconSize$3] = iconSize;
    this[S$0.selected$2] = selected;
    this[S$0.item$1] = item;
    this[S$0.selectedIconTheme$4] = selectedIconTheme;
    this[S$0.unselectedIconTheme$4] = unselectedIconTheme;
    if (!(selected != null)) dart.assertFailed(null, I[96], 631, 15, "selected != null");
    if (!(item != null)) dart.assertFailed(null, I[96], 632, 15, "item != null");
    bottom_navigation_bar._TileIcon.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = bottom_navigation_bar._TileIcon.prototype;
  dart.addTypeTests(bottom_navigation_bar._TileIcon);
  dart.addTypeCaches(bottom_navigation_bar._TileIcon);
  dart.setMethodSignature(bottom_navigation_bar._TileIcon, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar._TileIcon.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(bottom_navigation_bar._TileIcon, I[97]);
  dart.setFieldSignature(bottom_navigation_bar._TileIcon, () => ({
    __proto__: dart.getFields(bottom_navigation_bar._TileIcon.__proto__),
    colorTween: dart.finalFieldType(tween.ColorTween),
    animation: dart.finalFieldType(animation.Animation$(core.double)),
    iconSize: dart.finalFieldType(core.double),
    selected: dart.finalFieldType(core.bool),
    item: dart.finalFieldType(bottom_navigation_bar_item.BottomNavigationBarItem),
    selectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    unselectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData))
  }));
  bottom_navigation_bar._Label = class _Label extends framework.StatelessWidget {
    get colorTween() {
      return this[S$0.colorTween$2];
    }
    set colorTween(value) {
      super.colorTween = value;
    }
    get animation() {
      return this[S$0.animation$9];
    }
    set animation(value) {
      super.animation = value;
    }
    get item() {
      return this[S$0.item$2];
    }
    set item(value) {
      super.item = value;
    }
    get selectedLabelStyle() {
      return this[S$0.selectedLabelStyle$2];
    }
    set selectedLabelStyle(value) {
      super.selectedLabelStyle = value;
    }
    get unselectedLabelStyle() {
      return this[S$0.unselectedLabelStyle$5];
    }
    set unselectedLabelStyle(value) {
      super.unselectedLabelStyle = value;
    }
    get showSelectedLabels() {
      return this[S$0.showSelectedLabels$2];
    }
    set showSelectedLabels(value) {
      super.showSelectedLabels = value;
    }
    get showUnselectedLabels() {
      return this[S$0.showUnselectedLabels$2];
    }
    set showUnselectedLabels(value) {
      super.showUnselectedLabels = value;
    }
    build(context) {
      let t47;
      if (context == null) dart.nullFailed(I[96], 695, 29, "context");
      let selectedFontSize = this.selectedLabelStyle.fontSize;
      let unselectedFontSize = this.unselectedLabelStyle.fontSize;
      let customStyle = dart.nullCheck(text_style.TextStyle.lerp(this.unselectedLabelStyle, this.selectedLabelStyle, this.animation.value));
      let text = text$.DefaultTextStyle.merge({style: customStyle.copyWith({fontSize: selectedFontSize, color: this.colorTween.evaluate(this.animation)}), child: new basic.Transform.new({transform: vector_math_64.Matrix4.diagonal3(vector_math_64.Vector3.all(new (T$.TweenOfdouble()).new({begin: dart.nullCheck(unselectedFontSize) / dart.nullCheck(selectedFontSize), end: 1.0}).evaluate(this.animation))), alignment: alignment.Alignment.bottomCenter, child: (t47 = this.item.title, t47 == null ? new text$.Text.new(dart.nullCheck(this.item.label), {$creationLocationd_0dea112b090073317d4: C[551] || CT.C551}) : t47), $creationLocationd_0dea112b090073317d4: C[552] || CT.C552})});
      if (!dart.test(this.showUnselectedLabels) && !dart.test(this.showSelectedLabels)) {
        text = new basic.Opacity.new({alwaysIncludeSemantics: true, opacity: 0.0, child: text, $creationLocationd_0dea112b090073317d4: C[553] || CT.C553});
      } else if (!dart.test(this.showUnselectedLabels)) {
        text = new transitions.FadeTransition.new({alwaysIncludeSemantics: true, opacity: this.animation, child: text, $creationLocationd_0dea112b090073317d4: C[554] || CT.C554});
      } else if (!dart.test(this.showSelectedLabels)) {
        text = new transitions.FadeTransition.new({alwaysIncludeSemantics: true, opacity: new (T$.TweenOfdouble()).new({begin: 1.0, end: 0.0}).animate(this.animation), child: text, $creationLocationd_0dea112b090073317d4: C[555] || CT.C555});
      }
      text = new basic.Align.new({alignment: alignment.Alignment.bottomCenter, heightFactor: 1.0, child: new container.Container.new({child: text, $creationLocationd_0dea112b090073317d4: C[556] || CT.C556}), $creationLocationd_0dea112b090073317d4: C[557] || CT.C557});
      if (this.item.label != null) {
        let mediaQueryData = media_query.MediaQuery.of(context);
        text = new media_query.MediaQuery.new({data: mediaQueryData.copyWith({textScaleFactor: math.min(core.double, 1.0, mediaQueryData.textScaleFactor)}), child: text, $creationLocationd_0dea112b090073317d4: C[558] || CT.C558});
      }
      return text;
    }
  };
  (bottom_navigation_bar._Label.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let colorTween = opts && 'colorTween' in opts ? opts.colorTween : null;
    if (colorTween == null) dart.nullFailed(I[96], 670, 19, "colorTween");
    let animation = opts && 'animation' in opts ? opts.animation : null;
    if (animation == null) dart.nullFailed(I[96], 671, 19, "animation");
    let item = opts && 'item' in opts ? opts.item : null;
    if (item == null) dart.nullFailed(I[96], 672, 19, "item");
    let selectedLabelStyle = opts && 'selectedLabelStyle' in opts ? opts.selectedLabelStyle : null;
    if (selectedLabelStyle == null) dart.nullFailed(I[96], 673, 19, "selectedLabelStyle");
    let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
    if (unselectedLabelStyle == null) dart.nullFailed(I[96], 674, 19, "unselectedLabelStyle");
    let showSelectedLabels = opts && 'showSelectedLabels' in opts ? opts.showSelectedLabels : null;
    if (showSelectedLabels == null) dart.nullFailed(I[96], 675, 19, "showSelectedLabels");
    let showUnselectedLabels = opts && 'showUnselectedLabels' in opts ? opts.showUnselectedLabels : null;
    if (showUnselectedLabels == null) dart.nullFailed(I[96], 676, 19, "showUnselectedLabels");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.colorTween$2] = colorTween;
    this[S$0.animation$9] = animation;
    this[S$0.item$2] = item;
    this[S$0.selectedLabelStyle$2] = selectedLabelStyle;
    this[S$0.unselectedLabelStyle$5] = unselectedLabelStyle;
    this[S$0.showSelectedLabels$2] = showSelectedLabels;
    this[S$0.showUnselectedLabels$2] = showUnselectedLabels;
    if (!(colorTween != null)) dart.assertFailed(null, I[96], 677, 15, "colorTween != null");
    if (!(animation != null)) dart.assertFailed(null, I[96], 678, 15, "animation != null");
    if (!(item != null)) dart.assertFailed(null, I[96], 679, 15, "item != null");
    if (!(selectedLabelStyle != null)) dart.assertFailed(null, I[96], 680, 15, "selectedLabelStyle != null");
    if (!(unselectedLabelStyle != null)) dart.assertFailed(null, I[96], 681, 15, "unselectedLabelStyle != null");
    if (!(showSelectedLabels != null)) dart.assertFailed(null, I[96], 682, 15, "showSelectedLabels != null");
    if (!(showUnselectedLabels != null)) dart.assertFailed(null, I[96], 683, 15, "showUnselectedLabels != null");
    bottom_navigation_bar._Label.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = bottom_navigation_bar._Label.prototype;
  dart.addTypeTests(bottom_navigation_bar._Label);
  dart.addTypeCaches(bottom_navigation_bar._Label);
  dart.setMethodSignature(bottom_navigation_bar._Label, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar._Label.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(bottom_navigation_bar._Label, I[97]);
  dart.setFieldSignature(bottom_navigation_bar._Label, () => ({
    __proto__: dart.getFields(bottom_navigation_bar._Label.__proto__),
    colorTween: dart.finalFieldType(tween.ColorTween),
    animation: dart.finalFieldType(animation.Animation$(core.double)),
    item: dart.finalFieldType(bottom_navigation_bar_item.BottomNavigationBarItem),
    selectedLabelStyle: dart.finalFieldType(text_style.TextStyle),
    unselectedLabelStyle: dart.finalFieldType(text_style.TextStyle),
    showSelectedLabels: dart.finalFieldType(core.bool),
    showUnselectedLabels: dart.finalFieldType(core.bool)
  }));
  const State_TickerProviderStateMixin$36$2 = class State_TickerProviderStateMixin extends framework.State$(bottom_navigation_bar.BottomNavigationBar) {};
  (State_TickerProviderStateMixin$36$2.new = function() {
    ticker_provider.TickerProviderStateMixin$(bottom_navigation_bar.BottomNavigationBar)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$2.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$2.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$2, ticker_provider.TickerProviderStateMixin$(bottom_navigation_bar.BottomNavigationBar));
  bottom_navigation_bar._BottomNavigationBarState = class _BottomNavigationBarState extends State_TickerProviderStateMixin$36$2 {
    get [S$0._animations]() {
      let t47;
      return dart.test(this[S$0.___BottomNavigationBarState__animations_isSet]) ? (t47 = this[S$0.___BottomNavigationBarState__animations], t47) : dart.throw(new _internal.LateError.fieldNI("_animations"));
    }
    set [S$0._animations](t47) {
      if (t47 == null) dart.nullFailed(I[96], 773, 30, "null");
      this[S$0.___BottomNavigationBarState__animations_isSet] = true;
      this[S$0.___BottomNavigationBarState__animations] = t47;
    }
    [S$0._resetState$1]() {
      for (let controller of this[S$0._controllers])
        controller.dispose();
      for (let circle of this[S$0._circles])
        circle.dispose();
      this[S$0._circles].clear();
      this[S$0._controllers] = T$.ListOfAnimationController().generate(this.widget.items[S.$length], dart.fn(index => {
        let t48;
        if (index == null) dart.nullFailed(I[96], 791, 81, "index");
        t48 = new animation_controller.AnimationController.new({duration: theme$.kThemeAnimationDuration, vsync: this});
        return (() => {
          t48.addListener(dart.bind(this, S$0._rebuild$1));
          return t48;
        })();
      }, T$.intToAnimationController()));
      this[S$0._animations] = T$.ListOfCurvedAnimation().generate(this.widget.items[S.$length], dart.fn(index => {
        if (index == null) dart.nullFailed(I[96], 797, 76, "index");
        return new animations.CurvedAnimation.new({parent: this[S$0._controllers][S.$_get](index), curve: curves.Curves.fastOutSlowIn, reverseCurve: curves.Curves.fastOutSlowIn.flipped});
      }, T$.intToCurvedAnimation()));
      this[S$0._controllers][S.$_get](this.widget.currentIndex).value = 1.0;
      this[S$0._backgroundColor$1] = this.widget.items[S.$_get](this.widget.currentIndex).backgroundColor;
    }
    get [S$0._effectiveType]() {
      let t48, t48$;
      t48$ = (t48 = this.widget.type, t48 == null ? bottom_navigation_bar_theme.BottomNavigationBarTheme.of(this.context).type : t48);
      return t48$ == null ? dart.notNull(this.widget.items[S.$length]) <= 3 ? bottom_navigation_bar.BottomNavigationBarType.fixed : bottom_navigation_bar.BottomNavigationBarType.shifting : t48$;
    }
    get [S$0._defaultShowUnselected]() {
      switch (this[S$0._effectiveType]) {
        case C[537] || CT.C537:
        {
          return false;
        }
        case C[536] || CT.C536:
        {
          return true;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    initState() {
      super.initState();
      this[S$0._resetState$1]();
    }
    [S$0._rebuild$1]() {
      this.setState(dart.fn(() => {
      }, T$.VoidTovoid()));
    }
    dispose() {
      for (let controller of this[S$0._controllers])
        controller.dispose();
      for (let circle of this[S$0._circles])
        circle.dispose();
      super.dispose();
    }
    [S$0._evaluateFlex](animation) {
      if (animation == null) dart.nullFailed(I[96], 855, 42, "animation");
      return bottom_navigation_bar._BottomNavigationBarState._flexTween.evaluate(animation);
    }
    [S$0._pushCircle](index) {
      let t48;
      if (index == null) dart.nullFailed(I[96], 857, 24, "index");
      if (this.widget.items[S.$_get](index).backgroundColor != null) {
        this[S$0._circles].add((t48 = new bottom_navigation_bar._Circle.new({state: this, index: index, color: dart.nullCheck(this.widget.items[S.$_get](index).backgroundColor), vsync: this}), (() => {
          t48.controller.addStatusListener(dart.fn(status => {
            if (status == null) dart.nullFailed(I[96], 866, 28, "status");
            switch (status) {
              case C[88] || CT.C88:
              {
                this.setState(dart.fn(() => {
                  let circle = this[S$0._circles].removeFirst();
                  this[S$0._backgroundColor$1] = circle.color;
                  circle.dispose();
                }, T$.VoidTovoid()));
                break;
              }
              case C[85] || CT.C85:
              case C[86] || CT.C86:
              case C[87] || CT.C87:
              {
                break;
              }
              default:
              {
                dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
              }
            }
          }, T$.AnimationStatusTovoid()));
          return t48;
        })()));
      }
    }
    didUpdateWidget(oldWidget) {
      bottom_navigation_bar.BottomNavigationBar.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[96], 887, 44, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (this.widget.items[S.$length] != oldWidget.items[S.$length]) {
        this[S$0._resetState$1]();
        return;
      }
      if (this.widget.currentIndex != oldWidget.currentIndex) {
        switch (this[S$0._effectiveType]) {
          case C[536] || CT.C536:
          {
            break;
          }
          case C[537] || CT.C537:
          {
            this[S$0._pushCircle](this.widget.currentIndex);
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
        this[S$0._controllers][S.$_get](oldWidget.currentIndex).reverse();
        this[S$0._controllers][S.$_get](this.widget.currentIndex).forward();
      } else {
        if (!dart.equals(this[S$0._backgroundColor$1], this.widget.items[S.$_get](this.widget.currentIndex).backgroundColor)) this[S$0._backgroundColor$1] = this.widget.items[S.$_get](this.widget.currentIndex).backgroundColor;
      }
    }
    static _effectiveTextStyle(textStyle, fontSize) {
      if (fontSize == null) dart.nullFailed(I[96], 914, 69, "fontSize");
      textStyle == null ? textStyle = C[559] || CT.C559 : null;
      return textStyle.fontSize == null ? textStyle.copyWith({fontSize: fontSize}) : textStyle;
    }
    [S$0._createTiles]() {
      let t48, t48$, t48$0, t48$1, t48$2, t48$3, t48$4, t48$5, t48$6, t48$7, t48$8, t48$9, t48$10, t48$11, t48$12, t48$13, t48$14, t48$15, t48$16, t48$17;
      let localizations = material_localizations.MaterialLocalizations.of(this.context);
      if (!(localizations != null)) dart.assertFailed(null, I[96], 922, 12, "localizations != null");
      let themeData = theme$.Theme.of(this.context);
      let bottomTheme = bottom_navigation_bar_theme.BottomNavigationBarTheme.of(this.context);
      let effectiveSelectedLabelStyle = bottom_navigation_bar._BottomNavigationBarState._effectiveTextStyle((t48 = this.widget.selectedLabelStyle, t48 == null ? bottomTheme.selectedLabelStyle : t48), this.widget.selectedFontSize);
      let effectiveUnselectedLabelStyle = bottom_navigation_bar._BottomNavigationBarState._effectiveTextStyle((t48$ = this.widget.unselectedLabelStyle, t48$ == null ? bottomTheme.unselectedLabelStyle : t48$), this.widget.unselectedFontSize);
      let themeColor = null;
      switch (themeData.brightness) {
        case C[405] || CT.C405:
        {
          themeColor = themeData.colorScheme.primary;
          break;
        }
        case C[404] || CT.C404:
        {
          themeColor = themeData.colorScheme.secondary;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      let colorTween = null;
      switch (this[S$0._effectiveType]) {
        case C[536] || CT.C536:
        {
          colorTween = new tween.ColorTween.new({begin: (t48$1 = (t48$0 = this.widget.unselectedItemColor, t48$0 == null ? bottomTheme.unselectedItemColor : t48$0), t48$1 == null ? themeData.unselectedWidgetColor : t48$1), end: (t48$4 = (t48$3 = (t48$2 = this.widget.selectedItemColor, t48$2 == null ? bottomTheme.selectedItemColor : t48$2), t48$3 == null ? this.widget.fixedColor : t48$3), t48$4 == null ? themeColor : t48$4)});
          break;
        }
        case C[537] || CT.C537:
        {
          colorTween = new tween.ColorTween.new({begin: (t48$6 = (t48$5 = this.widget.unselectedItemColor, t48$5 == null ? bottomTheme.unselectedItemColor : t48$5), t48$6 == null ? themeData.colorScheme.surface : t48$6), end: (t48$8 = (t48$7 = this.widget.selectedItemColor, t48$7 == null ? bottomTheme.selectedItemColor : t48$7), t48$8 == null ? themeData.colorScheme.surface : t48$8)});
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      let effectiveMouseCursor = (t48$9 = this.widget.mouseCursor, t48$9 == null ? mouse_cursor.SystemMouseCursors.click : t48$9);
      let tiles = T$.JSArrayOfWidget().of([]);
      for (let i = 0; i < dart.notNull(this.widget.items[S.$length]); i = i + 1) {
        tiles[S.$add](new bottom_navigation_bar._BottomNavigationTile.new(this[S$0._effectiveType], this.widget.items[S.$_get](i), this[S$0._animations][S.$_get](i), this.widget.iconSize, {selectedIconTheme: (t48$10 = this.widget.selectedIconTheme, t48$10 == null ? bottomTheme.selectedIconTheme : t48$10), unselectedIconTheme: (t48$11 = this.widget.unselectedIconTheme, t48$11 == null ? bottomTheme.unselectedIconTheme : t48$11), selectedLabelStyle: effectiveSelectedLabelStyle, unselectedLabelStyle: effectiveUnselectedLabelStyle, enableFeedback: (t48$13 = (t48$12 = this.widget.enableFeedback, t48$12 == null ? bottomTheme.enableFeedback : t48$12), t48$13 == null ? true : t48$13), onTap: dart.fn(() => {
            let t48;
            t48 = this.widget.onTap;
            t48 == null ? null : t48(i);
          }, T$.VoidTovoid()), colorTween: colorTween, flex: this[S$0._evaluateFlex](this[S$0._animations][S.$_get](i)), selected: i === this.widget.currentIndex, showSelectedLabels: (t48$15 = (t48$14 = this.widget.showSelectedLabels, t48$14 == null ? bottomTheme.showSelectedLabels : t48$14), t48$15 == null ? true : t48$15), showUnselectedLabels: (t48$17 = (t48$16 = this.widget.showUnselectedLabels, t48$16 == null ? bottomTheme.showUnselectedLabels : t48$16), t48$17 == null ? this[S$0._defaultShowUnselected] : t48$17), indexLabel: localizations.tabLabel({tabIndex: i + 1, tabCount: this.widget.items[S.$length]}), mouseCursor: effectiveMouseCursor, $creationLocationd_0dea112b090073317d4: C[560] || CT.C560}));
      }
      return tiles;
    }
    [S$0._createContainer](tiles) {
      if (tiles == null) dart.nullFailed(I[96], 1001, 40, "tiles");
      return text$.DefaultTextStyle.merge({overflow: text_painter.TextOverflow.ellipsis, child: new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: tiles, $creationLocationd_0dea112b090073317d4: C[561] || CT.C561})});
    }
    build(context) {
      let t48, t48$, t48$0;
      if (context == null) dart.nullFailed(I[96], 1012, 29, "context");
      if (!dart.test(debug.debugCheckHasDirectionality(context))) dart.assertFailed(null, I[96], 1013, 12, "debugCheckHasDirectionality(context)");
      if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, I[96], 1014, 12, "debugCheckHasMaterialLocalizations(context)");
      if (!dart.test(debug.debugCheckHasMediaQuery(context))) dart.assertFailed(null, I[96], 1015, 12, "debugCheckHasMediaQuery(context)");
      if (!(overlay$.Overlay.of(context, {debugRequiredFor: this.widget}) != null)) dart.assertFailed(null, I[96], 1016, 12, "Overlay.of(context, debugRequiredFor: widget) != null");
      let bottomTheme = bottom_navigation_bar_theme.BottomNavigationBarTheme.of(context);
      let additionalBottomPadding = media_query.MediaQuery.of(context).padding.bottom;
      let backgroundColor = null;
      switch (this[S$0._effectiveType]) {
        case C[536] || CT.C536:
        {
          backgroundColor = (t48 = this.widget.backgroundColor, t48 == null ? bottomTheme.backgroundColor : t48);
          break;
        }
        case C[537] || CT.C537:
        {
          backgroundColor = this[S$0._backgroundColor$1];
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      return new basic.Semantics.new({explicitChildNodes: true, child: new material.Material.new({elevation: (t48$0 = (t48$ = this.widget.elevation, t48$ == null ? bottomTheme.elevation : t48$), t48$0 == null ? 8.0 : t48$0), color: backgroundColor, child: new basic.ConstrainedBox.new({constraints: new box$.BoxConstraints.new({minHeight: 56 + dart.notNull(additionalBottomPadding)}), child: new basic.CustomPaint.new({painter: new bottom_navigation_bar._RadialPainter.new({circles: this[S$0._circles][S.$toList](), textDirection: basic.Directionality.of(context)}), child: new material.Material.new({type: material.MaterialType.transparency, child: new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({bottom: additionalBottomPadding}), child: media_query.MediaQuery.removePadding({context: context, removeBottom: true, child: this[S$0._createContainer](this[S$0._createTiles]()), $creationLocationd_0dea112b090073317d4: C[562] || CT.C562}), $creationLocationd_0dea112b090073317d4: C[563] || CT.C563}), $creationLocationd_0dea112b090073317d4: C[564] || CT.C564}), $creationLocationd_0dea112b090073317d4: C[565] || CT.C565}), $creationLocationd_0dea112b090073317d4: C[566] || CT.C566}), $creationLocationd_0dea112b090073317d4: C[567] || CT.C567}), $creationLocationd_0dea112b090073317d4: C[568] || CT.C568});
    }
  };
  (bottom_navigation_bar._BottomNavigationBarState.new = function() {
    this[S$0._controllers] = T$.JSArrayOfAnimationController().of([]);
    this[S$0.___BottomNavigationBarState__animations] = null;
    this[S$0.___BottomNavigationBarState__animations_isSet] = false;
    this[S$0._circles] = new (T$.ListQueueOf_Circle()).new();
    this[S$0._backgroundColor$1] = null;
    bottom_navigation_bar._BottomNavigationBarState.__proto__.new.call(this);
    ;
  }).prototype = bottom_navigation_bar._BottomNavigationBarState.prototype;
  dart.addTypeTests(bottom_navigation_bar._BottomNavigationBarState);
  dart.addTypeCaches(bottom_navigation_bar._BottomNavigationBarState);
  dart.setMethodSignature(bottom_navigation_bar._BottomNavigationBarState, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar._BottomNavigationBarState.__proto__),
    [S$0._resetState$1]: dart.fnType(dart.void, []),
    [S$0._rebuild$1]: dart.fnType(dart.void, []),
    [S$0._evaluateFlex]: dart.fnType(core.double, [animation.Animation$(core.double)]),
    [S$0._pushCircle]: dart.fnType(dart.void, [core.int]),
    [S$0._createTiles]: dart.fnType(core.List$(framework.Widget), []),
    [S$0._createContainer]: dart.fnType(framework.Widget, [core.List$(framework.Widget)]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(bottom_navigation_bar._BottomNavigationBarState, () => ({
    __proto__: dart.getGetters(bottom_navigation_bar._BottomNavigationBarState.__proto__),
    [S$0._animations]: core.List$(animations.CurvedAnimation),
    [S$0._effectiveType]: bottom_navigation_bar.BottomNavigationBarType,
    [S$0._defaultShowUnselected]: core.bool
  }));
  dart.setSetterSignature(bottom_navigation_bar._BottomNavigationBarState, () => ({
    __proto__: dart.getSetters(bottom_navigation_bar._BottomNavigationBarState.__proto__),
    [S$0._animations]: core.List$(animations.CurvedAnimation)
  }));
  dart.setLibraryUri(bottom_navigation_bar._BottomNavigationBarState, I[97]);
  dart.setFieldSignature(bottom_navigation_bar._BottomNavigationBarState, () => ({
    __proto__: dart.getFields(bottom_navigation_bar._BottomNavigationBarState.__proto__),
    [S$0._controllers]: dart.fieldType(core.List$(animation_controller.AnimationController)),
    [S$0.___BottomNavigationBarState__animations]: dart.fieldType(dart.nullable(core.List$(animations.CurvedAnimation))),
    [S$0.___BottomNavigationBarState__animations_isSet]: dart.fieldType(core.bool),
    [S$0._circles]: dart.finalFieldType(collection.Queue$(bottom_navigation_bar._Circle)),
    [S$0._backgroundColor$1]: dart.fieldType(dart.nullable(ui.Color))
  }));
  dart.defineLazy(bottom_navigation_bar._BottomNavigationBarState, {
    /*bottom_navigation_bar._BottomNavigationBarState._flexTween*/get _flexTween() {
      return new (T$.TweenOfdouble()).new({begin: 1.0, end: 1.5});
    }
  }, false);
  bottom_navigation_bar._Circle = class _Circle extends core.Object {
    get controller() {
      let t48;
      return dart.test(this[S$0.___Circle_controller_isSet]) ? (t48 = this[S$0.___Circle_controller], t48) : dart.throw(new _internal.LateError.fieldNI("controller"));
    }
    set controller(t48) {
      if (t48 == null) dart.nullFailed(I[96], 1083, 28, "null");
      this[S$0.___Circle_controller_isSet] = true;
      this[S$0.___Circle_controller] = t48;
    }
    get animation() {
      let t49;
      return dart.test(this[S$0.___Circle_animation_isSet]) ? (t49 = this[S$0.___Circle_animation], t49) : dart.throw(new _internal.LateError.fieldNI("animation"));
    }
    set animation(t49) {
      if (t49 == null) dart.nullFailed(I[96], 1084, 24, "null");
      this[S$0.___Circle_animation_isSet] = true;
      this[S$0.___Circle_animation] = t49;
    }
    get horizontalLeadingOffset() {
      const weightSum = animations => {
        if (animations == null) dart.nullFailed(I[96], 1087, 50, "animations");
        return animations[S.$map](core.double, dart.bind(this.state, S$0._evaluateFlex))[S$0.$fold](core.double, 0.0, dart.fn((sum, value) => {
          if (sum == null) dart.nullFailed(I[96], 1090, 84, "sum");
          if (value == null) dart.nullFailed(I[96], 1090, 96, "value");
          return dart.notNull(sum) + dart.notNull(value);
        }, T$.doubleAnddoubleTodouble()));
      };
      dart.fn(weightSum, T$.IterableOfAnimationOfdoubleTodouble());
      let allWeights = weightSum(this.state[S$0._animations]);
      let leadingWeights = weightSum(this.state[S$0._animations][S$0.$sublist](0, this.index));
      return (dart.notNull(leadingWeights) + dart.notNull(this.state[S$0._evaluateFlex](this.state[S$0._animations][S.$_get](this.index))) / 2.0) / dart.notNull(allWeights);
    }
    dispose() {
      this.controller.dispose();
    }
  };
  (bottom_navigation_bar._Circle.new = function(opts) {
    let state = opts && 'state' in opts ? opts.state : null;
    if (state == null) dart.nullFailed(I[96], 1062, 19, "state");
    let index = opts && 'index' in opts ? opts.index : null;
    if (index == null) dart.nullFailed(I[96], 1063, 19, "index");
    let color = opts && 'color' in opts ? opts.color : null;
    if (color == null) dart.nullFailed(I[96], 1064, 19, "color");
    let vsync = opts && 'vsync' in opts ? opts.vsync : null;
    if (vsync == null) dart.nullFailed(I[96], 1065, 29, "vsync");
    this[S$0.___Circle_controller] = null;
    this[S$0.___Circle_controller_isSet] = false;
    this[S$0.___Circle_animation] = null;
    this[S$0.___Circle_animation_isSet] = false;
    this.state = state;
    this.index = index;
    this.color = color;
    if (!(state != null)) dart.assertFailed(null, I[96], 1066, 15, "state != null");
    if (!(index != null)) dart.assertFailed(null, I[96], 1067, 15, "index != null");
    if (!(color != null)) dart.assertFailed(null, I[96], 1068, 15, "color != null");
    this.controller = new animation_controller.AnimationController.new({duration: theme$.kThemeAnimationDuration, vsync: vsync});
    this.animation = new animations.CurvedAnimation.new({parent: this.controller, curve: curves.Curves.fastOutSlowIn});
    this.controller.forward();
  }).prototype = bottom_navigation_bar._Circle.prototype;
  dart.addTypeTests(bottom_navigation_bar._Circle);
  dart.addTypeCaches(bottom_navigation_bar._Circle);
  dart.setMethodSignature(bottom_navigation_bar._Circle, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar._Circle.__proto__),
    dispose: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(bottom_navigation_bar._Circle, () => ({
    __proto__: dart.getGetters(bottom_navigation_bar._Circle.__proto__),
    controller: animation_controller.AnimationController,
    animation: animations.CurvedAnimation,
    horizontalLeadingOffset: core.double
  }));
  dart.setSetterSignature(bottom_navigation_bar._Circle, () => ({
    __proto__: dart.getSetters(bottom_navigation_bar._Circle.__proto__),
    controller: animation_controller.AnimationController,
    animation: animations.CurvedAnimation
  }));
  dart.setLibraryUri(bottom_navigation_bar._Circle, I[97]);
  dart.setFieldSignature(bottom_navigation_bar._Circle, () => ({
    __proto__: dart.getFields(bottom_navigation_bar._Circle.__proto__),
    state: dart.finalFieldType(bottom_navigation_bar._BottomNavigationBarState),
    index: dart.finalFieldType(core.int),
    color: dart.finalFieldType(ui.Color),
    [S$0.___Circle_controller]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$0.___Circle_controller_isSet]: dart.fieldType(core.bool),
    [S$0.___Circle_animation]: dart.fieldType(dart.nullable(animations.CurvedAnimation)),
    [S$0.___Circle_animation_isSet]: dart.fieldType(core.bool)
  }));
  bottom_navigation_bar._RadialPainter = class _RadialPainter extends custom_paint.CustomPainter {
    static _maxRadius(center, size) {
      if (center == null) dart.nullFailed(I[96], 1121, 35, "center");
      if (size == null) dart.nullFailed(I[96], 1121, 48, "size");
      let maxX = math.max(core.double, center.dx, dart.notNull(size.width) - dart.notNull(center.dx));
      let maxY = math.max(core.double, center.dy, dart.notNull(size.height) - dart.notNull(center.dy));
      return math.sqrt(maxX * maxX + maxY * maxY);
    }
    shouldRepaint(oldPainter) {
      bottom_navigation_bar._RadialPainter.as(oldPainter);
      if (oldPainter == null) dart.nullFailed(I[96], 1128, 37, "oldPainter");
      if (this.textDirection != oldPainter.textDirection) return true;
      if (dart.equals(this.circles, oldPainter.circles)) return false;
      if (this.circles[S.$length] != oldPainter.circles[S.$length]) return true;
      for (let i = 0; i < dart.notNull(this.circles[S.$length]); i = i + 1)
        if (!dart.equals(this.circles[S.$_get](i), oldPainter.circles[S.$_get](i))) return true;
      return false;
    }
    paint(canvas, size) {
      let t50;
      if (canvas == null) dart.nullFailed(I[96], 1142, 21, "canvas");
      if (size == null) dart.nullFailed(I[96], 1142, 34, "size");
      for (let circle of this.circles) {
        let paint = (t50 = ui.Paint.new(), (() => {
          t50.color = circle.color;
          return t50;
        })());
        let rect = new ui.Rect.fromLTWH(0.0, 0.0, size.width, size.height);
        canvas.clipRect(rect);
        let leftFraction = null;
        switch (this.textDirection) {
          case C[137] || CT.C137:
          {
            leftFraction = 1.0 - dart.notNull(circle.horizontalLeadingOffset);
            break;
          }
          case C[138] || CT.C138:
          {
            leftFraction = circle.horizontalLeadingOffset;
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
        let center = new ui.Offset.new(dart.notNull(leftFraction) * dart.notNull(size.width), dart.notNull(size.height) / 2.0);
        let radiusTween = new (T$.TweenOfdouble()).new({begin: 0.0, end: bottom_navigation_bar._RadialPainter._maxRadius(center, size)});
        canvas.drawCircle(center, radiusTween.transform(circle.animation.value), paint);
      }
    }
  };
  (bottom_navigation_bar._RadialPainter.new = function(opts) {
    let circles = opts && 'circles' in opts ? opts.circles : null;
    if (circles == null) dart.nullFailed(I[96], 1109, 19, "circles");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    if (textDirection == null) dart.nullFailed(I[96], 1110, 19, "textDirection");
    this.circles = circles;
    this.textDirection = textDirection;
    if (!(circles != null)) dart.assertFailed(null, I[96], 1111, 15, "circles != null");
    if (!(textDirection != null)) dart.assertFailed(null, I[96], 1112, 15, "textDirection != null");
    bottom_navigation_bar._RadialPainter.__proto__.new.call(this);
    ;
  }).prototype = bottom_navigation_bar._RadialPainter.prototype;
  dart.addTypeTests(bottom_navigation_bar._RadialPainter);
  dart.addTypeCaches(bottom_navigation_bar._RadialPainter);
  dart.setMethodSignature(bottom_navigation_bar._RadialPainter, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar._RadialPainter.__proto__),
    shouldRepaint: dart.fnType(core.bool, [dart.nullable(core.Object)]),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Size])
  }));
  dart.setLibraryUri(bottom_navigation_bar._RadialPainter, I[97]);
  dart.setFieldSignature(bottom_navigation_bar._RadialPainter, () => ({
    __proto__: dart.getFields(bottom_navigation_bar._RadialPainter.__proto__),
    circles: dart.finalFieldType(core.List$(bottom_navigation_bar._Circle)),
    textDirection: dart.finalFieldType(ui.TextDirection)
  }));
  const Object_Diagnosticable$36$25 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$25.new = function() {
  }).prototype = Object_Diagnosticable$36$25.prototype;
  dart.applyMixin(Object_Diagnosticable$36$25, diagnostics.Diagnosticable);
  bottom_navigation_bar_theme.BottomNavigationBarThemeData = class BottomNavigationBarThemeData extends Object_Diagnosticable$36$25 {
    get backgroundColor() {
      return this[S$0.backgroundColor$11];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get elevation() {
      return this[S$0.elevation$15];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get selectedIconTheme() {
      return this[S$0.selectedIconTheme$5];
    }
    set selectedIconTheme(value) {
      super.selectedIconTheme = value;
    }
    get unselectedIconTheme() {
      return this[S$0.unselectedIconTheme$5];
    }
    set unselectedIconTheme(value) {
      super.unselectedIconTheme = value;
    }
    get selectedItemColor() {
      return this[S$0.selectedItemColor$1];
    }
    set selectedItemColor(value) {
      super.selectedItemColor = value;
    }
    get unselectedItemColor() {
      return this[S$0.unselectedItemColor$1];
    }
    set unselectedItemColor(value) {
      super.unselectedItemColor = value;
    }
    get selectedLabelStyle() {
      return this[S$0.selectedLabelStyle$3];
    }
    set selectedLabelStyle(value) {
      super.selectedLabelStyle = value;
    }
    get unselectedLabelStyle() {
      return this[S$0.unselectedLabelStyle$6];
    }
    set unselectedLabelStyle(value) {
      super.unselectedLabelStyle = value;
    }
    get showSelectedLabels() {
      return this[S$0.showSelectedLabels$3];
    }
    set showSelectedLabels(value) {
      super.showSelectedLabels = value;
    }
    get showUnselectedLabels() {
      return this[S$0.showUnselectedLabels$3];
    }
    set showUnselectedLabels(value) {
      super.showUnselectedLabels = value;
    }
    get type() {
      return this[S$0.type$2];
    }
    set type(value) {
      super.type = value;
    }
    get enableFeedback() {
      return this[S$0.enableFeedback$9];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    copyWith(opts) {
      let t50, t50$, t50$0, t50$1, t50$2, t50$3, t50$4, t50$5, t50$6, t50$7, t50$8, t50$9;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
      let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
      let selectedItemColor = opts && 'selectedItemColor' in opts ? opts.selectedItemColor : null;
      let unselectedItemColor = opts && 'unselectedItemColor' in opts ? opts.unselectedItemColor : null;
      let selectedLabelStyle = opts && 'selectedLabelStyle' in opts ? opts.selectedLabelStyle : null;
      let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
      let showSelectedLabels = opts && 'showSelectedLabels' in opts ? opts.showSelectedLabels : null;
      let showUnselectedLabels = opts && 'showUnselectedLabels' in opts ? opts.showUnselectedLabels : null;
      let type = opts && 'type' in opts ? opts.type : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      return new bottom_navigation_bar_theme.BottomNavigationBarThemeData.new({backgroundColor: (t50 = backgroundColor, t50 == null ? this.backgroundColor : t50), elevation: (t50$ = elevation, t50$ == null ? this.elevation : t50$), selectedIconTheme: (t50$0 = selectedIconTheme, t50$0 == null ? this.selectedIconTheme : t50$0), unselectedIconTheme: (t50$1 = unselectedIconTheme, t50$1 == null ? this.unselectedIconTheme : t50$1), selectedItemColor: (t50$2 = selectedItemColor, t50$2 == null ? this.selectedItemColor : t50$2), unselectedItemColor: (t50$3 = unselectedItemColor, t50$3 == null ? this.unselectedItemColor : t50$3), selectedLabelStyle: (t50$4 = selectedLabelStyle, t50$4 == null ? this.selectedLabelStyle : t50$4), unselectedLabelStyle: (t50$5 = unselectedLabelStyle, t50$5 == null ? this.unselectedLabelStyle : t50$5), showSelectedLabels: (t50$6 = showSelectedLabels, t50$6 == null ? this.showSelectedLabels : t50$6), showUnselectedLabels: (t50$7 = showUnselectedLabels, t50$7 == null ? this.showUnselectedLabels : t50$7), type: (t50$8 = type, t50$8 == null ? this.type : t50$8), enableFeedback: (t50$9 = enableFeedback, t50$9 == null ? this.enableFeedback : t50$9)});
    }
    static lerp(a, b, t) {
      let t50, t50$, t50$0, t50$1, t50$2, t50$3, t50$4, t50$5, t50$6, t50$7, t50$8, t50$9, t50$10, t50$11, t50$12, t50$13, t50$14, t50$15, t50$16, t50$17, t50$18, t50$19, t50$20, t50$21;
      if (t == null) dart.nullFailed(I[98], 160, 117, "t");
      if (!(t != null)) dart.assertFailed(null, I[98], 161, 12, "t != null");
      return new bottom_navigation_bar_theme.BottomNavigationBarThemeData.new({backgroundColor: ui.Color.lerp((t50 = a, t50 == null ? null : t50.backgroundColor), (t50$ = b, t50$ == null ? null : t50$.backgroundColor), t), elevation: ui.lerpDouble((t50$0 = a, t50$0 == null ? null : t50$0.elevation), (t50$1 = b, t50$1 == null ? null : t50$1.elevation), t), selectedIconTheme: icon_theme_data.IconThemeData.lerp((t50$2 = a, t50$2 == null ? null : t50$2.selectedIconTheme), (t50$3 = b, t50$3 == null ? null : t50$3.selectedIconTheme), t), unselectedIconTheme: icon_theme_data.IconThemeData.lerp((t50$4 = a, t50$4 == null ? null : t50$4.unselectedIconTheme), (t50$5 = b, t50$5 == null ? null : t50$5.unselectedIconTheme), t), selectedItemColor: ui.Color.lerp((t50$6 = a, t50$6 == null ? null : t50$6.selectedItemColor), (t50$7 = b, t50$7 == null ? null : t50$7.selectedItemColor), t), unselectedItemColor: ui.Color.lerp((t50$8 = a, t50$8 == null ? null : t50$8.unselectedItemColor), (t50$9 = b, t50$9 == null ? null : t50$9.unselectedItemColor), t), selectedLabelStyle: text_style.TextStyle.lerp((t50$10 = a, t50$10 == null ? null : t50$10.selectedLabelStyle), (t50$11 = b, t50$11 == null ? null : t50$11.selectedLabelStyle), t), unselectedLabelStyle: text_style.TextStyle.lerp((t50$12 = a, t50$12 == null ? null : t50$12.unselectedLabelStyle), (t50$13 = b, t50$13 == null ? null : t50$13.unselectedLabelStyle), t), showSelectedLabels: dart.notNull(t) < 0.5 ? (t50$14 = a, t50$14 == null ? null : t50$14.showSelectedLabels) : (t50$15 = b, t50$15 == null ? null : t50$15.showSelectedLabels), showUnselectedLabels: dart.notNull(t) < 0.5 ? (t50$16 = a, t50$16 == null ? null : t50$16.showUnselectedLabels) : (t50$17 = b, t50$17 == null ? null : t50$17.showUnselectedLabels), type: dart.notNull(t) < 0.5 ? (t50$18 = a, t50$18 == null ? null : t50$18.type) : (t50$19 = b, t50$19 == null ? null : t50$19.type), enableFeedback: dart.notNull(t) < 0.5 ? (t50$20 = a, t50$20 == null ? null : t50$20.enableFeedback) : (t50$21 = b, t50$21 == null ? null : t50$21.enableFeedback)});
    }
    get hashCode() {
      return ui.hashValues(this.backgroundColor, this.elevation, this.selectedIconTheme, this.unselectedIconTheme, this.selectedItemColor, this.unselectedItemColor, this.selectedLabelStyle, this.unselectedLabelStyle, this.showSelectedLabels, this.showUnselectedLabels, this.type, this.enableFeedback);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return bottom_navigation_bar_theme.BottomNavigationBarThemeData.is(other) && dart.equals(other.backgroundColor, this.backgroundColor) && other.elevation == this.elevation && dart.equals(other.selectedIconTheme, this.selectedIconTheme) && dart.equals(other.unselectedIconTheme, this.unselectedIconTheme) && dart.equals(other.selectedItemColor, this.selectedItemColor) && dart.equals(other.unselectedItemColor, this.unselectedItemColor) && dart.equals(other.selectedLabelStyle, this.selectedLabelStyle) && dart.equals(other.unselectedLabelStyle, this.unselectedLabelStyle) && other.showSelectedLabels == this.showSelectedLabels && other.showUnselectedLabels == this.showUnselectedLabels && other.type == this.type && other.enableFeedback == this.enableFeedback;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[98], 218, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfIconThemeData()).new("selectedIconTheme", this.selectedIconTheme, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfIconThemeData()).new("unselectedIconTheme", this.unselectedIconTheme, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("selectedItemColor", this.selectedItemColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("unselectedItemColor", this.unselectedItemColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("selectedLabelStyle", this.selectedLabelStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("unselectedLabelStyle", this.unselectedLabelStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("showSelectedLabels", this.showSelectedLabels, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("showUnselectedLabels", this.showUnselectedLabels, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfBottomNavigationBarType()).new("type", this.type, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("enableFeedback", this.enableFeedback, {defaultValue: null}));
    }
  };
  (bottom_navigation_bar_theme.BottomNavigationBarThemeData.new = function(opts) {
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
    let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
    let selectedItemColor = opts && 'selectedItemColor' in opts ? opts.selectedItemColor : null;
    let unselectedItemColor = opts && 'unselectedItemColor' in opts ? opts.unselectedItemColor : null;
    let selectedLabelStyle = opts && 'selectedLabelStyle' in opts ? opts.selectedLabelStyle : null;
    let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
    let showSelectedLabels = opts && 'showSelectedLabels' in opts ? opts.showSelectedLabels : null;
    let showUnselectedLabels = opts && 'showUnselectedLabels' in opts ? opts.showUnselectedLabels : null;
    let type = opts && 'type' in opts ? opts.type : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
    this[S$0.backgroundColor$11] = backgroundColor;
    this[S$0.elevation$15] = elevation;
    this[S$0.selectedIconTheme$5] = selectedIconTheme;
    this[S$0.unselectedIconTheme$5] = unselectedIconTheme;
    this[S$0.selectedItemColor$1] = selectedItemColor;
    this[S$0.unselectedItemColor$1] = unselectedItemColor;
    this[S$0.selectedLabelStyle$3] = selectedLabelStyle;
    this[S$0.unselectedLabelStyle$6] = unselectedLabelStyle;
    this[S$0.showSelectedLabels$3] = showSelectedLabels;
    this[S$0.showUnselectedLabels$3] = showUnselectedLabels;
    this[S$0.type$2] = type;
    this[S$0.enableFeedback$9] = enableFeedback;
    ;
  }).prototype = bottom_navigation_bar_theme.BottomNavigationBarThemeData.prototype;
  dart.addTypeTests(bottom_navigation_bar_theme.BottomNavigationBarThemeData);
  dart.addTypeCaches(bottom_navigation_bar_theme.BottomNavigationBarThemeData);
  dart.setMethodSignature(bottom_navigation_bar_theme.BottomNavigationBarThemeData, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar_theme.BottomNavigationBarThemeData.__proto__),
    copyWith: dart.fnType(bottom_navigation_bar_theme.BottomNavigationBarThemeData, [], {backgroundColor: dart.nullable(ui.Color), elevation: dart.nullable(core.double), enableFeedback: dart.nullable(core.bool), selectedIconTheme: dart.nullable(icon_theme_data.IconThemeData), selectedItemColor: dart.nullable(ui.Color), selectedLabelStyle: dart.nullable(text_style.TextStyle), showSelectedLabels: dart.nullable(core.bool), showUnselectedLabels: dart.nullable(core.bool), type: dart.nullable(bottom_navigation_bar.BottomNavigationBarType), unselectedIconTheme: dart.nullable(icon_theme_data.IconThemeData), unselectedItemColor: dart.nullable(ui.Color), unselectedLabelStyle: dart.nullable(text_style.TextStyle)}, {})
  }));
  dart.setLibraryUri(bottom_navigation_bar_theme.BottomNavigationBarThemeData, I[99]);
  dart.setFieldSignature(bottom_navigation_bar_theme.BottomNavigationBarThemeData, () => ({
    __proto__: dart.getFields(bottom_navigation_bar_theme.BottomNavigationBarThemeData.__proto__),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    selectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    unselectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    selectedItemColor: dart.finalFieldType(dart.nullable(ui.Color)),
    unselectedItemColor: dart.finalFieldType(dart.nullable(ui.Color)),
    selectedLabelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    unselectedLabelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    showSelectedLabels: dart.finalFieldType(dart.nullable(core.bool)),
    showUnselectedLabels: dart.finalFieldType(dart.nullable(core.bool)),
    type: dart.finalFieldType(dart.nullable(bottom_navigation_bar.BottomNavigationBarType)),
    enableFeedback: dart.finalFieldType(dart.nullable(core.bool))
  }));
  dart.defineExtensionMethods(bottom_navigation_bar_theme.BottomNavigationBarThemeData, ['_equals']);
  dart.defineExtensionAccessors(bottom_navigation_bar_theme.BottomNavigationBarThemeData, ['hashCode']);
  bottom_navigation_bar_theme.BottomNavigationBarTheme = class BottomNavigationBarTheme extends framework.InheritedWidget {
    get data() {
      return this[S$0.data$19];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t50, t50$;
      if (context == null) dart.nullFailed(I[98], 274, 55, "context");
      let bottomNavTheme = context.dependOnInheritedWidgetOfExactType(bottom_navigation_bar_theme.BottomNavigationBarTheme);
      t50$ = (t50 = bottomNavTheme, t50 == null ? null : t50.data);
      return t50$ == null ? theme$.Theme.of(context).bottomNavigationBarTheme : t50$;
    }
    updateShouldNotify(oldWidget) {
      bottom_navigation_bar_theme.BottomNavigationBarTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[98], 280, 52, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (bottom_navigation_bar_theme.BottomNavigationBarTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[98], 257, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[98], 258, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.data$19] = data;
    if (!(data != null)) dart.assertFailed(null, I[98], 259, 15, "data != null");
    bottom_navigation_bar_theme.BottomNavigationBarTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = bottom_navigation_bar_theme.BottomNavigationBarTheme.prototype;
  dart.addTypeTests(bottom_navigation_bar_theme.BottomNavigationBarTheme);
  dart.addTypeCaches(bottom_navigation_bar_theme.BottomNavigationBarTheme);
  dart.setMethodSignature(bottom_navigation_bar_theme.BottomNavigationBarTheme, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar_theme.BottomNavigationBarTheme.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(bottom_navigation_bar_theme.BottomNavigationBarTheme, I[99]);
  dart.setFieldSignature(bottom_navigation_bar_theme.BottomNavigationBarTheme, () => ({
    __proto__: dart.getFields(bottom_navigation_bar_theme.BottomNavigationBarTheme.__proto__),
    data: dart.finalFieldType(bottom_navigation_bar_theme.BottomNavigationBarThemeData)
  }));
  const Object_Diagnosticable$36$26 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$26.new = function() {
  }).prototype = Object_Diagnosticable$36$26.prototype;
  dart.applyMixin(Object_Diagnosticable$36$26, diagnostics.Diagnosticable);
  bottom_app_bar_theme.BottomAppBarTheme = class BottomAppBarTheme extends Object_Diagnosticable$36$26 {
    get color() {
      return this[S$0.color$10];
    }
    set color(value) {
      super.color = value;
    }
    get elevation() {
      return this[S$0.elevation$16];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get shape() {
      return this[S$0.shape$14];
    }
    set shape(value) {
      super.shape = value;
    }
    copyWith(opts) {
      let t50, t50$, t50$0;
      let color = opts && 'color' in opts ? opts.color : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      return new bottom_app_bar_theme.BottomAppBarTheme.new({color: (t50 = color, t50 == null ? this.color : t50), elevation: (t50$ = elevation, t50$ == null ? this.elevation : t50$), shape: (t50$0 = shape, t50$0 == null ? this.shape : t50$0)});
    }
    static of(context) {
      if (context == null) dart.nullFailed(I[100], 63, 44, "context");
      return theme$.Theme.of(context).bottomAppBarTheme;
    }
    static lerp(a, b, t) {
      let t50, t50$, t50$0, t50$1, t50$2, t50$3;
      if (t == null) dart.nullFailed(I[100], 72, 84, "t");
      if (!(t != null)) dart.assertFailed(null, I[100], 73, 12, "t != null");
      return new bottom_app_bar_theme.BottomAppBarTheme.new({color: ui.Color.lerp((t50 = a, t50 == null ? null : t50.color), (t50$ = b, t50$ == null ? null : t50$.color), t), elevation: ui.lerpDouble((t50$0 = a, t50$0 == null ? null : t50$0.elevation), (t50$1 = b, t50$1 == null ? null : t50$1.elevation), t), shape: dart.notNull(t) < 0.5 ? (t50$2 = a, t50$2 == null ? null : t50$2.shape) : (t50$3 = b, t50$3 == null ? null : t50$3.shape)});
    }
    get hashCode() {
      return ui.hashValues(this.color, this.elevation, this.shape);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return bottom_app_bar_theme.BottomAppBarTheme.is(other) && dart.equals(other.color, this.color) && other.elevation == this.elevation && dart.equals(other.shape, this.shape);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[100], 103, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfdouble()).new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfNotchedShape()).new("shape", this.shape, {defaultValue: null}));
    }
  };
  (bottom_app_bar_theme.BottomAppBarTheme.new = function(opts) {
    let color = opts && 'color' in opts ? opts.color : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    this[S$0.color$10] = color;
    this[S$0.elevation$16] = elevation;
    this[S$0.shape$14] = shape;
    ;
  }).prototype = bottom_app_bar_theme.BottomAppBarTheme.prototype;
  dart.addTypeTests(bottom_app_bar_theme.BottomAppBarTheme);
  dart.addTypeCaches(bottom_app_bar_theme.BottomAppBarTheme);
  dart.setMethodSignature(bottom_app_bar_theme.BottomAppBarTheme, () => ({
    __proto__: dart.getMethods(bottom_app_bar_theme.BottomAppBarTheme.__proto__),
    copyWith: dart.fnType(bottom_app_bar_theme.BottomAppBarTheme, [], {color: dart.nullable(ui.Color), elevation: dart.nullable(core.double), shape: dart.nullable(notched_shapes.NotchedShape)}, {})
  }));
  dart.setLibraryUri(bottom_app_bar_theme.BottomAppBarTheme, I[101]);
  dart.setFieldSignature(bottom_app_bar_theme.BottomAppBarTheme, () => ({
    __proto__: dart.getFields(bottom_app_bar_theme.BottomAppBarTheme.__proto__),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    shape: dart.finalFieldType(dart.nullable(notched_shapes.NotchedShape))
  }));
  dart.defineExtensionMethods(bottom_app_bar_theme.BottomAppBarTheme, ['_equals']);
  dart.defineExtensionAccessors(bottom_app_bar_theme.BottomAppBarTheme, ['hashCode']);
  theme_data.MaterialTapTargetSize = class MaterialTapTargetSize extends core.Object {
    toString() {
      return this[S._name$2];
    }
  };
  (theme_data.MaterialTapTargetSize.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[102], 94, 6, "index");
    if (_name == null) dart.nullFailed(I[102], 94, 6, "_name");
    this.index = index;
    this[S._name$2] = _name;
    ;
  }).prototype = theme_data.MaterialTapTargetSize.prototype;
  dart.addTypeTests(theme_data.MaterialTapTargetSize);
  dart.addTypeCaches(theme_data.MaterialTapTargetSize);
  theme_data.MaterialTapTargetSize[dart.implements] = () => [core.Enum];
  dart.setLibraryUri(theme_data.MaterialTapTargetSize, I[103]);
  dart.setFieldSignature(theme_data.MaterialTapTargetSize, () => ({
    __proto__: dart.getFields(theme_data.MaterialTapTargetSize.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$2]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(theme_data.MaterialTapTargetSize, ['toString']);
  theme_data.MaterialTapTargetSize.padded = C[53] || CT.C53;
  theme_data.MaterialTapTargetSize.shrinkWrap = C[54] || CT.C54;
  theme_data.MaterialTapTargetSize.values = C[569] || CT.C569;
  const Object_Diagnosticable$36$27 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$27.new = function() {
  }).prototype = Object_Diagnosticable$36$27.prototype;
  dart.applyMixin(Object_Diagnosticable$36$27, diagnostics.Diagnosticable);
  theme_data.ThemeData = class ThemeData extends Object_Diagnosticable$36$27 {
    get visualDensity() {
      return this[S$0.visualDensity$8];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get primaryColor() {
      return this[S$0.primaryColor];
    }
    set primaryColor(value) {
      super.primaryColor = value;
    }
    get primaryColorBrightness() {
      return this[S$0.primaryColorBrightness];
    }
    set primaryColorBrightness(value) {
      super.primaryColorBrightness = value;
    }
    get primaryColorLight() {
      return this[S$0.primaryColorLight];
    }
    set primaryColorLight(value) {
      super.primaryColorLight = value;
    }
    get primaryColorDark() {
      return this[S$0.primaryColorDark];
    }
    set primaryColorDark(value) {
      super.primaryColorDark = value;
    }
    get canvasColor() {
      return this[S$0.canvasColor];
    }
    set canvasColor(value) {
      super.canvasColor = value;
    }
    get shadowColor() {
      return this[S$0.shadowColor$3];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get accentColor() {
      return this[S$0.accentColor];
    }
    set accentColor(value) {
      super.accentColor = value;
    }
    get accentColorBrightness() {
      return this[S$0.accentColorBrightness];
    }
    set accentColorBrightness(value) {
      super.accentColorBrightness = value;
    }
    get scaffoldBackgroundColor() {
      return this[S$0.scaffoldBackgroundColor];
    }
    set scaffoldBackgroundColor(value) {
      super.scaffoldBackgroundColor = value;
    }
    get bottomAppBarColor() {
      return this[S$0.bottomAppBarColor];
    }
    set bottomAppBarColor(value) {
      super.bottomAppBarColor = value;
    }
    get cardColor() {
      return this[S$0.cardColor];
    }
    set cardColor(value) {
      super.cardColor = value;
    }
    get dividerColor() {
      return this[S$0.dividerColor];
    }
    set dividerColor(value) {
      super.dividerColor = value;
    }
    get focusColor() {
      return this[S$0.focusColor$8];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[S$0.hoverColor$9];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get highlightColor() {
      return this[S$0.highlightColor$5];
    }
    set highlightColor(value) {
      super.highlightColor = value;
    }
    get splashColor() {
      return this[S$0.splashColor$6];
    }
    set splashColor(value) {
      super.splashColor = value;
    }
    get splashFactory() {
      return this[S$0.splashFactory$1];
    }
    set splashFactory(value) {
      super.splashFactory = value;
    }
    get selectedRowColor() {
      return this[S$0.selectedRowColor];
    }
    set selectedRowColor(value) {
      super.selectedRowColor = value;
    }
    get unselectedWidgetColor() {
      return this[S$0.unselectedWidgetColor];
    }
    set unselectedWidgetColor(value) {
      super.unselectedWidgetColor = value;
    }
    get disabledColor() {
      return this[S$0.disabledColor$4];
    }
    set disabledColor(value) {
      super.disabledColor = value;
    }
    get buttonTheme() {
      return this[S$0.buttonTheme];
    }
    set buttonTheme(value) {
      super.buttonTheme = value;
    }
    get toggleButtonsTheme() {
      return this[S$0.toggleButtonsTheme];
    }
    set toggleButtonsTheme(value) {
      super.toggleButtonsTheme = value;
    }
    get buttonColor() {
      return this[S$0.buttonColor];
    }
    set buttonColor(value) {
      super.buttonColor = value;
    }
    get secondaryHeaderColor() {
      return this[S$0.secondaryHeaderColor];
    }
    set secondaryHeaderColor(value) {
      super.secondaryHeaderColor = value;
    }
    get textSelectionColor() {
      return this[S$0.textSelectionColor];
    }
    set textSelectionColor(value) {
      super.textSelectionColor = value;
    }
    get cursorColor() {
      return this[S$0.cursorColor$1];
    }
    set cursorColor(value) {
      super.cursorColor = value;
    }
    get textSelectionHandleColor() {
      return this[S$0.textSelectionHandleColor];
    }
    set textSelectionHandleColor(value) {
      super.textSelectionHandleColor = value;
    }
    get backgroundColor() {
      return this[S$0.backgroundColor$12];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get dialogBackgroundColor() {
      return this[S$0.dialogBackgroundColor];
    }
    set dialogBackgroundColor(value) {
      super.dialogBackgroundColor = value;
    }
    get indicatorColor() {
      return this[S$0.indicatorColor$1];
    }
    set indicatorColor(value) {
      super.indicatorColor = value;
    }
    get hintColor() {
      return this[S$0.hintColor];
    }
    set hintColor(value) {
      super.hintColor = value;
    }
    get errorColor() {
      return this[S$0.errorColor];
    }
    set errorColor(value) {
      super.errorColor = value;
    }
    get toggleableActiveColor() {
      return this[S$0.toggleableActiveColor];
    }
    set toggleableActiveColor(value) {
      super.toggleableActiveColor = value;
    }
    get textTheme() {
      return this[S$0.textTheme$3];
    }
    set textTheme(value) {
      super.textTheme = value;
    }
    get primaryTextTheme() {
      return this[S$0.primaryTextTheme];
    }
    set primaryTextTheme(value) {
      super.primaryTextTheme = value;
    }
    get accentTextTheme() {
      return this[S$0.accentTextTheme];
    }
    set accentTextTheme(value) {
      super.accentTextTheme = value;
    }
    get inputDecorationTheme() {
      return this[S$0.inputDecorationTheme$1];
    }
    set inputDecorationTheme(value) {
      super.inputDecorationTheme = value;
    }
    get iconTheme() {
      return this[S$0.iconTheme];
    }
    set iconTheme(value) {
      super.iconTheme = value;
    }
    get primaryIconTheme() {
      return this[S$0.primaryIconTheme];
    }
    set primaryIconTheme(value) {
      super.primaryIconTheme = value;
    }
    get accentIconTheme() {
      return this[S$0.accentIconTheme];
    }
    set accentIconTheme(value) {
      super.accentIconTheme = value;
    }
    get sliderTheme() {
      return this[S$0.sliderTheme];
    }
    set sliderTheme(value) {
      super.sliderTheme = value;
    }
    get tabBarTheme() {
      return this[S$0.tabBarTheme];
    }
    set tabBarTheme(value) {
      super.tabBarTheme = value;
    }
    get tooltipTheme() {
      return this[S$0.tooltipTheme];
    }
    set tooltipTheme(value) {
      super.tooltipTheme = value;
    }
    get cardTheme() {
      return this[S$0.cardTheme];
    }
    set cardTheme(value) {
      super.cardTheme = value;
    }
    get chipTheme() {
      return this[S$0.chipTheme];
    }
    set chipTheme(value) {
      super.chipTheme = value;
    }
    get platform() {
      return this[S$0.platform];
    }
    set platform(value) {
      super.platform = value;
    }
    get materialTapTargetSize() {
      return this[S$0.materialTapTargetSize$7];
    }
    set materialTapTargetSize(value) {
      super.materialTapTargetSize = value;
    }
    get applyElevationOverlayColor() {
      return this[S$0.applyElevationOverlayColor];
    }
    set applyElevationOverlayColor(value) {
      super.applyElevationOverlayColor = value;
    }
    get pageTransitionsTheme() {
      return this[S$0.pageTransitionsTheme];
    }
    set pageTransitionsTheme(value) {
      super.pageTransitionsTheme = value;
    }
    get appBarTheme() {
      return this[S$0.appBarTheme];
    }
    set appBarTheme(value) {
      super.appBarTheme = value;
    }
    get scrollbarTheme() {
      return this[S$0.scrollbarTheme];
    }
    set scrollbarTheme(value) {
      super.scrollbarTheme = value;
    }
    get bottomAppBarTheme() {
      return this[S$0.bottomAppBarTheme];
    }
    set bottomAppBarTheme(value) {
      super.bottomAppBarTheme = value;
    }
    get colorScheme() {
      return this[S$0.colorScheme$1];
    }
    set colorScheme(value) {
      super.colorScheme = value;
    }
    get snackBarTheme() {
      return this[S$0.snackBarTheme];
    }
    set snackBarTheme(value) {
      super.snackBarTheme = value;
    }
    get dialogTheme() {
      return this[S$0.dialogTheme];
    }
    set dialogTheme(value) {
      super.dialogTheme = value;
    }
    get floatingActionButtonTheme() {
      return this[S$0.floatingActionButtonTheme];
    }
    set floatingActionButtonTheme(value) {
      super.floatingActionButtonTheme = value;
    }
    get navigationRailTheme() {
      return this[S$0.navigationRailTheme];
    }
    set navigationRailTheme(value) {
      super.navigationRailTheme = value;
    }
    get typography() {
      return this[S$0.typography];
    }
    set typography(value) {
      super.typography = value;
    }
    get cupertinoOverrideTheme() {
      return this[S$0.cupertinoOverrideTheme];
    }
    set cupertinoOverrideTheme(value) {
      super.cupertinoOverrideTheme = value;
    }
    get bottomSheetTheme() {
      return this[S$0.bottomSheetTheme];
    }
    set bottomSheetTheme(value) {
      super.bottomSheetTheme = value;
    }
    get popupMenuTheme() {
      return this[S$0.popupMenuTheme];
    }
    set popupMenuTheme(value) {
      super.popupMenuTheme = value;
    }
    get bannerTheme() {
      return this[S$0.bannerTheme];
    }
    set bannerTheme(value) {
      super.bannerTheme = value;
    }
    get dividerTheme() {
      return this[S$0.dividerTheme];
    }
    set dividerTheme(value) {
      super.dividerTheme = value;
    }
    get buttonBarTheme() {
      return this[S$0.buttonBarTheme];
    }
    set buttonBarTheme(value) {
      super.buttonBarTheme = value;
    }
    get bottomNavigationBarTheme() {
      return this[S$0.bottomNavigationBarTheme];
    }
    set bottomNavigationBarTheme(value) {
      super.bottomNavigationBarTheme = value;
    }
    get timePickerTheme() {
      return this[S$0.timePickerTheme];
    }
    set timePickerTheme(value) {
      super.timePickerTheme = value;
    }
    get textButtonTheme() {
      return this[S$0.textButtonTheme];
    }
    set textButtonTheme(value) {
      super.textButtonTheme = value;
    }
    get elevatedButtonTheme() {
      return this[S$0.elevatedButtonTheme];
    }
    set elevatedButtonTheme(value) {
      super.elevatedButtonTheme = value;
    }
    get outlinedButtonTheme() {
      return this[S$0.outlinedButtonTheme];
    }
    set outlinedButtonTheme(value) {
      super.outlinedButtonTheme = value;
    }
    get textSelectionTheme() {
      return this[S$0.textSelectionTheme];
    }
    set textSelectionTheme(value) {
      super.textSelectionTheme = value;
    }
    get dataTableTheme() {
      return this[S$0.dataTableTheme];
    }
    set dataTableTheme(value) {
      super.dataTableTheme = value;
    }
    get checkboxTheme() {
      return this[S$0.checkboxTheme];
    }
    set checkboxTheme(value) {
      super.checkboxTheme = value;
    }
    get radioTheme() {
      return this[S$0.radioTheme];
    }
    set radioTheme(value) {
      super.radioTheme = value;
    }
    get switchTheme() {
      return this[S$0.switchTheme];
    }
    set switchTheme(value) {
      super.switchTheme = value;
    }
    get progressIndicatorTheme() {
      return this[S$0.progressIndicatorTheme];
    }
    set progressIndicatorTheme(value) {
      super.progressIndicatorTheme = value;
    }
    get fixTextFieldOutlineLabel() {
      return this[S$0.fixTextFieldOutlineLabel$1];
    }
    set fixTextFieldOutlineLabel(value) {
      super.fixTextFieldOutlineLabel = value;
    }
    get useTextSelectionTheme() {
      return this[S$0.useTextSelectionTheme];
    }
    set useTextSelectionTheme(value) {
      super.useTextSelectionTheme = value;
    }
    static new(opts) {
      let t50, t51, t50$, t50$0, t50$1, t50$2, t50$3;
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      let primarySwatch = opts && 'primarySwatch' in opts ? opts.primarySwatch : null;
      let primaryColor = opts && 'primaryColor' in opts ? opts.primaryColor : null;
      let primaryColorBrightness = opts && 'primaryColorBrightness' in opts ? opts.primaryColorBrightness : null;
      let primaryColorLight = opts && 'primaryColorLight' in opts ? opts.primaryColorLight : null;
      let primaryColorDark = opts && 'primaryColorDark' in opts ? opts.primaryColorDark : null;
      let accentColor = opts && 'accentColor' in opts ? opts.accentColor : null;
      let accentColorBrightness = opts && 'accentColorBrightness' in opts ? opts.accentColorBrightness : null;
      let canvasColor = opts && 'canvasColor' in opts ? opts.canvasColor : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let scaffoldBackgroundColor = opts && 'scaffoldBackgroundColor' in opts ? opts.scaffoldBackgroundColor : null;
      let bottomAppBarColor = opts && 'bottomAppBarColor' in opts ? opts.bottomAppBarColor : null;
      let cardColor = opts && 'cardColor' in opts ? opts.cardColor : null;
      let dividerColor = opts && 'dividerColor' in opts ? opts.dividerColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
      let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
      let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
      let selectedRowColor = opts && 'selectedRowColor' in opts ? opts.selectedRowColor : null;
      let unselectedWidgetColor = opts && 'unselectedWidgetColor' in opts ? opts.unselectedWidgetColor : null;
      let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
      let buttonColor = opts && 'buttonColor' in opts ? opts.buttonColor : null;
      let buttonTheme = opts && 'buttonTheme' in opts ? opts.buttonTheme : null;
      let toggleButtonsTheme = opts && 'toggleButtonsTheme' in opts ? opts.toggleButtonsTheme : null;
      let secondaryHeaderColor = opts && 'secondaryHeaderColor' in opts ? opts.secondaryHeaderColor : null;
      let textSelectionColor = opts && 'textSelectionColor' in opts ? opts.textSelectionColor : null;
      let cursorColor = opts && 'cursorColor' in opts ? opts.cursorColor : null;
      let textSelectionHandleColor = opts && 'textSelectionHandleColor' in opts ? opts.textSelectionHandleColor : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let dialogBackgroundColor = opts && 'dialogBackgroundColor' in opts ? opts.dialogBackgroundColor : null;
      let indicatorColor = opts && 'indicatorColor' in opts ? opts.indicatorColor : null;
      let hintColor = opts && 'hintColor' in opts ? opts.hintColor : null;
      let errorColor = opts && 'errorColor' in opts ? opts.errorColor : null;
      let toggleableActiveColor = opts && 'toggleableActiveColor' in opts ? opts.toggleableActiveColor : null;
      let fontFamily = opts && 'fontFamily' in opts ? opts.fontFamily : null;
      let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
      let primaryTextTheme = opts && 'primaryTextTheme' in opts ? opts.primaryTextTheme : null;
      let accentTextTheme = opts && 'accentTextTheme' in opts ? opts.accentTextTheme : null;
      let inputDecorationTheme = opts && 'inputDecorationTheme' in opts ? opts.inputDecorationTheme : null;
      let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
      let primaryIconTheme = opts && 'primaryIconTheme' in opts ? opts.primaryIconTheme : null;
      let accentIconTheme = opts && 'accentIconTheme' in opts ? opts.accentIconTheme : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let tabBarTheme = opts && 'tabBarTheme' in opts ? opts.tabBarTheme : null;
      let tooltipTheme = opts && 'tooltipTheme' in opts ? opts.tooltipTheme : null;
      let cardTheme = opts && 'cardTheme' in opts ? opts.cardTheme : null;
      let chipTheme = opts && 'chipTheme' in opts ? opts.chipTheme : null;
      let platform = opts && 'platform' in opts ? opts.platform : null;
      let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
      let applyElevationOverlayColor = opts && 'applyElevationOverlayColor' in opts ? opts.applyElevationOverlayColor : null;
      let pageTransitionsTheme = opts && 'pageTransitionsTheme' in opts ? opts.pageTransitionsTheme : null;
      let appBarTheme = opts && 'appBarTheme' in opts ? opts.appBarTheme : null;
      let scrollbarTheme = opts && 'scrollbarTheme' in opts ? opts.scrollbarTheme : null;
      let bottomAppBarTheme = opts && 'bottomAppBarTheme' in opts ? opts.bottomAppBarTheme : null;
      let colorScheme = opts && 'colorScheme' in opts ? opts.colorScheme : null;
      let dialogTheme = opts && 'dialogTheme' in opts ? opts.dialogTheme : null;
      let floatingActionButtonTheme = opts && 'floatingActionButtonTheme' in opts ? opts.floatingActionButtonTheme : null;
      let navigationRailTheme = opts && 'navigationRailTheme' in opts ? opts.navigationRailTheme : null;
      let typography = opts && 'typography' in opts ? opts.typography : null;
      let cupertinoOverrideTheme = opts && 'cupertinoOverrideTheme' in opts ? opts.cupertinoOverrideTheme : null;
      let snackBarTheme = opts && 'snackBarTheme' in opts ? opts.snackBarTheme : null;
      let bottomSheetTheme = opts && 'bottomSheetTheme' in opts ? opts.bottomSheetTheme : null;
      let popupMenuTheme = opts && 'popupMenuTheme' in opts ? opts.popupMenuTheme : null;
      let bannerTheme = opts && 'bannerTheme' in opts ? opts.bannerTheme : null;
      let dividerTheme = opts && 'dividerTheme' in opts ? opts.dividerTheme : null;
      let buttonBarTheme = opts && 'buttonBarTheme' in opts ? opts.buttonBarTheme : null;
      let bottomNavigationBarTheme = opts && 'bottomNavigationBarTheme' in opts ? opts.bottomNavigationBarTheme : null;
      let timePickerTheme = opts && 'timePickerTheme' in opts ? opts.timePickerTheme : null;
      let textButtonTheme = opts && 'textButtonTheme' in opts ? opts.textButtonTheme : null;
      let elevatedButtonTheme = opts && 'elevatedButtonTheme' in opts ? opts.elevatedButtonTheme : null;
      let outlinedButtonTheme = opts && 'outlinedButtonTheme' in opts ? opts.outlinedButtonTheme : null;
      let textSelectionTheme = opts && 'textSelectionTheme' in opts ? opts.textSelectionTheme : null;
      let dataTableTheme = opts && 'dataTableTheme' in opts ? opts.dataTableTheme : null;
      let checkboxTheme = opts && 'checkboxTheme' in opts ? opts.checkboxTheme : null;
      let radioTheme = opts && 'radioTheme' in opts ? opts.radioTheme : null;
      let switchTheme = opts && 'switchTheme' in opts ? opts.switchTheme : null;
      let progressIndicatorTheme = opts && 'progressIndicatorTheme' in opts ? opts.progressIndicatorTheme : null;
      let fixTextFieldOutlineLabel = opts && 'fixTextFieldOutlineLabel' in opts ? opts.fixTextFieldOutlineLabel : null;
      let useTextSelectionTheme = opts && 'useTextSelectionTheme' in opts ? opts.useTextSelectionTheme : null;
      if (!((t50 = colorScheme, t50 == null ? null : t50.brightness) == null || brightness == null || dart.nullCheck(colorScheme).brightness == brightness)) dart.assertFailed(null, I[102], 346, 12, "colorScheme?.brightness == null || brightness == null || colorScheme!.brightness == brightness");
      let _brightness = (t50$0 = (t50$ = brightness, t50$ == null ? (t51 = colorScheme, t51 == null ? null : t51.brightness) : t50$), t50$0 == null ? ui.Brightness.light : t50$0);
      let isDark = _brightness == ui.Brightness.dark;
      visualDensity == null ? visualDensity = theme_data.VisualDensity.adaptivePlatformDensity : null;
      primarySwatch == null ? primarySwatch = colors$.Colors.blue : null;
      primaryColor == null ? primaryColor = isDark ? dart.nullCheck(colors$.Colors.grey._get(900)) : primarySwatch : null;
      primaryColorBrightness == null ? primaryColorBrightness = theme_data.ThemeData.estimateBrightnessForColor(primaryColor) : null;
      primaryColorLight == null ? primaryColorLight = isDark ? dart.nullCheck(colors$.Colors.grey._get(500)) : dart.nullCheck(primarySwatch._get(100)) : null;
      primaryColorDark == null ? primaryColorDark = isDark ? colors$.Colors.black : dart.nullCheck(primarySwatch._get(700)) : null;
      let primaryIsDark = primaryColorBrightness == ui.Brightness.dark;
      toggleableActiveColor == null ? toggleableActiveColor = isDark ? dart.nullCheck(colors$.Colors.tealAccent._get(200)) : (t50$1 = accentColor, t50$1 == null ? dart.nullCheck(primarySwatch._get(600)) : t50$1) : null;
      accentColor == null ? accentColor = isDark ? dart.nullCheck(colors$.Colors.tealAccent._get(200)) : dart.nullCheck(primarySwatch._get(500)) : null;
      accentColorBrightness == null ? accentColorBrightness = theme_data.ThemeData.estimateBrightnessForColor(accentColor) : null;
      let accentIsDark = accentColorBrightness == ui.Brightness.dark;
      canvasColor == null ? canvasColor = isDark ? dart.nullCheck(colors$.Colors.grey._get(850)) : dart.nullCheck(colors$.Colors.grey._get(50)) : null;
      shadowColor == null ? shadowColor = colors$.Colors.black : null;
      scaffoldBackgroundColor == null ? scaffoldBackgroundColor = canvasColor : null;
      bottomAppBarColor == null ? bottomAppBarColor = isDark ? dart.nullCheck(colors$.Colors.grey._get(800)) : colors$.Colors.white : null;
      cardColor == null ? cardColor = isDark ? dart.nullCheck(colors$.Colors.grey._get(800)) : colors$.Colors.white : null;
      dividerColor == null ? dividerColor = isDark ? C[570] || CT.C570 : C[571] || CT.C571 : null;
      colorScheme == null ? colorScheme = color_scheme.ColorScheme.fromSwatch({primarySwatch: primarySwatch, primaryColorDark: primaryColorDark, accentColor: accentColor, cardColor: cardColor, backgroundColor: backgroundColor, errorColor: errorColor, brightness: _brightness}) : null;
      splashFactory == null ? splashFactory = ink_splash.InkSplash.splashFactory : null;
      selectedRowColor == null ? selectedRowColor = dart.nullCheck(colors$.Colors.grey._get(100)) : null;
      unselectedWidgetColor == null ? unselectedWidgetColor = isDark ? colors$.Colors.white70 : colors$.Colors.black54 : null;
      secondaryHeaderColor == null ? secondaryHeaderColor = isDark ? dart.nullCheck(colors$.Colors.grey._get(700)) : dart.nullCheck(primarySwatch._get(50)) : null;
      textSelectionColor == null ? textSelectionColor = isDark ? accentColor : dart.nullCheck(primarySwatch._get(200)) : null;
      cursorColor = (t50$2 = cursorColor, t50$2 == null ? C[572] || CT.C572 : t50$2);
      textSelectionHandleColor == null ? textSelectionHandleColor = isDark ? dart.nullCheck(colors$.Colors.tealAccent._get(400)) : dart.nullCheck(primarySwatch._get(300)) : null;
      backgroundColor == null ? backgroundColor = isDark ? dart.nullCheck(colors$.Colors.grey._get(700)) : dart.nullCheck(primarySwatch._get(200)) : null;
      dialogBackgroundColor == null ? dialogBackgroundColor = isDark ? dart.nullCheck(colors$.Colors.grey._get(800)) : colors$.Colors.white : null;
      indicatorColor == null ? indicatorColor = dart.equals(accentColor, primaryColor) ? colors$.Colors.white : accentColor : null;
      hintColor == null ? hintColor = isDark ? colors$.Colors.white60 : colors$.Colors.black.withOpacity(0.6) : null;
      errorColor == null ? errorColor = dart.nullCheck(colors$.Colors.red._get(700)) : null;
      inputDecorationTheme == null ? inputDecorationTheme = C[437] || CT.C437 : null;
      pageTransitionsTheme == null ? pageTransitionsTheme = C[573] || CT.C573 : null;
      primaryIconTheme == null ? primaryIconTheme = primaryIsDark ? C[574] || CT.C574 : C[575] || CT.C575 : null;
      accentIconTheme == null ? accentIconTheme = accentIsDark ? C[574] || CT.C574 : C[575] || CT.C575 : null;
      iconTheme == null ? iconTheme = isDark ? C[574] || CT.C574 : C[576] || CT.C576 : null;
      platform == null ? platform = platform$.defaultTargetPlatform : null;
      typography == null ? typography = typography$.Typography.material2014({platform: platform}) : null;
      let defaultTextTheme = isDark ? typography.white : typography.black;
      let defaultPrimaryTextTheme = primaryIsDark ? typography.white : typography.black;
      let defaultAccentTextTheme = accentIsDark ? typography.white : typography.black;
      if (fontFamily != null) {
        defaultTextTheme = defaultTextTheme.apply({fontFamily: fontFamily});
        defaultPrimaryTextTheme = defaultPrimaryTextTheme.apply({fontFamily: fontFamily});
        defaultAccentTextTheme = defaultAccentTextTheme.apply({fontFamily: fontFamily});
      }
      textTheme = defaultTextTheme.merge(textTheme);
      primaryTextTheme = defaultPrimaryTextTheme.merge(primaryTextTheme);
      accentTextTheme = defaultAccentTextTheme.merge(accentTextTheme);
      switch (platform) {
        case C[11] || CT.C11:
        case C[12] || CT.C12:
        case C[15] || CT.C15:
        {
          materialTapTargetSize == null ? materialTapTargetSize = theme_data.MaterialTapTargetSize.padded : null;
          break;
        }
        case C[13] || CT.C13:
        case C[16] || CT.C16:
        case C[14] || CT.C14:
        {
          materialTapTargetSize == null ? materialTapTargetSize = theme_data.MaterialTapTargetSize.shrinkWrap : null;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      applyElevationOverlayColor == null ? applyElevationOverlayColor = false : null;
      buttonColor == null ? buttonColor = isDark ? dart.nullCheck(primarySwatch._get(600)) : dart.nullCheck(colors$.Colors.grey._get(300)) : null;
      focusColor == null ? focusColor = isDark ? colors$.Colors.white.withOpacity(0.12) : colors$.Colors.black.withOpacity(0.12) : null;
      hoverColor == null ? hoverColor = isDark ? colors$.Colors.white.withOpacity(0.04) : colors$.Colors.black.withOpacity(0.04) : null;
      buttonTheme == null ? buttonTheme = new button_theme.ButtonThemeData.new({colorScheme: colorScheme, buttonColor: buttonColor, disabledColor: disabledColor, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, splashColor: splashColor, materialTapTargetSize: materialTapTargetSize}) : null;
      toggleButtonsTheme == null ? toggleButtonsTheme = C[578] || CT.C578 : null;
      disabledColor == null ? disabledColor = isDark ? colors$.Colors.white38 : colors$.Colors.black38 : null;
      highlightColor == null ? highlightColor = isDark ? theme_data._kDarkThemeHighlightColor : theme_data._kLightThemeHighlightColor : null;
      splashColor == null ? splashColor = isDark ? theme_data._kDarkThemeSplashColor : theme_data._kLightThemeSplashColor : null;
      sliderTheme == null ? sliderTheme = C[265] || CT.C265 : null;
      tabBarTheme == null ? tabBarTheme = C[579] || CT.C579 : null;
      tooltipTheme == null ? tooltipTheme = C[580] || CT.C580 : null;
      appBarTheme == null ? appBarTheme = C[581] || CT.C581 : null;
      scrollbarTheme == null ? scrollbarTheme = C[582] || CT.C582 : null;
      bottomAppBarTheme == null ? bottomAppBarTheme = C[583] || CT.C583 : null;
      cardTheme == null ? cardTheme = C[584] || CT.C584 : null;
      chipTheme == null ? chipTheme = chip_theme.ChipThemeData.fromDefaults({secondaryColor: isDark ? dart.nullCheck(colors$.Colors.tealAccent._get(200)) : primaryColor, brightness: colorScheme.brightness, labelStyle: dart.nullCheck(textTheme.bodyText1)}) : null;
      dialogTheme == null ? dialogTheme = C[585] || CT.C585 : null;
      floatingActionButtonTheme == null ? floatingActionButtonTheme = C[586] || CT.C586 : null;
      navigationRailTheme == null ? navigationRailTheme = C[363] || CT.C363 : null;
      cupertinoOverrideTheme = (t50$3 = cupertinoOverrideTheme, t50$3 == null ? null : t50$3.noDefault());
      snackBarTheme == null ? snackBarTheme = C[587] || CT.C587 : null;
      bottomSheetTheme == null ? bottomSheetTheme = C[588] || CT.C588 : null;
      popupMenuTheme == null ? popupMenuTheme = C[589] || CT.C589 : null;
      bannerTheme == null ? bannerTheme = C[590] || CT.C590 : null;
      dividerTheme == null ? dividerTheme = C[591] || CT.C591 : null;
      buttonBarTheme == null ? buttonBarTheme = C[592] || CT.C592 : null;
      bottomNavigationBarTheme == null ? bottomNavigationBarTheme = C[593] || CT.C593 : null;
      timePickerTheme == null ? timePickerTheme = C[594] || CT.C594 : null;
      textButtonTheme == null ? textButtonTheme = C[595] || CT.C595 : null;
      elevatedButtonTheme == null ? elevatedButtonTheme = C[596] || CT.C596 : null;
      outlinedButtonTheme == null ? outlinedButtonTheme = C[597] || CT.C597 : null;
      textSelectionTheme == null ? textSelectionTheme = C[598] || CT.C598 : null;
      dataTableTheme == null ? dataTableTheme = C[599] || CT.C599 : null;
      checkboxTheme == null ? checkboxTheme = C[600] || CT.C600 : null;
      radioTheme == null ? radioTheme = C[601] || CT.C601 : null;
      switchTheme == null ? switchTheme = C[602] || CT.C602 : null;
      progressIndicatorTheme == null ? progressIndicatorTheme = C[603] || CT.C603 : null;
      fixTextFieldOutlineLabel == null ? fixTextFieldOutlineLabel = false : null;
      useTextSelectionTheme == null ? useTextSelectionTheme = true : null;
      return new theme_data.ThemeData.raw({visualDensity: visualDensity, primaryColor: primaryColor, primaryColorBrightness: primaryColorBrightness, primaryColorLight: primaryColorLight, primaryColorDark: primaryColorDark, accentColor: accentColor, accentColorBrightness: accentColorBrightness, canvasColor: canvasColor, shadowColor: shadowColor, scaffoldBackgroundColor: scaffoldBackgroundColor, bottomAppBarColor: bottomAppBarColor, cardColor: cardColor, dividerColor: dividerColor, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, splashColor: splashColor, splashFactory: splashFactory, selectedRowColor: selectedRowColor, unselectedWidgetColor: unselectedWidgetColor, disabledColor: disabledColor, buttonTheme: buttonTheme, buttonColor: buttonColor, toggleButtonsTheme: toggleButtonsTheme, toggleableActiveColor: toggleableActiveColor, secondaryHeaderColor: secondaryHeaderColor, textSelectionColor: textSelectionColor, cursorColor: cursorColor, textSelectionHandleColor: textSelectionHandleColor, backgroundColor: backgroundColor, dialogBackgroundColor: dialogBackgroundColor, indicatorColor: indicatorColor, hintColor: hintColor, errorColor: errorColor, textTheme: textTheme, primaryTextTheme: primaryTextTheme, accentTextTheme: accentTextTheme, inputDecorationTheme: inputDecorationTheme, iconTheme: iconTheme, primaryIconTheme: primaryIconTheme, accentIconTheme: accentIconTheme, sliderTheme: sliderTheme, tabBarTheme: tabBarTheme, tooltipTheme: tooltipTheme, cardTheme: cardTheme, chipTheme: chipTheme, platform: platform, materialTapTargetSize: materialTapTargetSize, applyElevationOverlayColor: applyElevationOverlayColor, pageTransitionsTheme: pageTransitionsTheme, appBarTheme: appBarTheme, scrollbarTheme: scrollbarTheme, bottomAppBarTheme: bottomAppBarTheme, colorScheme: colorScheme, dialogTheme: dialogTheme, floatingActionButtonTheme: floatingActionButtonTheme, navigationRailTheme: navigationRailTheme, typography: typography, cupertinoOverrideTheme: cupertinoOverrideTheme, snackBarTheme: snackBarTheme, bottomSheetTheme: bottomSheetTheme, popupMenuTheme: popupMenuTheme, bannerTheme: bannerTheme, dividerTheme: dividerTheme, buttonBarTheme: buttonBarTheme, bottomNavigationBarTheme: bottomNavigationBarTheme, timePickerTheme: timePickerTheme, textButtonTheme: textButtonTheme, elevatedButtonTheme: elevatedButtonTheme, outlinedButtonTheme: outlinedButtonTheme, textSelectionTheme: textSelectionTheme, dataTableTheme: dataTableTheme, checkboxTheme: checkboxTheme, radioTheme: radioTheme, switchTheme: switchTheme, progressIndicatorTheme: progressIndicatorTheme, fixTextFieldOutlineLabel: fixTextFieldOutlineLabel, useTextSelectionTheme: useTextSelectionTheme});
    }
    static from(opts) {
      let colorScheme = opts && 'colorScheme' in opts ? opts.colorScheme : null;
      if (colorScheme == null) dart.nullFailed(I[102], 801, 26, "colorScheme");
      let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
      if (!(colorScheme != null)) dart.assertFailed(null, I[102], 804, 12, "colorScheme != null");
      let isDark = colorScheme.brightness == ui.Brightness.dark;
      let primarySurfaceColor = isDark ? colorScheme.surface : colorScheme.primary;
      let onPrimarySurfaceColor = isDark ? colorScheme.onSurface : colorScheme.onPrimary;
      return theme_data.ThemeData.new({brightness: colorScheme.brightness, primaryColor: primarySurfaceColor, primaryColorBrightness: theme_data.ThemeData.estimateBrightnessForColor(primarySurfaceColor), canvasColor: colorScheme.background, accentColor: colorScheme.secondary, accentColorBrightness: theme_data.ThemeData.estimateBrightnessForColor(colorScheme.secondary), scaffoldBackgroundColor: colorScheme.background, bottomAppBarColor: colorScheme.surface, cardColor: colorScheme.surface, dividerColor: colorScheme.onSurface.withOpacity(0.12), backgroundColor: colorScheme.background, dialogBackgroundColor: colorScheme.background, errorColor: colorScheme.error, textTheme: textTheme, indicatorColor: onPrimarySurfaceColor, applyElevationOverlayColor: isDark, colorScheme: colorScheme});
    }
    static light() {
      return theme_data.ThemeData.new({brightness: ui.Brightness.light});
    }
    static dark() {
      return theme_data.ThemeData.new({brightness: ui.Brightness.dark});
    }
    static fallback() {
      return theme_data.ThemeData.light();
    }
    get brightness() {
      return this.colorScheme.brightness;
    }
    copyWith(opts) {
      let t50, t50$, t50$0, t50$1, t50$2, t50$3, t50$4, t50$5, t50$6, t50$7, t50$8, t50$9, t50$10, t50$11, t50$12, t50$13, t50$14, t50$15, t50$16, t50$17, t50$18, t50$19, t50$20, t50$21, t50$22, t50$23, t50$24, t50$25, t50$26, t50$27, t50$28, t50$29, t50$30, t50$31, t50$32, t50$33, t50$34, t50$35, t50$36, t50$37, t50$38, t50$39, t50$40, t50$41, t50$42, t50$43, t50$44, t50$45, t50$46, t50$47, t50$48, t50$49, t50$50, t50$51, t50$52, t50$53, t50$54, t50$55, t50$56, t50$57, t50$58, t50$59, t50$60, t50$61, t50$62, t50$63, t50$64, t50$65, t50$66, t50$67, t50$68, t50$69, t50$70, t50$71, t50$72, t50$73, t50$74, t50$75, t50$76;
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      let primaryColor = opts && 'primaryColor' in opts ? opts.primaryColor : null;
      let primaryColorBrightness = opts && 'primaryColorBrightness' in opts ? opts.primaryColorBrightness : null;
      let primaryColorLight = opts && 'primaryColorLight' in opts ? opts.primaryColorLight : null;
      let primaryColorDark = opts && 'primaryColorDark' in opts ? opts.primaryColorDark : null;
      let accentColor = opts && 'accentColor' in opts ? opts.accentColor : null;
      let accentColorBrightness = opts && 'accentColorBrightness' in opts ? opts.accentColorBrightness : null;
      let canvasColor = opts && 'canvasColor' in opts ? opts.canvasColor : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let scaffoldBackgroundColor = opts && 'scaffoldBackgroundColor' in opts ? opts.scaffoldBackgroundColor : null;
      let bottomAppBarColor = opts && 'bottomAppBarColor' in opts ? opts.bottomAppBarColor : null;
      let cardColor = opts && 'cardColor' in opts ? opts.cardColor : null;
      let dividerColor = opts && 'dividerColor' in opts ? opts.dividerColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
      let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
      let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
      let selectedRowColor = opts && 'selectedRowColor' in opts ? opts.selectedRowColor : null;
      let unselectedWidgetColor = opts && 'unselectedWidgetColor' in opts ? opts.unselectedWidgetColor : null;
      let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
      let buttonTheme = opts && 'buttonTheme' in opts ? opts.buttonTheme : null;
      let toggleButtonsTheme = opts && 'toggleButtonsTheme' in opts ? opts.toggleButtonsTheme : null;
      let buttonColor = opts && 'buttonColor' in opts ? opts.buttonColor : null;
      let secondaryHeaderColor = opts && 'secondaryHeaderColor' in opts ? opts.secondaryHeaderColor : null;
      let textSelectionColor = opts && 'textSelectionColor' in opts ? opts.textSelectionColor : null;
      let cursorColor = opts && 'cursorColor' in opts ? opts.cursorColor : null;
      let textSelectionHandleColor = opts && 'textSelectionHandleColor' in opts ? opts.textSelectionHandleColor : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let dialogBackgroundColor = opts && 'dialogBackgroundColor' in opts ? opts.dialogBackgroundColor : null;
      let indicatorColor = opts && 'indicatorColor' in opts ? opts.indicatorColor : null;
      let hintColor = opts && 'hintColor' in opts ? opts.hintColor : null;
      let errorColor = opts && 'errorColor' in opts ? opts.errorColor : null;
      let toggleableActiveColor = opts && 'toggleableActiveColor' in opts ? opts.toggleableActiveColor : null;
      let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
      let primaryTextTheme = opts && 'primaryTextTheme' in opts ? opts.primaryTextTheme : null;
      let accentTextTheme = opts && 'accentTextTheme' in opts ? opts.accentTextTheme : null;
      let inputDecorationTheme = opts && 'inputDecorationTheme' in opts ? opts.inputDecorationTheme : null;
      let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
      let primaryIconTheme = opts && 'primaryIconTheme' in opts ? opts.primaryIconTheme : null;
      let accentIconTheme = opts && 'accentIconTheme' in opts ? opts.accentIconTheme : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let tabBarTheme = opts && 'tabBarTheme' in opts ? opts.tabBarTheme : null;
      let tooltipTheme = opts && 'tooltipTheme' in opts ? opts.tooltipTheme : null;
      let cardTheme = opts && 'cardTheme' in opts ? opts.cardTheme : null;
      let chipTheme = opts && 'chipTheme' in opts ? opts.chipTheme : null;
      let platform = opts && 'platform' in opts ? opts.platform : null;
      let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
      let applyElevationOverlayColor = opts && 'applyElevationOverlayColor' in opts ? opts.applyElevationOverlayColor : null;
      let pageTransitionsTheme = opts && 'pageTransitionsTheme' in opts ? opts.pageTransitionsTheme : null;
      let appBarTheme = opts && 'appBarTheme' in opts ? opts.appBarTheme : null;
      let scrollbarTheme = opts && 'scrollbarTheme' in opts ? opts.scrollbarTheme : null;
      let bottomAppBarTheme = opts && 'bottomAppBarTheme' in opts ? opts.bottomAppBarTheme : null;
      let colorScheme = opts && 'colorScheme' in opts ? opts.colorScheme : null;
      let dialogTheme = opts && 'dialogTheme' in opts ? opts.dialogTheme : null;
      let floatingActionButtonTheme = opts && 'floatingActionButtonTheme' in opts ? opts.floatingActionButtonTheme : null;
      let navigationRailTheme = opts && 'navigationRailTheme' in opts ? opts.navigationRailTheme : null;
      let typography = opts && 'typography' in opts ? opts.typography : null;
      let cupertinoOverrideTheme = opts && 'cupertinoOverrideTheme' in opts ? opts.cupertinoOverrideTheme : null;
      let snackBarTheme = opts && 'snackBarTheme' in opts ? opts.snackBarTheme : null;
      let bottomSheetTheme = opts && 'bottomSheetTheme' in opts ? opts.bottomSheetTheme : null;
      let popupMenuTheme = opts && 'popupMenuTheme' in opts ? opts.popupMenuTheme : null;
      let bannerTheme = opts && 'bannerTheme' in opts ? opts.bannerTheme : null;
      let dividerTheme = opts && 'dividerTheme' in opts ? opts.dividerTheme : null;
      let buttonBarTheme = opts && 'buttonBarTheme' in opts ? opts.buttonBarTheme : null;
      let bottomNavigationBarTheme = opts && 'bottomNavigationBarTheme' in opts ? opts.bottomNavigationBarTheme : null;
      let timePickerTheme = opts && 'timePickerTheme' in opts ? opts.timePickerTheme : null;
      let textButtonTheme = opts && 'textButtonTheme' in opts ? opts.textButtonTheme : null;
      let elevatedButtonTheme = opts && 'elevatedButtonTheme' in opts ? opts.elevatedButtonTheme : null;
      let outlinedButtonTheme = opts && 'outlinedButtonTheme' in opts ? opts.outlinedButtonTheme : null;
      let textSelectionTheme = opts && 'textSelectionTheme' in opts ? opts.textSelectionTheme : null;
      let dataTableTheme = opts && 'dataTableTheme' in opts ? opts.dataTableTheme : null;
      let checkboxTheme = opts && 'checkboxTheme' in opts ? opts.checkboxTheme : null;
      let radioTheme = opts && 'radioTheme' in opts ? opts.radioTheme : null;
      let switchTheme = opts && 'switchTheme' in opts ? opts.switchTheme : null;
      let progressIndicatorTheme = opts && 'progressIndicatorTheme' in opts ? opts.progressIndicatorTheme : null;
      let fixTextFieldOutlineLabel = opts && 'fixTextFieldOutlineLabel' in opts ? opts.fixTextFieldOutlineLabel : null;
      let useTextSelectionTheme = opts && 'useTextSelectionTheme' in opts ? opts.useTextSelectionTheme : null;
      cupertinoOverrideTheme = (t50 = cupertinoOverrideTheme, t50 == null ? null : t50.noDefault());
      return new theme_data.ThemeData.raw({visualDensity: (t50$ = visualDensity, t50$ == null ? this.visualDensity : t50$), primaryColor: (t50$0 = primaryColor, t50$0 == null ? this.primaryColor : t50$0), primaryColorBrightness: (t50$1 = primaryColorBrightness, t50$1 == null ? this.primaryColorBrightness : t50$1), primaryColorLight: (t50$2 = primaryColorLight, t50$2 == null ? this.primaryColorLight : t50$2), primaryColorDark: (t50$3 = primaryColorDark, t50$3 == null ? this.primaryColorDark : t50$3), accentColor: (t50$4 = accentColor, t50$4 == null ? this.accentColor : t50$4), accentColorBrightness: (t50$5 = accentColorBrightness, t50$5 == null ? this.accentColorBrightness : t50$5), canvasColor: (t50$6 = canvasColor, t50$6 == null ? this.canvasColor : t50$6), shadowColor: (t50$7 = shadowColor, t50$7 == null ? this.shadowColor : t50$7), scaffoldBackgroundColor: (t50$8 = scaffoldBackgroundColor, t50$8 == null ? this.scaffoldBackgroundColor : t50$8), bottomAppBarColor: (t50$9 = bottomAppBarColor, t50$9 == null ? this.bottomAppBarColor : t50$9), cardColor: (t50$10 = cardColor, t50$10 == null ? this.cardColor : t50$10), dividerColor: (t50$11 = dividerColor, t50$11 == null ? this.dividerColor : t50$11), focusColor: (t50$12 = focusColor, t50$12 == null ? this.focusColor : t50$12), hoverColor: (t50$13 = hoverColor, t50$13 == null ? this.hoverColor : t50$13), highlightColor: (t50$14 = highlightColor, t50$14 == null ? this.highlightColor : t50$14), splashColor: (t50$15 = splashColor, t50$15 == null ? this.splashColor : t50$15), splashFactory: (t50$16 = splashFactory, t50$16 == null ? this.splashFactory : t50$16), selectedRowColor: (t50$17 = selectedRowColor, t50$17 == null ? this.selectedRowColor : t50$17), unselectedWidgetColor: (t50$18 = unselectedWidgetColor, t50$18 == null ? this.unselectedWidgetColor : t50$18), disabledColor: (t50$19 = disabledColor, t50$19 == null ? this.disabledColor : t50$19), buttonColor: (t50$20 = buttonColor, t50$20 == null ? this.buttonColor : t50$20), buttonTheme: (t50$21 = buttonTheme, t50$21 == null ? this.buttonTheme : t50$21), toggleButtonsTheme: (t50$22 = toggleButtonsTheme, t50$22 == null ? this.toggleButtonsTheme : t50$22), secondaryHeaderColor: (t50$23 = secondaryHeaderColor, t50$23 == null ? this.secondaryHeaderColor : t50$23), textSelectionColor: (t50$24 = textSelectionColor, t50$24 == null ? this.textSelectionColor : t50$24), cursorColor: (t50$25 = cursorColor, t50$25 == null ? this.cursorColor : t50$25), textSelectionHandleColor: (t50$26 = textSelectionHandleColor, t50$26 == null ? this.textSelectionHandleColor : t50$26), backgroundColor: (t50$27 = backgroundColor, t50$27 == null ? this.backgroundColor : t50$27), dialogBackgroundColor: (t50$28 = dialogBackgroundColor, t50$28 == null ? this.dialogBackgroundColor : t50$28), indicatorColor: (t50$29 = indicatorColor, t50$29 == null ? this.indicatorColor : t50$29), hintColor: (t50$30 = hintColor, t50$30 == null ? this.hintColor : t50$30), errorColor: (t50$31 = errorColor, t50$31 == null ? this.errorColor : t50$31), toggleableActiveColor: (t50$32 = toggleableActiveColor, t50$32 == null ? this.toggleableActiveColor : t50$32), textTheme: (t50$33 = textTheme, t50$33 == null ? this.textTheme : t50$33), primaryTextTheme: (t50$34 = primaryTextTheme, t50$34 == null ? this.primaryTextTheme : t50$34), accentTextTheme: (t50$35 = accentTextTheme, t50$35 == null ? this.accentTextTheme : t50$35), inputDecorationTheme: (t50$36 = inputDecorationTheme, t50$36 == null ? this.inputDecorationTheme : t50$36), iconTheme: (t50$37 = iconTheme, t50$37 == null ? this.iconTheme : t50$37), primaryIconTheme: (t50$38 = primaryIconTheme, t50$38 == null ? this.primaryIconTheme : t50$38), accentIconTheme: (t50$39 = accentIconTheme, t50$39 == null ? this.accentIconTheme : t50$39), sliderTheme: (t50$40 = sliderTheme, t50$40 == null ? this.sliderTheme : t50$40), tabBarTheme: (t50$41 = tabBarTheme, t50$41 == null ? this.tabBarTheme : t50$41), tooltipTheme: (t50$42 = tooltipTheme, t50$42 == null ? this.tooltipTheme : t50$42), cardTheme: (t50$43 = cardTheme, t50$43 == null ? this.cardTheme : t50$43), chipTheme: (t50$44 = chipTheme, t50$44 == null ? this.chipTheme : t50$44), platform: (t50$45 = platform, t50$45 == null ? this.platform : t50$45), materialTapTargetSize: (t50$46 = materialTapTargetSize, t50$46 == null ? this.materialTapTargetSize : t50$46), applyElevationOverlayColor: (t50$47 = applyElevationOverlayColor, t50$47 == null ? this.applyElevationOverlayColor : t50$47), pageTransitionsTheme: (t50$48 = pageTransitionsTheme, t50$48 == null ? this.pageTransitionsTheme : t50$48), appBarTheme: (t50$49 = appBarTheme, t50$49 == null ? this.appBarTheme : t50$49), scrollbarTheme: (t50$50 = scrollbarTheme, t50$50 == null ? this.scrollbarTheme : t50$50), bottomAppBarTheme: (t50$51 = bottomAppBarTheme, t50$51 == null ? this.bottomAppBarTheme : t50$51), colorScheme: (t50$52 = colorScheme, t50$52 == null ? this.colorScheme : t50$52).copyWith({brightness: brightness}), dialogTheme: (t50$53 = dialogTheme, t50$53 == null ? this.dialogTheme : t50$53), floatingActionButtonTheme: (t50$54 = floatingActionButtonTheme, t50$54 == null ? this.floatingActionButtonTheme : t50$54), navigationRailTheme: (t50$55 = navigationRailTheme, t50$55 == null ? this.navigationRailTheme : t50$55), typography: (t50$56 = typography, t50$56 == null ? this.typography : t50$56), cupertinoOverrideTheme: (t50$57 = cupertinoOverrideTheme, t50$57 == null ? this.cupertinoOverrideTheme : t50$57), snackBarTheme: (t50$58 = snackBarTheme, t50$58 == null ? this.snackBarTheme : t50$58), bottomSheetTheme: (t50$59 = bottomSheetTheme, t50$59 == null ? this.bottomSheetTheme : t50$59), popupMenuTheme: (t50$60 = popupMenuTheme, t50$60 == null ? this.popupMenuTheme : t50$60), bannerTheme: (t50$61 = bannerTheme, t50$61 == null ? this.bannerTheme : t50$61), dividerTheme: (t50$62 = dividerTheme, t50$62 == null ? this.dividerTheme : t50$62), buttonBarTheme: (t50$63 = buttonBarTheme, t50$63 == null ? this.buttonBarTheme : t50$63), bottomNavigationBarTheme: (t50$64 = bottomNavigationBarTheme, t50$64 == null ? this.bottomNavigationBarTheme : t50$64), timePickerTheme: (t50$65 = timePickerTheme, t50$65 == null ? this.timePickerTheme : t50$65), textButtonTheme: (t50$66 = textButtonTheme, t50$66 == null ? this.textButtonTheme : t50$66), elevatedButtonTheme: (t50$67 = elevatedButtonTheme, t50$67 == null ? this.elevatedButtonTheme : t50$67), outlinedButtonTheme: (t50$68 = outlinedButtonTheme, t50$68 == null ? this.outlinedButtonTheme : t50$68), textSelectionTheme: (t50$69 = textSelectionTheme, t50$69 == null ? this.textSelectionTheme : t50$69), dataTableTheme: (t50$70 = dataTableTheme, t50$70 == null ? this.dataTableTheme : t50$70), checkboxTheme: (t50$71 = checkboxTheme, t50$71 == null ? this.checkboxTheme : t50$71), radioTheme: (t50$72 = radioTheme, t50$72 == null ? this.radioTheme : t50$72), switchTheme: (t50$73 = switchTheme, t50$73 == null ? this.switchTheme : t50$73), progressIndicatorTheme: (t50$74 = progressIndicatorTheme, t50$74 == null ? this.progressIndicatorTheme : t50$74), fixTextFieldOutlineLabel: (t50$75 = fixTextFieldOutlineLabel, t50$75 == null ? this.fixTextFieldOutlineLabel : t50$75), useTextSelectionTheme: (t50$76 = useTextSelectionTheme, t50$76 == null ? this.useTextSelectionTheme : t50$76)});
    }
    static localize(baseTheme, localTextGeometry) {
      if (baseTheme == null) dart.nullFailed(I[102], 1579, 39, "baseTheme");
      if (localTextGeometry == null) dart.nullFailed(I[102], 1579, 60, "localTextGeometry");
      if (!(baseTheme != null)) dart.assertFailed(null, I[102], 1592, 12, "baseTheme != null");
      if (!(localTextGeometry != null)) dart.assertFailed(null, I[102], 1593, 12, "localTextGeometry != null");
      return theme_data.ThemeData._localizedThemeDataCache.putIfAbsent(new theme_data._IdentityThemeDataCacheKey.new(baseTheme, localTextGeometry), dart.fn(() => baseTheme.copyWith({primaryTextTheme: localTextGeometry.merge(baseTheme.primaryTextTheme), accentTextTheme: localTextGeometry.merge(baseTheme.accentTextTheme), textTheme: localTextGeometry.merge(baseTheme.textTheme)}), T$.VoidToThemeData()));
    }
    static estimateBrightnessForColor(color) {
      if (color == null) dart.nullFailed(I[102], 1612, 54, "color");
      let relativeLuminance = color.computeLuminance();
      if ((dart.notNull(relativeLuminance) + 0.05) * (dart.notNull(relativeLuminance) + 0.05) > 0.15) return ui.Brightness.light;
      return ui.Brightness.dark;
    }
    static lerp(a, b, t) {
      if (a == null) dart.nullFailed(I[102], 1632, 35, "a");
      if (b == null) dart.nullFailed(I[102], 1632, 48, "b");
      if (t == null) dart.nullFailed(I[102], 1632, 58, "t");
      if (!(a != null)) dart.assertFailed(null, I[102], 1633, 12, "a != null");
      if (!(b != null)) dart.assertFailed(null, I[102], 1634, 12, "b != null");
      if (!(t != null)) dart.assertFailed(null, I[102], 1635, 12, "t != null");
      return new theme_data.ThemeData.raw({visualDensity: theme_data.VisualDensity.lerp(a.visualDensity, b.visualDensity, t), primaryColor: dart.nullCheck(ui.Color.lerp(a.primaryColor, b.primaryColor, t)), primaryColorBrightness: dart.notNull(t) < 0.5 ? a.primaryColorBrightness : b.primaryColorBrightness, primaryColorLight: dart.nullCheck(ui.Color.lerp(a.primaryColorLight, b.primaryColorLight, t)), primaryColorDark: dart.nullCheck(ui.Color.lerp(a.primaryColorDark, b.primaryColorDark, t)), canvasColor: dart.nullCheck(ui.Color.lerp(a.canvasColor, b.canvasColor, t)), shadowColor: dart.nullCheck(ui.Color.lerp(a.shadowColor, b.shadowColor, t)), accentColor: dart.nullCheck(ui.Color.lerp(a.accentColor, b.accentColor, t)), accentColorBrightness: dart.notNull(t) < 0.5 ? a.accentColorBrightness : b.accentColorBrightness, scaffoldBackgroundColor: dart.nullCheck(ui.Color.lerp(a.scaffoldBackgroundColor, b.scaffoldBackgroundColor, t)), bottomAppBarColor: dart.nullCheck(ui.Color.lerp(a.bottomAppBarColor, b.bottomAppBarColor, t)), cardColor: dart.nullCheck(ui.Color.lerp(a.cardColor, b.cardColor, t)), dividerColor: dart.nullCheck(ui.Color.lerp(a.dividerColor, b.dividerColor, t)), focusColor: dart.nullCheck(ui.Color.lerp(a.focusColor, b.focusColor, t)), hoverColor: dart.nullCheck(ui.Color.lerp(a.hoverColor, b.hoverColor, t)), highlightColor: dart.nullCheck(ui.Color.lerp(a.highlightColor, b.highlightColor, t)), splashColor: dart.nullCheck(ui.Color.lerp(a.splashColor, b.splashColor, t)), splashFactory: dart.notNull(t) < 0.5 ? a.splashFactory : b.splashFactory, selectedRowColor: dart.nullCheck(ui.Color.lerp(a.selectedRowColor, b.selectedRowColor, t)), unselectedWidgetColor: dart.nullCheck(ui.Color.lerp(a.unselectedWidgetColor, b.unselectedWidgetColor, t)), disabledColor: dart.nullCheck(ui.Color.lerp(a.disabledColor, b.disabledColor, t)), buttonTheme: dart.notNull(t) < 0.5 ? a.buttonTheme : b.buttonTheme, toggleButtonsTheme: dart.nullCheck(toggle_buttons_theme.ToggleButtonsThemeData.lerp(a.toggleButtonsTheme, b.toggleButtonsTheme, t)), buttonColor: dart.nullCheck(ui.Color.lerp(a.buttonColor, b.buttonColor, t)), secondaryHeaderColor: dart.nullCheck(ui.Color.lerp(a.secondaryHeaderColor, b.secondaryHeaderColor, t)), textSelectionColor: dart.nullCheck(ui.Color.lerp(a.textSelectionColor, b.textSelectionColor, t)), cursorColor: dart.nullCheck(ui.Color.lerp(a.cursorColor, b.cursorColor, t)), textSelectionHandleColor: dart.nullCheck(ui.Color.lerp(a.textSelectionHandleColor, b.textSelectionHandleColor, t)), backgroundColor: dart.nullCheck(ui.Color.lerp(a.backgroundColor, b.backgroundColor, t)), dialogBackgroundColor: dart.nullCheck(ui.Color.lerp(a.dialogBackgroundColor, b.dialogBackgroundColor, t)), indicatorColor: dart.nullCheck(ui.Color.lerp(a.indicatorColor, b.indicatorColor, t)), hintColor: dart.nullCheck(ui.Color.lerp(a.hintColor, b.hintColor, t)), errorColor: dart.nullCheck(ui.Color.lerp(a.errorColor, b.errorColor, t)), toggleableActiveColor: dart.nullCheck(ui.Color.lerp(a.toggleableActiveColor, b.toggleableActiveColor, t)), textTheme: text_theme.TextTheme.lerp(a.textTheme, b.textTheme, t), primaryTextTheme: text_theme.TextTheme.lerp(a.primaryTextTheme, b.primaryTextTheme, t), accentTextTheme: text_theme.TextTheme.lerp(a.accentTextTheme, b.accentTextTheme, t), inputDecorationTheme: dart.notNull(t) < 0.5 ? a.inputDecorationTheme : b.inputDecorationTheme, iconTheme: icon_theme_data.IconThemeData.lerp(a.iconTheme, b.iconTheme, t), primaryIconTheme: icon_theme_data.IconThemeData.lerp(a.primaryIconTheme, b.primaryIconTheme, t), accentIconTheme: icon_theme_data.IconThemeData.lerp(a.accentIconTheme, b.accentIconTheme, t), sliderTheme: slider_theme.SliderThemeData.lerp(a.sliderTheme, b.sliderTheme, t), tabBarTheme: tab_bar_theme.TabBarTheme.lerp(a.tabBarTheme, b.tabBarTheme, t), tooltipTheme: dart.nullCheck(tooltip_theme.TooltipThemeData.lerp(a.tooltipTheme, b.tooltipTheme, t)), cardTheme: card_theme.CardTheme.lerp(a.cardTheme, b.cardTheme, t), chipTheme: dart.nullCheck(chip_theme.ChipThemeData.lerp(a.chipTheme, b.chipTheme, t)), platform: dart.notNull(t) < 0.5 ? a.platform : b.platform, materialTapTargetSize: dart.notNull(t) < 0.5 ? a.materialTapTargetSize : b.materialTapTargetSize, applyElevationOverlayColor: dart.notNull(t) < 0.5 ? a.applyElevationOverlayColor : b.applyElevationOverlayColor, pageTransitionsTheme: dart.notNull(t) < 0.5 ? a.pageTransitionsTheme : b.pageTransitionsTheme, appBarTheme: app_bar_theme.AppBarTheme.lerp(a.appBarTheme, b.appBarTheme, t), scrollbarTheme: scrollbar_theme.ScrollbarThemeData.lerp(a.scrollbarTheme, b.scrollbarTheme, t), bottomAppBarTheme: bottom_app_bar_theme.BottomAppBarTheme.lerp(a.bottomAppBarTheme, b.bottomAppBarTheme, t), colorScheme: color_scheme.ColorScheme.lerp(a.colorScheme, b.colorScheme, t), dialogTheme: dialog_theme.DialogTheme.lerp(a.dialogTheme, b.dialogTheme, t), floatingActionButtonTheme: dart.nullCheck(floating_action_button_theme.FloatingActionButtonThemeData.lerp(a.floatingActionButtonTheme, b.floatingActionButtonTheme, t)), navigationRailTheme: dart.nullCheck(navigation_rail_theme.NavigationRailThemeData.lerp(a.navigationRailTheme, b.navigationRailTheme, t)), typography: typography$.Typography.lerp(a.typography, b.typography, t), cupertinoOverrideTheme: dart.notNull(t) < 0.5 ? a.cupertinoOverrideTheme : b.cupertinoOverrideTheme, snackBarTheme: snack_bar_theme.SnackBarThemeData.lerp(a.snackBarTheme, b.snackBarTheme, t), bottomSheetTheme: dart.nullCheck(bottom_sheet_theme.BottomSheetThemeData.lerp(a.bottomSheetTheme, b.bottomSheetTheme, t)), popupMenuTheme: dart.nullCheck(popup_menu_theme.PopupMenuThemeData.lerp(a.popupMenuTheme, b.popupMenuTheme, t)), bannerTheme: banner_theme.MaterialBannerThemeData.lerp(a.bannerTheme, b.bannerTheme, t), dividerTheme: divider_theme.DividerThemeData.lerp(a.dividerTheme, b.dividerTheme, t), buttonBarTheme: dart.nullCheck(button_bar_theme.ButtonBarThemeData.lerp(a.buttonBarTheme, b.buttonBarTheme, t)), bottomNavigationBarTheme: bottom_navigation_bar_theme.BottomNavigationBarThemeData.lerp(a.bottomNavigationBarTheme, b.bottomNavigationBarTheme, t), timePickerTheme: time_picker_theme.TimePickerThemeData.lerp(a.timePickerTheme, b.timePickerTheme, t), textButtonTheme: dart.nullCheck(text_button_theme.TextButtonThemeData.lerp(a.textButtonTheme, b.textButtonTheme, t)), elevatedButtonTheme: dart.nullCheck(elevated_button_theme.ElevatedButtonThemeData.lerp(a.elevatedButtonTheme, b.elevatedButtonTheme, t)), outlinedButtonTheme: dart.nullCheck(outlined_button_theme.OutlinedButtonThemeData.lerp(a.outlinedButtonTheme, b.outlinedButtonTheme, t)), textSelectionTheme: dart.nullCheck(text_selection_theme.TextSelectionThemeData.lerp(a.textSelectionTheme, b.textSelectionTheme, t)), dataTableTheme: data_table_theme.DataTableThemeData.lerp(a.dataTableTheme, b.dataTableTheme, t), checkboxTheme: checkbox_theme.CheckboxThemeData.lerp(a.checkboxTheme, b.checkboxTheme, t), radioTheme: radio_theme.RadioThemeData.lerp(a.radioTheme, b.radioTheme, t), switchTheme: switch_theme.SwitchThemeData.lerp(a.switchTheme, b.switchTheme, t), progressIndicatorTheme: dart.nullCheck(progress_indicator_theme.ProgressIndicatorThemeData.lerp(a.progressIndicatorTheme, b.progressIndicatorTheme, t)), fixTextFieldOutlineLabel: dart.notNull(t) < 0.5 ? a.fixTextFieldOutlineLabel : b.fixTextFieldOutlineLabel, useTextSelectionTheme: dart.notNull(t) < 0.5 ? a.useTextSelectionTheme : b.useTextSelectionTheme});
    }
    _equals(other) {
      if (other == null) return false;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return theme_data.ThemeData.is(other) && dart.equals(other.visualDensity, this.visualDensity) && dart.equals(other.primaryColor, this.primaryColor) && other.primaryColorBrightness == this.primaryColorBrightness && dart.equals(other.primaryColorLight, this.primaryColorLight) && dart.equals(other.primaryColorDark, this.primaryColorDark) && dart.equals(other.accentColor, this.accentColor) && other.accentColorBrightness == this.accentColorBrightness && dart.equals(other.canvasColor, this.canvasColor) && dart.equals(other.scaffoldBackgroundColor, this.scaffoldBackgroundColor) && dart.equals(other.bottomAppBarColor, this.bottomAppBarColor) && dart.equals(other.cardColor, this.cardColor) && dart.equals(other.shadowColor, this.shadowColor) && dart.equals(other.dividerColor, this.dividerColor) && dart.equals(other.highlightColor, this.highlightColor) && dart.equals(other.splashColor, this.splashColor) && dart.equals(other.splashFactory, this.splashFactory) && dart.equals(other.selectedRowColor, this.selectedRowColor) && dart.equals(other.unselectedWidgetColor, this.unselectedWidgetColor) && dart.equals(other.disabledColor, this.disabledColor) && dart.equals(other.buttonTheme, this.buttonTheme) && dart.equals(other.buttonColor, this.buttonColor) && dart.equals(other.toggleButtonsTheme, this.toggleButtonsTheme) && dart.equals(other.secondaryHeaderColor, this.secondaryHeaderColor) && dart.equals(other.textSelectionColor, this.textSelectionColor) && dart.equals(other.cursorColor, this.cursorColor) && dart.equals(other.textSelectionHandleColor, this.textSelectionHandleColor) && dart.equals(other.backgroundColor, this.backgroundColor) && dart.equals(other.dialogBackgroundColor, this.dialogBackgroundColor) && dart.equals(other.indicatorColor, this.indicatorColor) && dart.equals(other.hintColor, this.hintColor) && dart.equals(other.errorColor, this.errorColor) && dart.equals(other.toggleableActiveColor, this.toggleableActiveColor) && dart.equals(other.textTheme, this.textTheme) && dart.equals(other.primaryTextTheme, this.primaryTextTheme) && dart.equals(other.accentTextTheme, this.accentTextTheme) && dart.equals(other.inputDecorationTheme, this.inputDecorationTheme) && dart.equals(other.iconTheme, this.iconTheme) && dart.equals(other.primaryIconTheme, this.primaryIconTheme) && dart.equals(other.accentIconTheme, this.accentIconTheme) && dart.equals(other.sliderTheme, this.sliderTheme) && dart.equals(other.tabBarTheme, this.tabBarTheme) && dart.equals(other.tooltipTheme, this.tooltipTheme) && dart.equals(other.cardTheme, this.cardTheme) && dart.equals(other.chipTheme, this.chipTheme) && other.platform == this.platform && other.materialTapTargetSize == this.materialTapTargetSize && other.applyElevationOverlayColor == this.applyElevationOverlayColor && dart.equals(other.pageTransitionsTheme, this.pageTransitionsTheme) && dart.equals(other.appBarTheme, this.appBarTheme) && dart.equals(other.scrollbarTheme, this.scrollbarTheme) && dart.equals(other.bottomAppBarTheme, this.bottomAppBarTheme) && dart.equals(other.colorScheme, this.colorScheme) && dart.equals(other.dialogTheme, this.dialogTheme) && dart.equals(other.floatingActionButtonTheme, this.floatingActionButtonTheme) && dart.equals(other.navigationRailTheme, this.navigationRailTheme) && dart.equals(other.typography, this.typography) && dart.equals(other.cupertinoOverrideTheme, this.cupertinoOverrideTheme) && dart.equals(other.snackBarTheme, this.snackBarTheme) && dart.equals(other.bottomSheetTheme, this.bottomSheetTheme) && dart.equals(other.popupMenuTheme, this.popupMenuTheme) && dart.equals(other.bannerTheme, this.bannerTheme) && dart.equals(other.dividerTheme, this.dividerTheme) && dart.equals(other.buttonBarTheme, this.buttonBarTheme) && dart.equals(other.bottomNavigationBarTheme, this.bottomNavigationBarTheme) && dart.equals(other.timePickerTheme, this.timePickerTheme) && dart.equals(other.textButtonTheme, this.textButtonTheme) && dart.equals(other.elevatedButtonTheme, this.elevatedButtonTheme) && dart.equals(other.outlinedButtonTheme, this.outlinedButtonTheme) && dart.equals(other.textSelectionTheme, this.textSelectionTheme) && dart.equals(other.dataTableTheme, this.dataTableTheme) && dart.equals(other.checkboxTheme, this.checkboxTheme) && dart.equals(other.radioTheme, this.radioTheme) && dart.equals(other.switchTheme, this.switchTheme) && dart.equals(other.progressIndicatorTheme, this.progressIndicatorTheme) && other.fixTextFieldOutlineLabel == this.fixTextFieldOutlineLabel && other.useTextSelectionTheme == this.useTextSelectionTheme;
    }
    get hashCode() {
      let values = T$.JSArrayOfObjectN().of([this.visualDensity, this.primaryColor, this.primaryColorBrightness, this.primaryColorLight, this.primaryColorDark, this.accentColor, this.accentColorBrightness, this.canvasColor, this.shadowColor, this.scaffoldBackgroundColor, this.bottomAppBarColor, this.cardColor, this.dividerColor, this.focusColor, this.hoverColor, this.highlightColor, this.splashColor, this.splashFactory, this.selectedRowColor, this.unselectedWidgetColor, this.disabledColor, this.buttonTheme, this.buttonColor, this.toggleButtonsTheme, this.toggleableActiveColor, this.secondaryHeaderColor, this.textSelectionColor, this.cursorColor, this.textSelectionHandleColor, this.backgroundColor, this.dialogBackgroundColor, this.indicatorColor, this.hintColor, this.errorColor, this.textTheme, this.primaryTextTheme, this.accentTextTheme, this.inputDecorationTheme, this.iconTheme, this.primaryIconTheme, this.accentIconTheme, this.sliderTheme, this.tabBarTheme, this.tooltipTheme, this.cardTheme, this.chipTheme, this.platform, this.materialTapTargetSize, this.applyElevationOverlayColor, this.pageTransitionsTheme, this.appBarTheme, this.scrollbarTheme, this.bottomAppBarTheme, this.colorScheme, this.dialogTheme, this.floatingActionButtonTheme, this.navigationRailTheme, this.typography, this.cupertinoOverrideTheme, this.snackBarTheme, this.bottomSheetTheme, this.popupMenuTheme, this.bannerTheme, this.dividerTheme, this.buttonBarTheme, this.bottomNavigationBarTheme, this.timePickerTheme, this.textButtonTheme, this.elevatedButtonTheme, this.outlinedButtonTheme, this.textSelectionTheme, this.dataTableTheme, this.checkboxTheme, this.radioTheme, this.switchTheme, this.progressIndicatorTheme, this.fixTextFieldOutlineLabel, this.useTextSelectionTheme]);
      return ui.hashList(values);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[102], 1896, 56, "properties");
      super.debugFillProperties(properties);
      let defaultData = theme_data.ThemeData.fallback();
      properties.add(new (T$.EnumPropertyOfTargetPlatform()).new("platform", this.platform, {defaultValue: platform$.defaultTargetPlatform, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.EnumPropertyOfBrightness()).new("brightness", this.brightness, {defaultValue: defaultData.brightness, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("primaryColor", this.primaryColor, {defaultValue: defaultData.primaryColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.EnumPropertyOfBrightness()).new("primaryColorBrightness", this.primaryColorBrightness, {defaultValue: defaultData.primaryColorBrightness, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("accentColor", this.accentColor, {defaultValue: defaultData.accentColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.EnumPropertyOfBrightness()).new("accentColorBrightness", this.accentColorBrightness, {defaultValue: defaultData.accentColorBrightness, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("canvasColor", this.canvasColor, {defaultValue: defaultData.canvasColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("shadowColor", this.shadowColor, {defaultValue: defaultData.shadowColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("scaffoldBackgroundColor", this.scaffoldBackgroundColor, {defaultValue: defaultData.scaffoldBackgroundColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("bottomAppBarColor", this.bottomAppBarColor, {defaultValue: defaultData.bottomAppBarColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("cardColor", this.cardColor, {defaultValue: defaultData.cardColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("dividerColor", this.dividerColor, {defaultValue: defaultData.dividerColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("focusColor", this.focusColor, {defaultValue: defaultData.focusColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("hoverColor", this.hoverColor, {defaultValue: defaultData.hoverColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("highlightColor", this.highlightColor, {defaultValue: defaultData.highlightColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("splashColor", this.splashColor, {defaultValue: defaultData.splashColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("selectedRowColor", this.selectedRowColor, {defaultValue: defaultData.selectedRowColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("unselectedWidgetColor", this.unselectedWidgetColor, {defaultValue: defaultData.unselectedWidgetColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("disabledColor", this.disabledColor, {defaultValue: defaultData.disabledColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("buttonColor", this.buttonColor, {defaultValue: defaultData.buttonColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("secondaryHeaderColor", this.secondaryHeaderColor, {defaultValue: defaultData.secondaryHeaderColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("textSelectionColor", this.textSelectionColor, {defaultValue: defaultData.textSelectionColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("cursorColor", this.cursorColor, {defaultValue: defaultData.cursorColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("textSelectionHandleColor", this.textSelectionHandleColor, {defaultValue: defaultData.textSelectionHandleColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: defaultData.backgroundColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("dialogBackgroundColor", this.dialogBackgroundColor, {defaultValue: defaultData.dialogBackgroundColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("indicatorColor", this.indicatorColor, {defaultValue: defaultData.indicatorColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("hintColor", this.hintColor, {defaultValue: defaultData.hintColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("errorColor", this.errorColor, {defaultValue: defaultData.errorColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("toggleableActiveColor", this.toggleableActiveColor, {defaultValue: defaultData.toggleableActiveColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfButtonThemeData()).new("buttonTheme", this.buttonTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfToggleButtonsThemeData()).new("toggleButtonsTheme", this.toggleButtonsTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfTextTheme()).new("textTheme", this.textTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfTextTheme()).new("primaryTextTheme", this.primaryTextTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfTextTheme()).new("accentTextTheme", this.accentTextTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfInputDecorationTheme()).new("inputDecorationTheme", this.inputDecorationTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfIconThemeData()).new("iconTheme", this.iconTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfIconThemeData()).new("primaryIconTheme", this.primaryIconTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfIconThemeData()).new("accentIconTheme", this.accentIconTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfSliderThemeData()).new("sliderTheme", this.sliderTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfTabBarTheme()).new("tabBarTheme", this.tabBarTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfTooltipThemeData()).new("tooltipTheme", this.tooltipTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfCardTheme()).new("cardTheme", this.cardTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfChipThemeData()).new("chipTheme", this.chipTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialTapTargetSize()).new("materialTapTargetSize", this.materialTapTargetSize, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("applyElevationOverlayColor", this.applyElevationOverlayColor, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfPageTransitionsTheme()).new("pageTransitionsTheme", this.pageTransitionsTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfAppBarTheme()).new("appBarTheme", this.appBarTheme, {defaultValue: defaultData.appBarTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfScrollbarThemeData()).new("ScrollbarTheme", this.scrollbarTheme, {defaultValue: defaultData.scrollbarTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfBottomAppBarTheme()).new("bottomAppBarTheme", this.bottomAppBarTheme, {defaultValue: defaultData.bottomAppBarTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfColorScheme()).new("colorScheme", this.colorScheme, {defaultValue: defaultData.colorScheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfDialogTheme()).new("dialogTheme", this.dialogTheme, {defaultValue: defaultData.dialogTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfFloatingActionButtonThemeData()).new("floatingActionButtonThemeData", this.floatingActionButtonTheme, {defaultValue: defaultData.floatingActionButtonTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfNavigationRailThemeData()).new("navigationRailThemeData", this.navigationRailTheme, {defaultValue: defaultData.navigationRailTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfTypography()).new("typography", this.typography, {defaultValue: defaultData.typography, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfNoDefaultCupertinoThemeData()).new("cupertinoOverrideTheme", this.cupertinoOverrideTheme, {defaultValue: defaultData.cupertinoOverrideTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfSnackBarThemeData()).new("snackBarTheme", this.snackBarTheme, {defaultValue: defaultData.snackBarTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfBottomSheetThemeData()).new("bottomSheetTheme", this.bottomSheetTheme, {defaultValue: defaultData.bottomSheetTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfPopupMenuThemeData()).new("popupMenuTheme", this.popupMenuTheme, {defaultValue: defaultData.popupMenuTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialBannerThemeData()).new("bannerTheme", this.bannerTheme, {defaultValue: defaultData.bannerTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfDividerThemeData()).new("dividerTheme", this.dividerTheme, {defaultValue: defaultData.dividerTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfButtonBarThemeData()).new("buttonBarTheme", this.buttonBarTheme, {defaultValue: defaultData.buttonBarTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfTimePickerThemeData()).new("timePickerTheme", this.timePickerTheme, {defaultValue: defaultData.timePickerTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfTextSelectionThemeData()).new("textSelectionTheme", this.textSelectionTheme, {defaultValue: defaultData.textSelectionTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfTextSelectionThemeData()).new("textSelectionTheme", this.textSelectionTheme, {defaultValue: defaultData.textSelectionTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfBottomNavigationBarThemeData()).new("bottomNavigationBarTheme", this.bottomNavigationBarTheme, {defaultValue: defaultData.bottomNavigationBarTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfTextButtonThemeData()).new("textButtonTheme", this.textButtonTheme, {defaultValue: defaultData.textButtonTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfElevatedButtonThemeData()).new("elevatedButtonTheme", this.elevatedButtonTheme, {defaultValue: defaultData.elevatedButtonTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfOutlinedButtonThemeData()).new("outlinedButtonTheme", this.outlinedButtonTheme, {defaultValue: defaultData.outlinedButtonTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfDataTableThemeData()).new("dataTableTheme", this.dataTableTheme, {defaultValue: defaultData.dataTableTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfCheckboxThemeData()).new("checkboxTheme", this.checkboxTheme, {defaultValue: defaultData.checkboxTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfRadioThemeData()).new("radioTheme", this.radioTheme, {defaultValue: defaultData.radioTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfSwitchThemeData()).new("switchTheme", this.switchTheme, {defaultValue: defaultData.switchTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfProgressIndicatorThemeData()).new("progressIndicatorTheme", this.progressIndicatorTheme, {defaultValue: defaultData.progressIndicatorTheme, level: diagnostics.DiagnosticLevel.debug}));
    }
  };
  (theme_data.ThemeData.raw = function(opts) {
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    if (visualDensity == null) dart.nullFailed(I[102], 574, 19, "visualDensity");
    let primaryColor = opts && 'primaryColor' in opts ? opts.primaryColor : null;
    if (primaryColor == null) dart.nullFailed(I[102], 575, 19, "primaryColor");
    let primaryColorBrightness = opts && 'primaryColorBrightness' in opts ? opts.primaryColorBrightness : null;
    if (primaryColorBrightness == null) dart.nullFailed(I[102], 576, 19, "primaryColorBrightness");
    let primaryColorLight = opts && 'primaryColorLight' in opts ? opts.primaryColorLight : null;
    if (primaryColorLight == null) dart.nullFailed(I[102], 577, 19, "primaryColorLight");
    let primaryColorDark = opts && 'primaryColorDark' in opts ? opts.primaryColorDark : null;
    if (primaryColorDark == null) dart.nullFailed(I[102], 578, 19, "primaryColorDark");
    let canvasColor = opts && 'canvasColor' in opts ? opts.canvasColor : null;
    if (canvasColor == null) dart.nullFailed(I[102], 579, 19, "canvasColor");
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    if (shadowColor == null) dart.nullFailed(I[102], 580, 19, "shadowColor");
    let accentColor = opts && 'accentColor' in opts ? opts.accentColor : null;
    if (accentColor == null) dart.nullFailed(I[102], 587, 19, "accentColor");
    let accentColorBrightness = opts && 'accentColorBrightness' in opts ? opts.accentColorBrightness : null;
    if (accentColorBrightness == null) dart.nullFailed(I[102], 594, 19, "accentColorBrightness");
    let scaffoldBackgroundColor = opts && 'scaffoldBackgroundColor' in opts ? opts.scaffoldBackgroundColor : null;
    if (scaffoldBackgroundColor == null) dart.nullFailed(I[102], 595, 19, "scaffoldBackgroundColor");
    let bottomAppBarColor = opts && 'bottomAppBarColor' in opts ? opts.bottomAppBarColor : null;
    if (bottomAppBarColor == null) dart.nullFailed(I[102], 596, 19, "bottomAppBarColor");
    let cardColor = opts && 'cardColor' in opts ? opts.cardColor : null;
    if (cardColor == null) dart.nullFailed(I[102], 597, 19, "cardColor");
    let dividerColor = opts && 'dividerColor' in opts ? opts.dividerColor : null;
    if (dividerColor == null) dart.nullFailed(I[102], 598, 19, "dividerColor");
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    if (focusColor == null) dart.nullFailed(I[102], 599, 19, "focusColor");
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    if (hoverColor == null) dart.nullFailed(I[102], 600, 19, "hoverColor");
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    if (highlightColor == null) dart.nullFailed(I[102], 601, 19, "highlightColor");
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    if (splashColor == null) dart.nullFailed(I[102], 602, 19, "splashColor");
    let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
    if (splashFactory == null) dart.nullFailed(I[102], 603, 19, "splashFactory");
    let selectedRowColor = opts && 'selectedRowColor' in opts ? opts.selectedRowColor : null;
    if (selectedRowColor == null) dart.nullFailed(I[102], 604, 19, "selectedRowColor");
    let unselectedWidgetColor = opts && 'unselectedWidgetColor' in opts ? opts.unselectedWidgetColor : null;
    if (unselectedWidgetColor == null) dart.nullFailed(I[102], 605, 19, "unselectedWidgetColor");
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    if (disabledColor == null) dart.nullFailed(I[102], 606, 19, "disabledColor");
    let buttonTheme = opts && 'buttonTheme' in opts ? opts.buttonTheme : null;
    if (buttonTheme == null) dart.nullFailed(I[102], 607, 19, "buttonTheme");
    let buttonColor = opts && 'buttonColor' in opts ? opts.buttonColor : null;
    if (buttonColor == null) dart.nullFailed(I[102], 612, 19, "buttonColor");
    let toggleButtonsTheme = opts && 'toggleButtonsTheme' in opts ? opts.toggleButtonsTheme : null;
    if (toggleButtonsTheme == null) dart.nullFailed(I[102], 613, 19, "toggleButtonsTheme");
    let secondaryHeaderColor = opts && 'secondaryHeaderColor' in opts ? opts.secondaryHeaderColor : null;
    if (secondaryHeaderColor == null) dart.nullFailed(I[102], 614, 19, "secondaryHeaderColor");
    let textSelectionColor = opts && 'textSelectionColor' in opts ? opts.textSelectionColor : null;
    if (textSelectionColor == null) dart.nullFailed(I[102], 619, 19, "textSelectionColor");
    let cursorColor = opts && 'cursorColor' in opts ? opts.cursorColor : null;
    if (cursorColor == null) dart.nullFailed(I[102], 624, 19, "cursorColor");
    let textSelectionHandleColor = opts && 'textSelectionHandleColor' in opts ? opts.textSelectionHandleColor : null;
    if (textSelectionHandleColor == null) dart.nullFailed(I[102], 629, 19, "textSelectionHandleColor");
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    if (backgroundColor == null) dart.nullFailed(I[102], 630, 19, "backgroundColor");
    let dialogBackgroundColor = opts && 'dialogBackgroundColor' in opts ? opts.dialogBackgroundColor : null;
    if (dialogBackgroundColor == null) dart.nullFailed(I[102], 631, 19, "dialogBackgroundColor");
    let indicatorColor = opts && 'indicatorColor' in opts ? opts.indicatorColor : null;
    if (indicatorColor == null) dart.nullFailed(I[102], 632, 19, "indicatorColor");
    let hintColor = opts && 'hintColor' in opts ? opts.hintColor : null;
    if (hintColor == null) dart.nullFailed(I[102], 633, 19, "hintColor");
    let errorColor = opts && 'errorColor' in opts ? opts.errorColor : null;
    if (errorColor == null) dart.nullFailed(I[102], 634, 19, "errorColor");
    let toggleableActiveColor = opts && 'toggleableActiveColor' in opts ? opts.toggleableActiveColor : null;
    if (toggleableActiveColor == null) dart.nullFailed(I[102], 635, 19, "toggleableActiveColor");
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    if (textTheme == null) dart.nullFailed(I[102], 636, 19, "textTheme");
    let primaryTextTheme = opts && 'primaryTextTheme' in opts ? opts.primaryTextTheme : null;
    if (primaryTextTheme == null) dart.nullFailed(I[102], 637, 19, "primaryTextTheme");
    let accentTextTheme = opts && 'accentTextTheme' in opts ? opts.accentTextTheme : null;
    if (accentTextTheme == null) dart.nullFailed(I[102], 644, 19, "accentTextTheme");
    let inputDecorationTheme = opts && 'inputDecorationTheme' in opts ? opts.inputDecorationTheme : null;
    if (inputDecorationTheme == null) dart.nullFailed(I[102], 645, 19, "inputDecorationTheme");
    let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
    if (iconTheme == null) dart.nullFailed(I[102], 646, 19, "iconTheme");
    let primaryIconTheme = opts && 'primaryIconTheme' in opts ? opts.primaryIconTheme : null;
    if (primaryIconTheme == null) dart.nullFailed(I[102], 647, 19, "primaryIconTheme");
    let accentIconTheme = opts && 'accentIconTheme' in opts ? opts.accentIconTheme : null;
    if (accentIconTheme == null) dart.nullFailed(I[102], 654, 19, "accentIconTheme");
    let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
    if (sliderTheme == null) dart.nullFailed(I[102], 655, 19, "sliderTheme");
    let tabBarTheme = opts && 'tabBarTheme' in opts ? opts.tabBarTheme : null;
    if (tabBarTheme == null) dart.nullFailed(I[102], 656, 19, "tabBarTheme");
    let tooltipTheme = opts && 'tooltipTheme' in opts ? opts.tooltipTheme : null;
    if (tooltipTheme == null) dart.nullFailed(I[102], 657, 19, "tooltipTheme");
    let cardTheme = opts && 'cardTheme' in opts ? opts.cardTheme : null;
    if (cardTheme == null) dart.nullFailed(I[102], 658, 19, "cardTheme");
    let chipTheme = opts && 'chipTheme' in opts ? opts.chipTheme : null;
    if (chipTheme == null) dart.nullFailed(I[102], 659, 19, "chipTheme");
    let platform = opts && 'platform' in opts ? opts.platform : null;
    if (platform == null) dart.nullFailed(I[102], 660, 19, "platform");
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    if (materialTapTargetSize == null) dart.nullFailed(I[102], 661, 19, "materialTapTargetSize");
    let applyElevationOverlayColor = opts && 'applyElevationOverlayColor' in opts ? opts.applyElevationOverlayColor : null;
    if (applyElevationOverlayColor == null) dart.nullFailed(I[102], 662, 19, "applyElevationOverlayColor");
    let pageTransitionsTheme = opts && 'pageTransitionsTheme' in opts ? opts.pageTransitionsTheme : null;
    if (pageTransitionsTheme == null) dart.nullFailed(I[102], 663, 19, "pageTransitionsTheme");
    let appBarTheme = opts && 'appBarTheme' in opts ? opts.appBarTheme : null;
    if (appBarTheme == null) dart.nullFailed(I[102], 664, 19, "appBarTheme");
    let scrollbarTheme = opts && 'scrollbarTheme' in opts ? opts.scrollbarTheme : null;
    if (scrollbarTheme == null) dart.nullFailed(I[102], 665, 19, "scrollbarTheme");
    let bottomAppBarTheme = opts && 'bottomAppBarTheme' in opts ? opts.bottomAppBarTheme : null;
    if (bottomAppBarTheme == null) dart.nullFailed(I[102], 666, 19, "bottomAppBarTheme");
    let colorScheme = opts && 'colorScheme' in opts ? opts.colorScheme : null;
    if (colorScheme == null) dart.nullFailed(I[102], 667, 19, "colorScheme");
    let dialogTheme = opts && 'dialogTheme' in opts ? opts.dialogTheme : null;
    if (dialogTheme == null) dart.nullFailed(I[102], 668, 19, "dialogTheme");
    let floatingActionButtonTheme = opts && 'floatingActionButtonTheme' in opts ? opts.floatingActionButtonTheme : null;
    if (floatingActionButtonTheme == null) dart.nullFailed(I[102], 669, 19, "floatingActionButtonTheme");
    let navigationRailTheme = opts && 'navigationRailTheme' in opts ? opts.navigationRailTheme : null;
    if (navigationRailTheme == null) dart.nullFailed(I[102], 670, 19, "navigationRailTheme");
    let typography = opts && 'typography' in opts ? opts.typography : null;
    if (typography == null) dart.nullFailed(I[102], 671, 19, "typography");
    let cupertinoOverrideTheme = opts && 'cupertinoOverrideTheme' in opts ? opts.cupertinoOverrideTheme : null;
    let snackBarTheme = opts && 'snackBarTheme' in opts ? opts.snackBarTheme : null;
    if (snackBarTheme == null) dart.nullFailed(I[102], 673, 19, "snackBarTheme");
    let bottomSheetTheme = opts && 'bottomSheetTheme' in opts ? opts.bottomSheetTheme : null;
    if (bottomSheetTheme == null) dart.nullFailed(I[102], 674, 19, "bottomSheetTheme");
    let popupMenuTheme = opts && 'popupMenuTheme' in opts ? opts.popupMenuTheme : null;
    if (popupMenuTheme == null) dart.nullFailed(I[102], 675, 19, "popupMenuTheme");
    let bannerTheme = opts && 'bannerTheme' in opts ? opts.bannerTheme : null;
    if (bannerTheme == null) dart.nullFailed(I[102], 676, 19, "bannerTheme");
    let dividerTheme = opts && 'dividerTheme' in opts ? opts.dividerTheme : null;
    if (dividerTheme == null) dart.nullFailed(I[102], 677, 19, "dividerTheme");
    let buttonBarTheme = opts && 'buttonBarTheme' in opts ? opts.buttonBarTheme : null;
    if (buttonBarTheme == null) dart.nullFailed(I[102], 678, 19, "buttonBarTheme");
    let bottomNavigationBarTheme = opts && 'bottomNavigationBarTheme' in opts ? opts.bottomNavigationBarTheme : null;
    if (bottomNavigationBarTheme == null) dart.nullFailed(I[102], 679, 19, "bottomNavigationBarTheme");
    let timePickerTheme = opts && 'timePickerTheme' in opts ? opts.timePickerTheme : null;
    if (timePickerTheme == null) dart.nullFailed(I[102], 680, 19, "timePickerTheme");
    let textButtonTheme = opts && 'textButtonTheme' in opts ? opts.textButtonTheme : null;
    if (textButtonTheme == null) dart.nullFailed(I[102], 681, 19, "textButtonTheme");
    let elevatedButtonTheme = opts && 'elevatedButtonTheme' in opts ? opts.elevatedButtonTheme : null;
    if (elevatedButtonTheme == null) dart.nullFailed(I[102], 682, 19, "elevatedButtonTheme");
    let outlinedButtonTheme = opts && 'outlinedButtonTheme' in opts ? opts.outlinedButtonTheme : null;
    if (outlinedButtonTheme == null) dart.nullFailed(I[102], 683, 19, "outlinedButtonTheme");
    let textSelectionTheme = opts && 'textSelectionTheme' in opts ? opts.textSelectionTheme : null;
    if (textSelectionTheme == null) dart.nullFailed(I[102], 684, 19, "textSelectionTheme");
    let dataTableTheme = opts && 'dataTableTheme' in opts ? opts.dataTableTheme : null;
    if (dataTableTheme == null) dart.nullFailed(I[102], 685, 19, "dataTableTheme");
    let checkboxTheme = opts && 'checkboxTheme' in opts ? opts.checkboxTheme : null;
    if (checkboxTheme == null) dart.nullFailed(I[102], 686, 19, "checkboxTheme");
    let radioTheme = opts && 'radioTheme' in opts ? opts.radioTheme : null;
    if (radioTheme == null) dart.nullFailed(I[102], 687, 19, "radioTheme");
    let switchTheme = opts && 'switchTheme' in opts ? opts.switchTheme : null;
    if (switchTheme == null) dart.nullFailed(I[102], 688, 19, "switchTheme");
    let progressIndicatorTheme = opts && 'progressIndicatorTheme' in opts ? opts.progressIndicatorTheme : null;
    if (progressIndicatorTheme == null) dart.nullFailed(I[102], 689, 19, "progressIndicatorTheme");
    let fixTextFieldOutlineLabel = opts && 'fixTextFieldOutlineLabel' in opts ? opts.fixTextFieldOutlineLabel : null;
    if (fixTextFieldOutlineLabel == null) dart.nullFailed(I[102], 690, 19, "fixTextFieldOutlineLabel");
    let useTextSelectionTheme = opts && 'useTextSelectionTheme' in opts ? opts.useTextSelectionTheme : null;
    if (useTextSelectionTheme == null) dart.nullFailed(I[102], 695, 19, "useTextSelectionTheme");
    this[S$0.visualDensity$8] = visualDensity;
    this[S$0.primaryColor] = primaryColor;
    this[S$0.primaryColorBrightness] = primaryColorBrightness;
    this[S$0.primaryColorLight] = primaryColorLight;
    this[S$0.primaryColorDark] = primaryColorDark;
    this[S$0.canvasColor] = canvasColor;
    this[S$0.shadowColor$3] = shadowColor;
    this[S$0.accentColor] = accentColor;
    this[S$0.accentColorBrightness] = accentColorBrightness;
    this[S$0.scaffoldBackgroundColor] = scaffoldBackgroundColor;
    this[S$0.bottomAppBarColor] = bottomAppBarColor;
    this[S$0.cardColor] = cardColor;
    this[S$0.dividerColor] = dividerColor;
    this[S$0.focusColor$8] = focusColor;
    this[S$0.hoverColor$9] = hoverColor;
    this[S$0.highlightColor$5] = highlightColor;
    this[S$0.splashColor$6] = splashColor;
    this[S$0.splashFactory$1] = splashFactory;
    this[S$0.selectedRowColor] = selectedRowColor;
    this[S$0.unselectedWidgetColor] = unselectedWidgetColor;
    this[S$0.disabledColor$4] = disabledColor;
    this[S$0.buttonTheme] = buttonTheme;
    this[S$0.buttonColor] = buttonColor;
    this[S$0.toggleButtonsTheme] = toggleButtonsTheme;
    this[S$0.secondaryHeaderColor] = secondaryHeaderColor;
    this[S$0.textSelectionColor] = textSelectionColor;
    this[S$0.cursorColor$1] = cursorColor;
    this[S$0.textSelectionHandleColor] = textSelectionHandleColor;
    this[S$0.backgroundColor$12] = backgroundColor;
    this[S$0.dialogBackgroundColor] = dialogBackgroundColor;
    this[S$0.indicatorColor$1] = indicatorColor;
    this[S$0.hintColor] = hintColor;
    this[S$0.errorColor] = errorColor;
    this[S$0.toggleableActiveColor] = toggleableActiveColor;
    this[S$0.textTheme$3] = textTheme;
    this[S$0.primaryTextTheme] = primaryTextTheme;
    this[S$0.accentTextTheme] = accentTextTheme;
    this[S$0.inputDecorationTheme$1] = inputDecorationTheme;
    this[S$0.iconTheme] = iconTheme;
    this[S$0.primaryIconTheme] = primaryIconTheme;
    this[S$0.accentIconTheme] = accentIconTheme;
    this[S$0.sliderTheme] = sliderTheme;
    this[S$0.tabBarTheme] = tabBarTheme;
    this[S$0.tooltipTheme] = tooltipTheme;
    this[S$0.cardTheme] = cardTheme;
    this[S$0.chipTheme] = chipTheme;
    this[S$0.platform] = platform;
    this[S$0.materialTapTargetSize$7] = materialTapTargetSize;
    this[S$0.applyElevationOverlayColor] = applyElevationOverlayColor;
    this[S$0.pageTransitionsTheme] = pageTransitionsTheme;
    this[S$0.appBarTheme] = appBarTheme;
    this[S$0.scrollbarTheme] = scrollbarTheme;
    this[S$0.bottomAppBarTheme] = bottomAppBarTheme;
    this[S$0.colorScheme$1] = colorScheme;
    this[S$0.dialogTheme] = dialogTheme;
    this[S$0.floatingActionButtonTheme] = floatingActionButtonTheme;
    this[S$0.navigationRailTheme] = navigationRailTheme;
    this[S$0.typography] = typography;
    this[S$0.cupertinoOverrideTheme] = cupertinoOverrideTheme;
    this[S$0.snackBarTheme] = snackBarTheme;
    this[S$0.bottomSheetTheme] = bottomSheetTheme;
    this[S$0.popupMenuTheme] = popupMenuTheme;
    this[S$0.bannerTheme] = bannerTheme;
    this[S$0.dividerTheme] = dividerTheme;
    this[S$0.buttonBarTheme] = buttonBarTheme;
    this[S$0.bottomNavigationBarTheme] = bottomNavigationBarTheme;
    this[S$0.timePickerTheme] = timePickerTheme;
    this[S$0.textButtonTheme] = textButtonTheme;
    this[S$0.elevatedButtonTheme] = elevatedButtonTheme;
    this[S$0.outlinedButtonTheme] = outlinedButtonTheme;
    this[S$0.textSelectionTheme] = textSelectionTheme;
    this[S$0.dataTableTheme] = dataTableTheme;
    this[S$0.checkboxTheme] = checkboxTheme;
    this[S$0.radioTheme] = radioTheme;
    this[S$0.switchTheme] = switchTheme;
    this[S$0.progressIndicatorTheme] = progressIndicatorTheme;
    this[S$0.fixTextFieldOutlineLabel$1] = fixTextFieldOutlineLabel;
    this[S$0.useTextSelectionTheme] = useTextSelectionTheme;
    if (!(visualDensity != null)) dart.assertFailed(null, I[102], 696, 15, "visualDensity != null");
    if (!(primaryColor != null)) dart.assertFailed(null, I[102], 697, 15, "primaryColor != null");
    if (!(primaryColorBrightness != null)) dart.assertFailed(null, I[102], 698, 15, "primaryColorBrightness != null");
    if (!(primaryColorLight != null)) dart.assertFailed(null, I[102], 699, 15, "primaryColorLight != null");
    if (!(primaryColorDark != null)) dart.assertFailed(null, I[102], 700, 15, "primaryColorDark != null");
    if (!(accentColor != null)) dart.assertFailed(null, I[102], 701, 15, "accentColor != null");
    if (!(accentColorBrightness != null)) dart.assertFailed(null, I[102], 702, 15, "accentColorBrightness != null");
    if (!(canvasColor != null)) dart.assertFailed(null, I[102], 703, 15, "canvasColor != null");
    if (!(shadowColor != null)) dart.assertFailed(null, I[102], 704, 15, "shadowColor != null");
    if (!(scaffoldBackgroundColor != null)) dart.assertFailed(null, I[102], 705, 15, "scaffoldBackgroundColor != null");
    if (!(bottomAppBarColor != null)) dart.assertFailed(null, I[102], 706, 15, "bottomAppBarColor != null");
    if (!(cardColor != null)) dart.assertFailed(null, I[102], 707, 15, "cardColor != null");
    if (!(dividerColor != null)) dart.assertFailed(null, I[102], 708, 15, "dividerColor != null");
    if (!(focusColor != null)) dart.assertFailed(null, I[102], 709, 15, "focusColor != null");
    if (!(hoverColor != null)) dart.assertFailed(null, I[102], 710, 15, "hoverColor != null");
    if (!(highlightColor != null)) dart.assertFailed(null, I[102], 711, 15, "highlightColor != null");
    if (!(splashColor != null)) dart.assertFailed(null, I[102], 712, 15, "splashColor != null");
    if (!(splashFactory != null)) dart.assertFailed(null, I[102], 713, 15, "splashFactory != null");
    if (!(selectedRowColor != null)) dart.assertFailed(null, I[102], 714, 15, "selectedRowColor != null");
    if (!(unselectedWidgetColor != null)) dart.assertFailed(null, I[102], 715, 15, "unselectedWidgetColor != null");
    if (!(disabledColor != null)) dart.assertFailed(null, I[102], 716, 15, "disabledColor != null");
    if (!(toggleableActiveColor != null)) dart.assertFailed(null, I[102], 717, 15, "toggleableActiveColor != null");
    if (!(buttonTheme != null)) dart.assertFailed(null, I[102], 718, 15, "buttonTheme != null");
    if (!(toggleButtonsTheme != null)) dart.assertFailed(null, I[102], 719, 15, "toggleButtonsTheme != null");
    if (!(secondaryHeaderColor != null)) dart.assertFailed(null, I[102], 720, 15, "secondaryHeaderColor != null");
    if (!(textSelectionColor != null)) dart.assertFailed(null, I[102], 721, 15, "textSelectionColor != null");
    if (!(cursorColor != null)) dart.assertFailed(null, I[102], 722, 15, "cursorColor != null");
    if (!(textSelectionHandleColor != null)) dart.assertFailed(null, I[102], 723, 15, "textSelectionHandleColor != null");
    if (!(backgroundColor != null)) dart.assertFailed(null, I[102], 724, 15, "backgroundColor != null");
    if (!(dialogBackgroundColor != null)) dart.assertFailed(null, I[102], 725, 15, "dialogBackgroundColor != null");
    if (!(indicatorColor != null)) dart.assertFailed(null, I[102], 726, 15, "indicatorColor != null");
    if (!(hintColor != null)) dart.assertFailed(null, I[102], 727, 15, "hintColor != null");
    if (!(errorColor != null)) dart.assertFailed(null, I[102], 728, 15, "errorColor != null");
    if (!(textTheme != null)) dart.assertFailed(null, I[102], 729, 15, "textTheme != null");
    if (!(primaryTextTheme != null)) dart.assertFailed(null, I[102], 730, 15, "primaryTextTheme != null");
    if (!(accentTextTheme != null)) dart.assertFailed(null, I[102], 731, 15, "accentTextTheme != null");
    if (!(inputDecorationTheme != null)) dart.assertFailed(null, I[102], 732, 15, "inputDecorationTheme != null");
    if (!(iconTheme != null)) dart.assertFailed(null, I[102], 733, 15, "iconTheme != null");
    if (!(primaryIconTheme != null)) dart.assertFailed(null, I[102], 734, 15, "primaryIconTheme != null");
    if (!(accentIconTheme != null)) dart.assertFailed(null, I[102], 735, 15, "accentIconTheme != null");
    if (!(sliderTheme != null)) dart.assertFailed(null, I[102], 736, 15, "sliderTheme != null");
    if (!(tabBarTheme != null)) dart.assertFailed(null, I[102], 737, 15, "tabBarTheme != null");
    if (!(tooltipTheme != null)) dart.assertFailed(null, I[102], 738, 15, "tooltipTheme != null");
    if (!(cardTheme != null)) dart.assertFailed(null, I[102], 739, 15, "cardTheme != null");
    if (!(chipTheme != null)) dart.assertFailed(null, I[102], 740, 15, "chipTheme != null");
    if (!(platform != null)) dart.assertFailed(null, I[102], 741, 15, "platform != null");
    if (!(materialTapTargetSize != null)) dart.assertFailed(null, I[102], 742, 15, "materialTapTargetSize != null");
    if (!(pageTransitionsTheme != null)) dart.assertFailed(null, I[102], 743, 15, "pageTransitionsTheme != null");
    if (!(appBarTheme != null)) dart.assertFailed(null, I[102], 744, 15, "appBarTheme != null");
    if (!(scrollbarTheme != null)) dart.assertFailed(null, I[102], 745, 15, "scrollbarTheme != null");
    if (!(bottomAppBarTheme != null)) dart.assertFailed(null, I[102], 746, 15, "bottomAppBarTheme != null");
    if (!(colorScheme != null)) dart.assertFailed(null, I[102], 747, 15, "colorScheme != null");
    if (!(dialogTheme != null)) dart.assertFailed(null, I[102], 748, 15, "dialogTheme != null");
    if (!(floatingActionButtonTheme != null)) dart.assertFailed(null, I[102], 749, 15, "floatingActionButtonTheme != null");
    if (!(navigationRailTheme != null)) dart.assertFailed(null, I[102], 750, 15, "navigationRailTheme != null");
    if (!(typography != null)) dart.assertFailed(null, I[102], 751, 15, "typography != null");
    if (!(snackBarTheme != null)) dart.assertFailed(null, I[102], 752, 15, "snackBarTheme != null");
    if (!(bottomSheetTheme != null)) dart.assertFailed(null, I[102], 753, 15, "bottomSheetTheme != null");
    if (!(popupMenuTheme != null)) dart.assertFailed(null, I[102], 754, 15, "popupMenuTheme != null");
    if (!(bannerTheme != null)) dart.assertFailed(null, I[102], 755, 15, "bannerTheme != null");
    if (!(dividerTheme != null)) dart.assertFailed(null, I[102], 756, 15, "dividerTheme != null");
    if (!(buttonBarTheme != null)) dart.assertFailed(null, I[102], 757, 15, "buttonBarTheme != null");
    if (!(bottomNavigationBarTheme != null)) dart.assertFailed(null, I[102], 758, 15, "bottomNavigationBarTheme != null");
    if (!(timePickerTheme != null)) dart.assertFailed(null, I[102], 759, 15, "timePickerTheme != null");
    if (!(textButtonTheme != null)) dart.assertFailed(null, I[102], 760, 15, "textButtonTheme != null");
    if (!(elevatedButtonTheme != null)) dart.assertFailed(null, I[102], 761, 15, "elevatedButtonTheme != null");
    if (!(outlinedButtonTheme != null)) dart.assertFailed(null, I[102], 762, 15, "outlinedButtonTheme != null");
    if (!(textSelectionTheme != null)) dart.assertFailed(null, I[102], 763, 15, "textSelectionTheme != null");
    if (!(dataTableTheme != null)) dart.assertFailed(null, I[102], 764, 15, "dataTableTheme != null");
    if (!(checkboxTheme != null)) dart.assertFailed(null, I[102], 765, 15, "checkboxTheme != null");
    if (!(radioTheme != null)) dart.assertFailed(null, I[102], 766, 15, "radioTheme != null");
    if (!(switchTheme != null)) dart.assertFailed(null, I[102], 767, 15, "switchTheme != null");
    if (!(progressIndicatorTheme != null)) dart.assertFailed(null, I[102], 768, 15, "progressIndicatorTheme != null");
    if (!(fixTextFieldOutlineLabel != null)) dart.assertFailed(null, I[102], 769, 15, "fixTextFieldOutlineLabel != null");
    if (!(useTextSelectionTheme != null)) dart.assertFailed(null, I[102], 770, 15, "useTextSelectionTheme != null");
    ;
  }).prototype = theme_data.ThemeData.prototype;
  dart.addTypeTests(theme_data.ThemeData);
  dart.addTypeCaches(theme_data.ThemeData);
  dart.setMethodSignature(theme_data.ThemeData, () => ({
    __proto__: dart.getMethods(theme_data.ThemeData.__proto__),
    copyWith: dart.fnType(theme_data.ThemeData, [], {accentColor: dart.nullable(ui.Color), accentColorBrightness: dart.nullable(ui.Brightness), accentIconTheme: dart.nullable(icon_theme_data.IconThemeData), accentTextTheme: dart.nullable(text_theme.TextTheme), appBarTheme: dart.nullable(app_bar_theme.AppBarTheme), applyElevationOverlayColor: dart.nullable(core.bool), backgroundColor: dart.nullable(ui.Color), bannerTheme: dart.nullable(banner_theme.MaterialBannerThemeData), bottomAppBarColor: dart.nullable(ui.Color), bottomAppBarTheme: dart.nullable(bottom_app_bar_theme.BottomAppBarTheme), bottomNavigationBarTheme: dart.nullable(bottom_navigation_bar_theme.BottomNavigationBarThemeData), bottomSheetTheme: dart.nullable(bottom_sheet_theme.BottomSheetThemeData), brightness: dart.nullable(ui.Brightness), buttonBarTheme: dart.nullable(button_bar_theme.ButtonBarThemeData), buttonColor: dart.nullable(ui.Color), buttonTheme: dart.nullable(button_theme.ButtonThemeData), canvasColor: dart.nullable(ui.Color), cardColor: dart.nullable(ui.Color), cardTheme: dart.nullable(card_theme.CardTheme), checkboxTheme: dart.nullable(checkbox_theme.CheckboxThemeData), chipTheme: dart.nullable(chip_theme.ChipThemeData), colorScheme: dart.nullable(color_scheme.ColorScheme), cupertinoOverrideTheme: dart.nullable(theme.NoDefaultCupertinoThemeData), cursorColor: dart.nullable(ui.Color), dataTableTheme: dart.nullable(data_table_theme.DataTableThemeData), dialogBackgroundColor: dart.nullable(ui.Color), dialogTheme: dart.nullable(dialog_theme.DialogTheme), disabledColor: dart.nullable(ui.Color), dividerColor: dart.nullable(ui.Color), dividerTheme: dart.nullable(divider_theme.DividerThemeData), elevatedButtonTheme: dart.nullable(elevated_button_theme.ElevatedButtonThemeData), errorColor: dart.nullable(ui.Color), fixTextFieldOutlineLabel: dart.nullable(core.bool), floatingActionButtonTheme: dart.nullable(floating_action_button_theme.FloatingActionButtonThemeData), focusColor: dart.nullable(ui.Color), highlightColor: dart.nullable(ui.Color), hintColor: dart.nullable(ui.Color), hoverColor: dart.nullable(ui.Color), iconTheme: dart.nullable(icon_theme_data.IconThemeData), indicatorColor: dart.nullable(ui.Color), inputDecorationTheme: dart.nullable(input_decorator.InputDecorationTheme), materialTapTargetSize: dart.nullable(theme_data.MaterialTapTargetSize), navigationRailTheme: dart.nullable(navigation_rail_theme.NavigationRailThemeData), outlinedButtonTheme: dart.nullable(outlined_button_theme.OutlinedButtonThemeData), pageTransitionsTheme: dart.nullable(page_transitions_theme.PageTransitionsTheme), platform: dart.nullable(platform$.TargetPlatform), popupMenuTheme: dart.nullable(popup_menu_theme.PopupMenuThemeData), primaryColor: dart.nullable(ui.Color), primaryColorBrightness: dart.nullable(ui.Brightness), primaryColorDark: dart.nullable(ui.Color), primaryColorLight: dart.nullable(ui.Color), primaryIconTheme: dart.nullable(icon_theme_data.IconThemeData), primaryTextTheme: dart.nullable(text_theme.TextTheme), progressIndicatorTheme: dart.nullable(progress_indicator_theme.ProgressIndicatorThemeData), radioTheme: dart.nullable(radio_theme.RadioThemeData), scaffoldBackgroundColor: dart.nullable(ui.Color), scrollbarTheme: dart.nullable(scrollbar_theme.ScrollbarThemeData), secondaryHeaderColor: dart.nullable(ui.Color), selectedRowColor: dart.nullable(ui.Color), shadowColor: dart.nullable(ui.Color), sliderTheme: dart.nullable(slider_theme.SliderThemeData), snackBarTheme: dart.nullable(snack_bar_theme.SnackBarThemeData), splashColor: dart.nullable(ui.Color), splashFactory: dart.nullable(ink_well.InteractiveInkFeatureFactory), switchTheme: dart.nullable(switch_theme.SwitchThemeData), tabBarTheme: dart.nullable(tab_bar_theme.TabBarTheme), textButtonTheme: dart.nullable(text_button_theme.TextButtonThemeData), textSelectionColor: dart.nullable(ui.Color), textSelectionHandleColor: dart.nullable(ui.Color), textSelectionTheme: dart.nullable(text_selection_theme.TextSelectionThemeData), textTheme: dart.nullable(text_theme.TextTheme), timePickerTheme: dart.nullable(time_picker_theme.TimePickerThemeData), toggleButtonsTheme: dart.nullable(toggle_buttons_theme.ToggleButtonsThemeData), toggleableActiveColor: dart.nullable(ui.Color), tooltipTheme: dart.nullable(tooltip_theme.TooltipThemeData), typography: dart.nullable(typography$.Typography), unselectedWidgetColor: dart.nullable(ui.Color), useTextSelectionTheme: dart.nullable(core.bool), visualDensity: dart.nullable(theme_data.VisualDensity)}, {})
  }));
  dart.setGetterSignature(theme_data.ThemeData, () => ({
    __proto__: dart.getGetters(theme_data.ThemeData.__proto__),
    brightness: ui.Brightness
  }));
  dart.setLibraryUri(theme_data.ThemeData, I[103]);
  dart.setFieldSignature(theme_data.ThemeData, () => ({
    __proto__: dart.getFields(theme_data.ThemeData.__proto__),
    visualDensity: dart.finalFieldType(theme_data.VisualDensity),
    primaryColor: dart.finalFieldType(ui.Color),
    primaryColorBrightness: dart.finalFieldType(ui.Brightness),
    primaryColorLight: dart.finalFieldType(ui.Color),
    primaryColorDark: dart.finalFieldType(ui.Color),
    canvasColor: dart.finalFieldType(ui.Color),
    shadowColor: dart.finalFieldType(ui.Color),
    accentColor: dart.finalFieldType(ui.Color),
    accentColorBrightness: dart.finalFieldType(ui.Brightness),
    scaffoldBackgroundColor: dart.finalFieldType(ui.Color),
    bottomAppBarColor: dart.finalFieldType(ui.Color),
    cardColor: dart.finalFieldType(ui.Color),
    dividerColor: dart.finalFieldType(ui.Color),
    focusColor: dart.finalFieldType(ui.Color),
    hoverColor: dart.finalFieldType(ui.Color),
    highlightColor: dart.finalFieldType(ui.Color),
    splashColor: dart.finalFieldType(ui.Color),
    splashFactory: dart.finalFieldType(ink_well.InteractiveInkFeatureFactory),
    selectedRowColor: dart.finalFieldType(ui.Color),
    unselectedWidgetColor: dart.finalFieldType(ui.Color),
    disabledColor: dart.finalFieldType(ui.Color),
    buttonTheme: dart.finalFieldType(button_theme.ButtonThemeData),
    toggleButtonsTheme: dart.finalFieldType(toggle_buttons_theme.ToggleButtonsThemeData),
    buttonColor: dart.finalFieldType(ui.Color),
    secondaryHeaderColor: dart.finalFieldType(ui.Color),
    textSelectionColor: dart.finalFieldType(ui.Color),
    cursorColor: dart.finalFieldType(ui.Color),
    textSelectionHandleColor: dart.finalFieldType(ui.Color),
    backgroundColor: dart.finalFieldType(ui.Color),
    dialogBackgroundColor: dart.finalFieldType(ui.Color),
    indicatorColor: dart.finalFieldType(ui.Color),
    hintColor: dart.finalFieldType(ui.Color),
    errorColor: dart.finalFieldType(ui.Color),
    toggleableActiveColor: dart.finalFieldType(ui.Color),
    textTheme: dart.finalFieldType(text_theme.TextTheme),
    primaryTextTheme: dart.finalFieldType(text_theme.TextTheme),
    accentTextTheme: dart.finalFieldType(text_theme.TextTheme),
    inputDecorationTheme: dart.finalFieldType(input_decorator.InputDecorationTheme),
    iconTheme: dart.finalFieldType(icon_theme_data.IconThemeData),
    primaryIconTheme: dart.finalFieldType(icon_theme_data.IconThemeData),
    accentIconTheme: dart.finalFieldType(icon_theme_data.IconThemeData),
    sliderTheme: dart.finalFieldType(slider_theme.SliderThemeData),
    tabBarTheme: dart.finalFieldType(tab_bar_theme.TabBarTheme),
    tooltipTheme: dart.finalFieldType(tooltip_theme.TooltipThemeData),
    cardTheme: dart.finalFieldType(card_theme.CardTheme),
    chipTheme: dart.finalFieldType(chip_theme.ChipThemeData),
    platform: dart.finalFieldType(platform$.TargetPlatform),
    materialTapTargetSize: dart.finalFieldType(theme_data.MaterialTapTargetSize),
    applyElevationOverlayColor: dart.finalFieldType(core.bool),
    pageTransitionsTheme: dart.finalFieldType(page_transitions_theme.PageTransitionsTheme),
    appBarTheme: dart.finalFieldType(app_bar_theme.AppBarTheme),
    scrollbarTheme: dart.finalFieldType(scrollbar_theme.ScrollbarThemeData),
    bottomAppBarTheme: dart.finalFieldType(bottom_app_bar_theme.BottomAppBarTheme),
    colorScheme: dart.finalFieldType(color_scheme.ColorScheme),
    snackBarTheme: dart.finalFieldType(snack_bar_theme.SnackBarThemeData),
    dialogTheme: dart.finalFieldType(dialog_theme.DialogTheme),
    floatingActionButtonTheme: dart.finalFieldType(floating_action_button_theme.FloatingActionButtonThemeData),
    navigationRailTheme: dart.finalFieldType(navigation_rail_theme.NavigationRailThemeData),
    typography: dart.finalFieldType(typography$.Typography),
    cupertinoOverrideTheme: dart.finalFieldType(dart.nullable(theme.NoDefaultCupertinoThemeData)),
    bottomSheetTheme: dart.finalFieldType(bottom_sheet_theme.BottomSheetThemeData),
    popupMenuTheme: dart.finalFieldType(popup_menu_theme.PopupMenuThemeData),
    bannerTheme: dart.finalFieldType(banner_theme.MaterialBannerThemeData),
    dividerTheme: dart.finalFieldType(divider_theme.DividerThemeData),
    buttonBarTheme: dart.finalFieldType(button_bar_theme.ButtonBarThemeData),
    bottomNavigationBarTheme: dart.finalFieldType(bottom_navigation_bar_theme.BottomNavigationBarThemeData),
    timePickerTheme: dart.finalFieldType(time_picker_theme.TimePickerThemeData),
    textButtonTheme: dart.finalFieldType(text_button_theme.TextButtonThemeData),
    elevatedButtonTheme: dart.finalFieldType(elevated_button_theme.ElevatedButtonThemeData),
    outlinedButtonTheme: dart.finalFieldType(outlined_button_theme.OutlinedButtonThemeData),
    textSelectionTheme: dart.finalFieldType(text_selection_theme.TextSelectionThemeData),
    dataTableTheme: dart.finalFieldType(data_table_theme.DataTableThemeData),
    checkboxTheme: dart.finalFieldType(checkbox_theme.CheckboxThemeData),
    radioTheme: dart.finalFieldType(radio_theme.RadioThemeData),
    switchTheme: dart.finalFieldType(switch_theme.SwitchThemeData),
    progressIndicatorTheme: dart.finalFieldType(progress_indicator_theme.ProgressIndicatorThemeData),
    fixTextFieldOutlineLabel: dart.finalFieldType(core.bool),
    useTextSelectionTheme: dart.finalFieldType(core.bool)
  }));
  dart.defineExtensionMethods(theme_data.ThemeData, ['_equals']);
  dart.defineExtensionAccessors(theme_data.ThemeData, ['hashCode']);
  dart.defineLazy(theme_data.ThemeData, {
    /*theme_data.ThemeData._localizedThemeDataCacheSize*/get _localizedThemeDataCacheSize() {
      return 5;
    },
    /*theme_data.ThemeData._localizedThemeDataCache*/get _localizedThemeDataCache() {
      return new (T$._FifoCacheOf_IdentityThemeDataCacheKey$ThemeData()).new(5);
    }
  }, false);
  theme_data.MaterialBasedCupertinoThemeData = class MaterialBasedCupertinoThemeData extends theme.CupertinoThemeData {
    get brightness() {
      let t50;
      t50 = this[S$0._cupertinoOverrideTheme].brightness;
      return t50 == null ? this[S$0._materialTheme].brightness : t50;
    }
    get primaryColor() {
      let t50;
      t50 = this[S$0._cupertinoOverrideTheme].primaryColor;
      return t50 == null ? this[S$0._materialTheme].colorScheme.primary : t50;
    }
    get primaryContrastingColor() {
      let t50;
      t50 = this[S$0._cupertinoOverrideTheme].primaryContrastingColor;
      return t50 == null ? this[S$0._materialTheme].colorScheme.onPrimary : t50;
    }
    get scaffoldBackgroundColor() {
      let t50;
      t50 = this[S$0._cupertinoOverrideTheme].scaffoldBackgroundColor;
      return t50 == null ? this[S$0._materialTheme].scaffoldBackgroundColor : t50;
    }
    copyWith(opts) {
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      let primaryColor = opts && 'primaryColor' in opts ? opts.primaryColor : null;
      let primaryContrastingColor = opts && 'primaryContrastingColor' in opts ? opts.primaryContrastingColor : null;
      let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
      let barBackgroundColor = opts && 'barBackgroundColor' in opts ? opts.barBackgroundColor : null;
      let scaffoldBackgroundColor = opts && 'scaffoldBackgroundColor' in opts ? opts.scaffoldBackgroundColor : null;
      return new theme_data.MaterialBasedCupertinoThemeData.__(this[S$0._materialTheme], this[S$0._cupertinoOverrideTheme].copyWith({brightness: brightness, primaryColor: primaryColor, primaryContrastingColor: primaryContrastingColor, textTheme: textTheme, barBackgroundColor: barBackgroundColor, scaffoldBackgroundColor: scaffoldBackgroundColor}));
    }
    resolveFrom(context) {
      if (context == null) dart.nullFailed(I[102], 2083, 47, "context");
      return new theme_data.MaterialBasedCupertinoThemeData.__(this[S$0._materialTheme], this[S$0._cupertinoOverrideTheme].resolveFrom(context));
    }
  };
  (theme_data.MaterialBasedCupertinoThemeData.new = function(opts) {
    let t50;
    let materialTheme = opts && 'materialTheme' in opts ? opts.materialTheme : null;
    if (materialTheme == null) dart.nullFailed(I[102], 2011, 24, "materialTheme");
    theme_data.MaterialBasedCupertinoThemeData.__.call(this, materialTheme, (t50 = materialTheme.cupertinoOverrideTheme, t50 == null ? C[604] || CT.C604 : t50).noDefault());
  }).prototype = theme_data.MaterialBasedCupertinoThemeData.prototype;
  (theme_data.MaterialBasedCupertinoThemeData.__ = function(_materialTheme, _cupertinoOverrideTheme) {
    if (_materialTheme == null) dart.nullFailed(I[102], 2018, 10, "_materialTheme");
    if (_cupertinoOverrideTheme == null) dart.nullFailed(I[102], 2019, 10, "_cupertinoOverrideTheme");
    this[S$0._materialTheme] = _materialTheme;
    this[S$0._cupertinoOverrideTheme] = _cupertinoOverrideTheme;
    if (!(_materialTheme != null)) dart.assertFailed(null, I[102], 2020, 14, "_materialTheme != null");
    if (!(_cupertinoOverrideTheme != null)) dart.assertFailed(null, I[102], 2021, 14, "_cupertinoOverrideTheme != null");
    theme_data.MaterialBasedCupertinoThemeData.__proto__.raw.call(this, _cupertinoOverrideTheme.brightness, _cupertinoOverrideTheme.primaryColor, _cupertinoOverrideTheme.primaryContrastingColor, _cupertinoOverrideTheme.textTheme, _cupertinoOverrideTheme.barBackgroundColor, _cupertinoOverrideTheme.scaffoldBackgroundColor);
    ;
  }).prototype = theme_data.MaterialBasedCupertinoThemeData.prototype;
  dart.addTypeTests(theme_data.MaterialBasedCupertinoThemeData);
  dart.addTypeCaches(theme_data.MaterialBasedCupertinoThemeData);
  dart.setMethodSignature(theme_data.MaterialBasedCupertinoThemeData, () => ({
    __proto__: dart.getMethods(theme_data.MaterialBasedCupertinoThemeData.__proto__),
    copyWith: dart.fnType(theme_data.MaterialBasedCupertinoThemeData, [], {barBackgroundColor: dart.nullable(ui.Color), brightness: dart.nullable(ui.Brightness), primaryColor: dart.nullable(ui.Color), primaryContrastingColor: dart.nullable(ui.Color), scaffoldBackgroundColor: dart.nullable(ui.Color), textTheme: dart.nullable(text_theme$.CupertinoTextThemeData)}, {})
  }));
  dart.setGetterSignature(theme_data.MaterialBasedCupertinoThemeData, () => ({
    __proto__: dart.getGetters(theme_data.MaterialBasedCupertinoThemeData.__proto__),
    brightness: ui.Brightness
  }));
  dart.setLibraryUri(theme_data.MaterialBasedCupertinoThemeData, I[103]);
  dart.setFieldSignature(theme_data.MaterialBasedCupertinoThemeData, () => ({
    __proto__: dart.getFields(theme_data.MaterialBasedCupertinoThemeData.__proto__),
    [S$0._materialTheme]: dart.finalFieldType(theme_data.ThemeData),
    [S$0._cupertinoOverrideTheme]: dart.finalFieldType(theme.NoDefaultCupertinoThemeData)
  }));
  theme_data._IdentityThemeDataCacheKey = class _IdentityThemeDataCacheKey extends core.Object {
    get baseTheme() {
      return this[S$0.baseTheme];
    }
    set baseTheme(value) {
      super.baseTheme = value;
    }
    get localTextGeometry() {
      return this[S$0.localTextGeometry];
    }
    set localTextGeometry(value) {
      super.localTextGeometry = value;
    }
    get hashCode() {
      return (dart.notNull(core.identityHashCode(this.baseTheme)) ^ dart.notNull(core.identityHashCode(this.localTextGeometry))) >>> 0;
    }
    _equals(other) {
      if (other == null) return false;
      return theme_data._IdentityThemeDataCacheKey.is(other) && other.baseTheme == this.baseTheme && other.localTextGeometry == this.localTextGeometry;
    }
  };
  (theme_data._IdentityThemeDataCacheKey.new = function(baseTheme, localTextGeometry) {
    if (baseTheme == null) dart.nullFailed(I[102], 2095, 41, "baseTheme");
    if (localTextGeometry == null) dart.nullFailed(I[102], 2095, 57, "localTextGeometry");
    this[S$0.baseTheme] = baseTheme;
    this[S$0.localTextGeometry] = localTextGeometry;
    ;
  }).prototype = theme_data._IdentityThemeDataCacheKey.prototype;
  dart.addTypeTests(theme_data._IdentityThemeDataCacheKey);
  dart.addTypeCaches(theme_data._IdentityThemeDataCacheKey);
  dart.setLibraryUri(theme_data._IdentityThemeDataCacheKey, I[103]);
  dart.setFieldSignature(theme_data._IdentityThemeDataCacheKey, () => ({
    __proto__: dart.getFields(theme_data._IdentityThemeDataCacheKey.__proto__),
    baseTheme: dart.finalFieldType(theme_data.ThemeData),
    localTextGeometry: dart.finalFieldType(text_theme.TextTheme)
  }));
  dart.defineExtensionMethods(theme_data._IdentityThemeDataCacheKey, ['_equals']);
  dart.defineExtensionAccessors(theme_data._IdentityThemeDataCacheKey, ['hashCode']);
  const _is__FifoCache_default = Symbol('_is__FifoCache_default');
  theme_data._FifoCache$ = dart.generic((K, V) => {
    var __t$LinkedMapOfK$V = () => (__t$LinkedMapOfK$V = dart.constFn(_js_helper.LinkedMap$(K, V)))();
    var __t$VoidToV = () => (__t$VoidToV = dart.constFn(dart.fnType(V, [])))();
    class _FifoCache extends core.Object {
      putIfAbsent(key, loader) {
        let t52, t51, t50;
        K.as(key);
        __t$VoidToV().as(loader);
        if (loader == null) dart.nullFailed(I[102], 2138, 37, "loader");
        if (!(key != null)) dart.assertFailed(null, I[102], 2139, 12, "key != null");
        if (!(loader != null)) dart.assertFailed(null, I[102], 2140, 12, "loader != null");
        let result = this[S$0._cache][S.$_get](key);
        if (result != null) return result;
        if (this[S$0._cache][S.$length] == this[S$0._maximumSize]) this[S$0._cache][S$.$remove](this[S$0._cache][S$.$keys][S$0.$first]);
        t50 = this[S$0._cache];
        t51 = key;
        t52 = loader();
        t50[S.$_set](t51, t52);
        return t52;
      }
    }
    (_FifoCache.new = function(_maximumSize) {
      if (_maximumSize == null) dart.nullFailed(I[102], 2121, 19, "_maximumSize");
      this[S$0._cache] = new (__t$LinkedMapOfK$V()).new();
      this[S$0._maximumSize] = _maximumSize;
      if (!(_maximumSize != null && dart.notNull(_maximumSize) > 0)) dart.assertFailed(null, I[102], 2121, 42, "_maximumSize != null && _maximumSize > 0");
      ;
    }).prototype = _FifoCache.prototype;
    dart.addTypeTests(_FifoCache);
    _FifoCache.prototype[_is__FifoCache_default] = true;
    dart.addTypeCaches(_FifoCache);
    dart.setMethodSignature(_FifoCache, () => ({
      __proto__: dart.getMethods(_FifoCache.__proto__),
      putIfAbsent: dart.fnType(V, [dart.nullable(core.Object), dart.nullable(core.Object)])
    }));
    dart.setLibraryUri(_FifoCache, I[103]);
    dart.setFieldSignature(_FifoCache, () => ({
      __proto__: dart.getFields(_FifoCache.__proto__),
      [S$0._cache]: dart.finalFieldType(core.Map$(K, V)),
      [S$0._maximumSize]: dart.finalFieldType(core.int)
    }));
    return _FifoCache;
  });
  theme_data._FifoCache = theme_data._FifoCache$();
  dart.addTypeTests(theme_data._FifoCache, _is__FifoCache_default);
  const Object_Diagnosticable$36$28 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$28.new = function() {
  }).prototype = Object_Diagnosticable$36$28.prototype;
  dart.applyMixin(Object_Diagnosticable$36$28, diagnostics.Diagnosticable);
  theme_data.VisualDensity = class VisualDensity extends Object_Diagnosticable$36$28 {
    get horizontal() {
      return this[S$0.horizontal];
    }
    set horizontal(value) {
      super.horizontal = value;
    }
    get vertical() {
      return this[S$0.vertical];
    }
    set vertical(value) {
      super.vertical = value;
    }
    static get adaptivePlatformDensity() {
      switch (platform$.defaultTargetPlatform) {
        case C[11] || CT.C11:
        case C[15] || CT.C15:
        case C[12] || CT.C12:
        {
          break;
        }
        case C[13] || CT.C13:
        case C[16] || CT.C16:
        case C[14] || CT.C14:
        {
          return theme_data.VisualDensity.compact;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      return theme_data.VisualDensity.standard;
    }
    copyWith(opts) {
      let t50, t50$;
      let horizontal = opts && 'horizontal' in opts ? opts.horizontal : null;
      let vertical = opts && 'vertical' in opts ? opts.vertical : null;
      return new theme_data.VisualDensity.new({horizontal: (t50 = horizontal, t50 == null ? this.horizontal : t50), vertical: (t50$ = vertical, t50$ == null ? this.vertical : t50$)});
    }
    get baseSizeAdjustment() {
      return new ui.Offset.new(this.horizontal, this.vertical)['*'](4);
    }
    static lerp(a, b, t) {
      if (a == null) dart.nullFailed(I[102], 2316, 43, "a");
      if (b == null) dart.nullFailed(I[102], 2316, 60, "b");
      if (t == null) dart.nullFailed(I[102], 2316, 70, "t");
      return new theme_data.VisualDensity.new({horizontal: dart.nullCheck(ui.lerpDouble(a.horizontal, b.horizontal, t)), vertical: dart.nullCheck(ui.lerpDouble(a.horizontal, b.horizontal, t))});
    }
    effectiveConstraints(constraints) {
      if (constraints == null) dart.nullFailed(I[102], 2328, 54, "constraints");
      if (!(constraints != null && dart.test(constraints.debugAssertIsValid()))) dart.assertFailed(null, I[102], 2329, 12, "constraints != null && constraints.debugAssertIsValid()");
      return constraints.copyWith({minWidth: (dart.notNull(constraints.minWidth) + dart.notNull(this.baseSizeAdjustment.dx))[S.$clamp](0.0, constraints.maxWidth), minHeight: (dart.notNull(constraints.minHeight) + dart.notNull(this.baseSizeAdjustment.dy))[S.$clamp](0.0, constraints.maxHeight)});
    }
    _equals(other) {
      if (other == null) return false;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) {
        return false;
      }
      return theme_data.VisualDensity.is(other) && other.horizontal == this.horizontal && other.vertical == this.vertical;
    }
    get hashCode() {
      return ui.hashValues(this.horizontal, this.vertical);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[102], 2350, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new diagnostics.DoubleProperty.new("horizontal", this.horizontal, {defaultValue: 0.0}));
      properties.add(new diagnostics.DoubleProperty.new("vertical", this.vertical, {defaultValue: 0.0}));
    }
    toStringShort() {
      return dart.str(super.toStringShort()) + "(h: " + dart.str(debug$.debugFormatDouble(this.horizontal)) + ", v: " + dart.str(debug$.debugFormatDouble(this.vertical)) + ")";
    }
  };
  (theme_data.VisualDensity.new = function(opts) {
    let horizontal = opts && 'horizontal' in opts ? opts.horizontal : 0;
    if (horizontal == null) dart.nullFailed(I[102], 2195, 10, "horizontal");
    let vertical = opts && 'vertical' in opts ? opts.vertical : 0;
    if (vertical == null) dart.nullFailed(I[102], 2196, 10, "vertical");
    this[S$0.horizontal] = horizontal;
    this[S$0.vertical] = vertical;
    if (!(horizontal != null)) dart.assertFailed(null, I[102], 2197, 15, "horizontal != null");
    if (!(vertical != null)) dart.assertFailed(null, I[102], 2198, 15, "vertical != null");
    if (!(dart.notNull(vertical) <= 4)) dart.assertFailed(null, I[102], 2199, 15, "vertical <= maximumDensity");
    if (!(dart.notNull(vertical) >= -4)) dart.assertFailed(null, I[102], 2200, 15, "vertical >= minimumDensity");
    if (!(dart.notNull(horizontal) <= 4)) dart.assertFailed(null, I[102], 2201, 15, "horizontal <= maximumDensity");
    if (!(dart.notNull(horizontal) >= -4)) dart.assertFailed(null, I[102], 2202, 15, "horizontal >= minimumDensity");
    ;
  }).prototype = theme_data.VisualDensity.prototype;
  dart.addTypeTests(theme_data.VisualDensity);
  dart.addTypeCaches(theme_data.VisualDensity);
  dart.setMethodSignature(theme_data.VisualDensity, () => ({
    __proto__: dart.getMethods(theme_data.VisualDensity.__proto__),
    copyWith: dart.fnType(theme_data.VisualDensity, [], {horizontal: dart.nullable(core.double), vertical: dart.nullable(core.double)}, {}),
    effectiveConstraints: dart.fnType(box$.BoxConstraints, [box$.BoxConstraints])
  }));
  dart.setGetterSignature(theme_data.VisualDensity, () => ({
    __proto__: dart.getGetters(theme_data.VisualDensity.__proto__),
    baseSizeAdjustment: ui.Offset
  }));
  dart.setLibraryUri(theme_data.VisualDensity, I[103]);
  dart.setFieldSignature(theme_data.VisualDensity, () => ({
    __proto__: dart.getFields(theme_data.VisualDensity.__proto__),
    horizontal: dart.finalFieldType(core.double),
    vertical: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(theme_data.VisualDensity, ['_equals']);
  dart.defineExtensionAccessors(theme_data.VisualDensity, ['hashCode']);
  dart.defineLazy(theme_data.VisualDensity, {
    /*theme_data.VisualDensity.minimumDensity*/get minimumDensity() {
      return -4;
    },
    /*theme_data.VisualDensity.maximumDensity*/get maximumDensity() {
      return 4;
    },
    /*theme_data.VisualDensity.standard*/get standard() {
      return C[459] || CT.C459;
    },
    /*theme_data.VisualDensity.comfortable*/get comfortable() {
      return C[622] || CT.C622;
    },
    /*theme_data.VisualDensity.compact*/get compact() {
      return C[623] || CT.C623;
    }
  }, false);
  dart.defineLazy(theme_data, {
    /*theme_data._kLightThemeHighlightColor*/get _kLightThemeHighlightColor() {
      return C[624] || CT.C624;
    },
    /*theme_data._kLightThemeSplashColor*/get _kLightThemeSplashColor() {
      return C[625] || CT.C625;
    },
    /*theme_data._kDarkThemeHighlightColor*/get _kDarkThemeHighlightColor() {
      return C[626] || CT.C626;
    },
    /*theme_data._kDarkThemeSplashColor*/get _kDarkThemeSplashColor() {
      return C[626] || CT.C626;
    }
  }, false);
  ink_highlight.InkHighlight = class InkHighlight extends ink_well.InteractiveInkFeature {
    get [S$0._alpha$1]() {
      let t50;
      return dart.test(this[S$0.__InkHighlight__alpha_isSet]) ? (t50 = this[S$0.__InkHighlight__alpha], t50) : dart.throw(new _internal.LateError.fieldNI("_alpha"));
    }
    set [S$0._alpha$1](t50) {
      if (t50 == null) dart.nullFailed(I[104], 81, 23, "null");
      this[S$0.__InkHighlight__alpha_isSet] = true;
      this[S$0.__InkHighlight__alpha] = t50;
    }
    get [S$0._alphaController$1]() {
      let t51;
      return dart.test(this[S$0.__InkHighlight__alphaController_isSet]) ? (t51 = this[S$0.__InkHighlight__alphaController], t51) : dart.throw(new _internal.LateError.fieldNI("_alphaController"));
    }
    set [S$0._alphaController$1](t51) {
      if (t51 == null) dart.nullFailed(I[104], 82, 28, "null");
      this[S$0.__InkHighlight__alphaController_isSet] = true;
      this[S$0.__InkHighlight__alphaController] = t51;
    }
    get active() {
      return this[S$0._active];
    }
    activate() {
      this[S$0._active] = true;
      this[S$0._alphaController$1].forward();
    }
    deactivate() {
      this[S$0._active] = false;
      this[S$0._alphaController$1].reverse();
    }
    [S$0._handleAlphaStatusChanged$2](status) {
      if (status == null) dart.nullFailed(I[104], 100, 50, "status");
      if (status == animation.AnimationStatus.dismissed && !dart.test(this[S$0._active])) this.dispose();
    }
    dispose() {
      this[S$0._alphaController$1].dispose();
      super.dispose();
    }
    [S$0._paintHighlight](canvas, rect, paint) {
      let t52;
      if (canvas == null) dart.nullFailed(I[104], 111, 31, "canvas");
      if (rect == null) dart.nullFailed(I[104], 111, 44, "rect");
      if (paint == null) dart.nullFailed(I[104], 111, 56, "paint");
      if (!(this[S$0._shape$2] != null)) dart.assertFailed(null, I[104], 112, 12, "_shape != null");
      canvas.save();
      if (this[S$0._customBorder$2] != null) {
        canvas.clipPath(dart.nullCheck(this[S$0._customBorder$2]).getOuterPath(rect, {textDirection: this[S$0._textDirection$3]}));
      }
      switch (this[S$0._shape$2]) {
        case C[628] || CT.C628:
        {
          canvas.drawCircle(rect.center, (t52 = this[S$0._radius$2], t52 == null ? 35 : t52), paint);
          break;
        }
        case C[627] || CT.C627:
        {
          if (!dart.equals(this[S$0._borderRadius$2], border_radius.BorderRadius.zero)) {
            let clipRRect = new ui.RRect.fromRectAndCorners(rect, {topLeft: this[S$0._borderRadius$2].topLeft, topRight: this[S$0._borderRadius$2].topRight, bottomLeft: this[S$0._borderRadius$2].bottomLeft, bottomRight: this[S$0._borderRadius$2].bottomRight});
            canvas.drawRRect(clipRRect, paint);
          } else {
            canvas.drawRect(rect, paint);
          }
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      canvas.restore();
    }
    paintFeature(canvas, transform) {
      let t52;
      if (canvas == null) dart.nullFailed(I[104], 138, 28, "canvas");
      if (transform == null) dart.nullFailed(I[104], 138, 44, "transform");
      let paint = (t52 = ui.Paint.new(), (() => {
        t52.color = this.color.withAlpha(this[S$0._alpha$1].value);
        return t52;
      })());
      let originOffset = matrix_utils.MatrixUtils.getAsTranslation(transform);
      let rect = this[S$0._rectCallback] != null ? dart.nullCheck(this[S$0._rectCallback])() : ui.Offset.zero['&'](this.referenceBox.size);
      if (originOffset == null) {
        canvas.save();
        canvas.transform(transform.storage);
        this[S$0._paintHighlight](canvas, rect, paint);
        canvas.restore();
      } else {
        this[S$0._paintHighlight](canvas, rect.shift(originOffset), paint);
      }
    }
  };
  (ink_highlight.InkHighlight.new = function(opts) {
    let t50, t50$;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    if (controller == null) dart.nullFailed(I[104], 40, 36, "controller");
    let referenceBox = opts && 'referenceBox' in opts ? opts.referenceBox : null;
    if (referenceBox == null) dart.nullFailed(I[104], 41, 24, "referenceBox");
    let color = opts && 'color' in opts ? opts.color : null;
    if (color == null) dart.nullFailed(I[104], 42, 20, "color");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    if (textDirection == null) dart.nullFailed(I[104], 43, 28, "textDirection");
    let shape = opts && 'shape' in opts ? opts.shape : C[627] || CT.C627;
    if (shape == null) dart.nullFailed(I[104], 44, 14, "shape");
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
    let rectCallback = opts && 'rectCallback' in opts ? opts.rectCallback : null;
    let onRemoved = opts && 'onRemoved' in opts ? opts.onRemoved : null;
    let fadeDuration = opts && 'fadeDuration' in opts ? opts.fadeDuration : C[143] || CT.C143;
    if (fadeDuration == null) dart.nullFailed(I[104], 50, 14, "fadeDuration");
    this[S$0.__InkHighlight__alpha] = null;
    this[S$0.__InkHighlight__alpha_isSet] = false;
    this[S$0.__InkHighlight__alphaController] = null;
    this[S$0.__InkHighlight__alphaController_isSet] = false;
    this[S$0._active] = true;
    if (!(color != null)) dart.assertFailed(null, I[104], 51, 15, "color != null");
    if (!(shape != null)) dart.assertFailed(null, I[104], 52, 15, "shape != null");
    if (!(textDirection != null)) dart.assertFailed(null, I[104], 53, 15, "textDirection != null");
    if (!(fadeDuration != null)) dart.assertFailed(null, I[104], 54, 15, "fadeDuration != null");
    this[S$0._shape$2] = shape;
    this[S$0._radius$2] = radius;
    this[S$0._borderRadius$2] = (t50 = borderRadius, t50 == null ? border_radius.BorderRadius.zero : t50);
    this[S$0._customBorder$2] = customBorder;
    this[S$0._textDirection$3] = textDirection;
    this[S$0._rectCallback] = rectCallback;
    ink_highlight.InkHighlight.__proto__.new.call(this, {controller: controller, referenceBox: referenceBox, color: color, onRemoved: onRemoved});
    this[S$0._alphaController$1] = (t50$ = new animation_controller.AnimationController.new({duration: fadeDuration, vsync: controller.vsync}), (() => {
      t50$.addListener(dart.bind(controller, 'markNeedsPaint'));
      t50$.addStatusListener(dart.bind(this, S$0._handleAlphaStatusChanged$2));
      t50$.forward();
      return t50$;
    })());
    this[S$0._alpha$1] = this[S$0._alphaController$1].drive(core.int, new tween.IntTween.new({begin: 0, end: color.alpha}));
    controller.addInkFeature(this);
  }).prototype = ink_highlight.InkHighlight.prototype;
  dart.addTypeTests(ink_highlight.InkHighlight);
  dart.addTypeCaches(ink_highlight.InkHighlight);
  dart.setMethodSignature(ink_highlight.InkHighlight, () => ({
    __proto__: dart.getMethods(ink_highlight.InkHighlight.__proto__),
    activate: dart.fnType(dart.void, []),
    deactivate: dart.fnType(dart.void, []),
    [S$0._handleAlphaStatusChanged$2]: dart.fnType(dart.void, [animation.AnimationStatus]),
    [S$0._paintHighlight]: dart.fnType(dart.void, [ui.Canvas, ui.Rect, ui.Paint]),
    paintFeature: dart.fnType(dart.void, [ui.Canvas, vector_math_64.Matrix4])
  }));
  dart.setGetterSignature(ink_highlight.InkHighlight, () => ({
    __proto__: dart.getGetters(ink_highlight.InkHighlight.__proto__),
    [S$0._alpha$1]: animation.Animation$(core.int),
    [S$0._alphaController$1]: animation_controller.AnimationController,
    active: core.bool
  }));
  dart.setSetterSignature(ink_highlight.InkHighlight, () => ({
    __proto__: dart.getSetters(ink_highlight.InkHighlight.__proto__),
    [S$0._alpha$1]: animation.Animation$(core.int),
    [S$0._alphaController$1]: animation_controller.AnimationController
  }));
  dart.setLibraryUri(ink_highlight.InkHighlight, I[105]);
  dart.setFieldSignature(ink_highlight.InkHighlight, () => ({
    __proto__: dart.getFields(ink_highlight.InkHighlight.__proto__),
    [S$0._shape$2]: dart.finalFieldType(box_border.BoxShape),
    [S$0._radius$2]: dart.finalFieldType(dart.nullable(core.double)),
    [S$0._borderRadius$2]: dart.finalFieldType(border_radius.BorderRadius),
    [S$0._customBorder$2]: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    [S$0._rectCallback]: dart.finalFieldType(dart.nullable(dart.fnType(ui.Rect, []))),
    [S$0._textDirection$3]: dart.finalFieldType(ui.TextDirection),
    [S$0.__InkHighlight__alpha]: dart.fieldType(dart.nullable(animation.Animation$(core.int))),
    [S$0.__InkHighlight__alpha_isSet]: dart.fieldType(core.bool),
    [S$0.__InkHighlight__alphaController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$0.__InkHighlight__alphaController_isSet]: dart.fieldType(core.bool),
    [S$0._active]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(ink_highlight, {
    /*ink_highlight._kDefaultHighlightFadeDuration*/get _kDefaultHighlightFadeDuration() {
      return C[143] || CT.C143;
    }
  }, false);
  feedback.Feedback = class Feedback extends core.Object {
    static forTap(context) {
      if (context == null) dart.nullFailed(I[106], 97, 43, "context");
      return async.async(dart.void, function* forTap() {
        dart.nullCheck(context.findRenderObject()).sendSemanticsEvent(C[629] || CT.C629);
        switch (feedback.Feedback._platform(context)) {
          case C[11] || CT.C11:
          case C[12] || CT.C12:
          {
            return system_sound.SystemSound.play(system_sound.SystemSoundType.click);
          }
          case C[15] || CT.C15:
          case C[13] || CT.C13:
          case C[16] || CT.C16:
          case C[14] || CT.C14:
          {
            return T$.FutureOfvoid().value();
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
      });
    }
    static wrapForTap(callback, context) {
      if (context == null) dart.nullFailed(I[106], 121, 84, "context");
      if (callback == null) return null;
      return dart.fn(() => {
        feedback.Feedback.forTap(context);
        callback();
      }, T$.VoidTovoid());
    }
    static forLongPress(context) {
      if (context == null) dart.nullFailed(I[106], 139, 49, "context");
      dart.nullCheck(context.findRenderObject()).sendSemanticsEvent(C[630] || CT.C630);
      switch (feedback.Feedback._platform(context)) {
        case C[11] || CT.C11:
        case C[12] || CT.C12:
        {
          return haptic_feedback.HapticFeedback.vibrate();
        }
        case C[15] || CT.C15:
        case C[13] || CT.C13:
        case C[16] || CT.C16:
        case C[14] || CT.C14:
        {
          return T$.FutureOfvoid().value();
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    static wrapForLongPress(callback, context) {
      if (context == null) dart.nullFailed(I[106], 164, 102, "context");
      if (callback == null) return null;
      return dart.fn(() => {
        feedback.Feedback.forLongPress(context);
        callback();
      }, T$.VoidTovoid());
    }
    static _platform(context) {
      if (context == null) dart.nullFailed(I[106], 173, 48, "context");
      return theme$.Theme.of(context).platform;
    }
  };
  (feedback.Feedback.__ = function() {
    ;
  }).prototype = feedback.Feedback.prototype;
  dart.addTypeTests(feedback.Feedback);
  dart.addTypeCaches(feedback.Feedback);
  dart.setLibraryUri(feedback.Feedback, I[107]);
  ink_well._ParentInkResponseState = class _ParentInkResponseState extends core.Object {};
  (ink_well._ParentInkResponseState.new = function() {
    ;
  }).prototype = ink_well._ParentInkResponseState.prototype;
  dart.addTypeTests(ink_well._ParentInkResponseState);
  dart.addTypeCaches(ink_well._ParentInkResponseState);
  dart.setLibraryUri(ink_well._ParentInkResponseState, I[7]);
  ink_well._ParentInkResponseProvider = class _ParentInkResponseProvider extends framework.InheritedWidget {
    get state() {
      return this[S$0.state];
    }
    set state(value) {
      super.state = value;
    }
    updateShouldNotify(oldWidget) {
      ink_well._ParentInkResponseProvider.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[9], 195, 54, "oldWidget");
      return !dart.equals(this.state, oldWidget.state);
    }
    static of(context) {
      let t52;
      if (context == null) dart.nullFailed(I[9], 197, 51, "context");
      t52 = context.dependOnInheritedWidgetOfExactType(ink_well._ParentInkResponseProvider);
      return t52 == null ? null : t52.state;
    }
  };
  (ink_well._ParentInkResponseProvider.new = function(opts) {
    let state = opts && 'state' in opts ? opts.state : null;
    if (state == null) dart.nullFailed(I[9], 188, 19, "state");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[9], 189, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.state] = state;
    ink_well._ParentInkResponseProvider.__proto__.new.call(this, {child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = ink_well._ParentInkResponseProvider.prototype;
  dart.addTypeTests(ink_well._ParentInkResponseProvider);
  dart.addTypeCaches(ink_well._ParentInkResponseProvider);
  dart.setMethodSignature(ink_well._ParentInkResponseProvider, () => ({
    __proto__: dart.getMethods(ink_well._ParentInkResponseProvider.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(ink_well._ParentInkResponseProvider, I[7]);
  dart.setFieldSignature(ink_well._ParentInkResponseProvider, () => ({
    __proto__: dart.getFields(ink_well._ParentInkResponseProvider.__proto__),
    state: dart.finalFieldType(ink_well._ParentInkResponseState)
  }));
  ink_well.InkResponse = class InkResponse extends framework.StatelessWidget {
    get child() {
      return this[S$0.child$16];
    }
    set child(value) {
      super.child = value;
    }
    get onTap() {
      return this[S$0.onTap$3];
    }
    set onTap(value) {
      super.onTap = value;
    }
    get onTapDown() {
      return this[S$0.onTapDown];
    }
    set onTapDown(value) {
      super.onTapDown = value;
    }
    get onTapCancel() {
      return this[S$0.onTapCancel];
    }
    set onTapCancel(value) {
      super.onTapCancel = value;
    }
    get onDoubleTap() {
      return this[S$0.onDoubleTap];
    }
    set onDoubleTap(value) {
      super.onDoubleTap = value;
    }
    get onLongPress() {
      return this[S$0.onLongPress$4];
    }
    set onLongPress(value) {
      super.onLongPress = value;
    }
    get onHighlightChanged() {
      return this[S$0.onHighlightChanged$2];
    }
    set onHighlightChanged(value) {
      super.onHighlightChanged = value;
    }
    get onHover() {
      return this[S$0.onHover];
    }
    set onHover(value) {
      super.onHover = value;
    }
    get mouseCursor() {
      return this[S$0.mouseCursor$12];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get containedInkWell() {
      return this[S$0.containedInkWell];
    }
    set containedInkWell(value) {
      super.containedInkWell = value;
    }
    get highlightShape() {
      return this[S$0.highlightShape];
    }
    set highlightShape(value) {
      super.highlightShape = value;
    }
    get radius() {
      return this[S$0.radius$1];
    }
    set radius(value) {
      super.radius = value;
    }
    get borderRadius() {
      return this[S$0.borderRadius$1];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    get customBorder() {
      return this[S$0.customBorder];
    }
    set customBorder(value) {
      super.customBorder = value;
    }
    get focusColor() {
      return this[S$0.focusColor$9];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[S$0.hoverColor$10];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get highlightColor() {
      return this[S$0.highlightColor$6];
    }
    set highlightColor(value) {
      super.highlightColor = value;
    }
    get overlayColor() {
      return this[S$0.overlayColor$6];
    }
    set overlayColor(value) {
      super.overlayColor = value;
    }
    get splashColor() {
      return this[S$0.splashColor$7];
    }
    set splashColor(value) {
      super.splashColor = value;
    }
    get splashFactory() {
      return this[S$0.splashFactory$2];
    }
    set splashFactory(value) {
      super.splashFactory = value;
    }
    get enableFeedback() {
      return this[S$0.enableFeedback$10];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get excludeFromSemantics() {
      return this[S$0.excludeFromSemantics$2];
    }
    set excludeFromSemantics(value) {
      super.excludeFromSemantics = value;
    }
    get onFocusChange() {
      return this[S$0.onFocusChange];
    }
    set onFocusChange(value) {
      super.onFocusChange = value;
    }
    get autofocus() {
      return this[S$0.autofocus$6];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get focusNode() {
      return this[S$0.focusNode$6];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get canRequestFocus() {
      return this[S$0.canRequestFocus];
    }
    set canRequestFocus(value) {
      super.canRequestFocus = value;
    }
    getRectCallback(referenceBox) {
      if (referenceBox == null) dart.nullFailed(I[9], 577, 43, "referenceBox");
      return null;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[9], 580, 29, "context");
      let parentState = ink_well._ParentInkResponseProvider.of(context);
      return new ink_well._InkResponseStateWidget.new({onTap: this.onTap, onTapDown: this.onTapDown, onTapCancel: this.onTapCancel, onDoubleTap: this.onDoubleTap, onLongPress: this.onLongPress, onHighlightChanged: this.onHighlightChanged, onHover: this.onHover, mouseCursor: this.mouseCursor, containedInkWell: this.containedInkWell, highlightShape: this.highlightShape, radius: this.radius, borderRadius: this.borderRadius, customBorder: this.customBorder, focusColor: this.focusColor, hoverColor: this.hoverColor, highlightColor: this.highlightColor, overlayColor: this.overlayColor, splashColor: this.splashColor, splashFactory: this.splashFactory, enableFeedback: this.enableFeedback, excludeFromSemantics: this.excludeFromSemantics, focusNode: this.focusNode, canRequestFocus: this.canRequestFocus, onFocusChange: this.onFocusChange, autofocus: this.autofocus, parentState: parentState, getRectCallback: dart.bind(this, 'getRectCallback'), debugCheckContext: dart.bind(this, 'debugCheckContext'), child: this.child, $creationLocationd_0dea112b090073317d4: C[631] || CT.C631});
    }
    debugCheckContext(context) {
      if (context == null) dart.nullFailed(I[9], 623, 39, "context");
      if (!dart.test(debug$0.debugCheckHasMaterial(context))) dart.assertFailed(null, I[9], 624, 12, "debugCheckHasMaterial(context)");
      if (!dart.test(debug.debugCheckHasDirectionality(context))) dart.assertFailed(null, I[9], 625, 12, "debugCheckHasDirectionality(context)");
      return true;
    }
  };
  (ink_well.InkResponse.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let onTapDown = opts && 'onTapDown' in opts ? opts.onTapDown : null;
    let onTapCancel = opts && 'onTapCancel' in opts ? opts.onTapCancel : null;
    let onDoubleTap = opts && 'onDoubleTap' in opts ? opts.onDoubleTap : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
    let onHover = opts && 'onHover' in opts ? opts.onHover : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let containedInkWell = opts && 'containedInkWell' in opts ? opts.containedInkWell : false;
    if (containedInkWell == null) dart.nullFailed(I[9], 304, 10, "containedInkWell");
    let highlightShape = opts && 'highlightShape' in opts ? opts.highlightShape : C[628] || CT.C628;
    if (highlightShape == null) dart.nullFailed(I[9], 305, 10, "highlightShape");
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : true;
    if (enableFeedback == null) dart.nullFailed(I[9], 315, 10, "enableFeedback");
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    if (excludeFromSemantics == null) dart.nullFailed(I[9], 316, 10, "excludeFromSemantics");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let canRequestFocus = opts && 'canRequestFocus' in opts ? opts.canRequestFocus : true;
    if (canRequestFocus == null) dart.nullFailed(I[9], 318, 10, "canRequestFocus");
    let onFocusChange = opts && 'onFocusChange' in opts ? opts.onFocusChange : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[9], 320, 10, "autofocus");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.child$16] = child;
    this[S$0.onTap$3] = onTap;
    this[S$0.onTapDown] = onTapDown;
    this[S$0.onTapCancel] = onTapCancel;
    this[S$0.onDoubleTap] = onDoubleTap;
    this[S$0.onLongPress$4] = onLongPress;
    this[S$0.onHighlightChanged$2] = onHighlightChanged;
    this[S$0.onHover] = onHover;
    this[S$0.mouseCursor$12] = mouseCursor;
    this[S$0.containedInkWell] = containedInkWell;
    this[S$0.highlightShape] = highlightShape;
    this[S$0.radius$1] = radius;
    this[S$0.borderRadius$1] = borderRadius;
    this[S$0.customBorder] = customBorder;
    this[S$0.focusColor$9] = focusColor;
    this[S$0.hoverColor$10] = hoverColor;
    this[S$0.highlightColor$6] = highlightColor;
    this[S$0.overlayColor$6] = overlayColor;
    this[S$0.splashColor$7] = splashColor;
    this[S$0.splashFactory$2] = splashFactory;
    this[S$0.enableFeedback$10] = enableFeedback;
    this[S$0.excludeFromSemantics$2] = excludeFromSemantics;
    this[S$0.focusNode$6] = focusNode;
    this[S$0.canRequestFocus] = canRequestFocus;
    this[S$0.onFocusChange] = onFocusChange;
    this[S$0.autofocus$6] = autofocus;
    if (!(containedInkWell != null)) dart.assertFailed(null, I[9], 321, 15, "containedInkWell != null");
    if (!(highlightShape != null)) dart.assertFailed(null, I[9], 322, 15, "highlightShape != null");
    if (!(enableFeedback != null)) dart.assertFailed(null, I[9], 323, 15, "enableFeedback != null");
    if (!(excludeFromSemantics != null)) dart.assertFailed(null, I[9], 324, 15, "excludeFromSemantics != null");
    if (!(autofocus != null)) dart.assertFailed(null, I[9], 325, 15, "autofocus != null");
    if (!(canRequestFocus != null)) dart.assertFailed(null, I[9], 326, 15, "canRequestFocus != null");
    ink_well.InkResponse.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = ink_well.InkResponse.prototype;
  dart.addTypeTests(ink_well.InkResponse);
  dart.addTypeCaches(ink_well.InkResponse);
  dart.setMethodSignature(ink_well.InkResponse, () => ({
    __proto__: dart.getMethods(ink_well.InkResponse.__proto__),
    getRectCallback: dart.fnType(dart.nullable(dart.fnType(ui.Rect, [])), [box$.RenderBox]),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    debugCheckContext: dart.fnType(core.bool, [framework.BuildContext])
  }));
  dart.setLibraryUri(ink_well.InkResponse, I[7]);
  dart.setFieldSignature(ink_well.InkResponse, () => ({
    __proto__: dart.getFields(ink_well.InkResponse.__proto__),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    onTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onTapDown: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [tap.TapDownDetails]))),
    onTapCancel: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onDoubleTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onLongPress: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onHighlightChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    onHover: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    mouseCursor: dart.finalFieldType(dart.nullable(mouse_cursor.MouseCursor)),
    containedInkWell: dart.finalFieldType(core.bool),
    highlightShape: dart.finalFieldType(box_border.BoxShape),
    radius: dart.finalFieldType(dart.nullable(core.double)),
    borderRadius: dart.finalFieldType(dart.nullable(border_radius.BorderRadius)),
    customBorder: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    focusColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hoverColor: dart.finalFieldType(dart.nullable(ui.Color)),
    highlightColor: dart.finalFieldType(dart.nullable(ui.Color)),
    overlayColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    splashColor: dart.finalFieldType(dart.nullable(ui.Color)),
    splashFactory: dart.finalFieldType(dart.nullable(ink_well.InteractiveInkFeatureFactory)),
    enableFeedback: dart.finalFieldType(core.bool),
    excludeFromSemantics: dart.finalFieldType(core.bool),
    onFocusChange: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    autofocus: dart.finalFieldType(core.bool),
    focusNode: dart.finalFieldType(dart.nullable(focus_manager.FocusNode)),
    canRequestFocus: dart.finalFieldType(core.bool)
  }));
  ink_well._InkResponseStateWidget = class _InkResponseStateWidget extends framework.StatefulWidget {
    get child() {
      return this[S$0.child$17];
    }
    set child(value) {
      super.child = value;
    }
    get onTap() {
      return this[S$0.onTap$4];
    }
    set onTap(value) {
      super.onTap = value;
    }
    get onTapDown() {
      return this[S$0.onTapDown$1];
    }
    set onTapDown(value) {
      super.onTapDown = value;
    }
    get onTapCancel() {
      return this[S$0.onTapCancel$1];
    }
    set onTapCancel(value) {
      super.onTapCancel = value;
    }
    get onDoubleTap() {
      return this[S$0.onDoubleTap$1];
    }
    set onDoubleTap(value) {
      super.onDoubleTap = value;
    }
    get onLongPress() {
      return this[S$0.onLongPress$5];
    }
    set onLongPress(value) {
      super.onLongPress = value;
    }
    get onHighlightChanged() {
      return this[S$0.onHighlightChanged$3];
    }
    set onHighlightChanged(value) {
      super.onHighlightChanged = value;
    }
    get onHover() {
      return this[S$0.onHover$1];
    }
    set onHover(value) {
      super.onHover = value;
    }
    get mouseCursor() {
      return this[S$0.mouseCursor$13];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get containedInkWell() {
      return this[S$0.containedInkWell$1];
    }
    set containedInkWell(value) {
      super.containedInkWell = value;
    }
    get highlightShape() {
      return this[S$0.highlightShape$1];
    }
    set highlightShape(value) {
      super.highlightShape = value;
    }
    get radius() {
      return this[S$0.radius$2];
    }
    set radius(value) {
      super.radius = value;
    }
    get borderRadius() {
      return this[S$0.borderRadius$2];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    get customBorder() {
      return this[S$0.customBorder$1];
    }
    set customBorder(value) {
      super.customBorder = value;
    }
    get focusColor() {
      return this[S$0.focusColor$10];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[S$0.hoverColor$11];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get highlightColor() {
      return this[S$0.highlightColor$7];
    }
    set highlightColor(value) {
      super.highlightColor = value;
    }
    get overlayColor() {
      return this[S$0.overlayColor$7];
    }
    set overlayColor(value) {
      super.overlayColor = value;
    }
    get splashColor() {
      return this[S$0.splashColor$8];
    }
    set splashColor(value) {
      super.splashColor = value;
    }
    get splashFactory() {
      return this[S$0.splashFactory$3];
    }
    set splashFactory(value) {
      super.splashFactory = value;
    }
    get enableFeedback() {
      return this[S$0.enableFeedback$11];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get excludeFromSemantics() {
      return this[S$0.excludeFromSemantics$3];
    }
    set excludeFromSemantics(value) {
      super.excludeFromSemantics = value;
    }
    get onFocusChange() {
      return this[S$0.onFocusChange$1];
    }
    set onFocusChange(value) {
      super.onFocusChange = value;
    }
    get autofocus() {
      return this[S$0.autofocus$7];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get focusNode() {
      return this[S$0.focusNode$7];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get canRequestFocus() {
      return this[S$0.canRequestFocus$1];
    }
    set canRequestFocus(value) {
      super.canRequestFocus = value;
    }
    get parentState() {
      return this[S$0.parentState];
    }
    set parentState(value) {
      super.parentState = value;
    }
    get getRectCallback() {
      return this[S$0.getRectCallback];
    }
    set getRectCallback(value) {
      super.getRectCallback = value;
    }
    get debugCheckContext() {
      return this[S$0.debugCheckContext];
    }
    set debugCheckContext(value) {
      super.debugCheckContext = value;
    }
    createState() {
      return new ink_well._InkResponseState.new();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[9], 702, 56, "properties");
      super.debugFillProperties(properties);
      let gestures = (() => {
        let t52 = T$.JSArrayOfString().of([]);
        if (this.onTap != null) t52[S.$add]("tap");
        if (this.onDoubleTap != null) t52[S.$add]("double tap");
        if (this.onLongPress != null) t52[S.$add]("long press");
        if (this.onTapDown != null) t52[S.$add]("tap down");
        if (this.onTapCancel != null) t52[S.$add]("tap cancel");
        return t52;
      })();
      properties.add(new (T$.IterablePropertyOfString()).new("gestures", gestures, {ifEmpty: "<none>"}));
      properties.add(new (T$.DiagnosticsPropertyOfMouseCursor()).new("mouseCursor", this.mouseCursor));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("containedInkWell", this.containedInkWell, {level: diagnostics.DiagnosticLevel.fine}));
      properties.add(new (T$.DiagnosticsPropertyOfBoxShape()).new("highlightShape", this.highlightShape, {description: (dart.test(this.containedInkWell) ? "clipped to " : "") + dart.str(this.highlightShape), showName: false}));
    }
  };
  (ink_well._InkResponseStateWidget.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let onTapDown = opts && 'onTapDown' in opts ? opts.onTapDown : null;
    let onTapCancel = opts && 'onTapCancel' in opts ? opts.onTapCancel : null;
    let onDoubleTap = opts && 'onDoubleTap' in opts ? opts.onDoubleTap : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
    let onHover = opts && 'onHover' in opts ? opts.onHover : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let containedInkWell = opts && 'containedInkWell' in opts ? opts.containedInkWell : false;
    if (containedInkWell == null) dart.nullFailed(I[9], 641, 10, "containedInkWell");
    let highlightShape = opts && 'highlightShape' in opts ? opts.highlightShape : C[628] || CT.C628;
    if (highlightShape == null) dart.nullFailed(I[9], 642, 10, "highlightShape");
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : true;
    if (enableFeedback == null) dart.nullFailed(I[9], 652, 10, "enableFeedback");
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    if (excludeFromSemantics == null) dart.nullFailed(I[9], 653, 10, "excludeFromSemantics");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let canRequestFocus = opts && 'canRequestFocus' in opts ? opts.canRequestFocus : true;
    if (canRequestFocus == null) dart.nullFailed(I[9], 655, 10, "canRequestFocus");
    let onFocusChange = opts && 'onFocusChange' in opts ? opts.onFocusChange : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[9], 657, 10, "autofocus");
    let parentState = opts && 'parentState' in opts ? opts.parentState : null;
    let getRectCallback = opts && 'getRectCallback' in opts ? opts.getRectCallback : null;
    let debugCheckContext = opts && 'debugCheckContext' in opts ? opts.debugCheckContext : null;
    if (debugCheckContext == null) dart.nullFailed(I[9], 660, 19, "debugCheckContext");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.child$17] = child;
    this[S$0.onTap$4] = onTap;
    this[S$0.onTapDown$1] = onTapDown;
    this[S$0.onTapCancel$1] = onTapCancel;
    this[S$0.onDoubleTap$1] = onDoubleTap;
    this[S$0.onLongPress$5] = onLongPress;
    this[S$0.onHighlightChanged$3] = onHighlightChanged;
    this[S$0.onHover$1] = onHover;
    this[S$0.mouseCursor$13] = mouseCursor;
    this[S$0.containedInkWell$1] = containedInkWell;
    this[S$0.highlightShape$1] = highlightShape;
    this[S$0.radius$2] = radius;
    this[S$0.borderRadius$2] = borderRadius;
    this[S$0.customBorder$1] = customBorder;
    this[S$0.focusColor$10] = focusColor;
    this[S$0.hoverColor$11] = hoverColor;
    this[S$0.highlightColor$7] = highlightColor;
    this[S$0.overlayColor$7] = overlayColor;
    this[S$0.splashColor$8] = splashColor;
    this[S$0.splashFactory$3] = splashFactory;
    this[S$0.enableFeedback$11] = enableFeedback;
    this[S$0.excludeFromSemantics$3] = excludeFromSemantics;
    this[S$0.focusNode$7] = focusNode;
    this[S$0.canRequestFocus$1] = canRequestFocus;
    this[S$0.onFocusChange$1] = onFocusChange;
    this[S$0.autofocus$7] = autofocus;
    this[S$0.parentState] = parentState;
    this[S$0.getRectCallback] = getRectCallback;
    this[S$0.debugCheckContext] = debugCheckContext;
    if (!(containedInkWell != null)) dart.assertFailed(null, I[9], 661, 15, "containedInkWell != null");
    if (!(highlightShape != null)) dart.assertFailed(null, I[9], 662, 15, "highlightShape != null");
    if (!(enableFeedback != null)) dart.assertFailed(null, I[9], 663, 15, "enableFeedback != null");
    if (!(excludeFromSemantics != null)) dart.assertFailed(null, I[9], 664, 15, "excludeFromSemantics != null");
    if (!(autofocus != null)) dart.assertFailed(null, I[9], 665, 15, "autofocus != null");
    if (!(canRequestFocus != null)) dart.assertFailed(null, I[9], 666, 15, "canRequestFocus != null");
    ink_well._InkResponseStateWidget.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = ink_well._InkResponseStateWidget.prototype;
  dart.addTypeTests(ink_well._InkResponseStateWidget);
  dart.addTypeCaches(ink_well._InkResponseStateWidget);
  dart.setMethodSignature(ink_well._InkResponseStateWidget, () => ({
    __proto__: dart.getMethods(ink_well._InkResponseStateWidget.__proto__),
    createState: dart.fnType(ink_well._InkResponseState, [])
  }));
  dart.setLibraryUri(ink_well._InkResponseStateWidget, I[7]);
  dart.setFieldSignature(ink_well._InkResponseStateWidget, () => ({
    __proto__: dart.getFields(ink_well._InkResponseStateWidget.__proto__),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    onTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onTapDown: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [tap.TapDownDetails]))),
    onTapCancel: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onDoubleTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onLongPress: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onHighlightChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    onHover: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    mouseCursor: dart.finalFieldType(dart.nullable(mouse_cursor.MouseCursor)),
    containedInkWell: dart.finalFieldType(core.bool),
    highlightShape: dart.finalFieldType(box_border.BoxShape),
    radius: dart.finalFieldType(dart.nullable(core.double)),
    borderRadius: dart.finalFieldType(dart.nullable(border_radius.BorderRadius)),
    customBorder: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    focusColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hoverColor: dart.finalFieldType(dart.nullable(ui.Color)),
    highlightColor: dart.finalFieldType(dart.nullable(ui.Color)),
    overlayColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    splashColor: dart.finalFieldType(dart.nullable(ui.Color)),
    splashFactory: dart.finalFieldType(dart.nullable(ink_well.InteractiveInkFeatureFactory)),
    enableFeedback: dart.finalFieldType(core.bool),
    excludeFromSemantics: dart.finalFieldType(core.bool),
    onFocusChange: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    autofocus: dart.finalFieldType(core.bool),
    focusNode: dart.finalFieldType(dart.nullable(focus_manager.FocusNode)),
    canRequestFocus: dart.finalFieldType(core.bool),
    parentState: dart.finalFieldType(dart.nullable(ink_well._ParentInkResponseState)),
    getRectCallback: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(dart.fnType(ui.Rect, [])), [box$.RenderBox]))),
    debugCheckContext: dart.finalFieldType(dart.fnType(core.bool, [framework.BuildContext]))
  }));
  ink_well._HighlightType = class _HighlightType extends core.Object {
    toString() {
      return this[S$0._name$18];
    }
  };
  (ink_well._HighlightType.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[9], 725, 6, "index");
    if (_name == null) dart.nullFailed(I[9], 725, 6, "_name");
    this.index = index;
    this[S$0._name$18] = _name;
    ;
  }).prototype = ink_well._HighlightType.prototype;
  dart.addTypeTests(ink_well._HighlightType);
  dart.addTypeCaches(ink_well._HighlightType);
  ink_well._HighlightType[dart.implements] = () => [core.Enum];
  dart.setLibraryUri(ink_well._HighlightType, I[7]);
  dart.setFieldSignature(ink_well._HighlightType, () => ({
    __proto__: dart.getFields(ink_well._HighlightType.__proto__),
    index: dart.finalFieldType(core.int),
    [S$0._name$18]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(ink_well._HighlightType, ['toString']);
  ink_well._HighlightType.pressed = C[632] || CT.C632;
  ink_well._HighlightType.hover = C[633] || CT.C633;
  ink_well._HighlightType.focus = C[634] || CT.C634;
  ink_well._HighlightType.values = C[635] || CT.C635;
  const State_AutomaticKeepAliveClientMixin$36 = class State_AutomaticKeepAliveClientMixin extends framework.State$(ink_well._InkResponseStateWidget) {};
  (State_AutomaticKeepAliveClientMixin$36.new = function() {
    automatic_keep_alive.AutomaticKeepAliveClientMixin$(ink_well._InkResponseStateWidget)[dart.mixinNew].call(this);
    State_AutomaticKeepAliveClientMixin$36.__proto__.new.call(this);
  }).prototype = State_AutomaticKeepAliveClientMixin$36.prototype;
  dart.applyMixin(State_AutomaticKeepAliveClientMixin$36, automatic_keep_alive.AutomaticKeepAliveClientMixin$(ink_well._InkResponseStateWidget));
  ink_well._InkResponseState = class _InkResponseState extends State_AutomaticKeepAliveClientMixin$36 {
    get [S$0._actionMap]() {
      let t54;
      if (!dart.test(this[S$0.___InkResponseState__actionMap_isSet])) {
        let t53 = new (T$.LinkedMapOfType$ActionOfIntent()).from([dart.wrapType(actions.ActivateIntent), new (T$.CallbackActionOfActivateIntent()).new({onInvoke: dart.bind(this, S$0._simulateTap)}), dart.wrapType(actions.ButtonActivateIntent), new (T$.CallbackActionOfButtonActivateIntent()).new({onInvoke: dart.bind(this, S$0._simulateTap)})]);
        if (dart.test(this[S$0.___InkResponseState__actionMap_isSet])) dart.throw(new _internal.LateError.fieldADI("_actionMap"));
        this[S$0.___InkResponseState__actionMap] = t53;
        this[S$0.___InkResponseState__actionMap_isSet] = true;
      }
      t54 = this[S$0.___InkResponseState__actionMap];
      return t54;
    }
    get highlightsExist() {
      return this[S$0._highlights][S$.$values][S$0.$where](dart.fn(highlight => highlight != null, T$.InkHighlightNTobool()))[S.$isNotEmpty];
    }
    markChildInkResponsePressed(childState, value) {
      let t54;
      if (childState == null) dart.nullFailed(I[9], 748, 60, "childState");
      if (value == null) dart.nullFailed(I[9], 748, 77, "value");
      if (!(childState != null)) dart.assertFailed(null, I[9], 749, 12, "childState != null");
      let lastAnyPressed = this[S$0._anyChildInkResponsePressed];
      if (dart.test(value)) {
        this[S$0._activeChildren].add(childState);
      } else {
        this[S$0._activeChildren].remove(childState);
      }
      let nowAnyPressed = this[S$0._anyChildInkResponsePressed];
      if (nowAnyPressed != lastAnyPressed) {
        t54 = this.widget.parentState;
        t54 == null ? null : t54.markChildInkResponsePressed(this, nowAnyPressed);
      }
    }
    get [S$0._anyChildInkResponsePressed]() {
      return this[S$0._activeChildren].isNotEmpty;
    }
    [S$0._simulateTap](intent = null) {
      this[S$0._startSplash]({context: this.context});
      this[S$0._handleTap$1]();
    }
    [S$0._simulateLongPress]() {
      this[S$0._startSplash]({context: this.context});
      this[S$0._handleLongPress$1]();
    }
    initState() {
      super.initState();
      focus_manager.FocusManager.instance.addHighlightModeListener(dart.bind(this, S$0._handleFocusHighlightModeChange));
    }
    didUpdateWidget(oldWidget) {
      ink_well._InkResponseStateWidget.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[9], 780, 48, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (this[S$0._isWidgetEnabled](this.widget) != this[S$0._isWidgetEnabled](oldWidget)) {
        if (dart.test(this.enabled)) {
          this.updateHighlight(ink_well._HighlightType.hover, {value: this[S$0._hovering], callOnHover: false});
        }
        this[S$0._updateFocusHighlights]();
      }
    }
    dispose() {
      focus_manager.FocusManager.instance.removeHighlightModeListener(dart.bind(this, S$0._handleFocusHighlightModeChange));
      super.dispose();
    }
    get wantKeepAlive() {
      return dart.test(this.highlightsExist) || this[S$0._splashes] != null && dart.test(dart.nullCheck(this[S$0._splashes])[S.$isNotEmpty]);
    }
    getHighlightColorForType(type) {
      let t54, t54$, t54$0, t54$1, t54$2, t54$3, t54$4;
      if (type == null) dart.nullFailed(I[9], 801, 49, "type");
      let focused = C[636] || CT.C636;
      let hovered = C[638] || CT.C638;
      switch (type) {
        case C[632] || CT.C632:
        {
          t54 = this.widget.highlightColor;
          return t54 == null ? theme$.Theme.of(this.context).highlightColor : t54;
        }
        case C[634] || CT.C634:
        {
          t54$1 = (t54$0 = (t54$ = this.widget.overlayColor, t54$ == null ? null : t54$.resolve(focused)), t54$0 == null ? this.widget.focusColor : t54$0);
          return t54$1 == null ? theme$.Theme.of(this.context).focusColor : t54$1;
        }
        case C[633] || CT.C633:
        {
          t54$4 = (t54$3 = (t54$2 = this.widget.overlayColor, t54$2 == null ? null : t54$2.resolve(hovered)), t54$3 == null ? this.widget.hoverColor : t54$3);
          return t54$4 == null ? theme$.Theme.of(this.context).hoverColor : t54$4;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    getFadeDurationForType(type) {
      if (type == null) dart.nullFailed(I[9], 818, 50, "type");
      switch (type) {
        case C[632] || CT.C632:
        {
          return C[143] || CT.C143;
        }
        case C[633] || CT.C633:
        case C[634] || CT.C634:
        {
          return C[640] || CT.C640;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    updateHighlight(type, opts) {
      let t54, t54$, t54$0;
      if (type == null) dart.nullFailed(I[9], 828, 39, "type");
      let value = opts && 'value' in opts ? opts.value : null;
      if (value == null) dart.nullFailed(I[9], 828, 61, "value");
      let callOnHover = opts && 'callOnHover' in opts ? opts.callOnHover : true;
      if (callOnHover == null) dart.nullFailed(I[9], 828, 73, "callOnHover");
      let highlight = this[S$0._highlights][S.$_get](type);
      const handleInkRemoval = () => {
        if (!(this[S$0._highlights][S.$_get](type) != null)) dart.assertFailed(null, I[9], 831, 14, "_highlights[type] != null");
        this[S$0._highlights][S.$_set](type, null);
        this.updateKeepAlive();
      };
      dart.fn(handleInkRemoval, T$.VoidTovoid());
      if (type == ink_well._HighlightType.pressed) {
        t54 = this.widget.parentState;
        t54 == null ? null : t54.markChildInkResponsePressed(this, value);
      }
      if (value === (highlight != null && dart.test(highlight.active))) return;
      if (dart.test(value)) {
        if (highlight == null) {
          let referenceBox = box$.RenderBox.as(dart.nullCheck(this.context.findRenderObject()));
          this[S$0._highlights][S.$_set](type, new ink_highlight.InkHighlight.new({controller: dart.nullCheck(material.Material.of(this.context)), referenceBox: referenceBox, color: this.getHighlightColorForType(type), shape: this.widget.highlightShape, radius: this.widget.radius, borderRadius: this.widget.borderRadius, customBorder: this.widget.customBorder, rectCallback: dart.nullCheck(this.widget.getRectCallback)(referenceBox), onRemoved: handleInkRemoval, textDirection: basic.Directionality.of(this.context), fadeDuration: this.getFadeDurationForType(type)}));
          this.updateKeepAlive();
        } else {
          highlight.activate();
        }
      } else {
        dart.nullCheck(highlight).deactivate();
      }
      if (!(value === (this[S$0._highlights][S.$_get](type) != null && dart.test(dart.nullCheck(this[S$0._highlights][S.$_get](type)).active)))) dart.assertFailed(null, I[9], 864, 12, "value == (_highlights[type] != null && _highlights[type]!.active)");
      switch (type) {
        case C[632] || CT.C632:
        {
          t54$ = this.widget.onHighlightChanged;
          t54$ == null ? null : t54$(value);
          break;
        }
        case C[633] || CT.C633:
        {
          if (dart.test(callOnHover)) {
            t54$0 = this.widget.onHover;
            t54$0 == null ? null : t54$0(value);
          }
          break;
        }
        case C[634] || CT.C634:
        {
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    [S$0._createInkFeature](globalPosition) {
      let t54, t54$, t54$0, t54$1;
      if (globalPosition == null) dart.nullFailed(I[9], 879, 50, "globalPosition");
      let inkController = dart.nullCheck(material.Material.of(this.context));
      let referenceBox = box$.RenderBox.as(dart.nullCheck(this.context.findRenderObject()));
      let position = referenceBox.globalToLocal(globalPosition);
      let pressed = C[641] || CT.C641;
      let color = (t54$0 = (t54$ = (t54 = this.widget.overlayColor, t54 == null ? null : t54.resolve(pressed)), t54$ == null ? this.widget.splashColor : t54$), t54$0 == null ? theme$.Theme.of(this.context).splashColor : t54$0);
      let rectCallback = dart.test(this.widget.containedInkWell) ? dart.nullCheck(this.widget.getRectCallback)(referenceBox) : null;
      let borderRadius = this.widget.borderRadius;
      let customBorder = this.widget.customBorder;
      let splash = null;
      const onRemoved = () => {
        if (this[S$0._splashes] != null) {
          if (!dart.test(dart.nullCheck(this[S$0._splashes]).contains(splash))) dart.assertFailed(null, I[9], 892, 16, "_splashes!.contains(splash)");
          dart.nullCheck(this[S$0._splashes]).remove(splash);
          if (dart.equals(this[S$0._currentSplash], splash)) this[S$0._currentSplash] = null;
          this.updateKeepAlive();
        }
      };
      dart.fn(onRemoved, T$.VoidTovoid());
      splash = (t54$1 = this.widget.splashFactory, t54$1 == null ? theme$.Theme.of(this.context).splashFactory : t54$1).create({controller: inkController, referenceBox: referenceBox, position: position, color: color, containedInkWell: this.widget.containedInkWell, rectCallback: rectCallback, radius: this.widget.radius, borderRadius: borderRadius, customBorder: customBorder, onRemoved: onRemoved, textDirection: basic.Directionality.of(this.context)});
      return splash;
    }
    [S$0._handleFocusHighlightModeChange](mode) {
      if (mode == null) dart.nullFailed(I[9], 917, 59, "mode");
      if (!dart.test(this.mounted)) {
        return;
      }
      this.setState(dart.fn(() => {
        this[S$0._updateFocusHighlights]();
      }, T$.VoidTovoid()));
    }
    get [S$0._shouldShowFocus]() {
      let t54, t54$;
      let mode = (t54$ = (t54 = media_query.MediaQuery.maybeOf(this.context), t54 == null ? null : t54.navigationMode), t54$ == null ? media_query.NavigationMode.traditional : t54$);
      switch (mode) {
        case C[643] || CT.C643:
        {
          return dart.test(this.enabled) && dart.test(this[S$0._hasFocus]);
        }
        case C[644] || CT.C644:
        {
          return this[S$0._hasFocus];
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    [S$0._updateFocusHighlights]() {
      let showFocus = null;
      switch (focus_manager.FocusManager.instance.highlightMode) {
        case C[645] || CT.C645:
        {
          showFocus = false;
          break;
        }
        case C[646] || CT.C646:
        {
          showFocus = this[S$0._shouldShowFocus];
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      this.updateHighlight(ink_well._HighlightType.focus, {value: showFocus});
    }
    [S$0._handleFocusUpdate](hasFocus) {
      let t54;
      if (hasFocus == null) dart.nullFailed(I[9], 950, 32, "hasFocus");
      this[S$0._hasFocus] = hasFocus;
      this[S$0._updateFocusHighlights]();
      t54 = this.widget.onFocusChange;
      t54 == null ? null : t54(hasFocus);
    }
    [S$0._handleTapDown](details) {
      let t54;
      if (details == null) dart.nullFailed(I[9], 956, 38, "details");
      if (dart.test(this[S$0._anyChildInkResponsePressed])) return;
      this[S$0._startSplash]({details: details});
      t54 = this.widget.onTapDown;
      t54 == null ? null : t54(details);
    }
    [S$0._startSplash](opts) {
      let details = opts && 'details' in opts ? opts.details : null;
      let context = opts && 'context' in opts ? opts.context : null;
      if (!(details != null || context != null)) dart.assertFailed(null, I[9], 964, 12, "details != null || context != null");
      let globalPosition = null;
      if (context != null) {
        let referenceBox = box$.RenderBox.as(dart.nullCheck(context.findRenderObject()));
        if (!dart.test(referenceBox.hasSize)) dart.assertFailed("InkResponse must be done with layout before starting a splash.", I[9], 969, 14, "referenceBox.hasSize");
        globalPosition = referenceBox.localToGlobal(referenceBox.paintBounds.center);
      } else {
        globalPosition = dart.nullCheck(details).globalPosition;
      }
      let splash = this[S$0._createInkFeature](globalPosition);
      this[S$0._splashes] == null ? this[S$0._splashes] = new (T$._HashSetOfInteractiveInkFeature()).new() : null;
      dart.nullCheck(this[S$0._splashes]).add(splash);
      this[S$0._currentSplash] = splash;
      this.updateKeepAlive();
      this.updateHighlight(ink_well._HighlightType.pressed, {value: true});
    }
    [S$0._handleTap$1]() {
      let t54, t54$;
      t54 = this[S$0._currentSplash];
      t54 == null ? null : t54.confirm();
      this[S$0._currentSplash] = null;
      this.updateHighlight(ink_well._HighlightType.pressed, {value: false});
      if (this.widget.onTap != null) {
        if (dart.test(this.widget.enableFeedback)) feedback.Feedback.forTap(this.context);
        t54$ = this.widget.onTap;
        t54$ == null ? null : t54$();
      }
    }
    [S$0._handleTapCancel]() {
      let t54, t54$;
      t54 = this[S$0._currentSplash];
      t54 == null ? null : t54.cancel();
      this[S$0._currentSplash] = null;
      t54$ = this.widget.onTapCancel;
      t54$ == null ? null : t54$();
      this.updateHighlight(ink_well._HighlightType.pressed, {value: false});
    }
    [S$0._handleDoubleTap]() {
      let t54, t54$;
      t54 = this[S$0._currentSplash];
      t54 == null ? null : t54.confirm();
      this[S$0._currentSplash] = null;
      t54$ = this.widget.onDoubleTap;
      t54$ == null ? null : t54$();
    }
    [S$0._handleLongPress$1]() {
      let t54;
      t54 = this[S$0._currentSplash];
      t54 == null ? null : t54.confirm();
      this[S$0._currentSplash] = null;
      if (this.widget.onLongPress != null) {
        if (dart.test(this.widget.enableFeedback)) feedback.Feedback.forLongPress(this.context);
        dart.nullCheck(this.widget.onLongPress)();
      }
    }
    deactivate() {
      let t54, t54$;
      if (this[S$0._splashes] != null) {
        let splashes = dart.nullCheck(this[S$0._splashes]);
        this[S$0._splashes] = null;
        for (let splash of splashes)
          splash.dispose();
        this[S$0._currentSplash] = null;
      }
      if (!(this[S$0._currentSplash] == null)) dart.assertFailed(null, I[9], 1025, 12, "_currentSplash == null");
      for (let highlight of this[S$0._highlights][S$.$keys]) {
        t54 = this[S$0._highlights][S.$_get](highlight);
        t54 == null ? null : t54.dispose();
        this[S$0._highlights][S.$_set](highlight, null);
      }
      t54$ = this.widget.parentState;
      t54$ == null ? null : t54$.markChildInkResponsePressed(this, false);
      super.deactivate();
    }
    [S$0._isWidgetEnabled](widget) {
      if (widget == null) dart.nullFailed(I[9], 1034, 49, "widget");
      return widget.onTap != null || widget.onDoubleTap != null || widget.onLongPress != null;
    }
    get enabled() {
      return this[S$0._isWidgetEnabled](this.widget);
    }
    [S$0._handleMouseEnter](event) {
      if (event == null) dart.nullFailed(I[9], 1040, 44, "event");
      this[S$0._hovering] = true;
      if (dart.test(this.enabled)) {
        this[S$0._handleHoverChange]();
      }
    }
    [S$0._handleMouseExit](event) {
      if (event == null) dart.nullFailed(I[9], 1047, 42, "event");
      this[S$0._hovering] = false;
      this[S$0._handleHoverChange]();
    }
    [S$0._handleHoverChange]() {
      this.updateHighlight(ink_well._HighlightType.hover, {value: this[S$0._hovering]});
    }
    get [S$0._canRequestFocus]() {
      let t54, t54$;
      let mode = (t54$ = (t54 = media_query.MediaQuery.maybeOf(this.context), t54 == null ? null : t54.navigationMode), t54$ == null ? media_query.NavigationMode.traditional : t54$);
      switch (mode) {
        case C[643] || CT.C643:
        {
          return dart.test(this.enabled) && dart.test(this.widget.canRequestFocus);
        }
        case C[644] || CT.C644:
        {
          return true;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    build(context) {
      let t55, t54, t54$, t55$, t55$0, t55$1, t54$0, t54$1;
      if (context == null) dart.nullFailed(I[9], 1069, 29, "context");
      if (!dart.test((t54 = this.widget, t55 = context, t54.debugCheckContext(t55)))) dart.assertFailed(null, I[9], 1070, 12, "widget.debugCheckContext(context)");
      super.build(context);
      for (let type of this[S$0._highlights][S$.$keys]) {
        t54$ = this[S$0._highlights][S.$_get](type);
        t54$ == null ? null : t54$.color = this.getHighlightColorForType(type);
      }
      let pressed = C[641] || CT.C641;
      t54$0 = this[S$0._currentSplash];
      t54$0 == null ? null : t54$0.color = (t55$1 = (t55$0 = (t55$ = this.widget.overlayColor, t55$ == null ? null : t55$.resolve(pressed)), t55$0 == null ? this.widget.splashColor : t55$0), t55$1 == null ? theme$.Theme.of(context).splashColor : t55$1);
      let effectiveMouseCursor = material_state.MaterialStateProperty.resolveAs(mouse_cursor.MouseCursor, (t54$1 = this.widget.mouseCursor, t54$1 == null ? material_state.MaterialStateMouseCursor.clickable : t54$1), (() => {
        let t54 = T$.LinkedHashSetOfMaterialState().new();
        if (!dart.test(this.enabled)) t54.add(material_state.MaterialState.disabled);
        if (dart.test(this[S$0._hovering]) && dart.test(this.enabled)) t54.add(material_state.MaterialState.hovered);
        if (dart.test(this[S$0._hasFocus])) t54.add(material_state.MaterialState.focused);
        return t54;
      })());
      return new ink_well._ParentInkResponseProvider.new({state: this, child: new actions.Actions.new({actions: this[S$0._actionMap], child: new focus_scope.Focus.new({focusNode: this.widget.focusNode, canRequestFocus: this[S$0._canRequestFocus], onFocusChange: dart.bind(this, S$0._handleFocusUpdate), autofocus: this.widget.autofocus, child: new basic.MouseRegion.new({cursor: effectiveMouseCursor, onEnter: dart.bind(this, S$0._handleMouseEnter), onExit: dart.bind(this, S$0._handleMouseExit), child: new basic.Semantics.new({onTap: dart.test(this.widget.excludeFromSemantics) || this.widget.onTap == null ? null : dart.bind(this, S$0._simulateTap), onLongPress: dart.test(this.widget.excludeFromSemantics) || this.widget.onLongPress == null ? null : dart.bind(this, S$0._simulateLongPress), child: new gesture_detector.GestureDetector.new({onTapDown: dart.test(this.enabled) ? dart.bind(this, S$0._handleTapDown) : null, onTap: dart.test(this.enabled) ? dart.bind(this, S$0._handleTap$1) : null, onTapCancel: dart.test(this.enabled) ? dart.bind(this, S$0._handleTapCancel) : null, onDoubleTap: this.widget.onDoubleTap != null ? dart.bind(this, S$0._handleDoubleTap) : null, onLongPress: this.widget.onLongPress != null ? dart.bind(this, S$0._handleLongPress$1) : null, behavior: proxy_box.HitTestBehavior.opaque, excludeFromSemantics: true, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C[647] || CT.C647}), $creationLocationd_0dea112b090073317d4: C[648] || CT.C648}), $creationLocationd_0dea112b090073317d4: C[649] || CT.C649}), $creationLocationd_0dea112b090073317d4: C[650] || CT.C650}), $creationLocationd_0dea112b090073317d4: C[651] || CT.C651}), $creationLocationd_0dea112b090073317d4: C[652] || CT.C652});
    }
  };
  (ink_well._InkResponseState.new = function() {
    this[S$0._splashes] = null;
    this[S$0._currentSplash] = null;
    this[S$0._hovering] = false;
    this[S$0._highlights] = new (T$.LinkedMapOf_HighlightType$InkHighlightN()).new();
    this[S$0.___InkResponseState__actionMap] = null;
    this[S$0.___InkResponseState__actionMap_isSet] = false;
    this[S$0._activeChildren] = new (T$.ObserverListOf_ParentInkResponseState()).new();
    this[S$0._hasFocus] = false;
    ink_well._InkResponseState.__proto__.new.call(this);
    ;
  }).prototype = ink_well._InkResponseState.prototype;
  dart.addTypeTests(ink_well._InkResponseState);
  dart.addTypeCaches(ink_well._InkResponseState);
  ink_well._InkResponseState[dart.implements] = () => [ink_well._ParentInkResponseState];
  dart.setMethodSignature(ink_well._InkResponseState, () => ({
    __proto__: dart.getMethods(ink_well._InkResponseState.__proto__),
    markChildInkResponsePressed: dart.fnType(dart.void, [ink_well._ParentInkResponseState, core.bool]),
    [S$0._simulateTap]: dart.fnType(dart.void, [], [dart.nullable(actions.Intent)]),
    [S$0._simulateLongPress]: dart.fnType(dart.void, []),
    getHighlightColorForType: dart.fnType(ui.Color, [ink_well._HighlightType]),
    getFadeDurationForType: dart.fnType(core.Duration, [ink_well._HighlightType]),
    updateHighlight: dart.fnType(dart.void, [ink_well._HighlightType], {callOnHover: core.bool}, {value: core.bool}),
    [S$0._createInkFeature]: dart.fnType(ink_well.InteractiveInkFeature, [ui.Offset]),
    [S$0._handleFocusHighlightModeChange]: dart.fnType(dart.void, [focus_manager.FocusHighlightMode]),
    [S$0._updateFocusHighlights]: dart.fnType(dart.void, []),
    [S$0._handleFocusUpdate]: dart.fnType(dart.void, [core.bool]),
    [S$0._handleTapDown]: dart.fnType(dart.void, [tap.TapDownDetails]),
    [S$0._startSplash]: dart.fnType(dart.void, [], {context: dart.nullable(framework.BuildContext), details: dart.nullable(tap.TapDownDetails)}, {}),
    [S$0._handleTap$1]: dart.fnType(dart.void, []),
    [S$0._handleTapCancel]: dart.fnType(dart.void, []),
    [S$0._handleDoubleTap]: dart.fnType(dart.void, []),
    [S$0._handleLongPress$1]: dart.fnType(dart.void, []),
    [S$0._isWidgetEnabled]: dart.fnType(core.bool, [ink_well._InkResponseStateWidget]),
    [S$0._handleMouseEnter]: dart.fnType(dart.void, [events.PointerEnterEvent]),
    [S$0._handleMouseExit]: dart.fnType(dart.void, [events.PointerExitEvent]),
    [S$0._handleHoverChange]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(ink_well._InkResponseState, () => ({
    __proto__: dart.getGetters(ink_well._InkResponseState.__proto__),
    [S$0._actionMap]: core.Map$(core.Type, actions.Action$(actions.Intent)),
    highlightsExist: core.bool,
    [S$0._anyChildInkResponsePressed]: core.bool,
    wantKeepAlive: core.bool,
    [S$0._shouldShowFocus]: core.bool,
    enabled: core.bool,
    [S$0._canRequestFocus]: core.bool
  }));
  dart.setLibraryUri(ink_well._InkResponseState, I[7]);
  dart.setFieldSignature(ink_well._InkResponseState, () => ({
    __proto__: dart.getFields(ink_well._InkResponseState.__proto__),
    [S$0._splashes]: dart.fieldType(dart.nullable(core.Set$(ink_well.InteractiveInkFeature))),
    [S$0._currentSplash]: dart.fieldType(dart.nullable(ink_well.InteractiveInkFeature)),
    [S$0._hovering]: dart.fieldType(core.bool),
    [S$0._highlights]: dart.finalFieldType(core.Map$(ink_well._HighlightType, dart.nullable(ink_highlight.InkHighlight))),
    [S$0.___InkResponseState__actionMap]: dart.fieldType(dart.nullable(core.Map$(core.Type, actions.Action$(actions.Intent)))),
    [S$0.___InkResponseState__actionMap_isSet]: dart.fieldType(core.bool),
    [S$0._activeChildren]: dart.finalFieldType(observer_list.ObserverList$(ink_well._ParentInkResponseState)),
    [S$0._hasFocus]: dart.fieldType(core.bool)
  }));
  ink_well.InkWell = class InkWell extends ink_well.InkResponse {};
  (ink_well.InkWell.new = function(opts) {
    let t55;
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let onDoubleTap = opts && 'onDoubleTap' in opts ? opts.onDoubleTap : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onTapDown = opts && 'onTapDown' in opts ? opts.onTapDown : null;
    let onTapCancel = opts && 'onTapCancel' in opts ? opts.onTapCancel : null;
    let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
    let onHover = opts && 'onHover' in opts ? opts.onHover : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : true;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    if (excludeFromSemantics == null) dart.nullFailed(I[9], 1238, 10, "excludeFromSemantics");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let canRequestFocus = opts && 'canRequestFocus' in opts ? opts.canRequestFocus : true;
    if (canRequestFocus == null) dart.nullFailed(I[9], 1240, 10, "canRequestFocus");
    let onFocusChange = opts && 'onFocusChange' in opts ? opts.onFocusChange : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[9], 1242, 10, "autofocus");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    ink_well.InkWell.__proto__.new.call(this, {key: key, child: child, onTap: onTap, onDoubleTap: onDoubleTap, onLongPress: onLongPress, onTapDown: onTapDown, onTapCancel: onTapCancel, onHighlightChanged: onHighlightChanged, onHover: onHover, mouseCursor: mouseCursor, containedInkWell: true, highlightShape: box_border.BoxShape.rectangle, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, overlayColor: overlayColor, splashColor: splashColor, splashFactory: splashFactory, radius: radius, borderRadius: borderRadius, customBorder: customBorder, enableFeedback: (t55 = enableFeedback, t55 == null ? true : t55), excludeFromSemantics: excludeFromSemantics, focusNode: focusNode, canRequestFocus: canRequestFocus, onFocusChange: onFocusChange, autofocus: autofocus, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = ink_well.InkWell.prototype;
  dart.addTypeTests(ink_well.InkWell);
  dart.addTypeCaches(ink_well.InkWell);
  dart.setLibraryUri(ink_well.InkWell, I[7]);
  ink_decoration.Ink = class Ink extends framework.StatefulWidget {
    get child() {
      return this[S$0.child$18];
    }
    set child(value) {
      super.child = value;
    }
    get padding() {
      return this[S$0.padding$12];
    }
    set padding(value) {
      super.padding = value;
    }
    get decoration() {
      return this[S$0.decoration$6];
    }
    set decoration(value) {
      super.decoration = value;
    }
    get width() {
      return this[S$0.width$1];
    }
    set width(value) {
      super.width = value;
    }
    get height() {
      return this[S$0.height$6];
    }
    set height(value) {
      super.height = value;
    }
    get [S$0._paddingIncludingDecoration]() {
      let t55;
      if (this.decoration == null || dart.nullCheck(this.decoration).padding == null) {
        t55 = this.padding;
        return t55 == null ? edge_insets.EdgeInsets.zero : t55;
      }
      let decorationPadding = dart.nullCheck(dart.nullCheck(this.decoration).padding);
      if (this.padding == null) return decorationPadding;
      return dart.nullCheck(this.padding).add(decorationPadding);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[108], 234, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfDecoration()).new("bg", this.decoration, {defaultValue: null}));
    }
    createState() {
      return new ink_decoration._InkState.new();
    }
  };
  (ink_decoration.Ink.new = function(opts) {
    let t55;
    let key = opts && 'key' in opts ? opts.key : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.padding$12] = padding;
    this[S$0.width$1] = width;
    this[S$0.height$6] = height;
    this[S$0.child$18] = child;
    if (!(padding == null || dart.test(padding.isNonNegative))) dart.assertFailed(null, I[108], 135, 15, "padding == null || padding.isNonNegative");
    if (!(decoration == null || dart.test(decoration.debugAssertIsValid()))) dart.assertFailed(null, I[108], 136, 15, "decoration == null || decoration.debugAssertIsValid()");
    if (!(color == null || decoration == null)) dart.assertFailed("Cannot provide both a color and a decoration\n" + "The color argument is just a shorthand for \"decoration: BoxDecoration(color: color)\".", I[108], 137, 15, "color == null || decoration == null");
    this[S$0.decoration$6] = (t55 = decoration, t55 == null ? color != null ? new box_decoration.BoxDecoration.new({color: color}) : null : t55);
    ink_decoration.Ink.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = ink_decoration.Ink.prototype;
  (ink_decoration.Ink.image = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let image = opts && 'image' in opts ? opts.image : null;
    if (image == null) dart.nullFailed(I[108], 164, 28, "image");
    let onImageError = opts && 'onImageError' in opts ? opts.onImageError : null;
    let colorFilter = opts && 'colorFilter' in opts ? opts.colorFilter : null;
    let fit = opts && 'fit' in opts ? opts.fit : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C[1] || CT.C1;
    if (alignment == null) dart.nullFailed(I[108], 168, 23, "alignment");
    let centerSlice = opts && 'centerSlice' in opts ? opts.centerSlice : null;
    let repeat = opts && 'repeat' in opts ? opts.repeat : C[653] || CT.C653;
    if (repeat == null) dart.nullFailed(I[108], 170, 17, "repeat");
    let matchTextDirection = opts && 'matchTextDirection' in opts ? opts.matchTextDirection : false;
    if (matchTextDirection == null) dart.nullFailed(I[108], 171, 10, "matchTextDirection");
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.padding$12] = padding;
    this[S$0.width$1] = width;
    this[S$0.height$6] = height;
    this[S$0.child$18] = child;
    if (!(padding == null || dart.test(padding.isNonNegative))) dart.assertFailed(null, I[108], 175, 15, "padding == null || padding.isNonNegative");
    if (!(image != null)) dart.assertFailed(null, I[108], 176, 15, "image != null");
    if (!(alignment != null)) dart.assertFailed(null, I[108], 177, 15, "alignment != null");
    if (!(repeat != null)) dart.assertFailed(null, I[108], 178, 15, "repeat != null");
    if (!(matchTextDirection != null)) dart.assertFailed(null, I[108], 179, 15, "matchTextDirection != null");
    this[S$0.decoration$6] = new box_decoration.BoxDecoration.new({image: new decoration_image.DecorationImage.new({image: image, onError: onImageError, colorFilter: colorFilter, fit: fit, alignment: alignment, centerSlice: centerSlice, repeat: repeat, matchTextDirection: matchTextDirection})});
    ink_decoration.Ink.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = ink_decoration.Ink.prototype;
  dart.addTypeTests(ink_decoration.Ink);
  dart.addTypeCaches(ink_decoration.Ink);
  dart.setMethodSignature(ink_decoration.Ink, () => ({
    __proto__: dart.getMethods(ink_decoration.Ink.__proto__),
    createState: dart.fnType(framework.State$(ink_decoration.Ink), [])
  }));
  dart.setGetterSignature(ink_decoration.Ink, () => ({
    __proto__: dart.getGetters(ink_decoration.Ink.__proto__),
    [S$0._paddingIncludingDecoration]: edge_insets.EdgeInsetsGeometry
  }));
  dart.setLibraryUri(ink_decoration.Ink, I[109]);
  dart.setFieldSignature(ink_decoration.Ink, () => ({
    __proto__: dart.getFields(ink_decoration.Ink.__proto__),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    decoration: dart.finalFieldType(dart.nullable(decoration.Decoration)),
    width: dart.finalFieldType(dart.nullable(core.double)),
    height: dart.finalFieldType(dart.nullable(core.double))
  }));
  ink_decoration._InkState = class _InkState extends framework.State$(ink_decoration.Ink) {
    [S$0._handleRemoved]() {
      this[S$0._ink] = null;
    }
    deactivate() {
      let t55;
      t55 = this[S$0._ink];
      t55 == null ? null : t55.dispose();
      if (!(this[S$0._ink] == null)) dart.assertFailed(null, I[108], 255, 12, "_ink == null");
      super.deactivate();
    }
    [S$0._build](context) {
      let t55;
      if (context == null) dart.nullFailed(I[108], 259, 30, "context");
      if (this[S$0._ink] == null) {
        this[S$0._ink] = new ink_decoration.InkDecoration.new({decoration: this.widget.decoration, configuration: image.createLocalImageConfiguration(context), controller: dart.nullCheck(material.Material.of(context)), referenceBox: box$.RenderBox.as(dart.nullCheck(dart.nullCheck(this[S$0._boxKey].currentContext).findRenderObject())), onRemoved: dart.bind(this, S$0._handleRemoved)});
      } else {
        dart.nullCheck(this[S$0._ink]).decoration = this.widget.decoration;
        dart.nullCheck(this[S$0._ink]).configuration = image.createLocalImageConfiguration(context);
      }
      t55 = this.widget.child;
      return t55 == null ? new container.Container.new({$creationLocationd_0dea112b090073317d4: C[654] || CT.C654}) : t55;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[108], 278, 29, "context");
      if (!dart.test(debug$0.debugCheckHasMaterial(context))) dart.assertFailed(null, I[108], 279, 12, "debugCheckHasMaterial(context)");
      let result = new basic.Padding.new({key: this[S$0._boxKey], padding: this.widget[S$0._paddingIncludingDecoration], child: new basic.Builder.new({builder: dart.bind(this, S$0._build), $creationLocationd_0dea112b090073317d4: C[655] || CT.C655}), $creationLocationd_0dea112b090073317d4: C[656] || CT.C656});
      if (this.widget.width != null || this.widget.height != null) {
        result = new basic.SizedBox.new({width: this.widget.width, height: this.widget.height, child: result, $creationLocationd_0dea112b090073317d4: C[657] || CT.C657});
      }
      return result;
    }
  };
  (ink_decoration._InkState.new = function() {
    this[S$0._boxKey] = T$.GlobalKeyOfStateOfStatefulWidget().new();
    this[S$0._ink] = null;
    ink_decoration._InkState.__proto__.new.call(this);
    ;
  }).prototype = ink_decoration._InkState.prototype;
  dart.addTypeTests(ink_decoration._InkState);
  dart.addTypeCaches(ink_decoration._InkState);
  dart.setMethodSignature(ink_decoration._InkState, () => ({
    __proto__: dart.getMethods(ink_decoration._InkState.__proto__),
    [S$0._handleRemoved]: dart.fnType(dart.void, []),
    [S$0._build]: dart.fnType(framework.Widget, [framework.BuildContext]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(ink_decoration._InkState, I[109]);
  dart.setFieldSignature(ink_decoration._InkState, () => ({
    __proto__: dart.getFields(ink_decoration._InkState.__proto__),
    [S$0._boxKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [S$0._ink]: dart.fieldType(dart.nullable(ink_decoration.InkDecoration))
  }));
  ink_decoration.InkDecoration = class InkDecoration extends material.InkFeature {
    get decoration() {
      return this[S$0._decoration$1];
    }
    set decoration(value) {
      let t55, t55$;
      if (dart.equals(value, this[S$0._decoration$1])) return;
      this[S$0._decoration$1] = value;
      t55 = this[S$0._painter$1];
      t55 == null ? null : t55.dispose();
      this[S$0._painter$1] = (t55$ = this[S$0._decoration$1], t55$ == null ? null : t55$.createBoxPainter(dart.bind(this, S$1._handleChanged)));
      this.controller.markNeedsPaint();
    }
    get configuration() {
      return this[S$1._configuration];
    }
    set configuration(value) {
      if (value == null) dart.nullFailed(I[108], 350, 40, "value");
      if (!(value != null)) dart.assertFailed(null, I[108], 351, 12, "value != null");
      if (dart.equals(value, this[S$1._configuration])) return;
      this[S$1._configuration] = value;
      this.controller.markNeedsPaint();
    }
    [S$1._handleChanged]() {
      this.controller.markNeedsPaint();
    }
    dispose() {
      let t55;
      t55 = this[S$0._painter$1];
      t55 == null ? null : t55.dispose();
      super.dispose();
    }
    paintFeature(canvas, transform) {
      if (canvas == null) dart.nullFailed(I[108], 369, 28, "canvas");
      if (transform == null) dart.nullFailed(I[108], 369, 44, "transform");
      if (this[S$0._painter$1] == null) return;
      let originOffset = matrix_utils.MatrixUtils.getAsTranslation(transform);
      let sizedConfiguration = this.configuration.copyWith({size: this.referenceBox.size});
      if (originOffset == null) {
        canvas.save();
        canvas.transform(transform.storage);
        dart.nullCheck(this[S$0._painter$1]).paint(canvas, ui.Offset.zero, sizedConfiguration);
        canvas.restore();
      } else {
        dart.nullCheck(this[S$0._painter$1]).paint(canvas, originOffset, sizedConfiguration);
      }
    }
  };
  (ink_decoration.InkDecoration.new = function(opts) {
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    let configuration = opts && 'configuration' in opts ? opts.configuration : null;
    if (configuration == null) dart.nullFailed(I[108], 315, 33, "configuration");
    let controller = opts && 'controller' in opts ? opts.controller : null;
    if (controller == null) dart.nullFailed(I[108], 316, 36, "controller");
    let referenceBox = opts && 'referenceBox' in opts ? opts.referenceBox : null;
    if (referenceBox == null) dart.nullFailed(I[108], 317, 24, "referenceBox");
    let onRemoved = opts && 'onRemoved' in opts ? opts.onRemoved : null;
    this[S$0._painter$1] = null;
    this[S$0._decoration$1] = null;
    if (!(configuration != null)) dart.assertFailed(null, I[108], 319, 15, "configuration != null");
    this[S$1._configuration] = configuration;
    ink_decoration.InkDecoration.__proto__.new.call(this, {controller: controller, referenceBox: referenceBox, onRemoved: onRemoved});
    this.decoration = decoration;
    controller.addInkFeature(this);
  }).prototype = ink_decoration.InkDecoration.prototype;
  dart.addTypeTests(ink_decoration.InkDecoration);
  dart.addTypeCaches(ink_decoration.InkDecoration);
  dart.setMethodSignature(ink_decoration.InkDecoration, () => ({
    __proto__: dart.getMethods(ink_decoration.InkDecoration.__proto__),
    [S$1._handleChanged]: dart.fnType(dart.void, []),
    paintFeature: dart.fnType(dart.void, [ui.Canvas, vector_math_64.Matrix4])
  }));
  dart.setGetterSignature(ink_decoration.InkDecoration, () => ({
    __proto__: dart.getGetters(ink_decoration.InkDecoration.__proto__),
    decoration: dart.nullable(decoration.Decoration),
    configuration: image_provider.ImageConfiguration
  }));
  dart.setSetterSignature(ink_decoration.InkDecoration, () => ({
    __proto__: dart.getSetters(ink_decoration.InkDecoration.__proto__),
    decoration: dart.nullable(decoration.Decoration),
    configuration: image_provider.ImageConfiguration
  }));
  dart.setLibraryUri(ink_decoration.InkDecoration, I[109]);
  dart.setFieldSignature(ink_decoration.InkDecoration, () => ({
    __proto__: dart.getFields(ink_decoration.InkDecoration.__proto__),
    [S$0._painter$1]: dart.fieldType(dart.nullable(decoration.BoxPainter)),
    [S$0._decoration$1]: dart.fieldType(dart.nullable(decoration.Decoration)),
    [S$1._configuration]: dart.fieldType(image_provider.ImageConfiguration)
  }));
  list_tile.ListTileStyle = class ListTileStyle extends core.Object {
    toString() {
      return this[S$1._name$23];
    }
  };
  (list_tile.ListTileStyle.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[110], 25, 6, "index");
    if (_name == null) dart.nullFailed(I[110], 25, 6, "_name");
    this.index = index;
    this[S$1._name$23] = _name;
    ;
  }).prototype = list_tile.ListTileStyle.prototype;
  dart.addTypeTests(list_tile.ListTileStyle);
  dart.addTypeCaches(list_tile.ListTileStyle);
  list_tile.ListTileStyle[dart.implements] = () => [core.Enum];
  dart.setLibraryUri(list_tile.ListTileStyle, I[111]);
  dart.setFieldSignature(list_tile.ListTileStyle, () => ({
    __proto__: dart.getFields(list_tile.ListTileStyle.__proto__),
    index: dart.finalFieldType(core.int),
    [S$1._name$23]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(list_tile.ListTileStyle, ['toString']);
  list_tile.ListTileStyle.list = C[658] || CT.C658;
  list_tile.ListTileStyle.drawer = C[659] || CT.C659;
  list_tile.ListTileStyle.values = C[660] || CT.C660;
  list_tile.ListTileTheme = class ListTileTheme extends inherited_theme.InheritedTheme {
    get dense() {
      return this[S$1.dense];
    }
    set dense(value) {
      super.dense = value;
    }
    get shape() {
      return this[S$1.shape$15];
    }
    set shape(value) {
      super.shape = value;
    }
    get style() {
      return this[S$1.style$5];
    }
    set style(value) {
      super.style = value;
    }
    get selectedColor() {
      return this[S$1.selectedColor$3];
    }
    set selectedColor(value) {
      super.selectedColor = value;
    }
    get iconColor() {
      return this[S$1.iconColor];
    }
    set iconColor(value) {
      super.iconColor = value;
    }
    get textColor() {
      return this[S$1.textColor$3];
    }
    set textColor(value) {
      super.textColor = value;
    }
    get contentPadding() {
      return this[S$1.contentPadding$3];
    }
    set contentPadding(value) {
      super.contentPadding = value;
    }
    get tileColor() {
      return this[S$1.tileColor];
    }
    set tileColor(value) {
      super.tileColor = value;
    }
    get selectedTileColor() {
      return this[S$1.selectedTileColor];
    }
    set selectedTileColor(value) {
      super.selectedTileColor = value;
    }
    get horizontalTitleGap() {
      return this[S$1.horizontalTitleGap];
    }
    set horizontalTitleGap(value) {
      super.horizontalTitleGap = value;
    }
    get minVerticalPadding() {
      return this[S$1.minVerticalPadding];
    }
    set minVerticalPadding(value) {
      super.minVerticalPadding = value;
    }
    get minLeadingWidth() {
      return this[S$1.minLeadingWidth];
    }
    set minLeadingWidth(value) {
      super.minLeadingWidth = value;
    }
    get enableFeedback() {
      return this[S$1.enableFeedback$12];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    static merge(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let dense = opts && 'dense' in opts ? opts.dense : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let style = opts && 'style' in opts ? opts.style : null;
      let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
      let iconColor = opts && 'iconColor' in opts ? opts.iconColor : null;
      let textColor = opts && 'textColor' in opts ? opts.textColor : null;
      let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
      let tileColor = opts && 'tileColor' in opts ? opts.tileColor : null;
      let selectedTileColor = opts && 'selectedTileColor' in opts ? opts.selectedTileColor : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      let horizontalTitleGap = opts && 'horizontalTitleGap' in opts ? opts.horizontalTitleGap : null;
      let minVerticalPadding = opts && 'minVerticalPadding' in opts ? opts.minVerticalPadding : null;
      let minLeadingWidth = opts && 'minLeadingWidth' in opts ? opts.minLeadingWidth : null;
      let child = opts && 'child' in opts ? opts.child : null;
      if (child == null) dart.nullFailed(I[110], 81, 21, "child");
      if (!(child != null)) dart.assertFailed(null, I[110], 83, 12, "child != null");
      return new basic.Builder.new({builder: dart.fn(context => {
          let t55, t55$, t55$0, t55$1, t55$2, t55$3, t55$4, t55$5, t55$6, t55$7, t55$8, t55$9, t55$10;
          if (context == null) dart.nullFailed(I[110], 85, 30, "context");
          let parent = list_tile.ListTileTheme.of(context);
          return new list_tile.ListTileTheme.new({key: key, dense: (t55 = dense, t55 == null ? parent.dense : t55), shape: (t55$ = shape, t55$ == null ? parent.shape : t55$), style: (t55$0 = style, t55$0 == null ? parent.style : t55$0), selectedColor: (t55$1 = selectedColor, t55$1 == null ? parent.selectedColor : t55$1), iconColor: (t55$2 = iconColor, t55$2 == null ? parent.iconColor : t55$2), textColor: (t55$3 = textColor, t55$3 == null ? parent.textColor : t55$3), contentPadding: (t55$4 = contentPadding, t55$4 == null ? parent.contentPadding : t55$4), tileColor: (t55$5 = tileColor, t55$5 == null ? parent.tileColor : t55$5), selectedTileColor: (t55$6 = selectedTileColor, t55$6 == null ? parent.selectedTileColor : t55$6), enableFeedback: (t55$7 = enableFeedback, t55$7 == null ? parent.enableFeedback : t55$7), horizontalTitleGap: (t55$8 = horizontalTitleGap, t55$8 == null ? parent.horizontalTitleGap : t55$8), minVerticalPadding: (t55$9 = minVerticalPadding, t55$9 == null ? parent.minVerticalPadding : t55$9), minLeadingWidth: (t55$10 = minLeadingWidth, t55$10 == null ? parent.minLeadingWidth : t55$10), child: child, $creationLocationd_0dea112b090073317d4: C[661] || CT.C661});
        }, T$.BuildContextToListTileTheme()), $creationLocationd_0dea112b090073317d4: C[662] || CT.C662});
    }
    static of(context) {
      let t55;
      if (context == null) dart.nullFailed(I[110], 173, 40, "context");
      let result = context.dependOnInheritedWidgetOfExactType(list_tile.ListTileTheme);
      t55 = result;
      return t55 == null ? C[663] || CT.C663 : t55;
    }
    wrap(context, child) {
      if (context == null) dart.nullFailed(I[110], 179, 28, "context");
      if (child == null) dart.nullFailed(I[110], 179, 44, "child");
      return new list_tile.ListTileTheme.new({dense: this.dense, shape: this.shape, style: this.style, selectedColor: this.selectedColor, iconColor: this.iconColor, textColor: this.textColor, contentPadding: this.contentPadding, tileColor: this.tileColor, selectedTileColor: this.selectedTileColor, enableFeedback: this.enableFeedback, horizontalTitleGap: this.horizontalTitleGap, minVerticalPadding: this.minVerticalPadding, minLeadingWidth: this.minLeadingWidth, child: child, $creationLocationd_0dea112b090073317d4: C[667] || CT.C667});
    }
    updateShouldNotify(oldWidget) {
      list_tile.ListTileTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[110], 199, 41, "oldWidget");
      return this.dense != oldWidget.dense || !dart.equals(this.shape, oldWidget.shape) || this.style != oldWidget.style || !dart.equals(this.selectedColor, oldWidget.selectedColor) || !dart.equals(this.iconColor, oldWidget.iconColor) || !dart.equals(this.textColor, oldWidget.textColor) || !dart.equals(this.contentPadding, oldWidget.contentPadding) || !dart.equals(this.tileColor, oldWidget.tileColor) || !dart.equals(this.selectedTileColor, oldWidget.selectedTileColor) || this.enableFeedback != oldWidget.enableFeedback || this.horizontalTitleGap != oldWidget.horizontalTitleGap || this.minVerticalPadding != oldWidget.minVerticalPadding || this.minLeadingWidth != oldWidget.minLeadingWidth;
    }
  };
  (list_tile.ListTileTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let dense = opts && 'dense' in opts ? opts.dense : false;
    if (dense == null) dart.nullFailed(I[110], 46, 10, "dense");
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let style = opts && 'style' in opts ? opts.style : C[658] || CT.C658;
    if (style == null) dart.nullFailed(I[110], 48, 10, "style");
    let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
    let iconColor = opts && 'iconColor' in opts ? opts.iconColor : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
    let tileColor = opts && 'tileColor' in opts ? opts.tileColor : null;
    let selectedTileColor = opts && 'selectedTileColor' in opts ? opts.selectedTileColor : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
    let horizontalTitleGap = opts && 'horizontalTitleGap' in opts ? opts.horizontalTitleGap : null;
    let minVerticalPadding = opts && 'minVerticalPadding' in opts ? opts.minVerticalPadding : null;
    let minLeadingWidth = opts && 'minLeadingWidth' in opts ? opts.minLeadingWidth : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[110], 59, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.dense] = dense;
    this[S$1.shape$15] = shape;
    this[S$1.style$5] = style;
    this[S$1.selectedColor$3] = selectedColor;
    this[S$1.iconColor] = iconColor;
    this[S$1.textColor$3] = textColor;
    this[S$1.contentPadding$3] = contentPadding;
    this[S$1.tileColor] = tileColor;
    this[S$1.selectedTileColor] = selectedTileColor;
    this[S$1.enableFeedback$12] = enableFeedback;
    this[S$1.horizontalTitleGap] = horizontalTitleGap;
    this[S$1.minVerticalPadding] = minVerticalPadding;
    this[S$1.minLeadingWidth] = minLeadingWidth;
    list_tile.ListTileTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = list_tile.ListTileTheme.prototype;
  dart.addTypeTests(list_tile.ListTileTheme);
  dart.addTypeCaches(list_tile.ListTileTheme);
  dart.setMethodSignature(list_tile.ListTileTheme, () => ({
    __proto__: dart.getMethods(list_tile.ListTileTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(list_tile.ListTileTheme, I[111]);
  dart.setFieldSignature(list_tile.ListTileTheme, () => ({
    __proto__: dart.getFields(list_tile.ListTileTheme.__proto__),
    dense: dart.finalFieldType(core.bool),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    style: dart.finalFieldType(list_tile.ListTileStyle),
    selectedColor: dart.finalFieldType(dart.nullable(ui.Color)),
    iconColor: dart.finalFieldType(dart.nullable(ui.Color)),
    textColor: dart.finalFieldType(dart.nullable(ui.Color)),
    contentPadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    tileColor: dart.finalFieldType(dart.nullable(ui.Color)),
    selectedTileColor: dart.finalFieldType(dart.nullable(ui.Color)),
    horizontalTitleGap: dart.finalFieldType(dart.nullable(core.double)),
    minVerticalPadding: dart.finalFieldType(dart.nullable(core.double)),
    minLeadingWidth: dart.finalFieldType(dart.nullable(core.double)),
    enableFeedback: dart.finalFieldType(dart.nullable(core.bool))
  }));
  list_tile.ListTileControlAffinity = class ListTileControlAffinity extends core.Object {
    toString() {
      return this[S$1._name$23];
    }
  };
  (list_tile.ListTileControlAffinity.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[110], 226, 6, "index");
    if (_name == null) dart.nullFailed(I[110], 226, 6, "_name");
    this.index = index;
    this[S$1._name$23] = _name;
    ;
  }).prototype = list_tile.ListTileControlAffinity.prototype;
  dart.addTypeTests(list_tile.ListTileControlAffinity);
  dart.addTypeCaches(list_tile.ListTileControlAffinity);
  list_tile.ListTileControlAffinity[dart.implements] = () => [core.Enum];
  dart.setLibraryUri(list_tile.ListTileControlAffinity, I[111]);
  dart.setFieldSignature(list_tile.ListTileControlAffinity, () => ({
    __proto__: dart.getFields(list_tile.ListTileControlAffinity.__proto__),
    index: dart.finalFieldType(core.int),
    [S$1._name$23]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(list_tile.ListTileControlAffinity, ['toString']);
  list_tile.ListTileControlAffinity.leading = C[668] || CT.C668;
  list_tile.ListTileControlAffinity.trailing = C[669] || CT.C669;
  list_tile.ListTileControlAffinity.platform = C[670] || CT.C670;
  list_tile.ListTileControlAffinity.values = C[671] || CT.C671;
  list_tile.ListTile = class ListTile extends framework.StatelessWidget {
    get leading() {
      return this[S$1.leading$1];
    }
    set leading(value) {
      super.leading = value;
    }
    get title() {
      return this[S$1.title$1];
    }
    set title(value) {
      super.title = value;
    }
    get subtitle() {
      return this[S$1.subtitle];
    }
    set subtitle(value) {
      super.subtitle = value;
    }
    get trailing() {
      return this[S$1.trailing$1];
    }
    set trailing(value) {
      super.trailing = value;
    }
    get isThreeLine() {
      return this[S$1.isThreeLine];
    }
    set isThreeLine(value) {
      super.isThreeLine = value;
    }
    get dense() {
      return this[S$1.dense$1];
    }
    set dense(value) {
      super.dense = value;
    }
    get visualDensity() {
      return this[S$1.visualDensity$9];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get shape() {
      return this[S$1.shape$16];
    }
    set shape(value) {
      super.shape = value;
    }
    get contentPadding() {
      return this[S$1.contentPadding$4];
    }
    set contentPadding(value) {
      super.contentPadding = value;
    }
    get enabled() {
      return this[S$1.enabled$1];
    }
    set enabled(value) {
      super.enabled = value;
    }
    get onTap() {
      return this[S$1.onTap$5];
    }
    set onTap(value) {
      super.onTap = value;
    }
    get onLongPress() {
      return this[S$1.onLongPress$6];
    }
    set onLongPress(value) {
      super.onLongPress = value;
    }
    get mouseCursor() {
      return this[S$1.mouseCursor$14];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get selected() {
      return this[S$1.selected$3];
    }
    set selected(value) {
      super.selected = value;
    }
    get focusColor() {
      return this[S$1.focusColor$11];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[S$1.hoverColor$12];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get focusNode() {
      return this[S$1.focusNode$8];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get autofocus() {
      return this[S$1.autofocus$8];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get tileColor() {
      return this[S$1.tileColor$1];
    }
    set tileColor(value) {
      super.tileColor = value;
    }
    get selectedTileColor() {
      return this[S$1.selectedTileColor$1];
    }
    set selectedTileColor(value) {
      super.selectedTileColor = value;
    }
    get enableFeedback() {
      return this[S$1.enableFeedback$13];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get horizontalTitleGap() {
      return this[S$1.horizontalTitleGap$1];
    }
    set horizontalTitleGap(value) {
      super.horizontalTitleGap = value;
    }
    get minVerticalPadding() {
      return this[S$1.minVerticalPadding$1];
    }
    set minVerticalPadding(value) {
      super.minVerticalPadding = value;
    }
    get minLeadingWidth() {
      return this[S$1.minLeadingWidth$1];
    }
    set minLeadingWidth(value) {
      super.minLeadingWidth = value;
    }
    static divideTiles(opts) {
      let context = opts && 'context' in opts ? opts.context : null;
      let tiles = opts && 'tiles' in opts ? opts.tiles : null;
      if (tiles == null) dart.nullFailed(I[110], 979, 90, "tiles");
      let color = opts && 'color' in opts ? opts.color : null;
      return new (T$.SyncIterableOfWidget()).new(function* divideTiles() {
        if (!(tiles != null)) dart.assertFailed(null, I[110], 980, 12, "tiles != null");
        if (!(color != null || context != null)) dart.assertFailed(null, I[110], 981, 12, "color != null || context != null");
        let iterator = tiles[S$1.$iterator];
        let hasNext = iterator.moveNext();
        if (!dart.test(hasNext)) return;
        let decoration = new box_decoration.BoxDecoration.new({border: new box_border.Border.new({bottom: divider.Divider.createBorderSide(context, {color: color})})});
        let tile = iterator.current;
        while (dart.test(iterator.moveNext())) {
          yield new container.DecoratedBox.new({position: proxy_box.DecorationPosition.foreground, decoration: decoration, child: tile, $creationLocationd_0dea112b090073317d4: C[672] || CT.C672});
          tile = iterator.current;
        }
        if (dart.test(hasNext)) yield tile;
      });
    }
    [S$1._iconColor](theme, tileTheme) {
      let t55, t55$;
      if (theme == null) dart.nullFailed(I[110], 1008, 31, "theme");
      if (!dart.test(this.enabled)) return theme.disabledColor;
      if (dart.test(this.selected) && (t55 = tileTheme, t55 == null ? null : t55.selectedColor) != null) return dart.nullCheck(tileTheme).selectedColor;
      if (!dart.test(this.selected) && (t55$ = tileTheme, t55$ == null ? null : t55$.iconColor) != null) return dart.nullCheck(tileTheme).iconColor;
      switch (theme.brightness) {
        case C[405] || CT.C405:
        {
          return dart.test(this.selected) ? theme.colorScheme.primary : colors$.Colors.black45;
        }
        case C[404] || CT.C404:
        {
          return dart.test(this.selected) ? theme.colorScheme.primary : null;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    [S$1._textColor](theme, tileTheme, defaultColor) {
      let t55, t55$;
      if (theme == null) dart.nullFailed(I[110], 1028, 31, "theme");
      if (!dart.test(this.enabled)) return theme.disabledColor;
      if (dart.test(this.selected) && (t55 = tileTheme, t55 == null ? null : t55.selectedColor) != null) return dart.nullCheck(tileTheme).selectedColor;
      if (!dart.test(this.selected) && (t55$ = tileTheme, t55$ == null ? null : t55$.textColor) != null) return dart.nullCheck(tileTheme).textColor;
      if (dart.test(this.selected)) return theme.colorScheme.primary;
      return defaultColor;
    }
    [S$1._isDenseLayout](tileTheme) {
      let t56, t55, t55$;
      t55$ = (t55 = this.dense, t55 == null ? (t56 = tileTheme, t56 == null ? null : t56.dense) : t55);
      return t55$ == null ? false : t55$;
    }
    [S$1._titleTextStyle](theme, tileTheme) {
      if (theme == null) dart.nullFailed(I[110], 1048, 39, "theme");
      let style = null;
      if (tileTheme != null) {
        switch (tileTheme.style) {
          case C[659] || CT.C659:
          {
            style = dart.nullCheck(theme.textTheme.bodyText1);
            break;
          }
          case C[658] || CT.C658:
          {
            style = dart.nullCheck(theme.textTheme.subtitle1);
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
      } else {
        style = dart.nullCheck(theme.textTheme.subtitle1);
      }
      let color = this[S$1._textColor](theme, tileTheme, style.color);
      return dart.test(this[S$1._isDenseLayout](tileTheme)) ? style.copyWith({fontSize: 13.0, color: color}) : style.copyWith({color: color});
    }
    [S$1._subtitleTextStyle](theme, tileTheme) {
      if (theme == null) dart.nullFailed(I[110], 1068, 42, "theme");
      let style = dart.nullCheck(theme.textTheme.bodyText2);
      let color = this[S$1._textColor](theme, tileTheme, dart.nullCheck(theme.textTheme.caption).color);
      return dart.test(this[S$1._isDenseLayout](tileTheme)) ? style.copyWith({color: color, fontSize: 12.0}) : style.copyWith({color: color});
    }
    [S$1._trailingAndLeadingTextStyle](theme, tileTheme) {
      if (theme == null) dart.nullFailed(I[110], 1076, 52, "theme");
      let style = dart.nullCheck(theme.textTheme.bodyText2);
      let color = this[S$1._textColor](theme, tileTheme, style.color);
      return style.copyWith({color: color});
    }
    [S$1._tileBackgroundColor](tileTheme) {
      let t55, t55$;
      if (!dart.test(this.selected)) {
        if (this.tileColor != null) return dart.nullCheck(this.tileColor);
        if ((t55 = tileTheme, t55 == null ? null : t55.tileColor) != null) return dart.nullCheck(dart.nullCheck(tileTheme).tileColor);
      }
      if (dart.test(this.selected)) {
        if (this.selectedTileColor != null) return dart.nullCheck(this.selectedTileColor);
        if ((t55$ = tileTheme, t55$ == null ? null : t55$.selectedTileColor) != null) return dart.nullCheck(dart.nullCheck(tileTheme).selectedTileColor);
      }
      return colors$.Colors.transparent;
    }
    build(context) {
      let t55, t55$, t56, t55$0, t55$1, t55$2, t56$, t56$0, t56$1, t56$2, t56$3, t56$4, t56$5, t56$6, t56$7, t56$8, t56$9, t56$10, t56$11;
      if (context == null) dart.nullFailed(I[110], 1101, 29, "context");
      if (!dart.test(debug$0.debugCheckHasMaterial(context))) dart.assertFailed(null, I[110], 1102, 12, "debugCheckHasMaterial(context)");
      let theme = theme$.Theme.of(context);
      let tileTheme = list_tile.ListTileTheme.of(context);
      let iconThemeData = null;
      let leadingAndTrailingTextStyle = null;
      if (this.leading != null || this.trailing != null) {
        iconThemeData = new icon_theme_data.IconThemeData.new({color: this[S$1._iconColor](theme, tileTheme)});
        leadingAndTrailingTextStyle = this[S$1._trailingAndLeadingTextStyle](theme, tileTheme);
      }
      let leadingIcon = null;
      if (this.leading != null) {
        leadingIcon = new implicit_animations.AnimatedDefaultTextStyle.new({style: dart.nullCheck(leadingAndTrailingTextStyle), duration: constants.kThemeChangeDuration, child: icon_theme.IconTheme.merge({data: dart.nullCheck(iconThemeData), child: dart.nullCheck(this.leading)}), $creationLocationd_0dea112b090073317d4: C[673] || CT.C673});
      }
      let titleStyle = this[S$1._titleTextStyle](theme, tileTheme);
      let titleText = new implicit_animations.AnimatedDefaultTextStyle.new({style: titleStyle, duration: constants.kThemeChangeDuration, child: (t55 = this.title, t55 == null ? C[674] || CT.C674 : t55), $creationLocationd_0dea112b090073317d4: C[676] || CT.C676});
      let subtitleText = null;
      let subtitleStyle = null;
      if (this.subtitle != null) {
        subtitleStyle = this[S$1._subtitleTextStyle](theme, tileTheme);
        subtitleText = new implicit_animations.AnimatedDefaultTextStyle.new({style: subtitleStyle, duration: constants.kThemeChangeDuration, child: dart.nullCheck(this.subtitle), $creationLocationd_0dea112b090073317d4: C[677] || CT.C677});
      }
      let trailingIcon = null;
      if (this.trailing != null) {
        trailingIcon = new implicit_animations.AnimatedDefaultTextStyle.new({style: dart.nullCheck(leadingAndTrailingTextStyle), duration: constants.kThemeChangeDuration, child: icon_theme.IconTheme.merge({data: dart.nullCheck(iconThemeData), child: dart.nullCheck(this.trailing)}), $creationLocationd_0dea112b090073317d4: C[678] || CT.C678});
      }
      let _defaultContentPadding = C[510] || CT.C510;
      let textDirection = basic.Directionality.of(context);
      let resolvedContentPadding = (t55$1 = (t55$0 = (t55$ = this.contentPadding, t55$ == null ? null : t55$.resolve(textDirection)), t55$0 == null ? (t56 = tileTheme.contentPadding, t56 == null ? null : t56.resolve(textDirection)) : t55$0), t55$1 == null ? _defaultContentPadding : t55$1);
      let resolvedMouseCursor = material_state.MaterialStateProperty.resolveAs(mouse_cursor.MouseCursor, (t55$2 = this.mouseCursor, t55$2 == null ? material_state.MaterialStateMouseCursor.clickable : t55$2), (() => {
        let t55 = T$.LinkedHashSetOfMaterialState().new();
        if (!dart.test(this.enabled) || this.onTap == null && this.onLongPress == null) t55.add(material_state.MaterialState.disabled);
        if (dart.test(this.selected)) t55.add(material_state.MaterialState.selected);
        return t55;
      })());
      return new ink_well.InkWell.new({customBorder: (t56$ = this.shape, t56$ == null ? tileTheme.shape : t56$), onTap: dart.test(this.enabled) ? this.onTap : null, onLongPress: dart.test(this.enabled) ? this.onLongPress : null, mouseCursor: resolvedMouseCursor, canRequestFocus: this.enabled, focusNode: this.focusNode, focusColor: this.focusColor, hoverColor: this.hoverColor, autofocus: this.autofocus, enableFeedback: (t56$1 = (t56$0 = this.enableFeedback, t56$0 == null ? tileTheme.enableFeedback : t56$0), t56$1 == null ? true : t56$1), child: new basic.Semantics.new({selected: this.selected, enabled: this.enabled, child: new ink_decoration.Ink.new({decoration: new shape_decoration.ShapeDecoration.new({shape: (t56$3 = (t56$2 = this.shape, t56$2 == null ? tileTheme.shape : t56$2), t56$3 == null ? C[679] || CT.C679 : t56$3), color: this[S$1._tileBackgroundColor](tileTheme)}), child: new safe_area.SafeArea.new({top: false, bottom: false, minimum: resolvedContentPadding, child: new list_tile._ListTile.new({leading: leadingIcon, title: titleText, subtitle: subtitleText, trailing: trailingIcon, isDense: this[S$1._isDenseLayout](tileTheme), visualDensity: (t56$4 = this.visualDensity, t56$4 == null ? theme.visualDensity : t56$4), isThreeLine: this.isThreeLine, textDirection: textDirection, titleBaselineType: dart.nullCheck(titleStyle.textBaseline), subtitleBaselineType: (t56$5 = subtitleStyle, t56$5 == null ? null : t56$5.textBaseline), horizontalTitleGap: (t56$7 = (t56$6 = this.horizontalTitleGap, t56$6 == null ? tileTheme.horizontalTitleGap : t56$6), t56$7 == null ? 16.0 : t56$7), minVerticalPadding: (t56$9 = (t56$8 = this.minVerticalPadding, t56$8 == null ? tileTheme.minVerticalPadding : t56$8), t56$9 == null ? 4.0 : t56$9), minLeadingWidth: (t56$11 = (t56$10 = this.minLeadingWidth, t56$10 == null ? tileTheme.minLeadingWidth : t56$10), t56$11 == null ? 40.0 : t56$11), $creationLocationd_0dea112b090073317d4: C[680] || CT.C680}), $creationLocationd_0dea112b090073317d4: C[681] || CT.C681}), $creationLocationd_0dea112b090073317d4: C[682] || CT.C682}), $creationLocationd_0dea112b090073317d4: C[683] || CT.C683}), $creationLocationd_0dea112b090073317d4: C[684] || CT.C684});
    }
  };
  (list_tile.ListTile.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let leading = opts && 'leading' in opts ? opts.leading : null;
    let title = opts && 'title' in opts ? opts.title : null;
    let subtitle = opts && 'subtitle' in opts ? opts.subtitle : null;
    let trailing = opts && 'trailing' in opts ? opts.trailing : null;
    let isThreeLine = opts && 'isThreeLine' in opts ? opts.isThreeLine : false;
    if (isThreeLine == null) dart.nullFailed(I[110], 738, 10, "isThreeLine");
    let dense = opts && 'dense' in opts ? opts.dense : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
    let enabled = opts && 'enabled' in opts ? opts.enabled : true;
    if (enabled == null) dart.nullFailed(I[110], 743, 10, "enabled");
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let selected = opts && 'selected' in opts ? opts.selected : false;
    if (selected == null) dart.nullFailed(I[110], 747, 10, "selected");
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[110], 751, 10, "autofocus");
    let tileColor = opts && 'tileColor' in opts ? opts.tileColor : null;
    let selectedTileColor = opts && 'selectedTileColor' in opts ? opts.selectedTileColor : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
    let horizontalTitleGap = opts && 'horizontalTitleGap' in opts ? opts.horizontalTitleGap : null;
    let minVerticalPadding = opts && 'minVerticalPadding' in opts ? opts.minVerticalPadding : null;
    let minLeadingWidth = opts && 'minLeadingWidth' in opts ? opts.minLeadingWidth : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.leading$1] = leading;
    this[S$1.title$1] = title;
    this[S$1.subtitle] = subtitle;
    this[S$1.trailing$1] = trailing;
    this[S$1.isThreeLine] = isThreeLine;
    this[S$1.dense$1] = dense;
    this[S$1.visualDensity$9] = visualDensity;
    this[S$1.shape$16] = shape;
    this[S$1.contentPadding$4] = contentPadding;
    this[S$1.enabled$1] = enabled;
    this[S$1.onTap$5] = onTap;
    this[S$1.onLongPress$6] = onLongPress;
    this[S$1.mouseCursor$14] = mouseCursor;
    this[S$1.selected$3] = selected;
    this[S$1.focusColor$11] = focusColor;
    this[S$1.hoverColor$12] = hoverColor;
    this[S$1.focusNode$8] = focusNode;
    this[S$1.autofocus$8] = autofocus;
    this[S$1.tileColor$1] = tileColor;
    this[S$1.selectedTileColor$1] = selectedTileColor;
    this[S$1.enableFeedback$13] = enableFeedback;
    this[S$1.horizontalTitleGap$1] = horizontalTitleGap;
    this[S$1.minVerticalPadding$1] = minVerticalPadding;
    this[S$1.minLeadingWidth$1] = minLeadingWidth;
    if (!(isThreeLine != null)) dart.assertFailed(null, I[110], 758, 15, "isThreeLine != null");
    if (!(enabled != null)) dart.assertFailed(null, I[110], 759, 15, "enabled != null");
    if (!(selected != null)) dart.assertFailed(null, I[110], 760, 15, "selected != null");
    if (!(autofocus != null)) dart.assertFailed(null, I[110], 761, 15, "autofocus != null");
    if (!(!dart.test(isThreeLine) || subtitle != null)) dart.assertFailed(null, I[110], 762, 15, "!isThreeLine || subtitle != null");
    list_tile.ListTile.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = list_tile.ListTile.prototype;
  dart.addTypeTests(list_tile.ListTile);
  dart.addTypeCaches(list_tile.ListTile);
  dart.setMethodSignature(list_tile.ListTile, () => ({
    __proto__: dart.getMethods(list_tile.ListTile.__proto__),
    [S$1._iconColor]: dart.fnType(dart.nullable(ui.Color), [theme_data.ThemeData, dart.nullable(list_tile.ListTileTheme)]),
    [S$1._textColor]: dart.fnType(dart.nullable(ui.Color), [theme_data.ThemeData, dart.nullable(list_tile.ListTileTheme), dart.nullable(ui.Color)]),
    [S$1._isDenseLayout]: dart.fnType(core.bool, [dart.nullable(list_tile.ListTileTheme)]),
    [S$1._titleTextStyle]: dart.fnType(text_style.TextStyle, [theme_data.ThemeData, dart.nullable(list_tile.ListTileTheme)]),
    [S$1._subtitleTextStyle]: dart.fnType(text_style.TextStyle, [theme_data.ThemeData, dart.nullable(list_tile.ListTileTheme)]),
    [S$1._trailingAndLeadingTextStyle]: dart.fnType(text_style.TextStyle, [theme_data.ThemeData, dart.nullable(list_tile.ListTileTheme)]),
    [S$1._tileBackgroundColor]: dart.fnType(ui.Color, [dart.nullable(list_tile.ListTileTheme)]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(list_tile.ListTile, I[111]);
  dart.setFieldSignature(list_tile.ListTile, () => ({
    __proto__: dart.getFields(list_tile.ListTile.__proto__),
    leading: dart.finalFieldType(dart.nullable(framework.Widget)),
    title: dart.finalFieldType(dart.nullable(framework.Widget)),
    subtitle: dart.finalFieldType(dart.nullable(framework.Widget)),
    trailing: dart.finalFieldType(dart.nullable(framework.Widget)),
    isThreeLine: dart.finalFieldType(core.bool),
    dense: dart.finalFieldType(dart.nullable(core.bool)),
    visualDensity: dart.finalFieldType(dart.nullable(theme_data.VisualDensity)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    contentPadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    enabled: dart.finalFieldType(core.bool),
    onTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onLongPress: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    mouseCursor: dart.finalFieldType(dart.nullable(mouse_cursor.MouseCursor)),
    selected: dart.finalFieldType(core.bool),
    focusColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hoverColor: dart.finalFieldType(dart.nullable(ui.Color)),
    focusNode: dart.finalFieldType(dart.nullable(focus_manager.FocusNode)),
    autofocus: dart.finalFieldType(core.bool),
    tileColor: dart.finalFieldType(dart.nullable(ui.Color)),
    selectedTileColor: dart.finalFieldType(dart.nullable(ui.Color)),
    enableFeedback: dart.finalFieldType(dart.nullable(core.bool)),
    horizontalTitleGap: dart.finalFieldType(dart.nullable(core.double)),
    minVerticalPadding: dart.finalFieldType(dart.nullable(core.double)),
    minLeadingWidth: dart.finalFieldType(dart.nullable(core.double))
  }));
  list_tile._ListTileSlot = class _ListTileSlot extends core.Object {
    toString() {
      return this[S$1._name$23];
    }
  };
  (list_tile._ListTileSlot.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[110], 1215, 6, "index");
    if (_name == null) dart.nullFailed(I[110], 1215, 6, "_name");
    this.index = index;
    this[S$1._name$23] = _name;
    ;
  }).prototype = list_tile._ListTileSlot.prototype;
  dart.addTypeTests(list_tile._ListTileSlot);
  dart.addTypeCaches(list_tile._ListTileSlot);
  list_tile._ListTileSlot[dart.implements] = () => [core.Enum];
  dart.setLibraryUri(list_tile._ListTileSlot, I[111]);
  dart.setFieldSignature(list_tile._ListTileSlot, () => ({
    __proto__: dart.getFields(list_tile._ListTileSlot.__proto__),
    index: dart.finalFieldType(core.int),
    [S$1._name$23]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(list_tile._ListTileSlot, ['toString']);
  list_tile._ListTileSlot.leading = C[685] || CT.C685;
  list_tile._ListTileSlot.title = C[686] || CT.C686;
  list_tile._ListTileSlot.subtitle = C[687] || CT.C687;
  list_tile._ListTileSlot.trailing = C[688] || CT.C688;
  list_tile._ListTileSlot.values = C[689] || CT.C689;
  list_tile._ListTile = class _ListTile extends framework.RenderObjectWidget {
    get leading() {
      return this[S$1.leading$2];
    }
    set leading(value) {
      super.leading = value;
    }
    get title() {
      return this[S$1.title$2];
    }
    set title(value) {
      super.title = value;
    }
    get subtitle() {
      return this[S$1.subtitle$1];
    }
    set subtitle(value) {
      super.subtitle = value;
    }
    get trailing() {
      return this[S$1.trailing$2];
    }
    set trailing(value) {
      super.trailing = value;
    }
    get isThreeLine() {
      return this[S$1.isThreeLine$1];
    }
    set isThreeLine(value) {
      super.isThreeLine = value;
    }
    get isDense() {
      return this[S$1.isDense$3];
    }
    set isDense(value) {
      super.isDense = value;
    }
    get visualDensity() {
      return this[S$1.visualDensity$10];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get textDirection() {
      return this[S$1.textDirection$1];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get titleBaselineType() {
      return this[S$1.titleBaselineType];
    }
    set titleBaselineType(value) {
      super.titleBaselineType = value;
    }
    get subtitleBaselineType() {
      return this[S$1.subtitleBaselineType];
    }
    set subtitleBaselineType(value) {
      super.subtitleBaselineType = value;
    }
    get horizontalTitleGap() {
      return this[S$1.horizontalTitleGap$2];
    }
    set horizontalTitleGap(value) {
      super.horizontalTitleGap = value;
    }
    get minVerticalPadding() {
      return this[S$1.minVerticalPadding$2];
    }
    set minVerticalPadding(value) {
      super.minVerticalPadding = value;
    }
    get minLeadingWidth() {
      return this[S$1.minLeadingWidth$2];
    }
    set minLeadingWidth(value) {
      super.minLeadingWidth = value;
    }
    createElement() {
      return new list_tile._ListTileElement.new(this);
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(I[110], 1266, 51, "context");
      return new list_tile._RenderListTile.new({isThreeLine: this.isThreeLine, isDense: this.isDense, visualDensity: this.visualDensity, textDirection: this.textDirection, titleBaselineType: this.titleBaselineType, subtitleBaselineType: this.subtitleBaselineType, horizontalTitleGap: this.horizontalTitleGap, minVerticalPadding: this.minVerticalPadding, minLeadingWidth: this.minLeadingWidth});
    }
    updateRenderObject(context, renderObject) {
      let t56;
      if (context == null) dart.nullFailed(I[110], 1281, 40, "context");
      list_tile._RenderListTile.as(renderObject);
      if (renderObject == null) dart.nullFailed(I[110], 1281, 65, "renderObject");
      t56 = renderObject;
      (() => {
        t56.isThreeLine = this.isThreeLine;
        t56.isDense = this.isDense;
        t56.visualDensity = this.visualDensity;
        t56.textDirection = this.textDirection;
        t56.titleBaselineType = this.titleBaselineType;
        t56.subtitleBaselineType = this.subtitleBaselineType;
        t56.horizontalTitleGap = this.horizontalTitleGap;
        t56.minLeadingWidth = this.minLeadingWidth;
        t56.minVerticalPadding = this.minVerticalPadding;
        return t56;
      })();
    }
  };
  (list_tile._ListTile.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let leading = opts && 'leading' in opts ? opts.leading : null;
    let title = opts && 'title' in opts ? opts.title : null;
    if (title == null) dart.nullFailed(I[110], 1226, 19, "title");
    let subtitle = opts && 'subtitle' in opts ? opts.subtitle : null;
    let trailing = opts && 'trailing' in opts ? opts.trailing : null;
    let isThreeLine = opts && 'isThreeLine' in opts ? opts.isThreeLine : null;
    if (isThreeLine == null) dart.nullFailed(I[110], 1229, 19, "isThreeLine");
    let isDense = opts && 'isDense' in opts ? opts.isDense : null;
    if (isDense == null) dart.nullFailed(I[110], 1230, 19, "isDense");
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    if (visualDensity == null) dart.nullFailed(I[110], 1231, 19, "visualDensity");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    if (textDirection == null) dart.nullFailed(I[110], 1232, 19, "textDirection");
    let titleBaselineType = opts && 'titleBaselineType' in opts ? opts.titleBaselineType : null;
    if (titleBaselineType == null) dart.nullFailed(I[110], 1233, 19, "titleBaselineType");
    let horizontalTitleGap = opts && 'horizontalTitleGap' in opts ? opts.horizontalTitleGap : null;
    if (horizontalTitleGap == null) dart.nullFailed(I[110], 1234, 19, "horizontalTitleGap");
    let minVerticalPadding = opts && 'minVerticalPadding' in opts ? opts.minVerticalPadding : null;
    if (minVerticalPadding == null) dart.nullFailed(I[110], 1235, 19, "minVerticalPadding");
    let minLeadingWidth = opts && 'minLeadingWidth' in opts ? opts.minLeadingWidth : null;
    if (minLeadingWidth == null) dart.nullFailed(I[110], 1236, 19, "minLeadingWidth");
    let subtitleBaselineType = opts && 'subtitleBaselineType' in opts ? opts.subtitleBaselineType : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.leading$2] = leading;
    this[S$1.title$2] = title;
    this[S$1.subtitle$1] = subtitle;
    this[S$1.trailing$2] = trailing;
    this[S$1.isThreeLine$1] = isThreeLine;
    this[S$1.isDense$3] = isDense;
    this[S$1.visualDensity$10] = visualDensity;
    this[S$1.textDirection$1] = textDirection;
    this[S$1.titleBaselineType] = titleBaselineType;
    this[S$1.horizontalTitleGap$2] = horizontalTitleGap;
    this[S$1.minVerticalPadding$2] = minVerticalPadding;
    this[S$1.minLeadingWidth$2] = minLeadingWidth;
    this[S$1.subtitleBaselineType] = subtitleBaselineType;
    if (!(isThreeLine != null)) dart.assertFailed(null, I[110], 1238, 15, "isThreeLine != null");
    if (!(isDense != null)) dart.assertFailed(null, I[110], 1239, 15, "isDense != null");
    if (!(visualDensity != null)) dart.assertFailed(null, I[110], 1240, 15, "visualDensity != null");
    if (!(textDirection != null)) dart.assertFailed(null, I[110], 1241, 15, "textDirection != null");
    if (!(titleBaselineType != null)) dart.assertFailed(null, I[110], 1242, 15, "titleBaselineType != null");
    if (!(horizontalTitleGap != null)) dart.assertFailed(null, I[110], 1243, 15, "horizontalTitleGap != null");
    if (!(minVerticalPadding != null)) dart.assertFailed(null, I[110], 1244, 15, "minVerticalPadding != null");
    if (!(minLeadingWidth != null)) dart.assertFailed(null, I[110], 1245, 15, "minLeadingWidth != null");
    list_tile._ListTile.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = list_tile._ListTile.prototype;
  dart.addTypeTests(list_tile._ListTile);
  dart.addTypeCaches(list_tile._ListTile);
  dart.setMethodSignature(list_tile._ListTile, () => ({
    __proto__: dart.getMethods(list_tile._ListTile.__proto__),
    createElement: dart.fnType(list_tile._ListTileElement, []),
    createRenderObject: dart.fnType(list_tile._RenderListTile, [framework.BuildContext])
  }));
  dart.setLibraryUri(list_tile._ListTile, I[111]);
  dart.setFieldSignature(list_tile._ListTile, () => ({
    __proto__: dart.getFields(list_tile._ListTile.__proto__),
    leading: dart.finalFieldType(dart.nullable(framework.Widget)),
    title: dart.finalFieldType(framework.Widget),
    subtitle: dart.finalFieldType(dart.nullable(framework.Widget)),
    trailing: dart.finalFieldType(dart.nullable(framework.Widget)),
    isThreeLine: dart.finalFieldType(core.bool),
    isDense: dart.finalFieldType(core.bool),
    visualDensity: dart.finalFieldType(theme_data.VisualDensity),
    textDirection: dart.finalFieldType(ui.TextDirection),
    titleBaselineType: dart.finalFieldType(ui.TextBaseline),
    subtitleBaselineType: dart.finalFieldType(dart.nullable(ui.TextBaseline)),
    horizontalTitleGap: dart.finalFieldType(core.double),
    minVerticalPadding: dart.finalFieldType(core.double),
    minLeadingWidth: dart.finalFieldType(core.double)
  }));
  list_tile._ListTileElement = class _ListTileElement extends framework.RenderObjectElement {
    get widget() {
      return list_tile._ListTile.as(super.widget);
    }
    get renderObject() {
      return list_tile._RenderListTile.as(super.renderObject);
    }
    visitChildren(visitor) {
      if (visitor == null) dart.nullFailed(I[110], 1307, 37, "visitor");
      this.slotToChild[S$.$values][S$.$forEach](visitor);
    }
    forgetChild(child) {
      if (child == null) dart.nullFailed(I[110], 1312, 28, "child");
      if (!dart.test(this.slotToChild[S$.$containsValue](child))) dart.assertFailed(null, I[110], 1313, 12, "slotToChild.containsValue(child)");
      if (!list_tile._ListTileSlot.is(child.slot)) dart.assertFailed(null, I[110], 1314, 12, "child.slot is _ListTileSlot");
      if (!dart.test(this.slotToChild[S$.$containsKey](child.slot))) dart.assertFailed(null, I[110], 1315, 12, "slotToChild.containsKey(child.slot)");
      this.slotToChild[S$.$remove](child.slot);
      super.forgetChild(child);
    }
    [S$1._mountChild$1](widget, slot) {
      if (slot == null) dart.nullFailed(I[110], 1320, 50, "slot");
      let oldChild = this.slotToChild[S.$_get](slot);
      let newChild = this.updateChild(oldChild, widget, slot);
      if (oldChild != null) {
        this.slotToChild[S$.$remove](slot);
      }
      if (newChild != null) {
        this.slotToChild[S.$_set](slot, newChild);
      }
    }
    mount(parent, newSlot) {
      super.mount(parent, newSlot);
      this[S$1._mountChild$1](this.widget.leading, list_tile._ListTileSlot.leading);
      this[S$1._mountChild$1](this.widget.title, list_tile._ListTileSlot.title);
      this[S$1._mountChild$1](this.widget.subtitle, list_tile._ListTileSlot.subtitle);
      this[S$1._mountChild$1](this.widget.trailing, list_tile._ListTileSlot.trailing);
    }
    [S$1._updateChild$1](widget, slot) {
      if (slot == null) dart.nullFailed(I[110], 1340, 51, "slot");
      let oldChild = this.slotToChild[S.$_get](slot);
      let newChild = this.updateChild(oldChild, widget, slot);
      if (oldChild != null) {
        this.slotToChild[S$.$remove](slot);
      }
      if (newChild != null) {
        this.slotToChild[S.$_set](slot, newChild);
      }
    }
    update(newWidget) {
      list_tile._ListTile.as(newWidget);
      if (newWidget == null) dart.nullFailed(I[110], 1352, 25, "newWidget");
      super.update(newWidget);
      if (!dart.equals(this.widget, newWidget)) dart.assertFailed(null, I[110], 1354, 12, "widget == newWidget");
      this[S$1._updateChild$1](this.widget.leading, list_tile._ListTileSlot.leading);
      this[S$1._updateChild$1](this.widget.title, list_tile._ListTileSlot.title);
      this[S$1._updateChild$1](this.widget.subtitle, list_tile._ListTileSlot.subtitle);
      this[S$1._updateChild$1](this.widget.trailing, list_tile._ListTileSlot.trailing);
    }
    [S$1._updateRenderObject$1](child, slot) {
      if (slot == null) dart.nullFailed(I[110], 1361, 60, "slot");
      switch (slot) {
        case C[685] || CT.C685:
        {
          this.renderObject.leading = child;
          break;
        }
        case C[686] || CT.C686:
        {
          this.renderObject.title = child;
          break;
        }
        case C[687] || CT.C687:
        {
          this.renderObject.subtitle = child;
          break;
        }
        case C[688] || CT.C688:
        {
          this.renderObject.trailing = child;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    insertRenderObjectChild(child, slot) {
      object.RenderObject.as(child);
      if (child == null) dart.nullFailed(I[110], 1379, 45, "child");
      list_tile._ListTileSlot.as(slot);
      if (slot == null) dart.nullFailed(I[110], 1379, 66, "slot");
      if (!box$.RenderBox.is(child)) dart.assertFailed(null, I[110], 1380, 12, "child is RenderBox");
      this[S$1._updateRenderObject$1](box$.RenderBox.as(child), slot);
      if (!dart.test(this.renderObject.children[S$.$keys][S.$contains](slot))) dart.assertFailed(null, I[110], 1382, 12, "renderObject.children.keys.contains(slot)");
    }
    removeRenderObjectChild(child, slot) {
      object.RenderObject.as(child);
      if (child == null) dart.nullFailed(I[110], 1386, 45, "child");
      list_tile._ListTileSlot.as(slot);
      if (slot == null) dart.nullFailed(I[110], 1386, 66, "slot");
      if (!box$.RenderBox.is(child)) dart.assertFailed(null, I[110], 1387, 12, "child is RenderBox");
      if (!dart.equals(this.renderObject.children[S.$_get](slot), child)) dart.assertFailed(null, I[110], 1388, 12, "renderObject.children[slot] == child");
      this[S$1._updateRenderObject$1](null, slot);
      if (!!dart.test(this.renderObject.children[S$.$keys][S.$contains](slot))) dart.assertFailed(null, I[110], 1390, 12, "!renderObject.children.keys.contains(slot)");
    }
    moveRenderObjectChild(child, oldSlot, newSlot) {
      object.RenderObject.as(child);
      if (child == null) dart.nullFailed(I[110], 1394, 43, "child");
      if (!false) dart.assertFailed("not reachable", I[110], 1395, 12, "false");
    }
  };
  (list_tile._ListTileElement.new = function(widget) {
    if (widget == null) dart.nullFailed(I[110], 1296, 30, "widget");
    this.slotToChild = new (T$.LinkedMapOf_ListTileSlot$Element()).new();
    list_tile._ListTileElement.__proto__.new.call(this, widget);
    ;
  }).prototype = list_tile._ListTileElement.prototype;
  dart.addTypeTests(list_tile._ListTileElement);
  dart.addTypeCaches(list_tile._ListTileElement);
  dart.setMethodSignature(list_tile._ListTileElement, () => ({
    __proto__: dart.getMethods(list_tile._ListTileElement.__proto__),
    [S$1._mountChild$1]: dart.fnType(dart.void, [dart.nullable(framework.Widget), list_tile._ListTileSlot]),
    [S$1._updateChild$1]: dart.fnType(dart.void, [dart.nullable(framework.Widget), list_tile._ListTileSlot]),
    [S$1._updateRenderObject$1]: dart.fnType(dart.void, [dart.nullable(box$.RenderBox), list_tile._ListTileSlot])
  }));
  dart.setGetterSignature(list_tile._ListTileElement, () => ({
    __proto__: dart.getGetters(list_tile._ListTileElement.__proto__),
    widget: list_tile._ListTile,
    renderObject: list_tile._RenderListTile
  }));
  dart.setLibraryUri(list_tile._ListTileElement, I[111]);
  dart.setFieldSignature(list_tile._ListTileElement, () => ({
    __proto__: dart.getFields(list_tile._ListTileElement.__proto__),
    slotToChild: dart.finalFieldType(core.Map$(list_tile._ListTileSlot, framework.Element))
  }));
  list_tile._RenderListTile = class _RenderListTile extends box$.RenderBox {
    [S$1._updateChild$1](oldChild, newChild, slot) {
      if (slot == null) dart.nullFailed(I[110], 1430, 83, "slot");
      if (oldChild != null) {
        this.dropChild(oldChild);
        this.children[S$.$remove](slot);
      }
      if (newChild != null) {
        this.children[S.$_set](slot, newChild);
        this.adoptChild(newChild);
      }
      return newChild;
    }
    get leading() {
      return this[S$1._leading];
    }
    set leading(value) {
      this[S$1._leading] = this[S$1._updateChild$1](this[S$1._leading], value, list_tile._ListTileSlot.leading);
    }
    get title() {
      return this[S$1._title];
    }
    set title(value) {
      this[S$1._title] = this[S$1._updateChild$1](this[S$1._title], value, list_tile._ListTileSlot.title);
    }
    get subtitle() {
      return this[S$1._subtitle];
    }
    set subtitle(value) {
      this[S$1._subtitle] = this[S$1._updateChild$1](this[S$1._subtitle], value, list_tile._ListTileSlot.subtitle);
    }
    get trailing() {
      return this[S$1._trailing];
    }
    set trailing(value) {
      this[S$1._trailing] = this[S$1._updateChild$1](this[S$1._trailing], value, list_tile._ListTileSlot.trailing);
    }
    get [S$1._children$2]() {
      return new (T$.SyncIterableOfRenderBox()).new((function* _children() {
        if (this.leading != null) yield dart.nullCheck(this.leading);
        if (this.title != null) yield dart.nullCheck(this.title);
        if (this.subtitle != null) yield dart.nullCheck(this.subtitle);
        if (this.trailing != null) yield dart.nullCheck(this.trailing);
      }).bind(this));
    }
    get isDense() {
      return this[S$1._isDense];
    }
    set isDense(value) {
      if (value == null) dart.nullFailed(I[110], 1480, 20, "value");
      if (!(value != null)) dart.assertFailed(null, I[110], 1481, 12, "value != null");
      if (this[S$1._isDense] == value) return;
      this[S$1._isDense] = value;
      this.markNeedsLayout();
    }
    get visualDensity() {
      return this[S$1._visualDensity];
    }
    set visualDensity(value) {
      if (value == null) dart.nullFailed(I[110], 1490, 35, "value");
      if (!(value != null)) dart.assertFailed(null, I[110], 1491, 12, "value != null");
      if (dart.equals(this[S$1._visualDensity], value)) return;
      this[S$1._visualDensity] = value;
      this.markNeedsLayout();
    }
    get isThreeLine() {
      return this[S$1._isThreeLine];
    }
    set isThreeLine(value) {
      if (value == null) dart.nullFailed(I[110], 1500, 24, "value");
      if (!(value != null)) dart.assertFailed(null, I[110], 1501, 12, "value != null");
      if (this[S$1._isThreeLine] == value) return;
      this[S$1._isThreeLine] = value;
      this.markNeedsLayout();
    }
    get textDirection() {
      return this[S$1._textDirection$4];
    }
    set textDirection(value) {
      if (value == null) dart.nullFailed(I[110], 1510, 35, "value");
      if (!(value != null)) dart.assertFailed(null, I[110], 1511, 12, "value != null");
      if (this[S$1._textDirection$4] == value) return;
      this[S$1._textDirection$4] = value;
      this.markNeedsLayout();
    }
    get titleBaselineType() {
      return this[S$1._titleBaselineType];
    }
    set titleBaselineType(value) {
      if (value == null) dart.nullFailed(I[110], 1520, 38, "value");
      if (!(value != null)) dart.assertFailed(null, I[110], 1521, 12, "value != null");
      if (this[S$1._titleBaselineType] == value) return;
      this[S$1._titleBaselineType] = value;
      this.markNeedsLayout();
    }
    get subtitleBaselineType() {
      return this[S$1._subtitleBaselineType];
    }
    set subtitleBaselineType(value) {
      if (this[S$1._subtitleBaselineType] == value) return;
      this[S$1._subtitleBaselineType] = value;
      this.markNeedsLayout();
    }
    get horizontalTitleGap() {
      return this[S$1._horizontalTitleGap];
    }
    get [S$1._effectiveHorizontalTitleGap]() {
      return dart.notNull(this[S$1._horizontalTitleGap]) + dart.notNull(this.visualDensity.horizontal) * 2.0;
    }
    set horizontalTitleGap(value) {
      if (value == null) dart.nullFailed(I[110], 1541, 33, "value");
      if (!(value != null)) dart.assertFailed(null, I[110], 1542, 12, "value != null");
      if (this[S$1._horizontalTitleGap] == value) return;
      this[S$1._horizontalTitleGap] = value;
      this.markNeedsLayout();
    }
    get minVerticalPadding() {
      return this[S$1._minVerticalPadding];
    }
    set minVerticalPadding(value) {
      if (value == null) dart.nullFailed(I[110], 1552, 33, "value");
      if (!(value != null)) dart.assertFailed(null, I[110], 1553, 12, "value != null");
      if (this[S$1._minVerticalPadding] == value) return;
      this[S$1._minVerticalPadding] = value;
      this.markNeedsLayout();
    }
    get minLeadingWidth() {
      return this[S$1._minLeadingWidth];
    }
    set minLeadingWidth(value) {
      if (value == null) dart.nullFailed(I[110], 1563, 30, "value");
      if (!(value != null)) dart.assertFailed(null, I[110], 1564, 12, "value != null");
      if (this[S$1._minLeadingWidth] == value) return;
      this[S$1._minLeadingWidth] = value;
      this.markNeedsLayout();
    }
    attach(owner) {
      object.PipelineOwner.as(owner);
      if (owner == null) dart.nullFailed(I[110], 1572, 29, "owner");
      super.attach(owner);
      for (let child of this[S$1._children$2])
        child.attach(owner);
    }
    detach() {
      super.detach();
      for (let child of this[S$1._children$2])
        child.detach();
    }
    redepthChildren() {
      this[S$1._children$2][S$.$forEach](dart.bind(this, 'redepthChild'));
    }
    visitChildren(visitor) {
      if (visitor == null) dart.nullFailed(I[110], 1591, 42, "visitor");
      this[S$1._children$2][S$.$forEach](visitor);
    }
    debugDescribeChildren() {
      let value = T$.JSArrayOfDiagnosticsNode().of([]);
      function add(child, name) {
        if (name == null) dart.nullFailed(I[110], 1598, 39, "name");
        if (child != null) value[S.$add](child.toDiagnosticsNode({name: name}));
      }
      dart.fn(add, T$.RenderBoxNAndStringTovoid());
      add(this.leading, "leading");
      add(this.title, "title");
      add(this.subtitle, "subtitle");
      add(this.trailing, "trailing");
      return value;
    }
    get sizedByParent() {
      return false;
    }
    static _minWidth(box, height) {
      if (height == null) dart.nullFailed(I[110], 1612, 50, "height");
      return box == null ? 0.0 : box.getMinIntrinsicWidth(height);
    }
    static _maxWidth(box, height) {
      if (height == null) dart.nullFailed(I[110], 1616, 50, "height");
      return box == null ? 0.0 : box.getMaxIntrinsicWidth(height);
    }
    computeMinIntrinsicWidth(height) {
      if (height == null) dart.nullFailed(I[110], 1621, 42, "height");
      let leadingWidth = this.leading != null ? math.max(core.double, dart.nullCheck(this.leading).getMinIntrinsicWidth(height), this[S$1._minLeadingWidth]) + dart.notNull(this[S$1._effectiveHorizontalTitleGap]) : 0.0;
      return leadingWidth + math.max(core.num, list_tile._RenderListTile._minWidth(this.title, height), list_tile._RenderListTile._minWidth(this.subtitle, height)) + dart.notNull(list_tile._RenderListTile._maxWidth(this.trailing, height));
    }
    computeMaxIntrinsicWidth(height) {
      if (height == null) dart.nullFailed(I[110], 1631, 42, "height");
      let leadingWidth = this.leading != null ? math.max(core.double, dart.nullCheck(this.leading).getMaxIntrinsicWidth(height), this[S$1._minLeadingWidth]) + dart.notNull(this[S$1._effectiveHorizontalTitleGap]) : 0.0;
      return leadingWidth + math.max(core.num, list_tile._RenderListTile._maxWidth(this.title, height), list_tile._RenderListTile._maxWidth(this.subtitle, height)) + dart.notNull(list_tile._RenderListTile._maxWidth(this.trailing, height));
    }
    get [S$1._defaultTileHeight]() {
      let hasSubtitle = this.subtitle != null;
      let isTwoLine = !dart.test(this.isThreeLine) && hasSubtitle;
      let isOneLine = !dart.test(this.isThreeLine) && !hasSubtitle;
      let baseDensity = this.visualDensity.baseSizeAdjustment;
      if (isOneLine) return (dart.test(this.isDense) ? 48.0 : 56.0) + dart.notNull(baseDensity.dy);
      if (isTwoLine) return (dart.test(this.isDense) ? 64.0 : 72.0) + dart.notNull(baseDensity.dy);
      return (dart.test(this.isDense) ? 76.0 : 88.0) + dart.notNull(baseDensity.dy);
    }
    computeMinIntrinsicHeight(width) {
      let t56, t56$;
      if (width == null) dart.nullFailed(I[110], 1654, 43, "width");
      return math.max(core.double, this[S$1._defaultTileHeight], dart.notNull(dart.nullCheck(this.title).getMinIntrinsicHeight(width)) + dart.notNull((t56$ = (t56 = this.subtitle, t56 == null ? null : t56.getMinIntrinsicHeight(width)), t56$ == null ? 0.0 : t56$)));
    }
    computeMaxIntrinsicHeight(width) {
      if (width == null) dart.nullFailed(I[110], 1662, 43, "width");
      return this.computeMinIntrinsicHeight(width);
    }
    computeDistanceToActualBaseline(baseline) {
      if (baseline == null) dart.nullFailed(I[110], 1667, 55, "baseline");
      if (!(this.title != null)) dart.assertFailed(null, I[110], 1668, 12, "title != null");
      let parentData = box$.BoxParentData.as(dart.nullCheck(dart.nullCheck(this.title).parentData));
      return dart.notNull(parentData.offset.dy) + dart.nullCheck(dart.nullCheck(this.title).getDistanceToActualBaseline(baseline));
    }
    static _boxBaseline(box, baseline) {
      if (box == null) dart.nullFailed(I[110], 1673, 41, "box");
      if (baseline == null) dart.nullFailed(I[110], 1673, 59, "baseline");
      return box.getDistanceToBaseline(baseline);
    }
    static _layoutBox(box, constraints) {
      if (constraints == null) dart.nullFailed(I[110], 1677, 57, "constraints");
      if (box == null) return ui.Size.zero;
      box.layout(constraints, {parentUsesSize: true});
      return box.size;
    }
    static _positionBox(box, offset) {
      if (box == null) dart.nullFailed(I[110], 1684, 38, "box");
      if (offset == null) dart.nullFailed(I[110], 1684, 50, "offset");
      let parentData = box$.BoxParentData.as(dart.nullCheck(box.parentData));
      parentData.offset = offset;
    }
    computeDryLayout(constraints) {
      if (constraints == null) dart.nullFailed(I[110], 1690, 40, "constraints");
      if (!dart.test(this.debugCannotComputeDryLayout({reason: "Layout requires baseline metrics, which are only available after a full layout."}))) dart.assertFailed(null, I[110], 1691, 12, "debugCannotComputeDryLayout(\r\n      reason: 'Layout requires baseline metrics, which are only available after a full layout.',\r\n    )");
      return ui.Size.zero;
    }
    performLayout() {
      let constraints = this.constraints;
      let hasLeading = this.leading != null;
      let hasSubtitle = this.subtitle != null;
      let hasTrailing = this.trailing != null;
      let isTwoLine = !dart.test(this.isThreeLine) && hasSubtitle;
      let isOneLine = !dart.test(this.isThreeLine) && !hasSubtitle;
      let densityAdjustment = this.visualDensity.baseSizeAdjustment;
      let maxIconHeightConstraint = new box$.BoxConstraints.new({maxHeight: (dart.test(this.isDense) ? 48.0 : 56.0) + dart.notNull(densityAdjustment.dy)});
      let looseConstraints = constraints.loosen();
      let iconConstraints = looseConstraints.enforce(maxIconHeightConstraint);
      let tileWidth = looseConstraints.maxWidth;
      let leadingSize = list_tile._RenderListTile._layoutBox(this.leading, iconConstraints);
      let trailingSize = list_tile._RenderListTile._layoutBox(this.trailing, iconConstraints);
      if (!(tileWidth != leadingSize.width || tileWidth === 0.0)) dart.assertFailed("Leading widget consumes entire tile width. Please use a sized widget, " + "or consider replacing ListTile with a custom widget " + "(see https://api.flutter.dev/flutter/material/ListTile-class.html#material.ListTile.4)", I[110], 1724, 7, "tileWidth != leadingSize.width || tileWidth == 0.0");
      if (!(tileWidth != trailingSize.width || tileWidth === 0.0)) dart.assertFailed("Trailing widget consumes entire tile width. Please use a sized widget, " + "or consider replacing ListTile with a custom widget " + "(see https://api.flutter.dev/flutter/material/ListTile-class.html#material.ListTile.4)", I[110], 1730, 7, "tileWidth != trailingSize.width || tileWidth == 0.0");
      let titleStart = hasLeading ? math.max(core.double, this[S$1._minLeadingWidth], leadingSize.width) + dart.notNull(this[S$1._effectiveHorizontalTitleGap]) : 0.0;
      let adjustedTrailingWidth = hasTrailing ? math.max(core.double, dart.notNull(trailingSize.width) + dart.notNull(this[S$1._effectiveHorizontalTitleGap]), 32.0) : 0.0;
      let textConstraints = looseConstraints.tighten({width: dart.notNull(tileWidth) - titleStart - adjustedTrailingWidth});
      let titleSize = list_tile._RenderListTile._layoutBox(this.title, textConstraints);
      let subtitleSize = list_tile._RenderListTile._layoutBox(this.subtitle, textConstraints);
      let titleBaseline = null;
      let subtitleBaseline = null;
      if (isTwoLine) {
        titleBaseline = dart.test(this.isDense) ? 28.0 : 32.0;
        subtitleBaseline = dart.test(this.isDense) ? 48.0 : 52.0;
      } else if (dart.test(this.isThreeLine)) {
        titleBaseline = dart.test(this.isDense) ? 22.0 : 28.0;
        subtitleBaseline = dart.test(this.isDense) ? 42.0 : 48.0;
      } else {
        if (!isOneLine) dart.assertFailed(null, I[110], 1757, 14, "isOneLine");
      }
      let defaultTileHeight = this[S$1._defaultTileHeight];
      let tileHeight = null;
      let titleY = null;
      let subtitleY = null;
      if (!hasSubtitle) {
        tileHeight = math.max(core.double, defaultTileHeight, dart.notNull(titleSize.height) + 2.0 * dart.notNull(this[S$1._minVerticalPadding]));
        titleY = (dart.notNull(tileHeight) - dart.notNull(titleSize.height)) / 2.0;
      } else {
        if (!(this.subtitleBaselineType != null)) dart.assertFailed(null, I[110], 1769, 14, "subtitleBaselineType != null");
        titleY = dart.nullCheck(titleBaseline) - dart.nullCheck(list_tile._RenderListTile._boxBaseline(dart.nullCheck(this.title), this.titleBaselineType));
        subtitleY = dart.nullCheck(subtitleBaseline) - dart.nullCheck(list_tile._RenderListTile._boxBaseline(dart.nullCheck(this.subtitle), dart.nullCheck(this.subtitleBaselineType))) + dart.notNull(this.visualDensity.vertical) * 2.0;
        tileHeight = defaultTileHeight;
        let titleOverlap = dart.notNull(titleY) + dart.notNull(titleSize.height) - dart.notNull(subtitleY);
        if (titleOverlap > 0.0) {
          titleY = dart.notNull(titleY) - titleOverlap / 2.0;
          subtitleY = dart.notNull(subtitleY) + titleOverlap / 2.0;
        }
        if (dart.notNull(titleY) < dart.notNull(this[S$1._minVerticalPadding]) || dart.notNull(subtitleY) + dart.notNull(subtitleSize.height) + dart.notNull(this[S$1._minVerticalPadding]) > dart.notNull(tileHeight)) {
          tileHeight = dart.notNull(titleSize.height) + dart.notNull(subtitleSize.height) + 2.0 * dart.notNull(this[S$1._minVerticalPadding]);
          titleY = this[S$1._minVerticalPadding];
          subtitleY = dart.notNull(titleSize.height) + dart.notNull(this[S$1._minVerticalPadding]);
        }
      }
      let leadingY = null;
      let trailingY = null;
      if (dart.notNull(tileHeight) > 72.0) {
        leadingY = 16.0;
        trailingY = 16.0;
      } else {
        leadingY = math.min(core.double, (dart.notNull(tileHeight) - dart.notNull(leadingSize.height)) / 2.0, 16.0);
        trailingY = (dart.notNull(tileHeight) - dart.notNull(trailingSize.height)) / 2.0;
      }
      switch (this.textDirection) {
        case C[137] || CT.C137:
        {
          {
            if (hasLeading) list_tile._RenderListTile._positionBox(dart.nullCheck(this.leading), new ui.Offset.new(dart.notNull(tileWidth) - dart.notNull(leadingSize.width), leadingY));
            list_tile._RenderListTile._positionBox(dart.nullCheck(this.title), new ui.Offset.new(adjustedTrailingWidth, titleY));
            if (hasSubtitle) list_tile._RenderListTile._positionBox(dart.nullCheck(this.subtitle), new ui.Offset.new(adjustedTrailingWidth, dart.nullCheck(subtitleY)));
            if (hasTrailing) list_tile._RenderListTile._positionBox(dart.nullCheck(this.trailing), new ui.Offset.new(0.0, trailingY));
            break;
          }
        }
        case C[138] || CT.C138:
        {
          {
            if (hasLeading) list_tile._RenderListTile._positionBox(dart.nullCheck(this.leading), new ui.Offset.new(0.0, leadingY));
            list_tile._RenderListTile._positionBox(dart.nullCheck(this.title), new ui.Offset.new(titleStart, titleY));
            if (hasSubtitle) list_tile._RenderListTile._positionBox(dart.nullCheck(this.subtitle), new ui.Offset.new(titleStart, dart.nullCheck(subtitleY)));
            if (hasTrailing) list_tile._RenderListTile._positionBox(dart.nullCheck(this.trailing), new ui.Offset.new(dart.notNull(tileWidth) - dart.notNull(trailingSize.width), trailingY));
            break;
          }
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      this.size = constraints.constrain(new ui.Size.new(tileWidth, tileHeight));
      if (!(this.size.width == constraints.constrainWidth(tileWidth))) dart.assertFailed(null, I[110], 1837, 12, "size.width == constraints.constrainWidth(tileWidth)");
      if (!(this.size.height == constraints.constrainHeight(tileHeight))) dart.assertFailed(null, I[110], 1838, 12, "size.height == constraints.constrainHeight(tileHeight)");
    }
    paint(context, offset) {
      if (context == null) dart.nullFailed(I[110], 1842, 30, "context");
      if (offset == null) dart.nullFailed(I[110], 1842, 46, "offset");
      function doPaint(child) {
        if (child != null) {
          let parentData = box$.BoxParentData.as(dart.nullCheck(child.parentData));
          context.paintChild(child, parentData.offset['+'](offset));
        }
      }
      dart.fn(doPaint, T$.RenderBoxNTovoid());
      doPaint(this.leading);
      doPaint(this.title);
      doPaint(this.subtitle);
      doPaint(this.trailing);
    }
    hitTestSelf(position) {
      if (position == null) dart.nullFailed(I[110], 1856, 27, "position");
      return true;
    }
    hitTestChildren(result, opts) {
      if (result == null) dart.nullFailed(I[110], 1859, 41, "result");
      let position = opts && 'position' in opts ? opts.position : null;
      if (position == null) dart.nullFailed(I[110], 1859, 67, "position");
      if (!(position != null)) dart.assertFailed(null, I[110], 1860, 12, "position != null");
      for (let child of this[S$1._children$2]) {
        let parentData = box$.BoxParentData.as(dart.nullCheck(child.parentData));
        let isHit = result.addWithPaintOffset({offset: parentData.offset, position: position, hitTest: dart.fn((result, transformed) => {
            if (result == null) dart.nullFailed(I[110], 1866, 36, "result");
            if (transformed == null) dart.nullFailed(I[110], 1866, 51, "transformed");
            if (!dart.equals(transformed, position['-'](parentData.offset))) dart.assertFailed(null, I[110], 1867, 18, "transformed == position - parentData.offset");
            return child.hitTest(result, {position: transformed});
          }, T$.BoxHitTestResultAndOffsetTobool())});
        if (dart.test(isHit)) return true;
      }
      return false;
    }
  };
  (list_tile._RenderListTile.new = function(opts) {
    let isDense = opts && 'isDense' in opts ? opts.isDense : null;
    if (isDense == null) dart.nullFailed(I[110], 1401, 19, "isDense");
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    if (visualDensity == null) dart.nullFailed(I[110], 1402, 28, "visualDensity");
    let isThreeLine = opts && 'isThreeLine' in opts ? opts.isThreeLine : null;
    if (isThreeLine == null) dart.nullFailed(I[110], 1403, 19, "isThreeLine");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    if (textDirection == null) dart.nullFailed(I[110], 1404, 28, "textDirection");
    let titleBaselineType = opts && 'titleBaselineType' in opts ? opts.titleBaselineType : null;
    if (titleBaselineType == null) dart.nullFailed(I[110], 1405, 27, "titleBaselineType");
    let subtitleBaselineType = opts && 'subtitleBaselineType' in opts ? opts.subtitleBaselineType : null;
    let horizontalTitleGap = opts && 'horizontalTitleGap' in opts ? opts.horizontalTitleGap : null;
    if (horizontalTitleGap == null) dart.nullFailed(I[110], 1407, 21, "horizontalTitleGap");
    let minVerticalPadding = opts && 'minVerticalPadding' in opts ? opts.minVerticalPadding : null;
    if (minVerticalPadding == null) dart.nullFailed(I[110], 1408, 21, "minVerticalPadding");
    let minLeadingWidth = opts && 'minLeadingWidth' in opts ? opts.minLeadingWidth : null;
    if (minLeadingWidth == null) dart.nullFailed(I[110], 1409, 21, "minLeadingWidth");
    this.children = new (T$.LinkedMapOf_ListTileSlot$RenderBox()).new();
    this[S$1._leading] = null;
    this[S$1._title] = null;
    this[S$1._subtitle] = null;
    this[S$1._trailing] = null;
    if (!(isDense != null)) dart.assertFailed(null, I[110], 1410, 15, "isDense != null");
    if (!(visualDensity != null)) dart.assertFailed(null, I[110], 1411, 15, "visualDensity != null");
    if (!(isThreeLine != null)) dart.assertFailed(null, I[110], 1412, 15, "isThreeLine != null");
    if (!(textDirection != null)) dart.assertFailed(null, I[110], 1413, 15, "textDirection != null");
    if (!(titleBaselineType != null)) dart.assertFailed(null, I[110], 1414, 15, "titleBaselineType != null");
    if (!(horizontalTitleGap != null)) dart.assertFailed(null, I[110], 1415, 15, "horizontalTitleGap != null");
    if (!(minVerticalPadding != null)) dart.assertFailed(null, I[110], 1416, 15, "minVerticalPadding != null");
    if (!(minLeadingWidth != null)) dart.assertFailed(null, I[110], 1417, 15, "minLeadingWidth != null");
    this[S$1._isDense] = isDense;
    this[S$1._visualDensity] = visualDensity;
    this[S$1._isThreeLine] = isThreeLine;
    this[S$1._textDirection$4] = textDirection;
    this[S$1._titleBaselineType] = titleBaselineType;
    this[S$1._subtitleBaselineType] = subtitleBaselineType;
    this[S$1._horizontalTitleGap] = horizontalTitleGap;
    this[S$1._minVerticalPadding] = minVerticalPadding;
    this[S$1._minLeadingWidth] = minLeadingWidth;
    list_tile._RenderListTile.__proto__.new.call(this);
    ;
  }).prototype = list_tile._RenderListTile.prototype;
  dart.addTypeTests(list_tile._RenderListTile);
  dart.addTypeCaches(list_tile._RenderListTile);
  dart.setMethodSignature(list_tile._RenderListTile, () => ({
    __proto__: dart.getMethods(list_tile._RenderListTile.__proto__),
    [S$1._updateChild$1]: dart.fnType(dart.nullable(box$.RenderBox), [dart.nullable(box$.RenderBox), dart.nullable(box$.RenderBox), list_tile._ListTileSlot]),
    computeDistanceToActualBaseline: dart.fnType(core.double, [ui.TextBaseline])
  }));
  dart.setGetterSignature(list_tile._RenderListTile, () => ({
    __proto__: dart.getGetters(list_tile._RenderListTile.__proto__),
    leading: dart.nullable(box$.RenderBox),
    title: dart.nullable(box$.RenderBox),
    subtitle: dart.nullable(box$.RenderBox),
    trailing: dart.nullable(box$.RenderBox),
    [S$1._children$2]: core.Iterable$(box$.RenderBox),
    isDense: core.bool,
    visualDensity: theme_data.VisualDensity,
    isThreeLine: core.bool,
    textDirection: ui.TextDirection,
    titleBaselineType: ui.TextBaseline,
    subtitleBaselineType: dart.nullable(ui.TextBaseline),
    horizontalTitleGap: core.double,
    [S$1._effectiveHorizontalTitleGap]: core.double,
    minVerticalPadding: core.double,
    minLeadingWidth: core.double,
    [S$1._defaultTileHeight]: core.double
  }));
  dart.setSetterSignature(list_tile._RenderListTile, () => ({
    __proto__: dart.getSetters(list_tile._RenderListTile.__proto__),
    leading: dart.nullable(box$.RenderBox),
    title: dart.nullable(box$.RenderBox),
    subtitle: dart.nullable(box$.RenderBox),
    trailing: dart.nullable(box$.RenderBox),
    isDense: core.bool,
    visualDensity: theme_data.VisualDensity,
    isThreeLine: core.bool,
    textDirection: ui.TextDirection,
    titleBaselineType: ui.TextBaseline,
    subtitleBaselineType: dart.nullable(ui.TextBaseline),
    horizontalTitleGap: core.double,
    minVerticalPadding: core.double,
    minLeadingWidth: core.double
  }));
  dart.setLibraryUri(list_tile._RenderListTile, I[111]);
  dart.setFieldSignature(list_tile._RenderListTile, () => ({
    __proto__: dart.getFields(list_tile._RenderListTile.__proto__),
    children: dart.finalFieldType(core.Map$(list_tile._ListTileSlot, box$.RenderBox)),
    [S$1._leading]: dart.fieldType(dart.nullable(box$.RenderBox)),
    [S$1._title]: dart.fieldType(dart.nullable(box$.RenderBox)),
    [S$1._subtitle]: dart.fieldType(dart.nullable(box$.RenderBox)),
    [S$1._trailing]: dart.fieldType(dart.nullable(box$.RenderBox)),
    [S$1._isDense]: dart.fieldType(core.bool),
    [S$1._visualDensity]: dart.fieldType(theme_data.VisualDensity),
    [S$1._isThreeLine]: dart.fieldType(core.bool),
    [S$1._textDirection$4]: dart.fieldType(ui.TextDirection),
    [S$1._titleBaselineType]: dart.fieldType(ui.TextBaseline),
    [S$1._subtitleBaselineType]: dart.fieldType(dart.nullable(ui.TextBaseline)),
    [S$1._horizontalTitleGap]: dart.fieldType(core.double),
    [S$1._minVerticalPadding]: dart.fieldType(core.double),
    [S$1._minLeadingWidth]: dart.fieldType(core.double)
  }));
  drawer.DrawerAlignment = class DrawerAlignment extends core.Object {
    toString() {
      return this[S$1._name$24];
    }
  };
  (drawer.DrawerAlignment.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[112], 16, 6, "index");
    if (_name == null) dart.nullFailed(I[112], 16, 6, "_name");
    this.index = index;
    this[S$1._name$24] = _name;
    ;
  }).prototype = drawer.DrawerAlignment.prototype;
  dart.addTypeTests(drawer.DrawerAlignment);
  dart.addTypeCaches(drawer.DrawerAlignment);
  drawer.DrawerAlignment[dart.implements] = () => [core.Enum];
  dart.setLibraryUri(drawer.DrawerAlignment, I[113]);
  dart.setFieldSignature(drawer.DrawerAlignment, () => ({
    __proto__: dart.getFields(drawer.DrawerAlignment.__proto__),
    index: dart.finalFieldType(core.int),
    [S$1._name$24]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(drawer.DrawerAlignment, ['toString']);
  drawer.DrawerAlignment.start = C[690] || CT.C690;
  drawer.DrawerAlignment.end = C[691] || CT.C691;
  drawer.DrawerAlignment.values = C[692] || CT.C692;
  drawer.Drawer = class Drawer extends framework.StatelessWidget {
    get elevation() {
      return this[S$1.elevation$17];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get child() {
      return this[S$1.child$19];
    }
    set child(value) {
      super.child = value;
    }
    get semanticLabel() {
      return this[S$1.semanticLabel];
    }
    set semanticLabel(value) {
      super.semanticLabel = value;
    }
    build(context) {
      let t56;
      if (context == null) dart.nullFailed(I[112], 176, 29, "context");
      if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, I[112], 177, 12, "debugCheckHasMaterialLocalizations(context)");
      let label = this.semanticLabel;
      switch (theme$.Theme.of(context).platform) {
        case C[15] || CT.C15:
        case C[16] || CT.C16:
        {
          break;
        }
        case C[11] || CT.C11:
        case C[12] || CT.C12:
        case C[13] || CT.C13:
        case C[14] || CT.C14:
        {
          label = (t56 = this.semanticLabel, t56 == null ? material_localizations.MaterialLocalizations.of(context).drawerLabel : t56);
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      return new basic.Semantics.new({scopesRoute: true, namesRoute: true, explicitChildNodes: true, label: label, child: new basic.ConstrainedBox.new({constraints: C[693] || CT.C693, child: new material.Material.new({elevation: this.elevation, child: this.child, $creationLocationd_0dea112b090073317d4: C[694] || CT.C694}), $creationLocationd_0dea112b090073317d4: C[695] || CT.C695}), $creationLocationd_0dea112b090073317d4: C[696] || CT.C696});
    }
  };
  (drawer.Drawer.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : 16;
    if (elevation == null) dart.nullFailed(I[112], 142, 10, "elevation");
    let child = opts && 'child' in opts ? opts.child : null;
    let semanticLabel = opts && 'semanticLabel' in opts ? opts.semanticLabel : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.elevation$17] = elevation;
    this[S$1.child$19] = child;
    this[S$1.semanticLabel] = semanticLabel;
    if (!(elevation != null && dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[112], 145, 15, "elevation != null && elevation >= 0.0");
    drawer.Drawer.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = drawer.Drawer.prototype;
  dart.addTypeTests(drawer.Drawer);
  dart.addTypeCaches(drawer.Drawer);
  dart.setMethodSignature(drawer.Drawer, () => ({
    __proto__: dart.getMethods(drawer.Drawer.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(drawer.Drawer, I[113]);
  dart.setFieldSignature(drawer.Drawer, () => ({
    __proto__: dart.getFields(drawer.Drawer.__proto__),
    elevation: dart.finalFieldType(core.double),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    semanticLabel: dart.finalFieldType(dart.nullable(core.String))
  }));
  drawer.DrawerController = class DrawerController extends framework.StatefulWidget {
    get child() {
      return this[S$1.child$20];
    }
    set child(value) {
      super.child = value;
    }
    get alignment() {
      return this[S$1.alignment$3];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get drawerCallback() {
      return this[S$1.drawerCallback];
    }
    set drawerCallback(value) {
      super.drawerCallback = value;
    }
    get dragStartBehavior() {
      return this[S$1.dragStartBehavior$2];
    }
    set dragStartBehavior(value) {
      super.dragStartBehavior = value;
    }
    get scrimColor() {
      return this[S$1.scrimColor];
    }
    set scrimColor(value) {
      super.scrimColor = value;
    }
    get enableOpenDragGesture() {
      return this[S$1.enableOpenDragGesture];
    }
    set enableOpenDragGesture(value) {
      super.enableOpenDragGesture = value;
    }
    get edgeDragWidth() {
      return this[S$1.edgeDragWidth];
    }
    set edgeDragWidth(value) {
      super.edgeDragWidth = value;
    }
    get isDrawerOpen() {
      return this[S$1.isDrawerOpen];
    }
    set isDrawerOpen(value) {
      super.isDrawerOpen = value;
    }
    createState() {
      return new drawer.DrawerControllerState.new();
    }
  };
  (drawer.DrawerController.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[112], 231, 19, "child");
    let alignment = opts && 'alignment' in opts ? opts.alignment : null;
    if (alignment == null) dart.nullFailed(I[112], 232, 19, "alignment");
    let isDrawerOpen = opts && 'isDrawerOpen' in opts ? opts.isDrawerOpen : false;
    if (isDrawerOpen == null) dart.nullFailed(I[112], 233, 10, "isDrawerOpen");
    let drawerCallback = opts && 'drawerCallback' in opts ? opts.drawerCallback : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[215] || CT.C215;
    if (dragStartBehavior == null) dart.nullFailed(I[112], 235, 10, "dragStartBehavior");
    let scrimColor = opts && 'scrimColor' in opts ? opts.scrimColor : null;
    let edgeDragWidth = opts && 'edgeDragWidth' in opts ? opts.edgeDragWidth : null;
    let enableOpenDragGesture = opts && 'enableOpenDragGesture' in opts ? opts.enableOpenDragGesture : true;
    if (enableOpenDragGesture == null) dart.nullFailed(I[112], 238, 10, "enableOpenDragGesture");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.child$20] = child;
    this[S$1.alignment$3] = alignment;
    this[S$1.isDrawerOpen] = isDrawerOpen;
    this[S$1.drawerCallback] = drawerCallback;
    this[S$1.dragStartBehavior$2] = dragStartBehavior;
    this[S$1.scrimColor] = scrimColor;
    this[S$1.edgeDragWidth] = edgeDragWidth;
    this[S$1.enableOpenDragGesture] = enableOpenDragGesture;
    if (!(child != null)) dart.assertFailed(null, I[112], 239, 15, "child != null");
    if (!(dragStartBehavior != null)) dart.assertFailed(null, I[112], 240, 15, "dragStartBehavior != null");
    if (!(alignment != null)) dart.assertFailed(null, I[112], 241, 15, "alignment != null");
    drawer.DrawerController.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = drawer.DrawerController.prototype;
  dart.addTypeTests(drawer.DrawerController);
  dart.addTypeCaches(drawer.DrawerController);
  dart.setMethodSignature(drawer.DrawerController, () => ({
    __proto__: dart.getMethods(drawer.DrawerController.__proto__),
    createState: dart.fnType(drawer.DrawerControllerState, [])
  }));
  dart.setLibraryUri(drawer.DrawerController, I[113]);
  dart.setFieldSignature(drawer.DrawerController, () => ({
    __proto__: dart.getFields(drawer.DrawerController.__proto__),
    child: dart.finalFieldType(framework.Widget),
    alignment: dart.finalFieldType(drawer.DrawerAlignment),
    drawerCallback: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    dragStartBehavior: dart.finalFieldType(recognizer.DragStartBehavior),
    scrimColor: dart.finalFieldType(dart.nullable(ui.Color)),
    enableOpenDragGesture: dart.finalFieldType(core.bool),
    edgeDragWidth: dart.finalFieldType(dart.nullable(core.double)),
    isDrawerOpen: dart.finalFieldType(core.bool)
  }));
  const State_SingleTickerProviderStateMixin$36$1 = class State_SingleTickerProviderStateMixin extends framework.State$(drawer.DrawerController) {};
  (State_SingleTickerProviderStateMixin$36$1.new = function() {
    ticker_provider.SingleTickerProviderStateMixin$(drawer.DrawerController)[dart.mixinNew].call(this);
    State_SingleTickerProviderStateMixin$36$1.__proto__.new.call(this);
  }).prototype = State_SingleTickerProviderStateMixin$36$1.prototype;
  dart.applyMixin(State_SingleTickerProviderStateMixin$36$1, ticker_provider.SingleTickerProviderStateMixin$(drawer.DrawerController));
  drawer.DrawerControllerState = class DrawerControllerState extends State_SingleTickerProviderStateMixin$36$1 {
    initState() {
      let t56;
      super.initState();
      this[S$1._scrimColorTween] = this[S$1._buildScrimColorTween]();
      this[S$1._controller$6] = new animation_controller.AnimationController.new({value: dart.test(this.widget.isDrawerOpen) ? 1.0 : 0.0, duration: drawer._kBaseSettleDuration, vsync: this});
      t56 = this[S$1._controller$6];
      (() => {
        t56.addListener(dart.bind(this, S$1._animationChanged));
        t56.addStatusListener(dart.bind(this, S$1._animationStatusChanged));
        return t56;
      })();
    }
    dispose() {
      let t56;
      t56 = this[S$1._historyEntry];
      t56 == null ? null : t56.remove();
      this[S$1._controller$6].dispose();
      super.dispose();
    }
    didUpdateWidget(oldWidget) {
      drawer.DrawerController.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[112], 339, 41, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.scrimColor, oldWidget.scrimColor)) this[S$1._scrimColorTween] = this[S$1._buildScrimColorTween]();
      if (this.widget.isDrawerOpen != oldWidget.isDrawerOpen) {
        switch (this[S$1._controller$6].status) {
          case C[88] || CT.C88:
          case C[85] || CT.C85:
          {
            this[S$1._controller$6].value = dart.test(this.widget.isDrawerOpen) ? 1.0 : 0.0;
            break;
          }
          default:
          {
            break;
          }
        }
      }
    }
    [S$1._animationChanged]() {
      this.setState(dart.fn(() => {
      }, T$.VoidTovoid()));
    }
    [S$1._ensureHistoryEntry]() {
      if (this[S$1._historyEntry] == null) {
        let route = routes.ModalRoute.of(T$.ObjectN(), this.context);
        if (route != null) {
          this[S$1._historyEntry] = new routes.LocalHistoryEntry.new({onRemove: dart.bind(this, S$1._handleHistoryEntryRemoved)});
          route.addLocalHistoryEntry(dart.nullCheck(this[S$1._historyEntry]));
          focus_scope.FocusScope.of(this.context).setFirstFocus(this[S$1._focusScopeNode]);
        }
      }
    }
    [S$1._animationStatusChanged](status) {
      let t56;
      if (status == null) dart.nullFailed(I[112], 375, 48, "status");
      switch (status) {
        case C[86] || CT.C86:
        {
          this[S$1._ensureHistoryEntry]();
          break;
        }
        case C[87] || CT.C87:
        {
          t56 = this[S$1._historyEntry];
          t56 == null ? null : t56.remove();
          this[S$1._historyEntry] = null;
          break;
        }
        case C[85] || CT.C85:
        {
          break;
        }
        case C[88] || CT.C88:
        {
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    [S$1._handleHistoryEntryRemoved]() {
      this[S$1._historyEntry] = null;
      this.close();
    }
    get [S$1._controller$6]() {
      let t56;
      return dart.test(this[S$1.__DrawerControllerState__controller_isSet]) ? (t56 = this[S$1.__DrawerControllerState__controller], t56) : dart.throw(new _internal.LateError.fieldNI("_controller"));
    }
    set [S$1._controller$6](t56) {
      if (t56 == null) dart.nullFailed(I[112], 396, 28, "null");
      this[S$1.__DrawerControllerState__controller_isSet] = true;
      this[S$1.__DrawerControllerState__controller] = t56;
    }
    [S$1._handleDragDown](details) {
      if (details == null) dart.nullFailed(I[112], 398, 40, "details");
      this[S$1._controller$6].stop();
      this[S$1._ensureHistoryEntry]();
    }
    [S$1._handleDragCancel]() {
      if (dart.test(this[S$1._controller$6].isDismissed) || dart.test(this[S$1._controller$6].isAnimating)) return;
      if (dart.notNull(this[S$1._controller$6].value) < 0.5) {
        this.close();
      } else {
        this.open();
      }
    }
    get [S$1._width]() {
      let t57;
      let box = T$.RenderBoxN().as((t57 = this[S$1._drawerKey].currentContext, t57 == null ? null : t57.findRenderObject()));
      if (box != null) return box.size.width;
      return 304;
    }
    [S$1._move](details) {
      let t57, t57$;
      if (details == null) dart.nullFailed(I[112], 424, 32, "details");
      let delta = dart.nullCheck(details.primaryDelta) / dart.notNull(this[S$1._width]);
      switch (this.widget.alignment) {
        case C[690] || CT.C690:
        {
          break;
        }
        case C[691] || CT.C691:
        {
          delta = -delta;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      switch (basic.Directionality.of(this.context)) {
        case C[137] || CT.C137:
        {
          t57 = this[S$1._controller$6];
          t57.value = dart.notNull(t57.value) - delta;
          break;
        }
        case C[138] || CT.C138:
        {
          t57$ = this[S$1._controller$6];
          t57$.value = dart.notNull(t57$.value) + delta;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      let opened = dart.notNull(this[S$1._controller$6].value) > 0.5;
      if (opened !== this[S$1._previouslyOpened] && this.widget.drawerCallback != null) dart.nullCheck(this.widget.drawerCallback)(opened);
      this[S$1._previouslyOpened] = opened;
    }
    [S$1._settle](details) {
      let t57, t57$;
      if (details == null) dart.nullFailed(I[112], 448, 31, "details");
      if (dart.test(this[S$1._controller$6].isDismissed)) return;
      if (details.velocity.pixelsPerSecond.dx[S.$abs]() >= 365) {
        let visualVelocity = dart.notNull(details.velocity.pixelsPerSecond.dx) / dart.notNull(this[S$1._width]);
        switch (this.widget.alignment) {
          case C[690] || CT.C690:
          {
            break;
          }
          case C[691] || CT.C691:
          {
            visualVelocity = -visualVelocity;
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
        switch (basic.Directionality.of(this.context)) {
          case C[137] || CT.C137:
          {
            this[S$1._controller$6].fling({velocity: -visualVelocity});
            t57 = this.widget.drawerCallback;
            t57 == null ? null : t57(visualVelocity < 0.0);
            break;
          }
          case C[138] || CT.C138:
          {
            this[S$1._controller$6].fling({velocity: visualVelocity});
            t57$ = this.widget.drawerCallback;
            t57$ == null ? null : t57$(visualVelocity > 0.0);
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
      } else if (dart.notNull(this[S$1._controller$6].value) < 0.5) {
        this.close();
      } else {
        this.open();
      }
    }
    open() {
      let t57;
      this[S$1._controller$6].fling({velocity: 1.0});
      t57 = this.widget.drawerCallback;
      t57 == null ? null : t57(true);
    }
    close() {
      let t57;
      this[S$1._controller$6].fling({velocity: -1.0});
      t57 = this.widget.drawerCallback;
      t57 == null ? null : t57(false);
    }
    get [S$1._scrimColorTween]() {
      let t57;
      return dart.test(this[S$1.__DrawerControllerState__scrimColorTween_isSet]) ? (t57 = this[S$1.__DrawerControllerState__scrimColorTween], t57) : dart.throw(new _internal.LateError.fieldNI("_scrimColorTween"));
    }
    set [S$1._scrimColorTween](t57) {
      if (t57 == null) dart.nullFailed(I[112], 491, 19, "null");
      this[S$1.__DrawerControllerState__scrimColorTween_isSet] = true;
      this[S$1.__DrawerControllerState__scrimColorTween] = t57;
    }
    [S$1._buildScrimColorTween]() {
      let t58;
      return new tween.ColorTween.new({begin: colors$.Colors.transparent, end: (t58 = this.widget.scrimColor, t58 == null ? colors$.Colors.black54 : t58)});
    }
    get [S$1._drawerOuterAlignment]() {
      if (!(this.widget.alignment != null)) dart.assertFailed(null, I[112], 499, 12, "widget.alignment != null");
      switch (this.widget.alignment) {
        case C[690] || CT.C690:
        {
          return alignment.AlignmentDirectional.centerStart;
        }
        case C[691] || CT.C691:
        {
          return alignment.AlignmentDirectional.centerEnd;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    get [S$1._drawerInnerAlignment]() {
      if (!(this.widget.alignment != null)) dart.assertFailed(null, I[112], 509, 12, "widget.alignment != null");
      switch (this.widget.alignment) {
        case C[690] || CT.C690:
        {
          return alignment.AlignmentDirectional.centerEnd;
        }
        case C[691] || CT.C691:
        {
          return alignment.AlignmentDirectional.centerStart;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    [S$1._buildDrawer](context) {
      if (context == null) dart.nullFailed(I[112], 518, 36, "context");
      let drawerIsStart = this.widget.alignment == drawer.DrawerAlignment.start;
      let padding = media_query.MediaQuery.of(context).padding;
      let textDirection = basic.Directionality.of(context);
      let dragAreaWidth = this.widget.edgeDragWidth;
      if (this.widget.edgeDragWidth == null) {
        switch (textDirection) {
          case C[138] || CT.C138:
          {
            dragAreaWidth = 20 + dart.notNull(drawerIsStart ? padding.left : padding.right);
            break;
          }
          case C[137] || CT.C137:
          {
            dragAreaWidth = 20 + dart.notNull(drawerIsStart ? padding.right : padding.left);
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
      }
      if (this[S$1._controller$6].status == animation.AnimationStatus.dismissed) {
        if (dart.test(this.widget.enableOpenDragGesture)) {
          return new basic.Align.new({alignment: this[S$1._drawerOuterAlignment], child: new gesture_detector.GestureDetector.new({key: this[S$1._gestureDetectorKey], onHorizontalDragUpdate: dart.bind(this, S$1._move), onHorizontalDragEnd: dart.bind(this, S$1._settle), behavior: proxy_box.HitTestBehavior.translucent, excludeFromSemantics: true, dragStartBehavior: this.widget.dragStartBehavior, child: new container.Container.new({width: dragAreaWidth, $creationLocationd_0dea112b090073317d4: C[697] || CT.C697}), $creationLocationd_0dea112b090073317d4: C[698] || CT.C698}), $creationLocationd_0dea112b090073317d4: C[699] || CT.C699});
        } else {
          return C[700] || CT.C700;
        }
      } else {
        let platformHasBackButton = null;
        switch (theme$.Theme.of(context).platform) {
          case C[11] || CT.C11:
          {
            platformHasBackButton = true;
            break;
          }
          case C[15] || CT.C15:
          case C[16] || CT.C16:
          case C[12] || CT.C12:
          case C[13] || CT.C13:
          case C[14] || CT.C14:
          {
            platformHasBackButton = false;
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
        if (!(platformHasBackButton != null)) dart.assertFailed(null, I[112], 568, 14, "platformHasBackButton != null");
        return new gesture_detector.GestureDetector.new({key: this[S$1._gestureDetectorKey], onHorizontalDragDown: dart.bind(this, S$1._handleDragDown), onHorizontalDragUpdate: dart.bind(this, S$1._move), onHorizontalDragEnd: dart.bind(this, S$1._settle), onHorizontalDragCancel: dart.bind(this, S$1._handleDragCancel), excludeFromSemantics: true, dragStartBehavior: this.widget.dragStartBehavior, child: new basic.RepaintBoundary.new({child: new basic.Stack.new({children: T$.JSArrayOfWidget().of([new basic.BlockSemantics.new({child: new basic.ExcludeSemantics.new({excluding: platformHasBackButton, child: new gesture_detector.GestureDetector.new({onTap: dart.bind(this, 'close'), child: new basic.Semantics.new({label: material_localizations.MaterialLocalizations.of(context).modalBarrierDismissLabel, child: new basic.MouseRegion.new({opaque: true, child: new container.Container.new({color: this[S$1._scrimColorTween].evaluate(this[S$1._controller$6]), $creationLocationd_0dea112b090073317d4: C[702] || CT.C702}), $creationLocationd_0dea112b090073317d4: C[703] || CT.C703}), $creationLocationd_0dea112b090073317d4: C[704] || CT.C704}), $creationLocationd_0dea112b090073317d4: C[705] || CT.C705}), $creationLocationd_0dea112b090073317d4: C[706] || CT.C706}), $creationLocationd_0dea112b090073317d4: C[707] || CT.C707}), new basic.Align.new({alignment: this[S$1._drawerOuterAlignment], child: new basic.Align.new({alignment: this[S$1._drawerInnerAlignment], widthFactor: this[S$1._controller$6].value, child: new basic.RepaintBoundary.new({child: new focus_scope.FocusScope.new({key: this[S$1._drawerKey], node: this[S$1._focusScopeNode], child: this.widget.child, $creationLocationd_0dea112b090073317d4: C[708] || CT.C708}), $creationLocationd_0dea112b090073317d4: C[709] || CT.C709}), $creationLocationd_0dea112b090073317d4: C[710] || CT.C710}), $creationLocationd_0dea112b090073317d4: C[711] || CT.C711})]), $creationLocationd_0dea112b090073317d4: C[712] || CT.C712}), $creationLocationd_0dea112b090073317d4: C[713] || CT.C713}), $creationLocationd_0dea112b090073317d4: C[714] || CT.C714});
      }
    }
    build(context) {
      if (context == null) dart.nullFailed(I[112], 620, 29, "context");
      if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, I[112], 621, 12, "debugCheckHasMaterialLocalizations(context)");
      return new list_tile.ListTileTheme.new({style: list_tile.ListTileStyle.drawer, child: this[S$1._buildDrawer](context), $creationLocationd_0dea112b090073317d4: C[715] || CT.C715});
    }
  };
  (drawer.DrawerControllerState.new = function() {
    this[S$1._historyEntry] = null;
    this[S$1._focusScopeNode] = new focus_manager.FocusScopeNode.new();
    this[S$1.__DrawerControllerState__controller] = null;
    this[S$1.__DrawerControllerState__controller_isSet] = false;
    this[S$1._drawerKey] = T$.GlobalKeyOfStateOfStatefulWidget().new();
    this[S$1._previouslyOpened] = false;
    this[S$1.__DrawerControllerState__scrimColorTween] = null;
    this[S$1.__DrawerControllerState__scrimColorTween_isSet] = false;
    this[S$1._gestureDetectorKey] = T$.GlobalKeyOfStateOfStatefulWidget().new();
    drawer.DrawerControllerState.__proto__.new.call(this);
    ;
  }).prototype = drawer.DrawerControllerState.prototype;
  dart.addTypeTests(drawer.DrawerControllerState);
  dart.addTypeCaches(drawer.DrawerControllerState);
  dart.setMethodSignature(drawer.DrawerControllerState, () => ({
    __proto__: dart.getMethods(drawer.DrawerControllerState.__proto__),
    [S$1._animationChanged]: dart.fnType(dart.void, []),
    [S$1._ensureHistoryEntry]: dart.fnType(dart.void, []),
    [S$1._animationStatusChanged]: dart.fnType(dart.void, [animation.AnimationStatus]),
    [S$1._handleHistoryEntryRemoved]: dart.fnType(dart.void, []),
    [S$1._handleDragDown]: dart.fnType(dart.void, [drag_details.DragDownDetails]),
    [S$1._handleDragCancel]: dart.fnType(dart.void, []),
    [S$1._move]: dart.fnType(dart.void, [drag_details.DragUpdateDetails]),
    [S$1._settle]: dart.fnType(dart.void, [drag_details.DragEndDetails]),
    open: dart.fnType(dart.void, []),
    close: dart.fnType(dart.void, []),
    [S$1._buildScrimColorTween]: dart.fnType(tween.ColorTween, []),
    [S$1._buildDrawer]: dart.fnType(framework.Widget, [framework.BuildContext]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(drawer.DrawerControllerState, () => ({
    __proto__: dart.getGetters(drawer.DrawerControllerState.__proto__),
    [S$1._controller$6]: animation_controller.AnimationController,
    [S$1._width]: core.double,
    [S$1._scrimColorTween]: tween.ColorTween,
    [S$1._drawerOuterAlignment]: alignment.AlignmentDirectional,
    [S$1._drawerInnerAlignment]: alignment.AlignmentDirectional
  }));
  dart.setSetterSignature(drawer.DrawerControllerState, () => ({
    __proto__: dart.getSetters(drawer.DrawerControllerState.__proto__),
    [S$1._controller$6]: animation_controller.AnimationController,
    [S$1._scrimColorTween]: tween.ColorTween
  }));
  dart.setLibraryUri(drawer.DrawerControllerState, I[113]);
  dart.setFieldSignature(drawer.DrawerControllerState, () => ({
    __proto__: dart.getFields(drawer.DrawerControllerState.__proto__),
    [S$1._historyEntry]: dart.fieldType(dart.nullable(routes.LocalHistoryEntry)),
    [S$1._focusScopeNode]: dart.finalFieldType(focus_manager.FocusScopeNode),
    [S$1.__DrawerControllerState__controller]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$1.__DrawerControllerState__controller_isSet]: dart.fieldType(core.bool),
    [S$1._drawerKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [S$1._previouslyOpened]: dart.fieldType(core.bool),
    [S$1.__DrawerControllerState__scrimColorTween]: dart.fieldType(dart.nullable(tween.ColorTween)),
    [S$1.__DrawerControllerState__scrimColorTween_isSet]: dart.fieldType(core.bool),
    [S$1._gestureDetectorKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget)))
  }));
  dart.defineLazy(drawer, {
    /*drawer._kWidth*/get _kWidth() {
      return 304;
    },
    /*drawer._kEdgeDragWidth*/get _kEdgeDragWidth() {
      return 20;
    },
    /*drawer._kMinFlingVelocity*/get _kMinFlingVelocity() {
      return 365;
    },
    /*drawer._kBaseSettleDuration*/get _kBaseSettleDuration() {
      return C[716] || CT.C716;
    }
  }, false);
  bottom_sheet.BottomSheet = class BottomSheet extends framework.StatefulWidget {
    get animationController() {
      return this[S$1.animationController];
    }
    set animationController(value) {
      super.animationController = value;
    }
    get onClosing() {
      return this[S$1.onClosing];
    }
    set onClosing(value) {
      super.onClosing = value;
    }
    get builder() {
      return this[S$1.builder];
    }
    set builder(value) {
      super.builder = value;
    }
    get enableDrag() {
      return this[S$1.enableDrag];
    }
    set enableDrag(value) {
      super.enableDrag = value;
    }
    get onDragStart() {
      return this[S$1.onDragStart];
    }
    set onDragStart(value) {
      super.onDragStart = value;
    }
    get onDragEnd() {
      return this[S$1.onDragEnd];
    }
    set onDragEnd(value) {
      super.onDragEnd = value;
    }
    get backgroundColor() {
      return this[S$1.backgroundColor$13];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get elevation() {
      return this[S$1.elevation$18];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get shape() {
      return this[S$1.shape$17];
    }
    set shape(value) {
      super.shape = value;
    }
    get clipBehavior() {
      return this[S$1.clipBehavior$6];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get constraints() {
      return this[S$1.constraints$5];
    }
    set constraints(value) {
      super.constraints = value;
    }
    createState() {
      return new bottom_sheet._BottomSheetState.new();
    }
    static createAnimationController(vsync) {
      if (vsync == null) dart.nullFailed(I[114], 192, 71, "vsync");
      return new animation_controller.AnimationController.new({duration: bottom_sheet._bottomSheetEnterDuration, reverseDuration: bottom_sheet._bottomSheetExitDuration, debugLabel: "BottomSheet", vsync: vsync});
    }
  };
  (bottom_sheet.BottomSheet.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let animationController = opts && 'animationController' in opts ? opts.animationController : null;
    let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
    if (enableDrag == null) dart.nullFailed(I[114], 74, 10, "enableDrag");
    let onDragStart = opts && 'onDragStart' in opts ? opts.onDragStart : null;
    let onDragEnd = opts && 'onDragEnd' in opts ? opts.onDragEnd : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
    let constraints = opts && 'constraints' in opts ? opts.constraints : null;
    let onClosing = opts && 'onClosing' in opts ? opts.onClosing : null;
    if (onClosing == null) dart.nullFailed(I[114], 82, 19, "onClosing");
    let builder = opts && 'builder' in opts ? opts.builder : null;
    if (builder == null) dart.nullFailed(I[114], 83, 19, "builder");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.animationController] = animationController;
    this[S$1.enableDrag] = enableDrag;
    this[S$1.onDragStart] = onDragStart;
    this[S$1.onDragEnd] = onDragEnd;
    this[S$1.backgroundColor$13] = backgroundColor;
    this[S$1.elevation$18] = elevation;
    this[S$1.shape$17] = shape;
    this[S$1.clipBehavior$6] = clipBehavior;
    this[S$1.constraints$5] = constraints;
    this[S$1.onClosing] = onClosing;
    this[S$1.builder] = builder;
    if (!(enableDrag != null)) dart.assertFailed(null, I[114], 84, 15, "enableDrag != null");
    if (!(onClosing != null)) dart.assertFailed(null, I[114], 85, 15, "onClosing != null");
    if (!(builder != null)) dart.assertFailed(null, I[114], 86, 15, "builder != null");
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[114], 87, 15, "elevation == null || elevation >= 0.0");
    bottom_sheet.BottomSheet.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = bottom_sheet.BottomSheet.prototype;
  dart.addTypeTests(bottom_sheet.BottomSheet);
  dart.addTypeCaches(bottom_sheet.BottomSheet);
  dart.setMethodSignature(bottom_sheet.BottomSheet, () => ({
    __proto__: dart.getMethods(bottom_sheet.BottomSheet.__proto__),
    createState: dart.fnType(framework.State$(bottom_sheet.BottomSheet), [])
  }));
  dart.setLibraryUri(bottom_sheet.BottomSheet, I[115]);
  dart.setFieldSignature(bottom_sheet.BottomSheet, () => ({
    __proto__: dart.getFields(bottom_sheet.BottomSheet.__proto__),
    animationController: dart.finalFieldType(dart.nullable(animation_controller.AnimationController)),
    onClosing: dart.finalFieldType(dart.fnType(dart.void, [])),
    builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext])),
    enableDrag: dart.finalFieldType(core.bool),
    onDragStart: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [drag_details.DragStartDetails]))),
    onDragEnd: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [drag_details.DragEndDetails], {}, {isClosing: core.bool}))),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    clipBehavior: dart.finalFieldType(dart.nullable(ui.Clip)),
    constraints: dart.finalFieldType(dart.nullable(box$.BoxConstraints))
  }));
  bottom_sheet._BottomSheetState = class _BottomSheetState extends framework.State$(bottom_sheet.BottomSheet) {
    get [S$1._childHeight]() {
      let renderBox = box$.RenderBox.as(dart.nullCheck(dart.nullCheck(this[S$1._childKey].currentContext).findRenderObject()));
      return renderBox.size.height;
    }
    get [S$1._dismissUnderway]() {
      return dart.nullCheck(this.widget.animationController).status == animation.AnimationStatus.reverse;
    }
    [S$1._handleDragStart](details) {
      let t58;
      if (details == null) dart.nullFailed(I[114], 213, 42, "details");
      t58 = this.widget.onDragStart;
      t58 == null ? null : t58(details);
    }
    [S$1._handleDragUpdate](details) {
      let t58;
      if (details == null) dart.nullFailed(I[114], 217, 44, "details");
      if (!dart.test(this.widget.enableDrag)) dart.assertFailed(null, I[114], 218, 12, "widget.enableDrag");
      if (dart.test(this[S$1._dismissUnderway])) return;
      t58 = dart.nullCheck(this.widget.animationController);
      t58.value = dart.notNull(t58.value) - dart.nullCheck(details.primaryDelta) / dart.notNull(this[S$1._childHeight]);
    }
    [S$1._handleDragEnd](details) {
      let t58;
      if (details == null) dart.nullFailed(I[114], 224, 38, "details");
      if (!dart.test(this.widget.enableDrag)) dart.assertFailed(null, I[114], 225, 12, "widget.enableDrag");
      if (dart.test(this[S$1._dismissUnderway])) return;
      let isClosing = false;
      if (dart.notNull(details.velocity.pixelsPerSecond.dy) > 700) {
        let flingVelocity = -dart.notNull(details.velocity.pixelsPerSecond.dy) / dart.notNull(this[S$1._childHeight]);
        if (dart.notNull(dart.nullCheck(this.widget.animationController).value) > 0.0) {
          dart.nullCheck(this.widget.animationController).fling({velocity: flingVelocity});
        }
        if (flingVelocity < 0.0) {
          isClosing = true;
        }
      } else if (dart.notNull(dart.nullCheck(this.widget.animationController).value) < 0.5) {
        if (dart.notNull(dart.nullCheck(this.widget.animationController).value) > 0.0) dart.nullCheck(this.widget.animationController).fling({velocity: -1.0});
        isClosing = true;
      } else {
        dart.nullCheck(this.widget.animationController).forward();
      }
      t58 = this.widget.onDragEnd;
      t58 == null ? null : t58(details, {isClosing: isClosing});
      if (isClosing) {
        this.widget.onClosing();
      }
    }
    extentChanged(notification) {
      if (notification == null) dart.nullFailed(I[114], 255, 54, "notification");
      if (notification.extent == notification.minExtent) {
        this.widget.onClosing();
      }
      return false;
    }
    build(context) {
      let t58, t58$, t58$0, t58$1, t58$2, t58$3, t58$4, t59, t58$5;
      if (context == null) dart.nullFailed(I[114], 263, 29, "context");
      let bottomSheetTheme = theme$.Theme.of(context).bottomSheetTheme;
      let constraints = (t58 = this.widget.constraints, t58 == null ? bottomSheetTheme.constraints : t58);
      let color = (t58$ = this.widget.backgroundColor, t58$ == null ? bottomSheetTheme.backgroundColor : t58$);
      let elevation = (t58$1 = (t58$0 = this.widget.elevation, t58$0 == null ? bottomSheetTheme.elevation : t58$0), t58$1 == null ? 0.0 : t58$1);
      let shape = (t58$2 = this.widget.shape, t58$2 == null ? bottomSheetTheme.shape : t58$2);
      let clipBehavior = (t58$4 = (t58$3 = this.widget.clipBehavior, t58$3 == null ? bottomSheetTheme.clipBehavior : t58$3), t58$4 == null ? ui.Clip.none : t58$4);
      let bottomSheet = new material.Material.new({key: this[S$1._childKey], color: color, elevation: elevation, shape: shape, clipBehavior: clipBehavior, child: new (T$.NotificationListenerOfDraggableScrollableNotification()).new({onNotification: dart.bind(this, 'extentChanged'), child: (t58$5 = this.widget, t59 = context, t58$5.builder(t59)), $creationLocationd_0dea112b090073317d4: C[717] || CT.C717}), $creationLocationd_0dea112b090073317d4: C[718] || CT.C718});
      if (constraints != null) {
        bottomSheet = new basic.Align.new({alignment: alignment.Alignment.bottomCenter, heightFactor: 1.0, child: new basic.ConstrainedBox.new({constraints: constraints, child: bottomSheet, $creationLocationd_0dea112b090073317d4: C[719] || CT.C719}), $creationLocationd_0dea112b090073317d4: C[720] || CT.C720});
      }
      return !dart.test(this.widget.enableDrag) ? bottomSheet : new gesture_detector.GestureDetector.new({onVerticalDragStart: dart.bind(this, S$1._handleDragStart), onVerticalDragUpdate: dart.bind(this, S$1._handleDragUpdate), onVerticalDragEnd: dart.bind(this, S$1._handleDragEnd), excludeFromSemantics: true, child: bottomSheet, $creationLocationd_0dea112b090073317d4: C[721] || CT.C721});
    }
  };
  (bottom_sheet._BottomSheetState.new = function() {
    this[S$1._childKey] = T$.GlobalKeyOfStateOfStatefulWidget().new({debugLabel: "BottomSheet child"});
    bottom_sheet._BottomSheetState.__proto__.new.call(this);
    ;
  }).prototype = bottom_sheet._BottomSheetState.prototype;
  dart.addTypeTests(bottom_sheet._BottomSheetState);
  dart.addTypeCaches(bottom_sheet._BottomSheetState);
  dart.setMethodSignature(bottom_sheet._BottomSheetState, () => ({
    __proto__: dart.getMethods(bottom_sheet._BottomSheetState.__proto__),
    [S$1._handleDragStart]: dart.fnType(dart.void, [drag_details.DragStartDetails]),
    [S$1._handleDragUpdate]: dart.fnType(dart.void, [drag_details.DragUpdateDetails]),
    [S$1._handleDragEnd]: dart.fnType(dart.void, [drag_details.DragEndDetails]),
    extentChanged: dart.fnType(core.bool, [draggable_scrollable_sheet.DraggableScrollableNotification]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(bottom_sheet._BottomSheetState, () => ({
    __proto__: dart.getGetters(bottom_sheet._BottomSheetState.__proto__),
    [S$1._childHeight]: core.double,
    [S$1._dismissUnderway]: core.bool
  }));
  dart.setLibraryUri(bottom_sheet._BottomSheetState, I[115]);
  dart.setFieldSignature(bottom_sheet._BottomSheetState, () => ({
    __proto__: dart.getFields(bottom_sheet._BottomSheetState.__proto__),
    [S$1._childKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget)))
  }));
  bottom_sheet._ModalBottomSheetLayout = class _ModalBottomSheetLayout extends shifted_box.SingleChildLayoutDelegate {
    getConstraintsForChild(constraints) {
      if (constraints == null) dart.nullFailed(I[114], 317, 56, "constraints");
      return new box$.BoxConstraints.new({minWidth: constraints.maxWidth, maxWidth: constraints.maxWidth, minHeight: 0.0, maxHeight: dart.test(this.isScrollControlled) ? constraints.maxHeight : dart.notNull(constraints.maxHeight) * 9.0 / 16.0});
    }
    getPositionForChild(size, childSize) {
      if (size == null) dart.nullFailed(I[114], 329, 35, "size");
      if (childSize == null) dart.nullFailed(I[114], 329, 46, "childSize");
      return new ui.Offset.new(0.0, dart.notNull(size.height) - dart.notNull(childSize.height) * dart.notNull(this.progress));
    }
    shouldRelayout(oldDelegate) {
      bottom_sheet._ModalBottomSheetLayout.as(oldDelegate);
      if (oldDelegate == null) dart.nullFailed(I[114], 334, 47, "oldDelegate");
      return this.progress != oldDelegate.progress;
    }
  };
  (bottom_sheet._ModalBottomSheetLayout.new = function(progress, isScrollControlled) {
    if (progress == null) dart.nullFailed(I[114], 311, 32, "progress");
    if (isScrollControlled == null) dart.nullFailed(I[114], 311, 47, "isScrollControlled");
    this.progress = progress;
    this.isScrollControlled = isScrollControlled;
    bottom_sheet._ModalBottomSheetLayout.__proto__.new.call(this);
    ;
  }).prototype = bottom_sheet._ModalBottomSheetLayout.prototype;
  dart.addTypeTests(bottom_sheet._ModalBottomSheetLayout);
  dart.addTypeCaches(bottom_sheet._ModalBottomSheetLayout);
  dart.setMethodSignature(bottom_sheet._ModalBottomSheetLayout, () => ({
    __proto__: dart.getMethods(bottom_sheet._ModalBottomSheetLayout.__proto__),
    shouldRelayout: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(bottom_sheet._ModalBottomSheetLayout, I[115]);
  dart.setFieldSignature(bottom_sheet._ModalBottomSheetLayout, () => ({
    __proto__: dart.getFields(bottom_sheet._ModalBottomSheetLayout.__proto__),
    progress: dart.finalFieldType(core.double),
    isScrollControlled: dart.finalFieldType(core.bool)
  }));
  const _is__ModalBottomSheet_default = Symbol('_is__ModalBottomSheet_default');
  bottom_sheet._ModalBottomSheet$ = dart.generic(T => {
    var __t$_ModalBottomSheetStateOfT = () => (__t$_ModalBottomSheetStateOfT = dart.constFn(bottom_sheet._ModalBottomSheetState$(T)))();
    class _ModalBottomSheet extends framework.StatefulWidget {
      get route() {
        return this[S$1.route];
      }
      set route(value) {
        super.route = value;
      }
      get isScrollControlled() {
        return this[S$1.isScrollControlled];
      }
      set isScrollControlled(value) {
        super.isScrollControlled = value;
      }
      get backgroundColor() {
        return this[S$1.backgroundColor$14];
      }
      set backgroundColor(value) {
        super.backgroundColor = value;
      }
      get elevation() {
        return this[S$1.elevation$19];
      }
      set elevation(value) {
        super.elevation = value;
      }
      get shape() {
        return this[S$1.shape$18];
      }
      set shape(value) {
        super.shape = value;
      }
      get clipBehavior() {
        return this[S$1.clipBehavior$7];
      }
      set clipBehavior(value) {
        super.clipBehavior = value;
      }
      get constraints() {
        return this[S$1.constraints$6];
      }
      set constraints(value) {
        super.constraints = value;
      }
      get enableDrag() {
        return this[S$1.enableDrag$1];
      }
      set enableDrag(value) {
        super.enableDrag = value;
      }
      createState() {
        return new (__t$_ModalBottomSheetStateOfT()).new();
      }
    }
    (_ModalBottomSheet.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let route = opts && 'route' in opts ? opts.route : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      let isScrollControlled = opts && 'isScrollControlled' in opts ? opts.isScrollControlled : false;
      if (isScrollControlled == null) dart.nullFailed(I[114], 348, 10, "isScrollControlled");
      let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
      if (enableDrag == null) dart.nullFailed(I[114], 349, 10, "enableDrag");
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[S$1.route] = route;
      this[S$1.backgroundColor$14] = backgroundColor;
      this[S$1.elevation$19] = elevation;
      this[S$1.shape$18] = shape;
      this[S$1.clipBehavior$7] = clipBehavior;
      this[S$1.constraints$6] = constraints;
      this[S$1.isScrollControlled] = isScrollControlled;
      this[S$1.enableDrag$1] = enableDrag;
      if (!(isScrollControlled != null)) dart.assertFailed(null, I[114], 350, 15, "isScrollControlled != null");
      if (!(enableDrag != null)) dart.assertFailed(null, I[114], 351, 15, "enableDrag != null");
      _ModalBottomSheet.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = _ModalBottomSheet.prototype;
    dart.addTypeTests(_ModalBottomSheet);
    _ModalBottomSheet.prototype[_is__ModalBottomSheet_default] = true;
    dart.addTypeCaches(_ModalBottomSheet);
    dart.setMethodSignature(_ModalBottomSheet, () => ({
      __proto__: dart.getMethods(_ModalBottomSheet.__proto__),
      createState: dart.fnType(bottom_sheet._ModalBottomSheetState$(T), [])
    }));
    dart.setLibraryUri(_ModalBottomSheet, I[115]);
    dart.setFieldSignature(_ModalBottomSheet, () => ({
      __proto__: dart.getFields(_ModalBottomSheet.__proto__),
      route: dart.finalFieldType(dart.nullable(bottom_sheet._ModalBottomSheetRoute$(T))),
      isScrollControlled: dart.finalFieldType(core.bool),
      backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
      elevation: dart.finalFieldType(dart.nullable(core.double)),
      shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
      clipBehavior: dart.finalFieldType(dart.nullable(ui.Clip)),
      constraints: dart.finalFieldType(dart.nullable(box$.BoxConstraints)),
      enableDrag: dart.finalFieldType(core.bool)
    }));
    return _ModalBottomSheet;
  });
  bottom_sheet._ModalBottomSheet = bottom_sheet._ModalBottomSheet$();
  dart.addTypeTests(bottom_sheet._ModalBottomSheet, _is__ModalBottomSheet_default);
  const _is__ModalBottomSheetState_default = Symbol('_is__ModalBottomSheetState_default');
  bottom_sheet._ModalBottomSheetState$ = dart.generic(T => {
    class _ModalBottomSheetState extends framework.State$(bottom_sheet._ModalBottomSheet$(T)) {
      [S$1._getRouteLabel](localizations) {
        if (localizations == null) dart.nullFailed(I[114], 370, 47, "localizations");
        switch (theme$.Theme.of(this.context).platform) {
          case C[15] || CT.C15:
          case C[16] || CT.C16:
          {
            return "";
          }
          case C[11] || CT.C11:
          case C[12] || CT.C12:
          case C[13] || CT.C13:
          case C[14] || CT.C14:
          {
            return localizations.dialogLabel;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
      }
      handleDragStart(details) {
        if (details == null) dart.nullFailed(I[114], 383, 41, "details");
        this.animationCurve = curves.Curves.linear;
      }
      handleDragEnd(details, opts) {
        if (details == null) dart.nullFailed(I[114], 388, 37, "details");
        let isClosing = opts && 'isClosing' in opts ? opts.isClosing : null;
        this.animationCurve = new bottom_sheet._BottomSheetSuspendedCurve.new(dart.nullCheck(dart.nullCheck(this.widget.route).animation).value, {curve: bottom_sheet._modalBottomSheetCurve});
      }
      build(context) {
        if (context == null) dart.nullFailed(I[114], 397, 29, "context");
        if (!dart.test(debug.debugCheckHasMediaQuery(context))) dart.assertFailed(null, I[114], 398, 12, "debugCheckHasMediaQuery(context)");
        if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, I[114], 399, 12, "debugCheckHasMaterialLocalizations(context)");
        let mediaQuery = media_query.MediaQuery.of(context);
        let localizations = material_localizations.MaterialLocalizations.of(context);
        let routeLabel = this[S$1._getRouteLabel](localizations);
        return new transitions.AnimatedBuilder.new({animation: dart.nullCheck(dart.nullCheck(this.widget.route).animation), child: new bottom_sheet.BottomSheet.new({animationController: dart.nullCheck(this.widget.route)[S$1._animationController], onClosing: dart.fn(() => {
              if (dart.test(dart.nullCheck(this.widget.route).isCurrent)) {
                navigator$.Navigator.pop(T$.ObjectN(), context);
              }
            }, T$.VoidTovoid()), builder: dart.nullCheck(dart.nullCheck(this.widget.route).builder), backgroundColor: this.widget.backgroundColor, elevation: this.widget.elevation, shape: this.widget.shape, clipBehavior: this.widget.clipBehavior, constraints: this.widget.constraints, enableDrag: this.widget.enableDrag, onDragStart: dart.bind(this, 'handleDragStart'), onDragEnd: dart.bind(this, 'handleDragEnd'), $creationLocationd_0dea112b090073317d4: C[722] || CT.C722}), builder: dart.fn((context, child) => {
            if (context == null) dart.nullFailed(I[114], 423, 30, "context");
            let animationValue = this.animationCurve.transform(dart.test(mediaQuery.accessibleNavigation) ? 1.0 : dart.nullCheck(dart.nullCheck(this.widget.route).animation).value);
            return new basic.Semantics.new({scopesRoute: true, namesRoute: true, label: routeLabel, explicitChildNodes: true, child: new basic.ClipRect.new({child: new basic.CustomSingleChildLayout.new({delegate: new bottom_sheet._ModalBottomSheetLayout.new(animationValue, this.widget.isScrollControlled), child: child, $creationLocationd_0dea112b090073317d4: C[723] || CT.C723}), $creationLocationd_0dea112b090073317d4: C[724] || CT.C724}), $creationLocationd_0dea112b090073317d4: C[725] || CT.C725});
          }, T$.BuildContextAndWidgetNToSemantics()), $creationLocationd_0dea112b090073317d4: C[726] || CT.C726});
      }
    }
    (_ModalBottomSheetState.new = function() {
      this.animationCurve = bottom_sheet._modalBottomSheetCurve;
      _ModalBottomSheetState.__proto__.new.call(this);
      ;
    }).prototype = _ModalBottomSheetState.prototype;
    dart.addTypeTests(_ModalBottomSheetState);
    _ModalBottomSheetState.prototype[_is__ModalBottomSheetState_default] = true;
    dart.addTypeCaches(_ModalBottomSheetState);
    dart.setMethodSignature(_ModalBottomSheetState, () => ({
      __proto__: dart.getMethods(_ModalBottomSheetState.__proto__),
      [S$1._getRouteLabel]: dart.fnType(core.String, [material_localizations.MaterialLocalizations]),
      handleDragStart: dart.fnType(dart.void, [drag_details.DragStartDetails]),
      handleDragEnd: dart.fnType(dart.void, [drag_details.DragEndDetails], {isClosing: dart.nullable(core.bool)}, {}),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(_ModalBottomSheetState, I[115]);
    dart.setFieldSignature(_ModalBottomSheetState, () => ({
      __proto__: dart.getFields(_ModalBottomSheetState.__proto__),
      animationCurve: dart.fieldType(curves.ParametricCurve$(core.double))
    }));
    return _ModalBottomSheetState;
  });
  bottom_sheet._ModalBottomSheetState = bottom_sheet._ModalBottomSheetState$();
  dart.addTypeTests(bottom_sheet._ModalBottomSheetState, _is__ModalBottomSheetState_default);
  const _is__ModalBottomSheetRoute_default = Symbol('_is__ModalBottomSheetRoute_default');
  bottom_sheet._ModalBottomSheetRoute$ = dart.generic(T => {
    var __t$_ModalBottomSheetOfT = () => (__t$_ModalBottomSheetOfT = dart.constFn(bottom_sheet._ModalBottomSheet$(T)))();
    var __t$BuildContextTo_ModalBottomSheetOfT = () => (__t$BuildContextTo_ModalBottomSheetOfT = dart.constFn(dart.fnType(__t$_ModalBottomSheetOfT(), [framework.BuildContext])))();
    class _ModalBottomSheetRoute extends routes.PopupRoute$(T) {
      get barrierLabel() {
        return this[S$1.barrierLabel];
      }
      set barrierLabel(value) {
        super.barrierLabel = value;
      }
      get transitionDuration() {
        return bottom_sheet._bottomSheetEnterDuration;
      }
      get reverseTransitionDuration() {
        return bottom_sheet._bottomSheetExitDuration;
      }
      get barrierDismissible() {
        return this.isDismissible;
      }
      get barrierColor() {
        let t58;
        t58 = this.modalBarrierColor;
        return t58 == null ? colors$.Colors.black54 : t58;
      }
      createAnimationController() {
        let t58;
        if (!(this[S$1._animationController] == null)) dart.assertFailed(null, I[114], 499, 12, "_animationController == null");
        this[S$1._animationController] = (t58 = this.transitionAnimationController, t58 == null ? bottom_sheet.BottomSheet.createAnimationController(dart.nullCheck(dart.nullCheck(this.navigator).overlay)) : t58);
        return dart.nullCheck(this[S$1._animationController]);
      }
      buildPage(context, animation, secondaryAnimation) {
        if (context == null) dart.nullFailed(I[114], 505, 33, "context");
        if (animation == null) dart.nullFailed(I[114], 505, 60, "animation");
        if (secondaryAnimation == null) dart.nullFailed(I[114], 505, 89, "secondaryAnimation");
        let bottomSheet = media_query.MediaQuery.removePadding({context: context, removeTop: true, child: new basic.Builder.new({builder: dart.fn(context => {
              let t58, t58$, t58$0, t58$1;
              if (context == null) dart.nullFailed(I[114], 512, 32, "context");
              let sheetTheme = theme$.Theme.of(context).bottomSheetTheme;
              return new (__t$_ModalBottomSheetOfT()).new({route: this, backgroundColor: (t58$ = (t58 = this.backgroundColor, t58 == null ? sheetTheme.modalBackgroundColor : t58), t58$ == null ? sheetTheme.backgroundColor : t58$), elevation: (t58$1 = (t58$0 = this.elevation, t58$0 == null ? sheetTheme.modalElevation : t58$0), t58$1 == null ? sheetTheme.elevation : t58$1), shape: this.shape, clipBehavior: this.clipBehavior, constraints: this.constraints, isScrollControlled: this.isScrollControlled, enableDrag: this.enableDrag, $creationLocationd_0dea112b090073317d4: C[727] || CT.C727});
            }, __t$BuildContextTo_ModalBottomSheetOfT()), $creationLocationd_0dea112b090073317d4: C[728] || CT.C728}), $creationLocationd_0dea112b090073317d4: C[729] || CT.C729});
        return this.capturedThemes.wrap(bottomSheet);
      }
    }
    (_ModalBottomSheetRoute.new = function(opts) {
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let capturedThemes = opts && 'capturedThemes' in opts ? opts.capturedThemes : null;
      if (capturedThemes == null) dart.nullFailed(I[114], 449, 19, "capturedThemes");
      let barrierLabel = opts && 'barrierLabel' in opts ? opts.barrierLabel : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      let modalBarrierColor = opts && 'modalBarrierColor' in opts ? opts.modalBarrierColor : null;
      let isDismissible = opts && 'isDismissible' in opts ? opts.isDismissible : true;
      if (isDismissible == null) dart.nullFailed(I[114], 457, 10, "isDismissible");
      let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
      if (enableDrag == null) dart.nullFailed(I[114], 458, 10, "enableDrag");
      let isScrollControlled = opts && 'isScrollControlled' in opts ? opts.isScrollControlled : null;
      if (isScrollControlled == null) dart.nullFailed(I[114], 459, 19, "isScrollControlled");
      let settings = opts && 'settings' in opts ? opts.settings : null;
      let transitionAnimationController = opts && 'transitionAnimationController' in opts ? opts.transitionAnimationController : null;
      this[S$1._animationController] = null;
      this.builder = builder;
      this.capturedThemes = capturedThemes;
      this[S$1.barrierLabel] = barrierLabel;
      this.backgroundColor = backgroundColor;
      this.elevation = elevation;
      this.shape = shape;
      this.clipBehavior = clipBehavior;
      this.constraints = constraints;
      this.modalBarrierColor = modalBarrierColor;
      this.isDismissible = isDismissible;
      this.enableDrag = enableDrag;
      this.isScrollControlled = isScrollControlled;
      this.transitionAnimationController = transitionAnimationController;
      if (!(isScrollControlled != null)) dart.assertFailed(null, I[114], 462, 15, "isScrollControlled != null");
      if (!(isDismissible != null)) dart.assertFailed(null, I[114], 463, 15, "isDismissible != null");
      if (!(enableDrag != null)) dart.assertFailed(null, I[114], 464, 15, "enableDrag != null");
      _ModalBottomSheetRoute.__proto__.new.call(this, {settings: settings});
      ;
    }).prototype = _ModalBottomSheetRoute.prototype;
    dart.addTypeTests(_ModalBottomSheetRoute);
    _ModalBottomSheetRoute.prototype[_is__ModalBottomSheetRoute_default] = true;
    dart.addTypeCaches(_ModalBottomSheetRoute);
    dart.setMethodSignature(_ModalBottomSheetRoute, () => ({
      __proto__: dart.getMethods(_ModalBottomSheetRoute.__proto__),
      buildPage: dart.fnType(framework.Widget, [framework.BuildContext, animation.Animation$(core.double), animation.Animation$(core.double)])
    }));
    dart.setGetterSignature(_ModalBottomSheetRoute, () => ({
      __proto__: dart.getGetters(_ModalBottomSheetRoute.__proto__),
      transitionDuration: core.Duration,
      barrierDismissible: core.bool,
      barrierColor: ui.Color
    }));
    dart.setLibraryUri(_ModalBottomSheetRoute, I[115]);
    dart.setFieldSignature(_ModalBottomSheetRoute, () => ({
      __proto__: dart.getFields(_ModalBottomSheetRoute.__proto__),
      builder: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext]))),
      capturedThemes: dart.finalFieldType(inherited_theme.CapturedThemes),
      isScrollControlled: dart.finalFieldType(core.bool),
      backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
      elevation: dart.finalFieldType(dart.nullable(core.double)),
      shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
      clipBehavior: dart.finalFieldType(dart.nullable(ui.Clip)),
      constraints: dart.finalFieldType(dart.nullable(box$.BoxConstraints)),
      modalBarrierColor: dart.finalFieldType(dart.nullable(ui.Color)),
      isDismissible: dart.finalFieldType(core.bool),
      enableDrag: dart.finalFieldType(core.bool),
      transitionAnimationController: dart.finalFieldType(dart.nullable(animation_controller.AnimationController)),
      barrierLabel: dart.finalFieldType(dart.nullable(core.String)),
      [S$1._animationController]: dart.fieldType(dart.nullable(animation_controller.AnimationController))
    }));
    return _ModalBottomSheetRoute;
  });
  bottom_sheet._ModalBottomSheetRoute = bottom_sheet._ModalBottomSheetRoute$();
  dart.addTypeTests(bottom_sheet._ModalBottomSheetRoute, _is__ModalBottomSheetRoute_default);
  bottom_sheet._BottomSheetSuspendedCurve = class _BottomSheetSuspendedCurve extends curves.ParametricCurve$(core.double) {
    get startingPoint() {
      return this[S$1.startingPoint];
    }
    set startingPoint(value) {
      super.startingPoint = value;
    }
    get curve() {
      return this[S$1.curve];
    }
    set curve(value) {
      super.curve = value;
    }
    transform(t) {
      if (t == null) dart.nullFailed(I[114], 566, 27, "t");
      if (!(dart.notNull(t) >= 0.0 && dart.notNull(t) <= 1.0)) dart.assertFailed(null, I[114], 567, 12, "t >= 0.0 && t <= 1.0");
      if (!(dart.notNull(this.startingPoint) >= 0.0 && dart.notNull(this.startingPoint) <= 1.0)) dart.assertFailed(null, I[114], 568, 12, "startingPoint >= 0.0 && startingPoint <= 1.0");
      if (dart.notNull(t) < dart.notNull(this.startingPoint)) {
        return t;
      }
      if (t === 1.0) {
        return t;
      }
      let curveProgress = (dart.notNull(t) - dart.notNull(this.startingPoint)) / (1 - dart.notNull(this.startingPoint));
      let transformed = this.curve.transform(curveProgress);
      return dart.nullCheck(ui.lerpDouble(this.startingPoint, 1, transformed));
    }
    toString() {
      return dart.str(diagnostics.describeIdentity(this)) + "(" + dart.str(this.startingPoint) + ", " + dart.str(this.curve) + ")";
    }
  };
  (bottom_sheet._BottomSheetSuspendedCurve.new = function(startingPoint, opts) {
    if (startingPoint == null) dart.nullFailed(I[114], 552, 10, "startingPoint");
    let curve = opts && 'curve' in opts ? opts.curve : C[730] || CT.C730;
    if (curve == null) dart.nullFailed(I[114], 553, 10, "curve");
    this[S$1.startingPoint] = startingPoint;
    this[S$1.curve] = curve;
    if (!(startingPoint != null)) dart.assertFailed(null, I[114], 554, 15, "startingPoint != null");
    if (!(curve != null)) dart.assertFailed(null, I[114], 555, 15, "curve != null");
    bottom_sheet._BottomSheetSuspendedCurve.__proto__.new.call(this);
    ;
  }).prototype = bottom_sheet._BottomSheetSuspendedCurve.prototype;
  dart.addTypeTests(bottom_sheet._BottomSheetSuspendedCurve);
  dart.addTypeCaches(bottom_sheet._BottomSheetSuspendedCurve);
  dart.setLibraryUri(bottom_sheet._BottomSheetSuspendedCurve, I[115]);
  dart.setFieldSignature(bottom_sheet._BottomSheetSuspendedCurve, () => ({
    __proto__: dart.getFields(bottom_sheet._BottomSheetSuspendedCurve.__proto__),
    startingPoint: dart.finalFieldType(core.double),
    curve: dart.finalFieldType(curves.Curve)
  }));
  dart.defineExtensionMethods(bottom_sheet._BottomSheetSuspendedCurve, ['toString']);
  bottom_sheet.showModalBottomSheet = function showModalBottomSheet(T, opts) {
    let context = opts && 'context' in opts ? opts.context : null;
    if (context == null) dart.nullFailed(I[114], 689, 25, "context");
    let builder = opts && 'builder' in opts ? opts.builder : null;
    if (builder == null) dart.nullFailed(I[114], 690, 26, "builder");
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
    let constraints = opts && 'constraints' in opts ? opts.constraints : null;
    let barrierColor = opts && 'barrierColor' in opts ? opts.barrierColor : null;
    let isScrollControlled = opts && 'isScrollControlled' in opts ? opts.isScrollControlled : false;
    if (isScrollControlled == null) dart.nullFailed(I[114], 697, 8, "isScrollControlled");
    let useRootNavigator = opts && 'useRootNavigator' in opts ? opts.useRootNavigator : false;
    if (useRootNavigator == null) dart.nullFailed(I[114], 698, 8, "useRootNavigator");
    let isDismissible = opts && 'isDismissible' in opts ? opts.isDismissible : true;
    if (isDismissible == null) dart.nullFailed(I[114], 699, 8, "isDismissible");
    let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
    if (enableDrag == null) dart.nullFailed(I[114], 700, 8, "enableDrag");
    let routeSettings = opts && 'routeSettings' in opts ? opts.routeSettings : null;
    let transitionAnimationController = opts && 'transitionAnimationController' in opts ? opts.transitionAnimationController : null;
    if (!(context != null)) dart.assertFailed(null, I[114], 704, 10, "context != null");
    if (!(builder != null)) dart.assertFailed(null, I[114], 705, 10, "builder != null");
    if (!(isScrollControlled != null)) dart.assertFailed(null, I[114], 706, 10, "isScrollControlled != null");
    if (!(useRootNavigator != null)) dart.assertFailed(null, I[114], 707, 10, "useRootNavigator != null");
    if (!(isDismissible != null)) dart.assertFailed(null, I[114], 708, 10, "isDismissible != null");
    if (!(enableDrag != null)) dart.assertFailed(null, I[114], 709, 10, "enableDrag != null");
    if (!dart.test(debug.debugCheckHasMediaQuery(context))) dart.assertFailed(null, I[114], 710, 10, "debugCheckHasMediaQuery(context)");
    if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, I[114], 711, 10, "debugCheckHasMaterialLocalizations(context)");
    let navigator = navigator$.Navigator.of(context, {rootNavigator: useRootNavigator});
    return navigator.push(T, new (bottom_sheet._ModalBottomSheetRoute$(T)).new({builder: builder, capturedThemes: inherited_theme.InheritedTheme.capture({from: context, to: navigator.context}), isScrollControlled: isScrollControlled, barrierLabel: material_localizations.MaterialLocalizations.of(context).modalBarrierDismissLabel, backgroundColor: backgroundColor, elevation: elevation, shape: shape, clipBehavior: clipBehavior, constraints: constraints, isDismissible: isDismissible, modalBarrierColor: barrierColor, enableDrag: enableDrag, settings: routeSettings, transitionAnimationController: transitionAnimationController}));
  };
  bottom_sheet.showBottomSheet = function showBottomSheet(T, opts) {
    let context = opts && 'context' in opts ? opts.context : null;
    if (context == null) dart.nullFailed(I[114], 774, 25, "context");
    let builder = opts && 'builder' in opts ? opts.builder : null;
    if (builder == null) dart.nullFailed(I[114], 775, 26, "builder");
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
    let constraints = opts && 'constraints' in opts ? opts.constraints : null;
    let transitionAnimationController = opts && 'transitionAnimationController' in opts ? opts.transitionAnimationController : null;
    if (!(context != null)) dart.assertFailed(null, I[114], 783, 10, "context != null");
    if (!(builder != null)) dart.assertFailed(null, I[114], 784, 10, "builder != null");
    if (!dart.test(debug$0.debugCheckHasScaffold(context))) dart.assertFailed(null, I[114], 785, 10, "debugCheckHasScaffold(context)");
    return scaffold$.Scaffold.of(context).showBottomSheet(T, builder, {backgroundColor: backgroundColor, elevation: elevation, shape: shape, clipBehavior: clipBehavior, constraints: constraints, transitionAnimationController: transitionAnimationController});
  };
  dart.defineLazy(bottom_sheet, {
    /*bottom_sheet._bottomSheetEnterDuration*/get _bottomSheetEnterDuration() {
      return C[115] || CT.C115;
    },
    /*bottom_sheet._bottomSheetExitDuration*/get _bottomSheetExitDuration() {
      return C[143] || CT.C143;
    },
    /*bottom_sheet._modalBottomSheetCurve*/get _modalBottomSheetCurve() {
      return C[731] || CT.C731;
    },
    /*bottom_sheet._minFlingVelocity*/get _minFlingVelocity() {
      return 700;
    },
    /*bottom_sheet._closeProgressThreshold*/get _closeProgressThreshold() {
      return 0.5;
    }
  }, false);
  const Object_Diagnosticable$36$29 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$29.new = function() {
  }).prototype = Object_Diagnosticable$36$29.prototype;
  dart.applyMixin(Object_Diagnosticable$36$29, diagnostics.Diagnosticable);
  divider_theme.DividerThemeData = class DividerThemeData extends Object_Diagnosticable$36$29 {
    get color() {
      return this[S$1.color$11];
    }
    set color(value) {
      super.color = value;
    }
    get space() {
      return this[S$1.space];
    }
    set space(value) {
      super.space = value;
    }
    get thickness() {
      return this[S$1.thickness$1];
    }
    set thickness(value) {
      super.thickness = value;
    }
    get indent() {
      return this[S$1.indent];
    }
    set indent(value) {
      super.indent = value;
    }
    get endIndent() {
      return this[S$1.endIndent];
    }
    set endIndent(value) {
      super.endIndent = value;
    }
    copyWith(opts) {
      let t58, t58$, t58$0, t58$1, t58$2;
      let color = opts && 'color' in opts ? opts.color : null;
      let space = opts && 'space' in opts ? opts.space : null;
      let thickness = opts && 'thickness' in opts ? opts.thickness : null;
      let indent = opts && 'indent' in opts ? opts.indent : null;
      let endIndent = opts && 'endIndent' in opts ? opts.endIndent : null;
      return new divider_theme.DividerThemeData.new({color: (t58 = color, t58 == null ? this.color : t58), space: (t58$ = space, t58$ == null ? this.space : t58$), thickness: (t58$0 = thickness, t58$0 == null ? this.thickness : t58$0), indent: (t58$1 = indent, t58$1 == null ? this.indent : t58$1), endIndent: (t58$2 = endIndent, t58$2 == null ? this.endIndent : t58$2)});
    }
    static lerp(a, b, t) {
      let t58, t58$, t58$0, t58$1, t58$2, t58$3, t58$4, t58$5, t58$6, t58$7;
      if (t == null) dart.nullFailed(I[116], 86, 81, "t");
      if (!(t != null)) dart.assertFailed(null, I[116], 87, 12, "t != null");
      return new divider_theme.DividerThemeData.new({color: ui.Color.lerp((t58 = a, t58 == null ? null : t58.color), (t58$ = b, t58$ == null ? null : t58$.color), t), space: ui.lerpDouble((t58$0 = a, t58$0 == null ? null : t58$0.space), (t58$1 = b, t58$1 == null ? null : t58$1.space), t), thickness: ui.lerpDouble((t58$2 = a, t58$2 == null ? null : t58$2.thickness), (t58$3 = b, t58$3 == null ? null : t58$3.thickness), t), indent: ui.lerpDouble((t58$4 = a, t58$4 == null ? null : t58$4.indent), (t58$5 = b, t58$5 == null ? null : t58$5.indent), t), endIndent: ui.lerpDouble((t58$6 = a, t58$6 == null ? null : t58$6.endIndent), (t58$7 = b, t58$7 == null ? null : t58$7.endIndent), t)});
    }
    get hashCode() {
      return ui.hashValues(this.color, this.space, this.thickness, this.indent, this.endIndent);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return divider_theme.DividerThemeData.is(other) && dart.equals(other.color, this.color) && other.space == this.space && other.thickness == this.thickness && other.indent == this.indent && other.endIndent == this.endIndent;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[116], 123, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("space", this.space, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("thickness", this.thickness, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("indent", this.indent, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("endIndent", this.endIndent, {defaultValue: null}));
    }
  };
  (divider_theme.DividerThemeData.new = function(opts) {
    let color = opts && 'color' in opts ? opts.color : null;
    let space = opts && 'space' in opts ? opts.space : null;
    let thickness = opts && 'thickness' in opts ? opts.thickness : null;
    let indent = opts && 'indent' in opts ? opts.indent : null;
    let endIndent = opts && 'endIndent' in opts ? opts.endIndent : null;
    this[S$1.color$11] = color;
    this[S$1.space] = space;
    this[S$1.thickness$1] = thickness;
    this[S$1.indent] = indent;
    this[S$1.endIndent] = endIndent;
    ;
  }).prototype = divider_theme.DividerThemeData.prototype;
  dart.addTypeTests(divider_theme.DividerThemeData);
  dart.addTypeCaches(divider_theme.DividerThemeData);
  dart.setMethodSignature(divider_theme.DividerThemeData, () => ({
    __proto__: dart.getMethods(divider_theme.DividerThemeData.__proto__),
    copyWith: dart.fnType(divider_theme.DividerThemeData, [], {color: dart.nullable(ui.Color), endIndent: dart.nullable(core.double), indent: dart.nullable(core.double), space: dart.nullable(core.double), thickness: dart.nullable(core.double)}, {})
  }));
  dart.setLibraryUri(divider_theme.DividerThemeData, I[117]);
  dart.setFieldSignature(divider_theme.DividerThemeData, () => ({
    __proto__: dart.getFields(divider_theme.DividerThemeData.__proto__),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    space: dart.finalFieldType(dart.nullable(core.double)),
    thickness: dart.finalFieldType(dart.nullable(core.double)),
    indent: dart.finalFieldType(dart.nullable(core.double)),
    endIndent: dart.finalFieldType(dart.nullable(core.double))
  }));
  dart.defineExtensionMethods(divider_theme.DividerThemeData, ['_equals']);
  dart.defineExtensionAccessors(divider_theme.DividerThemeData, ['hashCode']);
  divider_theme.DividerTheme = class DividerTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S$1.data$20];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t58, t58$;
      if (context == null) dart.nullFailed(I[116], 162, 43, "context");
      let dividerTheme = context.dependOnInheritedWidgetOfExactType(divider_theme.DividerTheme);
      t58$ = (t58 = dividerTheme, t58 == null ? null : t58.data);
      return t58$ == null ? theme$.Theme.of(context).dividerTheme : t58$;
    }
    wrap(context, child) {
      if (context == null) dart.nullFailed(I[116], 168, 28, "context");
      if (child == null) dart.nullFailed(I[116], 168, 44, "child");
      return new divider_theme.DividerTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[732] || CT.C732});
    }
    updateShouldNotify(oldWidget) {
      divider_theme.DividerTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[116], 173, 40, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (divider_theme.DividerTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[116], 142, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[116], 143, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.data$20] = data;
    if (!(data != null)) dart.assertFailed(null, I[116], 144, 15, "data != null");
    divider_theme.DividerTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = divider_theme.DividerTheme.prototype;
  dart.addTypeTests(divider_theme.DividerTheme);
  dart.addTypeCaches(divider_theme.DividerTheme);
  dart.setMethodSignature(divider_theme.DividerTheme, () => ({
    __proto__: dart.getMethods(divider_theme.DividerTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(divider_theme.DividerTheme, I[117]);
  dart.setFieldSignature(divider_theme.DividerTheme, () => ({
    __proto__: dart.getFields(divider_theme.DividerTheme.__proto__),
    data: dart.finalFieldType(divider_theme.DividerThemeData)
  }));
  divider.Divider = class Divider extends framework.StatelessWidget {
    get height() {
      return this[S$1.height$7];
    }
    set height(value) {
      super.height = value;
    }
    get thickness() {
      return this[S$1.thickness$2];
    }
    set thickness(value) {
      super.thickness = value;
    }
    get indent() {
      return this[S$1.indent$1];
    }
    set indent(value) {
      super.indent = value;
    }
    get endIndent() {
      return this[S$1.endIndent$1];
    }
    set endIndent(value) {
      super.endIndent = value;
    }
    get color() {
      return this[S$1.color$12];
    }
    set color(value) {
      super.color = value;
    }
    static createBorderSide(context, opts) {
      let t59, t58, t58$, t58$0;
      let color = opts && 'color' in opts ? opts.color : null;
      let width = opts && 'width' in opts ? opts.width : null;
      let effectiveColor = (t58 = color, t58 == null ? context != null ? (t59 = divider_theme.DividerTheme.of(context).color, t59 == null ? theme$.Theme.of(context).dividerColor : t59) : null : t58);
      let effectiveWidth = (t58$0 = (t58$ = width, t58$ == null ? context != null ? divider_theme.DividerTheme.of(context).thickness : null : t58$), t58$0 == null ? 0.0 : t58$0);
      if (effectiveColor == null) {
        return new borders.BorderSide.new({width: effectiveWidth});
      }
      return new borders.BorderSide.new({color: effectiveColor, width: effectiveWidth});
    }
    build(context) {
      let t58, t58$, t58$0, t58$1, t58$2, t58$3, t58$4, t58$5;
      if (context == null) dart.nullFailed(I[118], 200, 29, "context");
      let dividerTheme = divider_theme.DividerTheme.of(context);
      let height = (t58$ = (t58 = this.height, t58 == null ? dividerTheme.space : t58), t58$ == null ? 16.0 : t58$);
      let thickness = (t58$1 = (t58$0 = this.thickness, t58$0 == null ? dividerTheme.thickness : t58$0), t58$1 == null ? 0.0 : t58$1);
      let indent = (t58$3 = (t58$2 = this.indent, t58$2 == null ? dividerTheme.indent : t58$2), t58$3 == null ? 0.0 : t58$3);
      let endIndent = (t58$5 = (t58$4 = this.endIndent, t58$4 == null ? dividerTheme.endIndent : t58$4), t58$5 == null ? 0.0 : t58$5);
      return new basic.SizedBox.new({height: height, child: new basic.Center.new({child: new container.Container.new({height: thickness, margin: new edge_insets.EdgeInsetsDirectional.only({start: indent, end: endIndent}), decoration: new box_decoration.BoxDecoration.new({border: new box_border.Border.new({bottom: divider.Divider.createBorderSide(context, {color: this.color, width: thickness})})}), $creationLocationd_0dea112b090073317d4: C[733] || CT.C733}), $creationLocationd_0dea112b090073317d4: C[734] || CT.C734}), $creationLocationd_0dea112b090073317d4: C[735] || CT.C735});
    }
  };
  (divider.Divider.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let thickness = opts && 'thickness' in opts ? opts.thickness : null;
    let indent = opts && 'indent' in opts ? opts.indent : null;
    let endIndent = opts && 'endIndent' in opts ? opts.endIndent : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.height$7] = height;
    this[S$1.thickness$2] = thickness;
    this[S$1.indent$1] = indent;
    this[S$1.endIndent$1] = endIndent;
    this[S$1.color$12] = color;
    if (!(height == null || dart.notNull(height) >= 0.0)) dart.assertFailed(null, I[118], 98, 15, "height == null || height >= 0.0");
    if (!(thickness == null || dart.notNull(thickness) >= 0.0)) dart.assertFailed(null, I[118], 99, 15, "thickness == null || thickness >= 0.0");
    if (!(indent == null || dart.notNull(indent) >= 0.0)) dart.assertFailed(null, I[118], 100, 15, "indent == null || indent >= 0.0");
    if (!(endIndent == null || dart.notNull(endIndent) >= 0.0)) dart.assertFailed(null, I[118], 101, 15, "endIndent == null || endIndent >= 0.0");
    divider.Divider.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = divider.Divider.prototype;
  dart.addTypeTests(divider.Divider);
  dart.addTypeCaches(divider.Divider);
  dart.setMethodSignature(divider.Divider, () => ({
    __proto__: dart.getMethods(divider.Divider.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(divider.Divider, I[119]);
  dart.setFieldSignature(divider.Divider, () => ({
    __proto__: dart.getFields(divider.Divider.__proto__),
    height: dart.finalFieldType(dart.nullable(core.double)),
    thickness: dart.finalFieldType(dart.nullable(core.double)),
    indent: dart.finalFieldType(dart.nullable(core.double)),
    endIndent: dart.finalFieldType(dart.nullable(core.double)),
    color: dart.finalFieldType(dart.nullable(ui.Color))
  }));
  divider.VerticalDivider = class VerticalDivider extends framework.StatelessWidget {
    get width() {
      return this[S$1.width$2];
    }
    set width(value) {
      super.width = value;
    }
    get thickness() {
      return this[S$1.thickness$3];
    }
    set thickness(value) {
      super.thickness = value;
    }
    get indent() {
      return this[S$1.indent$2];
    }
    set indent(value) {
      super.indent = value;
    }
    get endIndent() {
      return this[S$1.endIndent$2];
    }
    set endIndent(value) {
      super.endIndent = value;
    }
    get color() {
      return this[S$1.color$13];
    }
    set color(value) {
      super.color = value;
    }
    build(context) {
      let t58, t58$, t58$0, t58$1, t58$2, t58$3, t58$4, t58$5;
      if (context == null) dart.nullFailed(I[118], 343, 29, "context");
      let dividerTheme = divider_theme.DividerTheme.of(context);
      let width = (t58$ = (t58 = this.width, t58 == null ? dividerTheme.space : t58), t58$ == null ? 16.0 : t58$);
      let thickness = (t58$1 = (t58$0 = this.thickness, t58$0 == null ? dividerTheme.thickness : t58$0), t58$1 == null ? 0.0 : t58$1);
      let indent = (t58$3 = (t58$2 = this.indent, t58$2 == null ? dividerTheme.indent : t58$2), t58$3 == null ? 0.0 : t58$3);
      let endIndent = (t58$5 = (t58$4 = this.endIndent, t58$4 == null ? dividerTheme.endIndent : t58$4), t58$5 == null ? 0.0 : t58$5);
      return new basic.SizedBox.new({width: width, child: new basic.Center.new({child: new container.Container.new({width: thickness, margin: new edge_insets.EdgeInsetsDirectional.only({top: indent, bottom: endIndent}), decoration: new box_decoration.BoxDecoration.new({border: new box_border.Border.new({left: divider.Divider.createBorderSide(context, {color: this.color, width: thickness})})}), $creationLocationd_0dea112b090073317d4: C[736] || CT.C736}), $creationLocationd_0dea112b090073317d4: C[737] || CT.C737}), $creationLocationd_0dea112b090073317d4: C[738] || CT.C738});
    }
  };
  (divider.VerticalDivider.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let thickness = opts && 'thickness' in opts ? opts.thickness : null;
    let indent = opts && 'indent' in opts ? opts.indent : null;
    let endIndent = opts && 'endIndent' in opts ? opts.endIndent : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.width$2] = width;
    this[S$1.thickness$3] = thickness;
    this[S$1.indent$2] = indent;
    this[S$1.endIndent$2] = endIndent;
    this[S$1.color$13] = color;
    if (!(width == null || dart.notNull(width) >= 0.0)) dart.assertFailed(null, I[118], 291, 15, "width == null || width >= 0.0");
    if (!(thickness == null || dart.notNull(thickness) >= 0.0)) dart.assertFailed(null, I[118], 292, 15, "thickness == null || thickness >= 0.0");
    if (!(indent == null || dart.notNull(indent) >= 0.0)) dart.assertFailed(null, I[118], 293, 15, "indent == null || indent >= 0.0");
    if (!(endIndent == null || dart.notNull(endIndent) >= 0.0)) dart.assertFailed(null, I[118], 294, 15, "endIndent == null || endIndent >= 0.0");
    divider.VerticalDivider.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = divider.VerticalDivider.prototype;
  dart.addTypeTests(divider.VerticalDivider);
  dart.addTypeCaches(divider.VerticalDivider);
  dart.setMethodSignature(divider.VerticalDivider, () => ({
    __proto__: dart.getMethods(divider.VerticalDivider.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(divider.VerticalDivider, I[119]);
  dart.setFieldSignature(divider.VerticalDivider, () => ({
    __proto__: dart.getFields(divider.VerticalDivider.__proto__),
    width: dart.finalFieldType(dart.nullable(core.double)),
    thickness: dart.finalFieldType(dart.nullable(core.double)),
    indent: dart.finalFieldType(dart.nullable(core.double)),
    endIndent: dart.finalFieldType(dart.nullable(core.double)),
    color: dart.finalFieldType(dart.nullable(ui.Color))
  }));
  const Object_Diagnosticable$36$30 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$30.new = function() {
  }).prototype = Object_Diagnosticable$36$30.prototype;
  dart.applyMixin(Object_Diagnosticable$36$30, diagnostics.Diagnosticable);
  banner_theme.MaterialBannerThemeData = class MaterialBannerThemeData extends Object_Diagnosticable$36$30 {
    get backgroundColor() {
      return this[S$1.backgroundColor$15];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get contentTextStyle() {
      return this[S$1.contentTextStyle$2];
    }
    set contentTextStyle(value) {
      super.contentTextStyle = value;
    }
    get padding() {
      return this[S$1.padding$13];
    }
    set padding(value) {
      super.padding = value;
    }
    get leadingPadding() {
      return this[S$1.leadingPadding];
    }
    set leadingPadding(value) {
      super.leadingPadding = value;
    }
    copyWith(opts) {
      let t58, t58$, t58$0, t58$1;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let contentTextStyle = opts && 'contentTextStyle' in opts ? opts.contentTextStyle : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let leadingPadding = opts && 'leadingPadding' in opts ? opts.leadingPadding : null;
      return new banner_theme.MaterialBannerThemeData.new({backgroundColor: (t58 = backgroundColor, t58 == null ? this.backgroundColor : t58), contentTextStyle: (t58$ = contentTextStyle, t58$ == null ? this.contentTextStyle : t58$), padding: (t58$0 = padding, t58$0 == null ? this.padding : t58$0), leadingPadding: (t58$1 = leadingPadding, t58$1 == null ? this.leadingPadding : t58$1)});
    }
    static lerp(a, b, t) {
      let t58, t58$, t58$0, t58$1, t58$2, t58$3, t58$4, t58$5;
      if (t == null) dart.nullFailed(I[120], 72, 102, "t");
      if (!(t != null)) dart.assertFailed(null, I[120], 73, 12, "t != null");
      return new banner_theme.MaterialBannerThemeData.new({backgroundColor: ui.Color.lerp((t58 = a, t58 == null ? null : t58.backgroundColor), (t58$ = b, t58$ == null ? null : t58$.backgroundColor), t), contentTextStyle: text_style.TextStyle.lerp((t58$0 = a, t58$0 == null ? null : t58$0.contentTextStyle), (t58$1 = b, t58$1 == null ? null : t58$1.contentTextStyle), t), padding: edge_insets.EdgeInsetsGeometry.lerp((t58$2 = a, t58$2 == null ? null : t58$2.padding), (t58$3 = b, t58$3 == null ? null : t58$3.padding), t), leadingPadding: edge_insets.EdgeInsetsGeometry.lerp((t58$4 = a, t58$4 == null ? null : t58$4.leadingPadding), (t58$5 = b, t58$5 == null ? null : t58$5.leadingPadding), t)});
    }
    get hashCode() {
      return ui.hashValues(this.backgroundColor, this.contentTextStyle, this.padding, this.leadingPadding);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return banner_theme.MaterialBannerThemeData.is(other) && dart.equals(other.backgroundColor, this.backgroundColor) && dart.equals(other.contentTextStyle, this.contentTextStyle) && dart.equals(other.padding, this.padding) && dart.equals(other.leadingPadding, this.leadingPadding);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[120], 106, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("contentTextStyle", this.contentTextStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("leadingPadding", this.leadingPadding, {defaultValue: null}));
    }
  };
  (banner_theme.MaterialBannerThemeData.new = function(opts) {
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let contentTextStyle = opts && 'contentTextStyle' in opts ? opts.contentTextStyle : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let leadingPadding = opts && 'leadingPadding' in opts ? opts.leadingPadding : null;
    this[S$1.backgroundColor$15] = backgroundColor;
    this[S$1.contentTextStyle$2] = contentTextStyle;
    this[S$1.padding$13] = padding;
    this[S$1.leadingPadding] = leadingPadding;
    ;
  }).prototype = banner_theme.MaterialBannerThemeData.prototype;
  dart.addTypeTests(banner_theme.MaterialBannerThemeData);
  dart.addTypeCaches(banner_theme.MaterialBannerThemeData);
  dart.setMethodSignature(banner_theme.MaterialBannerThemeData, () => ({
    __proto__: dart.getMethods(banner_theme.MaterialBannerThemeData.__proto__),
    copyWith: dart.fnType(banner_theme.MaterialBannerThemeData, [], {backgroundColor: dart.nullable(ui.Color), contentTextStyle: dart.nullable(text_style.TextStyle), leadingPadding: dart.nullable(edge_insets.EdgeInsetsGeometry), padding: dart.nullable(edge_insets.EdgeInsetsGeometry)}, {})
  }));
  dart.setLibraryUri(banner_theme.MaterialBannerThemeData, I[121]);
  dart.setFieldSignature(banner_theme.MaterialBannerThemeData, () => ({
    __proto__: dart.getFields(banner_theme.MaterialBannerThemeData.__proto__),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    contentTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    leadingPadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry))
  }));
  dart.defineExtensionMethods(banner_theme.MaterialBannerThemeData, ['_equals']);
  dart.defineExtensionAccessors(banner_theme.MaterialBannerThemeData, ['hashCode']);
  banner_theme.MaterialBannerTheme = class MaterialBannerTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S$1.data$21];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t58, t58$;
      if (context == null) dart.nullFailed(I[120], 143, 50, "context");
      let bannerTheme = context.dependOnInheritedWidgetOfExactType(banner_theme.MaterialBannerTheme);
      t58$ = (t58 = bannerTheme, t58 == null ? null : t58.data);
      return t58$ == null ? theme$.Theme.of(context).bannerTheme : t58$;
    }
    wrap(context, child) {
      if (context == null) dart.nullFailed(I[120], 149, 28, "context");
      if (child == null) dart.nullFailed(I[120], 149, 44, "child");
      return new banner_theme.MaterialBannerTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[739] || CT.C739});
    }
    updateShouldNotify(oldWidget) {
      banner_theme.MaterialBannerTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[120], 154, 47, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (banner_theme.MaterialBannerTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[120], 126, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.data$21] = data;
    banner_theme.MaterialBannerTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = banner_theme.MaterialBannerTheme.prototype;
  dart.addTypeTests(banner_theme.MaterialBannerTheme);
  dart.addTypeCaches(banner_theme.MaterialBannerTheme);
  dart.setMethodSignature(banner_theme.MaterialBannerTheme, () => ({
    __proto__: dart.getMethods(banner_theme.MaterialBannerTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(banner_theme.MaterialBannerTheme, I[121]);
  dart.setFieldSignature(banner_theme.MaterialBannerTheme, () => ({
    __proto__: dart.getFields(banner_theme.MaterialBannerTheme.__proto__),
    data: dart.finalFieldType(dart.nullable(banner_theme.MaterialBannerThemeData))
  }));
  banner.MaterialBannerClosedReason = class MaterialBannerClosedReason extends core.Object {
    toString() {
      return this[S$1._name$25];
    }
  };
  (banner.MaterialBannerClosedReason.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[122], 32, 6, "index");
    if (_name == null) dart.nullFailed(I[122], 32, 6, "_name");
    this.index = index;
    this[S$1._name$25] = _name;
    ;
  }).prototype = banner.MaterialBannerClosedReason.prototype;
  dart.addTypeTests(banner.MaterialBannerClosedReason);
  dart.addTypeCaches(banner.MaterialBannerClosedReason);
  banner.MaterialBannerClosedReason[dart.implements] = () => [core.Enum];
  dart.setLibraryUri(banner.MaterialBannerClosedReason, I[123]);
  dart.setFieldSignature(banner.MaterialBannerClosedReason, () => ({
    __proto__: dart.getFields(banner.MaterialBannerClosedReason.__proto__),
    index: dart.finalFieldType(core.int),
    [S$1._name$25]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(banner.MaterialBannerClosedReason, ['toString']);
  banner.MaterialBannerClosedReason.dismiss = C[740] || CT.C740;
  banner.MaterialBannerClosedReason.swipe = C[741] || CT.C741;
  banner.MaterialBannerClosedReason.hide = C[742] || CT.C742;
  banner.MaterialBannerClosedReason.remove = C[743] || CT.C743;
  banner.MaterialBannerClosedReason.values = C[744] || CT.C744;
  banner.MaterialBanner = class MaterialBanner extends framework.StatefulWidget {
    get content() {
      return this[S$1.content$1];
    }
    set content(value) {
      super.content = value;
    }
    get contentTextStyle() {
      return this[S$1.contentTextStyle$3];
    }
    set contentTextStyle(value) {
      super.contentTextStyle = value;
    }
    get actions() {
      return this[S$1.actions];
    }
    set actions(value) {
      super.actions = value;
    }
    get leading() {
      return this[S$1.leading$3];
    }
    set leading(value) {
      super.leading = value;
    }
    get backgroundColor() {
      return this[S$1.backgroundColor$16];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get padding() {
      return this[S$1.padding$14];
    }
    set padding(value) {
      super.padding = value;
    }
    get leadingPadding() {
      return this[S$1.leadingPadding$1];
    }
    set leadingPadding(value) {
      super.leadingPadding = value;
    }
    get forceActionsBelow() {
      return this[S$1.forceActionsBelow];
    }
    set forceActionsBelow(value) {
      super.forceActionsBelow = value;
    }
    get overflowAlignment() {
      return this[S$1.overflowAlignment];
    }
    set overflowAlignment(value) {
      super.overflowAlignment = value;
    }
    get animation() {
      return this[S$1.animation$10];
    }
    set animation(value) {
      super.animation = value;
    }
    get onVisible() {
      return this[S$1.onVisible$1];
    }
    set onVisible(value) {
      super.onVisible = value;
    }
    static createAnimationController(opts) {
      let vsync = opts && 'vsync' in opts ? opts.vsync : null;
      if (vsync == null) dart.nullFailed(I[122], 226, 82, "vsync");
      return new animation_controller.AnimationController.new({duration: banner._materialBannerTransitionDuration, debugLabel: "MaterialBanner", vsync: vsync});
    }
    withAnimation(newAnimation, opts) {
      let t58;
      if (newAnimation == null) dart.nullFailed(I[122], 238, 50, "newAnimation");
      let fallbackKey = opts && 'fallbackKey' in opts ? opts.fallbackKey : null;
      return new banner.MaterialBanner.new({key: (t58 = this.key, t58 == null ? fallbackKey : t58), content: this.content, contentTextStyle: this.contentTextStyle, actions: this.actions, leading: this.leading, backgroundColor: this.backgroundColor, padding: this.padding, leadingPadding: this.leadingPadding, forceActionsBelow: this.forceActionsBelow, overflowAlignment: this.overflowAlignment, animation: newAnimation, onVisible: this.onVisible, $creationLocationd_0dea112b090073317d4: C[746] || CT.C746});
    }
    createState() {
      return new banner._MaterialBannerState.new();
    }
  };
  (banner.MaterialBanner.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let content = opts && 'content' in opts ? opts.content : null;
    if (content == null) dart.nullFailed(I[122], 143, 19, "content");
    let contentTextStyle = opts && 'contentTextStyle' in opts ? opts.contentTextStyle : null;
    let actions = opts && 'actions' in opts ? opts.actions : null;
    if (actions == null) dart.nullFailed(I[122], 145, 19, "actions");
    let leading = opts && 'leading' in opts ? opts.leading : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let leadingPadding = opts && 'leadingPadding' in opts ? opts.leadingPadding : null;
    let forceActionsBelow = opts && 'forceActionsBelow' in opts ? opts.forceActionsBelow : false;
    if (forceActionsBelow == null) dart.nullFailed(I[122], 150, 10, "forceActionsBelow");
    let overflowAlignment = opts && 'overflowAlignment' in opts ? opts.overflowAlignment : C[745] || CT.C745;
    if (overflowAlignment == null) dart.nullFailed(I[122], 151, 10, "overflowAlignment");
    let animation = opts && 'animation' in opts ? opts.animation : null;
    let onVisible = opts && 'onVisible' in opts ? opts.onVisible : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.content$1] = content;
    this[S$1.contentTextStyle$3] = contentTextStyle;
    this[S$1.actions] = actions;
    this[S$1.leading$3] = leading;
    this[S$1.backgroundColor$16] = backgroundColor;
    this[S$1.padding$14] = padding;
    this[S$1.leadingPadding$1] = leadingPadding;
    this[S$1.forceActionsBelow] = forceActionsBelow;
    this[S$1.overflowAlignment] = overflowAlignment;
    this[S$1.animation$10] = animation;
    this[S$1.onVisible$1] = onVisible;
    if (!(content != null)) dart.assertFailed(null, I[122], 154, 15, "content != null");
    if (!(actions != null)) dart.assertFailed(null, I[122], 155, 15, "actions != null");
    if (!(forceActionsBelow != null)) dart.assertFailed(null, I[122], 156, 15, "forceActionsBelow != null");
    banner.MaterialBanner.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = banner.MaterialBanner.prototype;
  dart.addTypeTests(banner.MaterialBanner);
  dart.addTypeCaches(banner.MaterialBanner);
  dart.setMethodSignature(banner.MaterialBanner, () => ({
    __proto__: dart.getMethods(banner.MaterialBanner.__proto__),
    withAnimation: dart.fnType(banner.MaterialBanner, [animation.Animation$(core.double)], {fallbackKey: dart.nullable(key.Key)}, {}),
    createState: dart.fnType(framework.State$(banner.MaterialBanner), [])
  }));
  dart.setLibraryUri(banner.MaterialBanner, I[123]);
  dart.setFieldSignature(banner.MaterialBanner, () => ({
    __proto__: dart.getFields(banner.MaterialBanner.__proto__),
    content: dart.finalFieldType(framework.Widget),
    contentTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    actions: dart.finalFieldType(core.List$(framework.Widget)),
    leading: dart.finalFieldType(dart.nullable(framework.Widget)),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    leadingPadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    forceActionsBelow: dart.finalFieldType(core.bool),
    overflowAlignment: dart.finalFieldType(overflow_bar.OverflowBarAlignment),
    animation: dart.finalFieldType(dart.nullable(animation.Animation$(core.double))),
    onVisible: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [])))
  }));
  banner._MaterialBannerState = class _MaterialBannerState extends framework.State$(banner.MaterialBanner) {
    initState() {
      let t58;
      super.initState();
      t58 = this.widget.animation;
      t58 == null ? null : t58.addStatusListener(dart.bind(this, S$1._onAnimationStatusChanged$1));
    }
    didUpdateWidget(oldWidget) {
      let t58, t58$;
      banner.MaterialBanner.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[122], 269, 39, "oldWidget");
      if (!dart.equals(this.widget.animation, oldWidget.animation)) {
        t58 = oldWidget.animation;
        t58 == null ? null : t58.removeStatusListener(dart.bind(this, S$1._onAnimationStatusChanged$1));
        t58$ = this.widget.animation;
        t58$ == null ? null : t58$.addStatusListener(dart.bind(this, S$1._onAnimationStatusChanged$1));
      }
      super.didUpdateWidget(oldWidget);
    }
    dispose() {
      let t58;
      t58 = this.widget.animation;
      t58 == null ? null : t58.removeStatusListener(dart.bind(this, S$1._onAnimationStatusChanged$1));
      super.dispose();
    }
    [S$1._onAnimationStatusChanged$1](animationStatus) {
      if (animationStatus == null) dart.nullFailed(I[122], 283, 50, "animationStatus");
      switch (animationStatus) {
        case C[85] || CT.C85:
        case C[86] || CT.C86:
        case C[87] || CT.C87:
        {
          break;
        }
        case C[88] || CT.C88:
        {
          if (this.widget.onVisible != null && !dart.test(this[S$1._wasVisible$1])) {
            dart.nullCheck(this.widget.onVisible)();
          }
          this[S$1._wasVisible$1] = true;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    build(context) {
      let t58, t58$, t58$0, t58$1, t58$2, t58$3, t58$4, t58$5;
      if (context == null) dart.nullFailed(I[122], 298, 29, "context");
      if (!dart.test(debug.debugCheckHasMediaQuery(context))) dart.assertFailed(null, I[122], 299, 12, "debugCheckHasMediaQuery(context)");
      let mediaQueryData = media_query.MediaQuery.of(context);
      if (!dart.test(this.widget.actions[S.$isNotEmpty])) dart.assertFailed(null, I[122], 302, 12, "widget.actions.isNotEmpty");
      let theme = theme$.Theme.of(context);
      let bannerTheme = banner_theme.MaterialBannerTheme.of(context);
      let isSingleRow = this.widget.actions[S.$length] === 1 && !dart.test(this.widget.forceActionsBelow);
      let padding = (t58$ = (t58 = this.widget.padding, t58 == null ? bannerTheme.padding : t58), t58$ == null ? isSingleRow ? C[747] || CT.C747 : C[748] || CT.C748 : t58$);
      let leadingPadding = (t58$1 = (t58$0 = this.widget.leadingPadding, t58$0 == null ? bannerTheme.leadingPadding : t58$0), t58$1 == null ? C[419] || CT.C419 : t58$1);
      let buttonBar = new container.Container.new({alignment: alignment.AlignmentDirectional.centerEnd, constraints: C[749] || CT.C749, padding: C[60] || CT.C60, child: new overflow_bar.OverflowBar.new({overflowAlignment: this.widget.overflowAlignment, spacing: 8.0, children: this.widget.actions, $creationLocationd_0dea112b090073317d4: C[750] || CT.C750}), $creationLocationd_0dea112b090073317d4: C[751] || CT.C751});
      let backgroundColor = (t58$3 = (t58$2 = this.widget.backgroundColor, t58$2 == null ? bannerTheme.backgroundColor : t58$2), t58$3 == null ? theme.colorScheme.surface : t58$3);
      let textStyle = (t58$5 = (t58$4 = this.widget.contentTextStyle, t58$4 == null ? bannerTheme.contentTextStyle : t58$4), t58$5 == null ? theme.textTheme.bodyText2 : t58$5);
      let materialBanner = new container.Container.new({color: backgroundColor, child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, children: (() => {
            let t58 = T$.JSArrayOfWidget().of([new basic.Padding.new({padding: padding, child: new basic.Row.new({children: (() => {
                    let t59 = T$.JSArrayOfWidget().of([]);
                    if (this.widget.leading != null) t59[S.$add](new basic.Padding.new({padding: leadingPadding, child: this.widget.leading, $creationLocationd_0dea112b090073317d4: C[752] || CT.C752}));
                    t59[S.$add](new basic.Expanded.new({child: new text$.DefaultTextStyle.new({style: dart.nullCheck(textStyle), child: this.widget.content, $creationLocationd_0dea112b090073317d4: C[753] || CT.C753}), $creationLocationd_0dea112b090073317d4: C[754] || CT.C754}));
                    if (isSingleRow) t59[S.$add](buttonBar);
                    return t59;
                  })(), $creationLocationd_0dea112b090073317d4: C[755] || CT.C755}), $creationLocationd_0dea112b090073317d4: C[756] || CT.C756})]);
            if (!isSingleRow) t58[S.$add](buttonBar);
            t58[S.$add](C[757] || CT.C757);
            return t58;
          })(), $creationLocationd_0dea112b090073317d4: C[759] || CT.C759}), $creationLocationd_0dea112b090073317d4: C[760] || CT.C760});
      if (this.widget.animation == null) return materialBanner;
      let heightAnimation = new animations.CurvedAnimation.new({parent: dart.nullCheck(this.widget.animation), curve: banner._materialBannerHeightCurve});
      let fadeOutAnimation = new animations.CurvedAnimation.new({parent: dart.nullCheck(this.widget.animation), curve: banner._materialBannerFadeOutCurve, reverseCurve: C[89] || CT.C89});
      materialBanner = new basic.Semantics.new({container: true, liveRegion: true, onDismiss: dart.fn(() => {
          scaffold$.ScaffoldMessenger.of(context).removeCurrentMaterialBanner({reason: banner.MaterialBannerClosedReason.dismiss});
        }, T$.VoidTovoid()), child: dart.test(mediaQueryData.accessibleNavigation) ? materialBanner : new transitions.FadeTransition.new({opacity: fadeOutAnimation, child: materialBanner, $creationLocationd_0dea112b090073317d4: C[761] || CT.C761}), $creationLocationd_0dea112b090073317d4: C[762] || CT.C762});
      let materialBannerTransition = null;
      if (dart.test(mediaQueryData.accessibleNavigation)) {
        materialBannerTransition = materialBanner;
      } else {
        materialBannerTransition = new transitions.AnimatedBuilder.new({animation: heightAnimation, builder: dart.fn((context, child) => {
            if (context == null) dart.nullFailed(I[122], 396, 32, "context");
            return new basic.Align.new({alignment: alignment.AlignmentDirectional.bottomStart, heightFactor: heightAnimation.value, child: child, $creationLocationd_0dea112b090073317d4: C[763] || CT.C763});
          }, T$.BuildContextAndWidgetNToAlign()), child: materialBanner, $creationLocationd_0dea112b090073317d4: C[764] || CT.C764});
      }
      return new heroes.Hero.new({child: new basic.ClipRect.new({child: materialBannerTransition, $creationLocationd_0dea112b090073317d4: C[765] || CT.C765}), tag: "<MaterialBanner Hero tag - " + dart.str(this.widget.content) + ">", $creationLocationd_0dea112b090073317d4: C[766] || CT.C766});
    }
  };
  (banner._MaterialBannerState.new = function() {
    this[S$1._wasVisible$1] = false;
    banner._MaterialBannerState.__proto__.new.call(this);
    ;
  }).prototype = banner._MaterialBannerState.prototype;
  dart.addTypeTests(banner._MaterialBannerState);
  dart.addTypeCaches(banner._MaterialBannerState);
  dart.setMethodSignature(banner._MaterialBannerState, () => ({
    __proto__: dart.getMethods(banner._MaterialBannerState.__proto__),
    [S$1._onAnimationStatusChanged$1]: dart.fnType(dart.void, [animation.AnimationStatus]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(banner._MaterialBannerState, I[123]);
  dart.setFieldSignature(banner._MaterialBannerState, () => ({
    __proto__: dart.getFields(banner._MaterialBannerState.__proto__),
    [S$1._wasVisible$1]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(banner, {
    /*banner._materialBannerTransitionDuration*/get _materialBannerTransitionDuration() {
      return C[115] || CT.C115;
    },
    /*banner._materialBannerHeightCurve*/get _materialBannerHeightCurve() {
      return C[116] || CT.C116;
    },
    /*banner._materialBannerFadeOutCurve*/get _materialBannerFadeOutCurve() {
      return C[118] || CT.C118;
    }
  }, false);
  scaffold$._ScaffoldSlot = class _ScaffoldSlot extends core.Object {
    toString() {
      return this[S$1._name$27];
    }
  };
  (scaffold$._ScaffoldSlot.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[124], 47, 6, "index");
    if (_name == null) dart.nullFailed(I[124], 47, 6, "_name");
    this.index = index;
    this[S$1._name$27] = _name;
    ;
  }).prototype = scaffold$._ScaffoldSlot.prototype;
  dart.addTypeTests(scaffold$._ScaffoldSlot);
  dart.addTypeCaches(scaffold$._ScaffoldSlot);
  scaffold$._ScaffoldSlot[dart.implements] = () => [core.Enum];
  dart.setLibraryUri(scaffold$._ScaffoldSlot, I[125]);
  dart.setFieldSignature(scaffold$._ScaffoldSlot, () => ({
    __proto__: dart.getFields(scaffold$._ScaffoldSlot.__proto__),
    index: dart.finalFieldType(core.int),
    [S$1._name$27]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(scaffold$._ScaffoldSlot, ['toString']);
  scaffold$._ScaffoldSlot.body = C[767] || CT.C767;
  scaffold$._ScaffoldSlot.appBar = C[768] || CT.C768;
  scaffold$._ScaffoldSlot.bodyScrim = C[769] || CT.C769;
  scaffold$._ScaffoldSlot.bottomSheet = C[770] || CT.C770;
  scaffold$._ScaffoldSlot.snackBar = C[771] || CT.C771;
  scaffold$._ScaffoldSlot.materialBanner = C[772] || CT.C772;
  scaffold$._ScaffoldSlot.persistentFooter = C[773] || CT.C773;
  scaffold$._ScaffoldSlot.bottomNavigationBar = C[774] || CT.C774;
  scaffold$._ScaffoldSlot.floatingActionButton = C[775] || CT.C775;
  scaffold$._ScaffoldSlot.drawer = C[776] || CT.C776;
  scaffold$._ScaffoldSlot.endDrawer = C[777] || CT.C777;
  scaffold$._ScaffoldSlot.statusBar = C[778] || CT.C778;
  scaffold$._ScaffoldSlot.values = C[779] || CT.C779;
  scaffold$.ScaffoldMessenger = class ScaffoldMessenger extends framework.StatefulWidget {
    get child() {
      return this[S$1.child$21];
    }
    set child(value) {
      super.child = value;
    }
    static of(context) {
      if (context == null) dart.nullFailed(I[124], 223, 49, "context");
      if (!(context != null)) dart.assertFailed(null, I[124], 224, 12, "context != null");
      if (!dart.test(debug$0.debugCheckHasScaffoldMessenger(context))) dart.assertFailed(null, I[124], 225, 12, "debugCheckHasScaffoldMessenger(context)");
      let scope = dart.nullCheck(context.dependOnInheritedWidgetOfExactType(scaffold$._ScaffoldMessengerScope));
      return scope[S$1._scaffoldMessengerState];
    }
    static maybeOf(context) {
      let t60;
      if (context == null) dart.nullFailed(I[124], 240, 55, "context");
      if (!(context != null)) dart.assertFailed(null, I[124], 241, 12, "context != null");
      let scope = context.dependOnInheritedWidgetOfExactType(scaffold$._ScaffoldMessengerScope);
      t60 = scope;
      return t60 == null ? null : t60[S$1._scaffoldMessengerState];
    }
    createState() {
      return new scaffold$.ScaffoldMessengerState.new();
    }
  };
  (scaffold$.ScaffoldMessenger.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[124], 107, 19, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.child$21] = child;
    if (!(child != null)) dart.assertFailed(null, I[124], 108, 15, "child != null");
    scaffold$.ScaffoldMessenger.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scaffold$.ScaffoldMessenger.prototype;
  dart.addTypeTests(scaffold$.ScaffoldMessenger);
  dart.addTypeCaches(scaffold$.ScaffoldMessenger);
  dart.setMethodSignature(scaffold$.ScaffoldMessenger, () => ({
    __proto__: dart.getMethods(scaffold$.ScaffoldMessenger.__proto__),
    createState: dart.fnType(scaffold$.ScaffoldMessengerState, [])
  }));
  dart.setLibraryUri(scaffold$.ScaffoldMessenger, I[125]);
  dart.setFieldSignature(scaffold$.ScaffoldMessenger, () => ({
    __proto__: dart.getFields(scaffold$.ScaffoldMessenger.__proto__),
    child: dart.finalFieldType(framework.Widget)
  }));
  const State_TickerProviderStateMixin$36$3 = class State_TickerProviderStateMixin extends framework.State$(scaffold$.ScaffoldMessenger) {};
  (State_TickerProviderStateMixin$36$3.new = function() {
    ticker_provider.TickerProviderStateMixin$(scaffold$.ScaffoldMessenger)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$3.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$3.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$3, ticker_provider.TickerProviderStateMixin$(scaffold$.ScaffoldMessenger));
  scaffold$.ScaffoldMessengerState = class ScaffoldMessengerState extends State_TickerProviderStateMixin$36$3 {
    didChangeDependencies() {
      let mediaQuery = media_query.MediaQuery.of(this.context);
      if (this[S$1._accessibleNavigation] === true && !dart.test(mediaQuery.accessibleNavigation) && this[S$1._snackBarTimer] != null && !dart.test(dart.nullCheck(this[S$1._snackBarTimer]).isActive)) {
        this.hideCurrentSnackBar({reason: snack_bar.SnackBarClosedReason.timeout});
      }
      this[S$1._accessibleNavigation] = mediaQuery.accessibleNavigation;
      super.didChangeDependencies();
    }
    [S$1._register](scaffold) {
      if (scaffold == null) dart.nullFailed(I[124], 285, 32, "scaffold");
      this[S$1._scaffolds].add(scaffold);
      if (dart.test(this[S$1._isRoot](scaffold))) {
        if (dart.test(this[S$1._snackBars][S.$isNotEmpty])) {
          scaffold[S$1._updateSnackBar]();
        }
        if (dart.test(this[S$1._materialBanners][S.$isNotEmpty])) {
          scaffold[S$1._updateMaterialBanner]();
        }
      }
    }
    [S$1._unregister](scaffold) {
      if (scaffold == null) dart.nullFailed(I[124], 299, 34, "scaffold");
      let removed = this[S$1._scaffolds].remove(scaffold);
      if (!dart.test(removed)) dart.assertFailed(null, I[124], 302, 12, "removed");
    }
    [S$1._updateScaffolds]() {
      for (let scaffold of this[S$1._scaffolds]) {
        if (dart.test(this[S$1._isRoot](scaffold))) {
          scaffold[S$1._updateSnackBar]();
          scaffold[S$1._updateMaterialBanner]();
        }
      }
    }
    [S$1._isRoot](scaffold) {
      if (scaffold == null) dart.nullFailed(I[124], 316, 30, "scaffold");
      let parent = scaffold.context.findAncestorStateOfType(scaffold$.ScaffoldState);
      return parent == null || !dart.test(this[S$1._scaffolds].contains(parent));
    }
    showSnackBar(snackBar) {
      let t60;
      if (snackBar == null) dart.nullFailed(I[124], 359, 83, "snackBar");
      this[S$1._snackBarController] == null ? this[S$1._snackBarController] = (t60 = snack_bar.SnackBar.createAnimationController({vsync: this}), (() => {
        t60.addStatusListener(dart.bind(this, S$1._handleSnackBarStatusChanged));
        return t60;
      })()) : null;
      if (dart.test(this[S$1._snackBars][S$1.$isEmpty])) {
        if (!dart.test(dart.nullCheck(this[S$1._snackBarController]).isDismissed)) dart.assertFailed(null, I[124], 363, 14, "_snackBarController!.isDismissed");
        dart.nullCheck(this[S$1._snackBarController]).forward();
      }
      let controller = null;
      let controller$35isSet = false;
      function controller$35get() {
        return controller$35isSet ? controller : dart.throw(new _internal.LateError.localNI("controller"));
      }
      dart.fn(controller$35get, T$.VoidToScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason());
      function controller$35set(t63) {
        if (t63 == null) dart.nullFailed(I[124], 366, 68, "null");
        controller$35isSet = true;
        return controller = t63;
      }
      dart.fn(controller$35set, T$.ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReasonTodynamic());
      controller$35set(new (T$.ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason()).__(snackBar.withAnimation(dart.nullCheck(this[S$1._snackBarController]), {fallbackKey: new framework.UniqueKey.new()}), T$.CompleterOfSnackBarClosedReason().new(), dart.fn(() => {
        if (!dart.equals(this[S$1._snackBars][S$0.$first], controller$35get())) dart.assertFailed(null, I[124], 374, 18, "_snackBars.first == controller");
        this.hideCurrentSnackBar({reason: snack_bar.SnackBarClosedReason.hide});
      }, T$.VoidTovoid()), null));
      this.setState(dart.fn(() => {
        this[S$1._snackBars].addLast(controller$35get());
      }, T$.VoidTovoid()));
      this[S$1._updateScaffolds]();
      return controller$35get();
    }
    [S$1._handleSnackBarStatusChanged](status) {
      if (status == null) dart.nullFailed(I[124], 386, 53, "status");
      switch (status) {
        case C[85] || CT.C85:
        {
          if (!dart.test(this[S$1._snackBars][S.$isNotEmpty])) dart.assertFailed(null, I[124], 389, 16, "_snackBars.isNotEmpty");
          this.setState(dart.fn(() => {
            this[S$1._snackBars].removeFirst();
          }, T$.VoidTovoid()));
          this[S$1._updateScaffolds]();
          if (dart.test(this[S$1._snackBars][S.$isNotEmpty])) {
            dart.nullCheck(this[S$1._snackBarController]).forward();
          }
          break;
        }
        case C[88] || CT.C88:
        {
          this.setState(dart.fn(() => {
            if (!(this[S$1._snackBarTimer] == null)) dart.assertFailed(null, I[124], 400, 18, "_snackBarTimer == null");
          }, T$.VoidTovoid()));
          this[S$1._updateScaffolds]();
          break;
        }
        case C[86] || CT.C86:
        {
          break;
        }
        case C[87] || CT.C87:
        {
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    removeCurrentSnackBar(opts) {
      let t65;
      let reason = opts && 'reason' in opts ? opts.reason : C[77] || CT.C77;
      if (reason == null) dart.nullFailed(I[124], 417, 53, "reason");
      if (!(reason != null)) dart.assertFailed(null, I[124], 418, 12, "reason != null");
      if (dart.test(this[S$1._snackBars][S$1.$isEmpty])) return;
      let completer = this[S$1._snackBars][S$0.$first][S$1._completer];
      if (!dart.test(completer.isCompleted)) completer.complete(reason);
      t65 = this[S$1._snackBarTimer];
      t65 == null ? null : t65.cancel();
      this[S$1._snackBarTimer] = null;
      dart.nullCheck(this[S$1._snackBarController]).value = 0.0;
    }
    hideCurrentSnackBar(opts) {
      let t65;
      let reason = opts && 'reason' in opts ? opts.reason : C[76] || CT.C76;
      if (reason == null) dart.nullFailed(I[124], 433, 51, "reason");
      if (!(reason != null)) dart.assertFailed(null, I[124], 434, 12, "reason != null");
      if (dart.test(this[S$1._snackBars][S$1.$isEmpty]) || dart.nullCheck(this[S$1._snackBarController]).status == animation.AnimationStatus.dismissed) return;
      let completer = this[S$1._snackBars][S$0.$first][S$1._completer];
      if (dart.nullCheck(this[S$1._accessibleNavigation])) {
        dart.nullCheck(this[S$1._snackBarController]).value = 0.0;
        completer.complete(reason);
      } else {
        dart.nullCheck(this[S$1._snackBarController]).reverse().then(dart.void, dart.fn(value => {
          if (!dart.test(this.mounted)) dart.assertFailed(null, I[124], 443, 16, "mounted");
          if (!dart.test(completer.isCompleted)) completer.complete(reason);
        }, T$.voidToNull()));
      }
      t65 = this[S$1._snackBarTimer];
      t65 == null ? null : t65.cancel();
      this[S$1._snackBarTimer] = null;
    }
    clearSnackBars() {
      if (dart.test(this[S$1._snackBars][S$1.$isEmpty]) || dart.nullCheck(this[S$1._snackBarController]).status == animation.AnimationStatus.dismissed) return;
      let currentSnackbar = this[S$1._snackBars][S$0.$first];
      this[S$1._snackBars].clear();
      this[S$1._snackBars].add(currentSnackbar);
      this.hideCurrentSnackBar();
    }
    showMaterialBanner(materialBanner) {
      let t65;
      if (materialBanner == null) dart.nullFailed(I[124], 505, 107, "materialBanner");
      this[S$1._materialBannerController] == null ? this[S$1._materialBannerController] = (t65 = banner.MaterialBanner.createAnimationController({vsync: this}), (() => {
        t65.addStatusListener(dart.bind(this, S$1._handleMaterialBannerStatusChanged));
        return t65;
      })()) : null;
      if (dart.test(this[S$1._materialBanners][S$1.$isEmpty])) {
        if (!dart.test(dart.nullCheck(this[S$1._materialBannerController]).isDismissed)) dart.assertFailed(null, I[124], 509, 14, "_materialBannerController!.isDismissed");
        dart.nullCheck(this[S$1._materialBannerController]).forward();
      }
      let controller = null;
      let controller$35isSet = false;
      function controller$35get() {
        return controller$35isSet ? controller : dart.throw(new _internal.LateError.localNI("controller"));
      }
      dart.fn(controller$35get, T$.VoidToScaffoldFeatureControllerOfMaterialBanner$MaterialBannerClosedReason());
      function controller$35set(t68) {
        if (t68 == null) dart.nullFailed(I[124], 512, 80, "null");
        controller$35isSet = true;
        return controller = t68;
      }
      dart.fn(controller$35set, T$.ScaffoldFeatureControllerOfMaterialBanner$MaterialBannerClosedReasonTodynamic());
      controller$35set(new (T$.ScaffoldFeatureControllerOfMaterialBanner$MaterialBannerClosedReason()).__(materialBanner.withAnimation(dart.nullCheck(this[S$1._materialBannerController]), {fallbackKey: new framework.UniqueKey.new()}), T$.CompleterOfMaterialBannerClosedReason().new(), dart.fn(() => {
        if (!dart.equals(this[S$1._materialBanners][S$0.$first], controller$35get())) dart.assertFailed(null, I[124], 520, 16, "_materialBanners.first == controller");
        this.hideCurrentMaterialBanner({reason: banner.MaterialBannerClosedReason.hide});
      }, T$.VoidTovoid()), null));
      this.setState(dart.fn(() => {
        this[S$1._materialBanners].addLast(controller$35get());
      }, T$.VoidTovoid()));
      this[S$1._updateScaffolds]();
      return controller$35get();
    }
    [S$1._handleMaterialBannerStatusChanged](status) {
      if (status == null) dart.nullFailed(I[124], 532, 59, "status");
      switch (status) {
        case C[85] || CT.C85:
        {
          if (!dart.test(this[S$1._materialBanners][S.$isNotEmpty])) dart.assertFailed(null, I[124], 535, 16, "_materialBanners.isNotEmpty");
          this.setState(dart.fn(() => {
            this[S$1._materialBanners].removeFirst();
          }, T$.VoidTovoid()));
          this[S$1._updateScaffolds]();
          if (dart.test(this[S$1._materialBanners][S.$isNotEmpty])) {
            dart.nullCheck(this[S$1._materialBannerController]).forward();
          }
          break;
        }
        case C[88] || CT.C88:
        {
          this[S$1._updateScaffolds]();
          break;
        }
        case C[86] || CT.C86:
        {
          break;
        }
        case C[87] || CT.C87:
        {
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    removeCurrentMaterialBanner(opts) {
      let reason = opts && 'reason' in opts ? opts.reason : C[743] || CT.C743;
      if (reason == null) dart.nullFailed(I[124], 559, 65, "reason");
      if (!(reason != null)) dart.assertFailed(null, I[124], 560, 12, "reason != null");
      if (dart.test(this[S$1._materialBanners][S$1.$isEmpty])) return;
      let completer = this[S$1._materialBanners][S$0.$first][S$1._completer];
      if (!dart.test(completer.isCompleted)) completer.complete(reason);
      dart.nullCheck(this[S$1._materialBannerController]).value = 0.0;
    }
    hideCurrentMaterialBanner(opts) {
      let reason = opts && 'reason' in opts ? opts.reason : C[742] || CT.C742;
      if (reason == null) dart.nullFailed(I[124], 574, 63, "reason");
      if (!(reason != null)) dart.assertFailed(null, I[124], 575, 12, "reason != null");
      if (dart.test(this[S$1._materialBanners][S$1.$isEmpty]) || dart.nullCheck(this[S$1._materialBannerController]).status == animation.AnimationStatus.dismissed) return;
      let completer = this[S$1._materialBanners][S$0.$first][S$1._completer];
      if (dart.nullCheck(this[S$1._accessibleNavigation])) {
        dart.nullCheck(this[S$1._materialBannerController]).value = 0.0;
        completer.complete(reason);
      } else {
        dart.nullCheck(this[S$1._materialBannerController]).reverse().then(dart.void, dart.fn(value => {
          if (!dart.test(this.mounted)) dart.assertFailed(null, I[124], 584, 16, "mounted");
          if (!dart.test(completer.isCompleted)) completer.complete(reason);
        }, T$.voidToNull()));
      }
    }
    clearMaterialBanners() {
      if (dart.test(this[S$1._materialBanners][S$1.$isEmpty]) || dart.nullCheck(this[S$1._materialBannerController]).status == animation.AnimationStatus.dismissed) return;
      let currentMaterialBanner = this[S$1._materialBanners][S$0.$first];
      this[S$1._materialBanners].clear();
      this[S$1._materialBanners].add(currentMaterialBanner);
      this.hideCurrentMaterialBanner();
    }
    build(context) {
      if (context == null) dart.nullFailed(I[124], 603, 29, "context");
      if (!dart.test(debug.debugCheckHasMediaQuery(context))) dart.assertFailed(null, I[124], 604, 12, "debugCheckHasMediaQuery(context)");
      let mediaQuery = media_query.MediaQuery.of(context);
      this[S$1._accessibleNavigation] = mediaQuery.accessibleNavigation;
      if (dart.test(this[S$1._snackBars][S.$isNotEmpty])) {
        let route = routes.ModalRoute.of(T$.ObjectN(), context);
        if (route == null || dart.test(route.isCurrent)) {
          if (dart.test(dart.nullCheck(this[S$1._snackBarController]).isCompleted) && this[S$1._snackBarTimer] == null) {
            let snackBar = this[S$1._snackBars][S$0.$first][S$1._widget];
            this[S$1._snackBarTimer] = async.Timer.new(snackBar.duration, dart.fn(() => {
              if (!(dart.nullCheck(this[S$1._snackBarController]).status == animation.AnimationStatus.forward || dart.nullCheck(this[S$1._snackBarController]).status == animation.AnimationStatus.completed)) dart.assertFailed(null, I[124], 615, 15, "_snackBarController!.status == AnimationStatus.forward ||\r\n                _snackBarController!.status == AnimationStatus.completed");
              let mediaQuery = media_query.MediaQuery.of(context);
              if (dart.test(mediaQuery.accessibleNavigation) && snackBar.action != null) return;
              this.hideCurrentSnackBar({reason: snack_bar.SnackBarClosedReason.timeout});
            }, T$.VoidTovoid()));
          }
        }
      }
      return new scaffold$._ScaffoldMessengerScope.new({scaffoldMessengerState: this, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C[780] || CT.C780});
    }
    dispose() {
      let t70, t70$;
      t70 = this[S$1._snackBarController];
      t70 == null ? null : t70.dispose();
      t70$ = this[S$1._snackBarTimer];
      t70$ == null ? null : t70$.cancel();
      this[S$1._snackBarTimer] = null;
      super.dispose();
    }
  };
  (scaffold$.ScaffoldMessengerState.new = function() {
    this[S$1._scaffolds] = new (T$._HashSetOfScaffoldState()).new();
    this[S$1._materialBanners] = new (T$.ListQueueOfScaffoldFeatureControllerOfMaterialBanner$MaterialBannerClosedReason()).new();
    this[S$1._materialBannerController] = null;
    this[S$1._snackBars] = new (T$.ListQueueOfScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason()).new();
    this[S$1._snackBarController] = null;
    this[S$1._snackBarTimer] = null;
    this[S$1._accessibleNavigation] = null;
    scaffold$.ScaffoldMessengerState.__proto__.new.call(this);
    ;
  }).prototype = scaffold$.ScaffoldMessengerState.prototype;
  dart.addTypeTests(scaffold$.ScaffoldMessengerState);
  dart.addTypeCaches(scaffold$.ScaffoldMessengerState);
  dart.setMethodSignature(scaffold$.ScaffoldMessengerState, () => ({
    __proto__: dart.getMethods(scaffold$.ScaffoldMessengerState.__proto__),
    [S$1._register]: dart.fnType(dart.void, [scaffold$.ScaffoldState]),
    [S$1._unregister]: dart.fnType(dart.void, [scaffold$.ScaffoldState]),
    [S$1._updateScaffolds]: dart.fnType(dart.void, []),
    [S$1._isRoot]: dart.fnType(core.bool, [scaffold$.ScaffoldState]),
    showSnackBar: dart.fnType(scaffold$.ScaffoldFeatureController$(snack_bar.SnackBar, snack_bar.SnackBarClosedReason), [snack_bar.SnackBar]),
    [S$1._handleSnackBarStatusChanged]: dart.fnType(dart.void, [animation.AnimationStatus]),
    removeCurrentSnackBar: dart.fnType(dart.void, [], {reason: snack_bar.SnackBarClosedReason}, {}),
    hideCurrentSnackBar: dart.fnType(dart.void, [], {reason: snack_bar.SnackBarClosedReason}, {}),
    clearSnackBars: dart.fnType(dart.void, []),
    showMaterialBanner: dart.fnType(scaffold$.ScaffoldFeatureController$(banner.MaterialBanner, banner.MaterialBannerClosedReason), [banner.MaterialBanner]),
    [S$1._handleMaterialBannerStatusChanged]: dart.fnType(dart.void, [animation.AnimationStatus]),
    removeCurrentMaterialBanner: dart.fnType(dart.void, [], {reason: banner.MaterialBannerClosedReason}, {}),
    hideCurrentMaterialBanner: dart.fnType(dart.void, [], {reason: banner.MaterialBannerClosedReason}, {}),
    clearMaterialBanners: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(scaffold$.ScaffoldMessengerState, I[125]);
  dart.setFieldSignature(scaffold$.ScaffoldMessengerState, () => ({
    __proto__: dart.getFields(scaffold$.ScaffoldMessengerState.__proto__),
    [S$1._scaffolds]: dart.finalFieldType(collection.LinkedHashSet$(scaffold$.ScaffoldState)),
    [S$1._materialBanners]: dart.finalFieldType(collection.Queue$(scaffold$.ScaffoldFeatureController$(banner.MaterialBanner, banner.MaterialBannerClosedReason))),
    [S$1._materialBannerController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$1._snackBars]: dart.finalFieldType(collection.Queue$(scaffold$.ScaffoldFeatureController$(snack_bar.SnackBar, snack_bar.SnackBarClosedReason))),
    [S$1._snackBarController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$1._snackBarTimer]: dart.fieldType(dart.nullable(async.Timer)),
    [S$1._accessibleNavigation]: dart.fieldType(dart.nullable(core.bool))
  }));
  scaffold$._ScaffoldMessengerScope = class _ScaffoldMessengerScope extends framework.InheritedWidget {
    get [S$1._scaffoldMessengerState]() {
      return this[S$1._scaffoldMessengerState$1];
    }
    set [S$1._scaffoldMessengerState](value) {
      super[S$1._scaffoldMessengerState] = value;
    }
    updateShouldNotify(old) {
      scaffold$._ScaffoldMessengerScope.as(old);
      if (old == null) dart.nullFailed(I[124], 654, 51, "old");
      return !dart.equals(this[S$1._scaffoldMessengerState], old[S$1._scaffoldMessengerState]);
    }
  };
  (scaffold$._ScaffoldMessengerScope.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[124], 646, 21, "child");
    let scaffoldMessengerState = opts && 'scaffoldMessengerState' in opts ? opts.scaffoldMessengerState : null;
    if (scaffoldMessengerState == null) dart.nullFailed(I[124], 647, 37, "scaffoldMessengerState");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1._scaffoldMessengerState$1] = scaffoldMessengerState;
    scaffold$._ScaffoldMessengerScope.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scaffold$._ScaffoldMessengerScope.prototype;
  dart.addTypeTests(scaffold$._ScaffoldMessengerScope);
  dart.addTypeCaches(scaffold$._ScaffoldMessengerScope);
  dart.setMethodSignature(scaffold$._ScaffoldMessengerScope, () => ({
    __proto__: dart.getMethods(scaffold$._ScaffoldMessengerScope.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(scaffold$._ScaffoldMessengerScope, I[125]);
  dart.setFieldSignature(scaffold$._ScaffoldMessengerScope, () => ({
    __proto__: dart.getFields(scaffold$._ScaffoldMessengerScope.__proto__),
    [S$1._scaffoldMessengerState]: dart.finalFieldType(scaffold$.ScaffoldMessengerState)
  }));
  scaffold$.ScaffoldPrelayoutGeometry = class ScaffoldPrelayoutGeometry extends core.Object {
    get floatingActionButtonSize() {
      return this[S$1.floatingActionButtonSize];
    }
    set floatingActionButtonSize(value) {
      super.floatingActionButtonSize = value;
    }
    get bottomSheetSize() {
      return this[S$1.bottomSheetSize];
    }
    set bottomSheetSize(value) {
      super.bottomSheetSize = value;
    }
    get contentBottom() {
      return this[S$1.contentBottom];
    }
    set contentBottom(value) {
      super.contentBottom = value;
    }
    get contentTop() {
      return this[S$1.contentTop];
    }
    set contentTop(value) {
      super.contentTop = value;
    }
    get minInsets() {
      return this[S$1.minInsets];
    }
    set minInsets(value) {
      super.minInsets = value;
    }
    get minViewPadding() {
      return this[S$1.minViewPadding];
    }
    set minViewPadding(value) {
      super.minViewPadding = value;
    }
    get scaffoldSize() {
      return this[S$1.scaffoldSize];
    }
    set scaffoldSize(value) {
      super.scaffoldSize = value;
    }
    get snackBarSize() {
      return this[S$1.snackBarSize];
    }
    set snackBarSize(value) {
      super.snackBarSize = value;
    }
    get materialBannerSize() {
      return this[S$1.materialBannerSize];
    }
    set materialBannerSize(value) {
      super.materialBannerSize = value;
    }
    get textDirection() {
      return this[S$1.textDirection$2];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
  };
  (scaffold$.ScaffoldPrelayoutGeometry.new = function(opts) {
    let bottomSheetSize = opts && 'bottomSheetSize' in opts ? opts.bottomSheetSize : null;
    if (bottomSheetSize == null) dart.nullFailed(I[124], 671, 19, "bottomSheetSize");
    let contentBottom = opts && 'contentBottom' in opts ? opts.contentBottom : null;
    if (contentBottom == null) dart.nullFailed(I[124], 672, 19, "contentBottom");
    let contentTop = opts && 'contentTop' in opts ? opts.contentTop : null;
    if (contentTop == null) dart.nullFailed(I[124], 673, 19, "contentTop");
    let floatingActionButtonSize = opts && 'floatingActionButtonSize' in opts ? opts.floatingActionButtonSize : null;
    if (floatingActionButtonSize == null) dart.nullFailed(I[124], 674, 19, "floatingActionButtonSize");
    let minInsets = opts && 'minInsets' in opts ? opts.minInsets : null;
    if (minInsets == null) dart.nullFailed(I[124], 675, 19, "minInsets");
    let minViewPadding = opts && 'minViewPadding' in opts ? opts.minViewPadding : null;
    if (minViewPadding == null) dart.nullFailed(I[124], 676, 19, "minViewPadding");
    let scaffoldSize = opts && 'scaffoldSize' in opts ? opts.scaffoldSize : null;
    if (scaffoldSize == null) dart.nullFailed(I[124], 677, 19, "scaffoldSize");
    let snackBarSize = opts && 'snackBarSize' in opts ? opts.snackBarSize : null;
    if (snackBarSize == null) dart.nullFailed(I[124], 678, 19, "snackBarSize");
    let materialBannerSize = opts && 'materialBannerSize' in opts ? opts.materialBannerSize : null;
    if (materialBannerSize == null) dart.nullFailed(I[124], 679, 19, "materialBannerSize");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    if (textDirection == null) dart.nullFailed(I[124], 680, 19, "textDirection");
    this[S$1.bottomSheetSize] = bottomSheetSize;
    this[S$1.contentBottom] = contentBottom;
    this[S$1.contentTop] = contentTop;
    this[S$1.floatingActionButtonSize] = floatingActionButtonSize;
    this[S$1.minInsets] = minInsets;
    this[S$1.minViewPadding] = minViewPadding;
    this[S$1.scaffoldSize] = scaffoldSize;
    this[S$1.snackBarSize] = snackBarSize;
    this[S$1.materialBannerSize] = materialBannerSize;
    this[S$1.textDirection$2] = textDirection;
    ;
  }).prototype = scaffold$.ScaffoldPrelayoutGeometry.prototype;
  dart.addTypeTests(scaffold$.ScaffoldPrelayoutGeometry);
  dart.addTypeCaches(scaffold$.ScaffoldPrelayoutGeometry);
  dart.setLibraryUri(scaffold$.ScaffoldPrelayoutGeometry, I[125]);
  dart.setFieldSignature(scaffold$.ScaffoldPrelayoutGeometry, () => ({
    __proto__: dart.getFields(scaffold$.ScaffoldPrelayoutGeometry.__proto__),
    floatingActionButtonSize: dart.finalFieldType(ui.Size),
    bottomSheetSize: dart.finalFieldType(ui.Size),
    contentBottom: dart.finalFieldType(core.double),
    contentTop: dart.finalFieldType(core.double),
    minInsets: dart.finalFieldType(edge_insets.EdgeInsets),
    minViewPadding: dart.finalFieldType(edge_insets.EdgeInsets),
    scaffoldSize: dart.finalFieldType(ui.Size),
    snackBarSize: dart.finalFieldType(ui.Size),
    materialBannerSize: dart.finalFieldType(ui.Size),
    textDirection: dart.finalFieldType(ui.TextDirection)
  }));
  scaffold$._TransitionSnapshotFabLocation = class _TransitionSnapshotFabLocation extends floating_action_button_location.FloatingActionButtonLocation {
    get begin() {
      return this[S$1.begin];
    }
    set begin(value) {
      super.begin = value;
    }
    get end() {
      return this[S$1.end$2];
    }
    set end(value) {
      super.end = value;
    }
    get animator() {
      return this[S$1.animator];
    }
    set animator(value) {
      super.animator = value;
    }
    get progress() {
      return this[S$1.progress];
    }
    set progress(value) {
      super.progress = value;
    }
    getOffset(scaffoldGeometry) {
      if (scaffoldGeometry == null) dart.nullFailed(I[124], 787, 46, "scaffoldGeometry");
      return this.animator.getOffset({begin: this.begin.getOffset(scaffoldGeometry), end: this.end.getOffset(scaffoldGeometry), progress: this.progress});
    }
    toString() {
      return dart.str(object$.objectRuntimeType(this, "_TransitionSnapshotFabLocation")) + "(begin: " + dart.str(this.begin) + ", end: " + dart.str(this.end) + ", progress: " + dart.str(this.progress) + ")";
    }
  };
  (scaffold$._TransitionSnapshotFabLocation.new = function(begin, end, animator, progress) {
    if (begin == null) dart.nullFailed(I[124], 779, 45, "begin");
    if (end == null) dart.nullFailed(I[124], 779, 57, "end");
    if (animator == null) dart.nullFailed(I[124], 779, 67, "animator");
    if (progress == null) dart.nullFailed(I[124], 779, 82, "progress");
    this[S$1.begin] = begin;
    this[S$1.end$2] = end;
    this[S$1.animator] = animator;
    this[S$1.progress] = progress;
    scaffold$._TransitionSnapshotFabLocation.__proto__.new.call(this);
    ;
  }).prototype = scaffold$._TransitionSnapshotFabLocation.prototype;
  dart.addTypeTests(scaffold$._TransitionSnapshotFabLocation);
  dart.addTypeCaches(scaffold$._TransitionSnapshotFabLocation);
  dart.setMethodSignature(scaffold$._TransitionSnapshotFabLocation, () => ({
    __proto__: dart.getMethods(scaffold$._TransitionSnapshotFabLocation.__proto__),
    getOffset: dart.fnType(ui.Offset, [scaffold$.ScaffoldPrelayoutGeometry])
  }));
  dart.setLibraryUri(scaffold$._TransitionSnapshotFabLocation, I[125]);
  dart.setFieldSignature(scaffold$._TransitionSnapshotFabLocation, () => ({
    __proto__: dart.getFields(scaffold$._TransitionSnapshotFabLocation.__proto__),
    begin: dart.finalFieldType(floating_action_button_location.FloatingActionButtonLocation),
    end: dart.finalFieldType(floating_action_button_location.FloatingActionButtonLocation),
    animator: dart.finalFieldType(floating_action_button_location.FloatingActionButtonAnimator),
    progress: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(scaffold$._TransitionSnapshotFabLocation, ['toString']);
  scaffold$.ScaffoldGeometry = class ScaffoldGeometry extends core.Object {
    get bottomNavigationBarTop() {
      return this[S$1.bottomNavigationBarTop];
    }
    set bottomNavigationBarTop(value) {
      super.bottomNavigationBarTop = value;
    }
    get floatingActionButtonArea() {
      return this[S$1.floatingActionButtonArea];
    }
    set floatingActionButtonArea(value) {
      super.floatingActionButtonArea = value;
    }
    [S$1._scaleFloatingActionButton](scaleFactor) {
      if (scaleFactor == null) dart.nullFailed(I[124], 834, 54, "scaleFactor");
      if (scaleFactor === 1.0) return this;
      if (scaleFactor === 0.0) {
        return new scaffold$.ScaffoldGeometry.new({bottomNavigationBarTop: this.bottomNavigationBarTop});
      }
      let scaledButton = dart.nullCheck(ui.Rect.lerp(dart.nullCheck(this.floatingActionButtonArea).center['&'](ui.Size.zero), this.floatingActionButtonArea, scaleFactor));
      return this.copyWith({floatingActionButtonArea: scaledButton});
    }
    copyWith(opts) {
      let t70, t70$;
      let bottomNavigationBarTop = opts && 'bottomNavigationBarTop' in opts ? opts.bottomNavigationBarTop : null;
      let floatingActionButtonArea = opts && 'floatingActionButtonArea' in opts ? opts.floatingActionButtonArea : null;
      return new scaffold$.ScaffoldGeometry.new({bottomNavigationBarTop: (t70 = bottomNavigationBarTop, t70 == null ? this.bottomNavigationBarTop : t70), floatingActionButtonArea: (t70$ = floatingActionButtonArea, t70$ == null ? this.floatingActionButtonArea : t70$)});
    }
  };
  (scaffold$.ScaffoldGeometry.new = function(opts) {
    let bottomNavigationBarTop = opts && 'bottomNavigationBarTop' in opts ? opts.bottomNavigationBarTop : null;
    let floatingActionButtonArea = opts && 'floatingActionButtonArea' in opts ? opts.floatingActionButtonArea : null;
    this[S$1.bottomNavigationBarTop] = bottomNavigationBarTop;
    this[S$1.floatingActionButtonArea] = floatingActionButtonArea;
    ;
  }).prototype = scaffold$.ScaffoldGeometry.prototype;
  dart.addTypeTests(scaffold$.ScaffoldGeometry);
  dart.addTypeCaches(scaffold$.ScaffoldGeometry);
  dart.setMethodSignature(scaffold$.ScaffoldGeometry, () => ({
    __proto__: dart.getMethods(scaffold$.ScaffoldGeometry.__proto__),
    [S$1._scaleFloatingActionButton]: dart.fnType(scaffold$.ScaffoldGeometry, [core.double]),
    copyWith: dart.fnType(scaffold$.ScaffoldGeometry, [], {bottomNavigationBarTop: dart.nullable(core.double), floatingActionButtonArea: dart.nullable(ui.Rect)}, {})
  }));
  dart.setLibraryUri(scaffold$.ScaffoldGeometry, I[125]);
  dart.setFieldSignature(scaffold$.ScaffoldGeometry, () => ({
    __proto__: dart.getFields(scaffold$.ScaffoldGeometry.__proto__),
    bottomNavigationBarTop: dart.finalFieldType(dart.nullable(core.double)),
    floatingActionButtonArea: dart.finalFieldType(dart.nullable(ui.Rect))
  }));
  scaffold$._ScaffoldGeometryNotifier = class _ScaffoldGeometryNotifier extends change_notifier.ChangeNotifier {
    get value() {
      if (!dart.test(dart.fn(() => {
        let renderObject = this.context.findRenderObject();
        if (renderObject == null || !dart.test(dart.nullCheck(renderObject.owner).debugDoingPaint)) dart.throw(assertions.FlutterError.new("Scaffold.geometryOf() must only be accessed during the paint phase.\n" + "The ScaffoldGeometry is only available during the paint phase, because " + "its value is computed during the animation and layout phases prior to painting."));
        return true;
      }, T$.VoidTobool())())) dart.assertFailed(null, I[124], 875, 12, "() {\r\n      final RenderObject? renderObject = context.findRenderObject();\r\n      if (renderObject == null || !renderObject.owner!.debugDoingPaint)\r\n        throw FlutterError(\r\n            'Scaffold.geometryOf() must only be accessed during the paint phase.\\n'\r\n            'The ScaffoldGeometry is only available during the paint phase, because '\r\n            'its value is computed during the animation and layout phases prior to painting.',\r\n        );\r\n      return true;\r\n    }()");
      return this.geometry[S$1._scaleFloatingActionButton](dart.nullCheck(this.floatingActionButtonScale));
    }
    [S$1._updateWith](opts) {
      let t70;
      let bottomNavigationBarTop = opts && 'bottomNavigationBarTop' in opts ? opts.bottomNavigationBarTop : null;
      let floatingActionButtonArea = opts && 'floatingActionButtonArea' in opts ? opts.floatingActionButtonArea : null;
      let floatingActionButtonScale = opts && 'floatingActionButtonScale' in opts ? opts.floatingActionButtonScale : null;
      this.floatingActionButtonScale = (t70 = floatingActionButtonScale, t70 == null ? this.floatingActionButtonScale : t70);
      this.geometry = this.geometry.copyWith({bottomNavigationBarTop: bottomNavigationBarTop, floatingActionButtonArea: floatingActionButtonArea});
      this.notifyListeners();
    }
  };
  (scaffold$._ScaffoldGeometryNotifier.new = function(geometry, context) {
    if (geometry == null) dart.nullFailed(I[124], 866, 34, "geometry");
    if (context == null) dart.nullFailed(I[124], 866, 49, "context");
    this.floatingActionButtonScale = null;
    this.geometry = geometry;
    this.context = context;
    if (!(context != null)) dart.assertFailed(null, I[124], 867, 15, "context != null");
    scaffold$._ScaffoldGeometryNotifier.__proto__.new.call(this);
    ;
  }).prototype = scaffold$._ScaffoldGeometryNotifier.prototype;
  dart.addTypeTests(scaffold$._ScaffoldGeometryNotifier);
  dart.addTypeCaches(scaffold$._ScaffoldGeometryNotifier);
  scaffold$._ScaffoldGeometryNotifier[dart.implements] = () => [change_notifier.ValueListenable$(scaffold$.ScaffoldGeometry)];
  dart.setMethodSignature(scaffold$._ScaffoldGeometryNotifier, () => ({
    __proto__: dart.getMethods(scaffold$._ScaffoldGeometryNotifier.__proto__),
    [S$1._updateWith]: dart.fnType(dart.void, [], {bottomNavigationBarTop: dart.nullable(core.double), floatingActionButtonArea: dart.nullable(ui.Rect), floatingActionButtonScale: dart.nullable(core.double)}, {})
  }));
  dart.setGetterSignature(scaffold$._ScaffoldGeometryNotifier, () => ({
    __proto__: dart.getGetters(scaffold$._ScaffoldGeometryNotifier.__proto__),
    value: scaffold$.ScaffoldGeometry
  }));
  dart.setLibraryUri(scaffold$._ScaffoldGeometryNotifier, I[125]);
  dart.setFieldSignature(scaffold$._ScaffoldGeometryNotifier, () => ({
    __proto__: dart.getFields(scaffold$._ScaffoldGeometryNotifier.__proto__),
    context: dart.finalFieldType(framework.BuildContext),
    floatingActionButtonScale: dart.fieldType(dart.nullable(core.double)),
    geometry: dart.fieldType(scaffold$.ScaffoldGeometry)
  }));
  scaffold$._BodyBoxConstraints = class _BodyBoxConstraints extends box$.BoxConstraints {
    get bottomWidgetsHeight() {
      return this[S$1.bottomWidgetsHeight];
    }
    set bottomWidgetsHeight(value) {
      super.bottomWidgetsHeight = value;
    }
    get appBarHeight() {
      return this[S$1.appBarHeight];
    }
    set appBarHeight(value) {
      super.appBarHeight = value;
    }
    _equals(other) {
      if (other == null) return false;
      if (!super._equals(other)) return false;
      return scaffold$._BodyBoxConstraints.is(other) && other.bottomWidgetsHeight == this.bottomWidgetsHeight && other.appBarHeight == this.appBarHeight;
    }
    get hashCode() {
      return ui.hashValues(super.hashCode, this.bottomWidgetsHeight, this.appBarHeight);
    }
  };
  (scaffold$._BodyBoxConstraints.new = function(opts) {
    let minWidth = opts && 'minWidth' in opts ? opts.minWidth : 0;
    if (minWidth == null) dart.nullFailed(I[124], 913, 12, "minWidth");
    let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : 1 / 0;
    if (maxWidth == null) dart.nullFailed(I[124], 914, 12, "maxWidth");
    let minHeight = opts && 'minHeight' in opts ? opts.minHeight : 0;
    if (minHeight == null) dart.nullFailed(I[124], 915, 12, "minHeight");
    let maxHeight = opts && 'maxHeight' in opts ? opts.maxHeight : 1 / 0;
    if (maxHeight == null) dart.nullFailed(I[124], 916, 12, "maxHeight");
    let bottomWidgetsHeight = opts && 'bottomWidgetsHeight' in opts ? opts.bottomWidgetsHeight : null;
    if (bottomWidgetsHeight == null) dart.nullFailed(I[124], 917, 19, "bottomWidgetsHeight");
    let appBarHeight = opts && 'appBarHeight' in opts ? opts.appBarHeight : null;
    if (appBarHeight == null) dart.nullFailed(I[124], 918, 19, "appBarHeight");
    this[S$1.bottomWidgetsHeight] = bottomWidgetsHeight;
    this[S$1.appBarHeight] = appBarHeight;
    if (!(bottomWidgetsHeight != null)) dart.assertFailed(null, I[124], 919, 15, "bottomWidgetsHeight != null");
    if (!(dart.notNull(bottomWidgetsHeight) >= 0)) dart.assertFailed(null, I[124], 920, 15, "bottomWidgetsHeight >= 0");
    if (!(appBarHeight != null)) dart.assertFailed(null, I[124], 921, 15, "appBarHeight != null");
    if (!(dart.notNull(appBarHeight) >= 0)) dart.assertFailed(null, I[124], 922, 15, "appBarHeight >= 0");
    scaffold$._BodyBoxConstraints.__proto__.new.call(this, {minWidth: minWidth, maxWidth: maxWidth, minHeight: minHeight, maxHeight: maxHeight});
    ;
  }).prototype = scaffold$._BodyBoxConstraints.prototype;
  dart.addTypeTests(scaffold$._BodyBoxConstraints);
  dart.addTypeCaches(scaffold$._BodyBoxConstraints);
  dart.setLibraryUri(scaffold$._BodyBoxConstraints, I[125]);
  dart.setFieldSignature(scaffold$._BodyBoxConstraints, () => ({
    __proto__: dart.getFields(scaffold$._BodyBoxConstraints.__proto__),
    bottomWidgetsHeight: dart.finalFieldType(core.double),
    appBarHeight: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(scaffold$._BodyBoxConstraints, ['_equals']);
  dart.defineExtensionAccessors(scaffold$._BodyBoxConstraints, ['hashCode']);
  scaffold$._BodyBuilder = class _BodyBuilder extends framework.StatelessWidget {
    get body() {
      return this[S$1.body];
    }
    set body(value) {
      super.body = value;
    }
    get extendBody() {
      return this[S$1.extendBody];
    }
    set extendBody(value) {
      super.extendBody = value;
    }
    get extendBodyBehindAppBar() {
      return this[S$1.extendBodyBehindAppBar];
    }
    set extendBodyBehindAppBar(value) {
      super.extendBodyBehindAppBar = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[124], 969, 29, "context");
      if (!dart.test(this.extendBody) && !dart.test(this.extendBodyBehindAppBar)) return this.body;
      return new layout_builder.LayoutBuilder.new({builder: dart.fn((context, constraints) => {
          if (context == null) dart.nullFailed(I[124], 974, 30, "context");
          if (constraints == null) dart.nullFailed(I[124], 974, 54, "constraints");
          let bodyConstraints = scaffold$._BodyBoxConstraints.as(constraints);
          let metrics = media_query.MediaQuery.of(context);
          let bottom = dart.test(this.extendBody) ? math.max(core.double, metrics.padding.bottom, bodyConstraints.bottomWidgetsHeight) : metrics.padding.bottom;
          let top = dart.test(this.extendBodyBehindAppBar) ? math.max(core.double, metrics.padding.top, bodyConstraints.appBarHeight) : metrics.padding.top;
          return new media_query.MediaQuery.new({data: metrics.copyWith({padding: metrics.padding.copyWith({top: top, bottom: bottom})}), child: this.body, $creationLocationd_0dea112b090073317d4: C[781] || CT.C781});
        }, T$.BuildContextAndBoxConstraintsToMediaQuery()), $creationLocationd_0dea112b090073317d4: C[782] || CT.C782});
    }
  };
  (scaffold$._BodyBuilder.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let extendBody = opts && 'extendBody' in opts ? opts.extendBody : null;
    if (extendBody == null) dart.nullFailed(I[124], 956, 19, "extendBody");
    let extendBodyBehindAppBar = opts && 'extendBodyBehindAppBar' in opts ? opts.extendBodyBehindAppBar : null;
    if (extendBodyBehindAppBar == null) dart.nullFailed(I[124], 957, 19, "extendBodyBehindAppBar");
    let body = opts && 'body' in opts ? opts.body : null;
    if (body == null) dart.nullFailed(I[124], 958, 19, "body");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.extendBody] = extendBody;
    this[S$1.extendBodyBehindAppBar] = extendBodyBehindAppBar;
    this[S$1.body] = body;
    if (!(extendBody != null)) dart.assertFailed(null, I[124], 959, 15, "extendBody != null");
    if (!(extendBodyBehindAppBar != null)) dart.assertFailed(null, I[124], 960, 15, "extendBodyBehindAppBar != null");
    if (!(body != null)) dart.assertFailed(null, I[124], 961, 15, "body != null");
    scaffold$._BodyBuilder.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scaffold$._BodyBuilder.prototype;
  dart.addTypeTests(scaffold$._BodyBuilder);
  dart.addTypeCaches(scaffold$._BodyBuilder);
  dart.setMethodSignature(scaffold$._BodyBuilder, () => ({
    __proto__: dart.getMethods(scaffold$._BodyBuilder.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(scaffold$._BodyBuilder, I[125]);
  dart.setFieldSignature(scaffold$._BodyBuilder, () => ({
    __proto__: dart.getFields(scaffold$._BodyBuilder.__proto__),
    body: dart.finalFieldType(framework.Widget),
    extendBody: dart.finalFieldType(core.bool),
    extendBodyBehindAppBar: dart.finalFieldType(core.bool)
  }));
  scaffold$._ScaffoldLayout = class _ScaffoldLayout extends custom_layout.MultiChildLayoutDelegate {
    performLayout(size) {
      if (size == null) dart.nullFailed(I[124], 1039, 27, "size");
      let looseConstraints = new box$.BoxConstraints.loose(size);
      let fullWidthConstraints = looseConstraints.tighten({width: size.width});
      let bottom = size.height;
      let contentTop = 0.0;
      let bottomWidgetsHeight = 0.0;
      let appBarHeight = 0.0;
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.appBar))) {
        appBarHeight = this.layoutChild(scaffold$._ScaffoldSlot.appBar, fullWidthConstraints).height;
        contentTop = dart.test(this.extendBodyBehindAppBar) ? 0.0 : appBarHeight;
        this.positionChild(scaffold$._ScaffoldSlot.appBar, ui.Offset.zero);
      }
      let bottomNavigationBarTop = null;
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.bottomNavigationBar))) {
        let bottomNavigationBarHeight = this.layoutChild(scaffold$._ScaffoldSlot.bottomNavigationBar, fullWidthConstraints).height;
        bottomWidgetsHeight = bottomWidgetsHeight + dart.notNull(bottomNavigationBarHeight);
        bottomNavigationBarTop = math.max(core.double, 0.0, dart.notNull(bottom) - bottomWidgetsHeight);
        this.positionChild(scaffold$._ScaffoldSlot.bottomNavigationBar, new ui.Offset.new(0.0, bottomNavigationBarTop));
      }
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.persistentFooter))) {
        let footerConstraints = new box$.BoxConstraints.new({maxWidth: fullWidthConstraints.maxWidth, maxHeight: math.max(core.double, 0.0, dart.notNull(bottom) - bottomWidgetsHeight - dart.notNull(contentTop))});
        let persistentFooterHeight = this.layoutChild(scaffold$._ScaffoldSlot.persistentFooter, footerConstraints).height;
        bottomWidgetsHeight = bottomWidgetsHeight + dart.notNull(persistentFooterHeight);
        this.positionChild(scaffold$._ScaffoldSlot.persistentFooter, new ui.Offset.new(0.0, math.max(core.double, 0.0, dart.notNull(bottom) - bottomWidgetsHeight)));
      }
      let contentBottom = math.max(core.double, 0.0, dart.notNull(bottom) - math.max(core.num, this.minInsets.bottom, bottomWidgetsHeight));
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.body))) {
        let bodyMaxHeight = math.max(core.double, 0.0, contentBottom - dart.notNull(contentTop));
        if (dart.test(this.extendBody)) {
          bodyMaxHeight = bodyMaxHeight + bottomWidgetsHeight;
          bodyMaxHeight = bodyMaxHeight[S.$clamp](0.0, dart.notNull(looseConstraints.maxHeight) - dart.notNull(contentTop));
          if (!(bodyMaxHeight <= math.max(core.num, 0.0, dart.notNull(looseConstraints.maxHeight) - dart.notNull(contentTop)))) dart.assertFailed(null, I[124], 1088, 16, "bodyMaxHeight <= math.max(0.0, looseConstraints.maxHeight - contentTop)");
        }
        let bodyConstraints = new scaffold$._BodyBoxConstraints.new({maxWidth: fullWidthConstraints.maxWidth, maxHeight: bodyMaxHeight, bottomWidgetsHeight: dart.test(this.extendBody) ? bottomWidgetsHeight : 0.0, appBarHeight: appBarHeight});
        this.layoutChild(scaffold$._ScaffoldSlot.body, bodyConstraints);
        this.positionChild(scaffold$._ScaffoldSlot.body, new ui.Offset.new(0.0, contentTop));
      }
      let bottomSheetSize = ui.Size.zero;
      let snackBarSize = ui.Size.zero;
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.bodyScrim))) {
        let bottomSheetScrimConstraints = new box$.BoxConstraints.new({maxWidth: fullWidthConstraints.maxWidth, maxHeight: contentBottom});
        this.layoutChild(scaffold$._ScaffoldSlot.bodyScrim, bottomSheetScrimConstraints);
        this.positionChild(scaffold$._ScaffoldSlot.bodyScrim, ui.Offset.zero);
      }
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.snackBar)) && !dart.test(this.isSnackBarFloating)) {
        snackBarSize = this.layoutChild(scaffold$._ScaffoldSlot.snackBar, fullWidthConstraints);
      }
      let materialBannerSize = ui.Size.zero;
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.materialBanner))) {
        materialBannerSize = this.layoutChild(scaffold$._ScaffoldSlot.materialBanner, fullWidthConstraints);
      }
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.bottomSheet))) {
        let bottomSheetConstraints = new box$.BoxConstraints.new({maxWidth: fullWidthConstraints.maxWidth, maxHeight: math.max(core.double, 0.0, contentBottom - dart.notNull(contentTop))});
        bottomSheetSize = this.layoutChild(scaffold$._ScaffoldSlot.bottomSheet, bottomSheetConstraints);
        this.positionChild(scaffold$._ScaffoldSlot.bottomSheet, new ui.Offset.new((dart.notNull(size.width) - dart.notNull(bottomSheetSize.width)) / 2.0, contentBottom - dart.notNull(bottomSheetSize.height)));
      }
      let floatingActionButtonRect = null;
      let floatingActionButtonRect$35isSet = false;
      function floatingActionButtonRect$35get() {
        return floatingActionButtonRect$35isSet ? floatingActionButtonRect : dart.throw(new _internal.LateError.localNI("floatingActionButtonRect"));
      }
      dart.fn(floatingActionButtonRect$35get, T$.VoidToRect());
      function floatingActionButtonRect$35set(t73) {
        if (t73 == null) dart.nullFailed(I[124], 1144, 15, "null");
        floatingActionButtonRect$35isSet = true;
        return floatingActionButtonRect = t73;
      }
      dart.fn(floatingActionButtonRect$35set, T$.RectTodynamic());
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.floatingActionButton))) {
        let fabSize = this.layoutChild(scaffold$._ScaffoldSlot.floatingActionButton, looseConstraints);
        let currentGeometry = new scaffold$.ScaffoldPrelayoutGeometry.new({bottomSheetSize: bottomSheetSize, contentBottom: contentBottom, contentTop: appBarHeight, floatingActionButtonSize: fabSize, minInsets: this.minInsets, scaffoldSize: size, snackBarSize: snackBarSize, materialBannerSize: materialBannerSize, textDirection: this.textDirection, minViewPadding: this.minViewPadding});
        let currentFabOffset = this.currentFloatingActionButtonLocation.getOffset(currentGeometry);
        let previousFabOffset = this.previousFloatingActionButtonLocation.getOffset(currentGeometry);
        let fabOffset = this.floatingActionButtonMotionAnimator.getOffset({begin: previousFabOffset, end: currentFabOffset, progress: this.floatingActionButtonMoveAnimationProgress});
        this.positionChild(scaffold$._ScaffoldSlot.floatingActionButton, fabOffset);
        floatingActionButtonRect$35set(fabOffset['&'](fabSize));
      }
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.snackBar))) {
        let hasCustomWidth = this.snackBarWidth != null && dart.nullCheck(this.snackBarWidth) < dart.notNull(size.width);
        if (dart.equals(snackBarSize, ui.Size.zero)) {
          snackBarSize = this.layoutChild(scaffold$._ScaffoldSlot.snackBar, hasCustomWidth ? looseConstraints : fullWidthConstraints);
        }
        let snackBarYOffsetBase = null;
        if (!dart.equals(floatingActionButtonRect$35get().size, ui.Size.zero) && dart.test(this.isSnackBarFloating)) {
          snackBarYOffsetBase = floatingActionButtonRect$35get().top;
        } else {
          let safeYOffsetBase = dart.notNull(size.height) - dart.notNull(this.minViewPadding.bottom);
          snackBarYOffsetBase = dart.test(this.isSnackBarFloating) ? math.min(core.double, contentBottom, safeYOffsetBase) : contentBottom;
        }
        let xOffset = hasCustomWidth ? (dart.notNull(size.width) - dart.nullCheck(this.snackBarWidth)) / 2 : 0.0;
        this.positionChild(scaffold$._ScaffoldSlot.snackBar, new ui.Offset.new(xOffset, dart.notNull(snackBarYOffsetBase) - dart.notNull(snackBarSize.height)));
      }
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.materialBanner))) {
        if (dart.equals(materialBannerSize, ui.Size.zero)) {
          materialBannerSize = this.layoutChild(scaffold$._ScaffoldSlot.materialBanner, fullWidthConstraints);
        }
        this.positionChild(scaffold$._ScaffoldSlot.materialBanner, new ui.Offset.new(0.0, appBarHeight));
      }
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.statusBar))) {
        this.layoutChild(scaffold$._ScaffoldSlot.statusBar, fullWidthConstraints.tighten({height: this.minInsets.top}));
        this.positionChild(scaffold$._ScaffoldSlot.statusBar, ui.Offset.zero);
      }
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.drawer))) {
        this.layoutChild(scaffold$._ScaffoldSlot.drawer, new box$.BoxConstraints.tight(size));
        this.positionChild(scaffold$._ScaffoldSlot.drawer, ui.Offset.zero);
      }
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.endDrawer))) {
        this.layoutChild(scaffold$._ScaffoldSlot.endDrawer, new box$.BoxConstraints.tight(size));
        this.positionChild(scaffold$._ScaffoldSlot.endDrawer, ui.Offset.zero);
      }
      this.geometryNotifier[S$1._updateWith]({bottomNavigationBarTop: bottomNavigationBarTop, floatingActionButtonArea: floatingActionButtonRect$35get()});
    }
    shouldRelayout(oldDelegate) {
      scaffold$._ScaffoldLayout.as(oldDelegate);
      if (oldDelegate == null) dart.nullFailed(I[124], 1236, 39, "oldDelegate");
      return !dart.equals(oldDelegate.minInsets, this.minInsets) || oldDelegate.textDirection != this.textDirection || oldDelegate.floatingActionButtonMoveAnimationProgress != this.floatingActionButtonMoveAnimationProgress || !dart.equals(oldDelegate.previousFloatingActionButtonLocation, this.previousFloatingActionButtonLocation) || !dart.equals(oldDelegate.currentFloatingActionButtonLocation, this.currentFloatingActionButtonLocation) || oldDelegate.extendBody != this.extendBody || oldDelegate.extendBodyBehindAppBar != this.extendBodyBehindAppBar;
    }
  };
  (scaffold$._ScaffoldLayout.new = function(opts) {
    let minInsets = opts && 'minInsets' in opts ? opts.minInsets : null;
    if (minInsets == null) dart.nullFailed(I[124], 1002, 19, "minInsets");
    let minViewPadding = opts && 'minViewPadding' in opts ? opts.minViewPadding : null;
    if (minViewPadding == null) dart.nullFailed(I[124], 1003, 19, "minViewPadding");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    if (textDirection == null) dart.nullFailed(I[124], 1004, 19, "textDirection");
    let geometryNotifier = opts && 'geometryNotifier' in opts ? opts.geometryNotifier : null;
    if (geometryNotifier == null) dart.nullFailed(I[124], 1005, 19, "geometryNotifier");
    let previousFloatingActionButtonLocation = opts && 'previousFloatingActionButtonLocation' in opts ? opts.previousFloatingActionButtonLocation : null;
    if (previousFloatingActionButtonLocation == null) dart.nullFailed(I[124], 1007, 19, "previousFloatingActionButtonLocation");
    let currentFloatingActionButtonLocation = opts && 'currentFloatingActionButtonLocation' in opts ? opts.currentFloatingActionButtonLocation : null;
    if (currentFloatingActionButtonLocation == null) dart.nullFailed(I[124], 1008, 19, "currentFloatingActionButtonLocation");
    let floatingActionButtonMoveAnimationProgress = opts && 'floatingActionButtonMoveAnimationProgress' in opts ? opts.floatingActionButtonMoveAnimationProgress : null;
    if (floatingActionButtonMoveAnimationProgress == null) dart.nullFailed(I[124], 1009, 19, "floatingActionButtonMoveAnimationProgress");
    let floatingActionButtonMotionAnimator = opts && 'floatingActionButtonMotionAnimator' in opts ? opts.floatingActionButtonMotionAnimator : null;
    if (floatingActionButtonMotionAnimator == null) dart.nullFailed(I[124], 1010, 19, "floatingActionButtonMotionAnimator");
    let isSnackBarFloating = opts && 'isSnackBarFloating' in opts ? opts.isSnackBarFloating : null;
    if (isSnackBarFloating == null) dart.nullFailed(I[124], 1011, 19, "isSnackBarFloating");
    let snackBarWidth = opts && 'snackBarWidth' in opts ? opts.snackBarWidth : null;
    let extendBody = opts && 'extendBody' in opts ? opts.extendBody : null;
    if (extendBody == null) dart.nullFailed(I[124], 1013, 19, "extendBody");
    let extendBodyBehindAppBar = opts && 'extendBodyBehindAppBar' in opts ? opts.extendBodyBehindAppBar : null;
    if (extendBodyBehindAppBar == null) dart.nullFailed(I[124], 1014, 19, "extendBodyBehindAppBar");
    this.minInsets = minInsets;
    this.minViewPadding = minViewPadding;
    this.textDirection = textDirection;
    this.geometryNotifier = geometryNotifier;
    this.previousFloatingActionButtonLocation = previousFloatingActionButtonLocation;
    this.currentFloatingActionButtonLocation = currentFloatingActionButtonLocation;
    this.floatingActionButtonMoveAnimationProgress = floatingActionButtonMoveAnimationProgress;
    this.floatingActionButtonMotionAnimator = floatingActionButtonMotionAnimator;
    this.isSnackBarFloating = isSnackBarFloating;
    this.snackBarWidth = snackBarWidth;
    this.extendBody = extendBody;
    this.extendBodyBehindAppBar = extendBodyBehindAppBar;
    if (!(minInsets != null)) dart.assertFailed(null, I[124], 1015, 15, "minInsets != null");
    if (!(textDirection != null)) dart.assertFailed(null, I[124], 1016, 15, "textDirection != null");
    if (!(geometryNotifier != null)) dart.assertFailed(null, I[124], 1017, 15, "geometryNotifier != null");
    if (!(previousFloatingActionButtonLocation != null)) dart.assertFailed(null, I[124], 1018, 15, "previousFloatingActionButtonLocation != null");
    if (!(currentFloatingActionButtonLocation != null)) dart.assertFailed(null, I[124], 1019, 15, "currentFloatingActionButtonLocation != null");
    if (!(extendBody != null)) dart.assertFailed(null, I[124], 1020, 15, "extendBody != null");
    if (!(extendBodyBehindAppBar != null)) dart.assertFailed(null, I[124], 1021, 15, "extendBodyBehindAppBar != null");
    scaffold$._ScaffoldLayout.__proto__.new.call(this);
    ;
  }).prototype = scaffold$._ScaffoldLayout.prototype;
  dart.addTypeTests(scaffold$._ScaffoldLayout);
  dart.addTypeCaches(scaffold$._ScaffoldLayout);
  dart.setMethodSignature(scaffold$._ScaffoldLayout, () => ({
    __proto__: dart.getMethods(scaffold$._ScaffoldLayout.__proto__),
    performLayout: dart.fnType(dart.void, [ui.Size]),
    shouldRelayout: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(scaffold$._ScaffoldLayout, I[125]);
  dart.setFieldSignature(scaffold$._ScaffoldLayout, () => ({
    __proto__: dart.getFields(scaffold$._ScaffoldLayout.__proto__),
    extendBody: dart.finalFieldType(core.bool),
    extendBodyBehindAppBar: dart.finalFieldType(core.bool),
    minInsets: dart.finalFieldType(edge_insets.EdgeInsets),
    minViewPadding: dart.finalFieldType(edge_insets.EdgeInsets),
    textDirection: dart.finalFieldType(ui.TextDirection),
    geometryNotifier: dart.finalFieldType(scaffold$._ScaffoldGeometryNotifier),
    previousFloatingActionButtonLocation: dart.finalFieldType(floating_action_button_location.FloatingActionButtonLocation),
    currentFloatingActionButtonLocation: dart.finalFieldType(floating_action_button_location.FloatingActionButtonLocation),
    floatingActionButtonMoveAnimationProgress: dart.finalFieldType(core.double),
    floatingActionButtonMotionAnimator: dart.finalFieldType(floating_action_button_location.FloatingActionButtonAnimator),
    isSnackBarFloating: dart.finalFieldType(core.bool),
    snackBarWidth: dart.finalFieldType(dart.nullable(core.double))
  }));
  scaffold$._FloatingActionButtonTransition = class _FloatingActionButtonTransition extends framework.StatefulWidget {
    get child() {
      return this[S$1.child$22];
    }
    set child(value) {
      super.child = value;
    }
    get fabMoveAnimation() {
      return this[S$1.fabMoveAnimation];
    }
    set fabMoveAnimation(value) {
      super.fabMoveAnimation = value;
    }
    get fabMotionAnimator() {
      return this[S$1.fabMotionAnimator];
    }
    set fabMotionAnimator(value) {
      super.fabMotionAnimator = value;
    }
    get geometryNotifier() {
      return this[S$1.geometryNotifier];
    }
    set geometryNotifier(value) {
      super.geometryNotifier = value;
    }
    get currentController() {
      return this[S$1.currentController];
    }
    set currentController(value) {
      super.currentController = value;
    }
    createState() {
      return new scaffold$._FloatingActionButtonTransitionState.new();
    }
  };
  (scaffold$._FloatingActionButtonTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let fabMoveAnimation = opts && 'fabMoveAnimation' in opts ? opts.fabMoveAnimation : null;
    if (fabMoveAnimation == null) dart.nullFailed(I[124], 1259, 19, "fabMoveAnimation");
    let fabMotionAnimator = opts && 'fabMotionAnimator' in opts ? opts.fabMotionAnimator : null;
    if (fabMotionAnimator == null) dart.nullFailed(I[124], 1260, 19, "fabMotionAnimator");
    let geometryNotifier = opts && 'geometryNotifier' in opts ? opts.geometryNotifier : null;
    if (geometryNotifier == null) dart.nullFailed(I[124], 1261, 19, "geometryNotifier");
    let currentController = opts && 'currentController' in opts ? opts.currentController : null;
    if (currentController == null) dart.nullFailed(I[124], 1262, 19, "currentController");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.child$22] = child;
    this[S$1.fabMoveAnimation] = fabMoveAnimation;
    this[S$1.fabMotionAnimator] = fabMotionAnimator;
    this[S$1.geometryNotifier] = geometryNotifier;
    this[S$1.currentController] = currentController;
    if (!(fabMoveAnimation != null)) dart.assertFailed(null, I[124], 1263, 15, "fabMoveAnimation != null");
    if (!(fabMotionAnimator != null)) dart.assertFailed(null, I[124], 1264, 15, "fabMotionAnimator != null");
    if (!(currentController != null)) dart.assertFailed(null, I[124], 1265, 15, "currentController != null");
    scaffold$._FloatingActionButtonTransition.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scaffold$._FloatingActionButtonTransition.prototype;
  dart.addTypeTests(scaffold$._FloatingActionButtonTransition);
  dart.addTypeCaches(scaffold$._FloatingActionButtonTransition);
  dart.setMethodSignature(scaffold$._FloatingActionButtonTransition, () => ({
    __proto__: dart.getMethods(scaffold$._FloatingActionButtonTransition.__proto__),
    createState: dart.fnType(scaffold$._FloatingActionButtonTransitionState, [])
  }));
  dart.setLibraryUri(scaffold$._FloatingActionButtonTransition, I[125]);
  dart.setFieldSignature(scaffold$._FloatingActionButtonTransition, () => ({
    __proto__: dart.getFields(scaffold$._FloatingActionButtonTransition.__proto__),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    fabMoveAnimation: dart.finalFieldType(animation.Animation$(core.double)),
    fabMotionAnimator: dart.finalFieldType(floating_action_button_location.FloatingActionButtonAnimator),
    geometryNotifier: dart.finalFieldType(scaffold$._ScaffoldGeometryNotifier),
    currentController: dart.finalFieldType(animation_controller.AnimationController)
  }));
  const State_TickerProviderStateMixin$36$4 = class State_TickerProviderStateMixin extends framework.State$(scaffold$._FloatingActionButtonTransition) {};
  (State_TickerProviderStateMixin$36$4.new = function() {
    ticker_provider.TickerProviderStateMixin$(scaffold$._FloatingActionButtonTransition)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$4.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$4.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$4, ticker_provider.TickerProviderStateMixin$(scaffold$._FloatingActionButtonTransition));
  scaffold$._FloatingActionButtonTransitionState = class _FloatingActionButtonTransitionState extends State_TickerProviderStateMixin$36$4 {
    get [S$1._previousController]() {
      let t75;
      return dart.test(this[S$1.___FloatingActionButtonTransitionState__previousController_isSet]) ? (t75 = this[S$1.___FloatingActionButtonTransitionState__previousController], t75) : dart.throw(new _internal.LateError.fieldNI("_previousController"));
    }
    set [S$1._previousController](t75) {
      if (t75 == null) dart.nullFailed(I[124], 1283, 28, "null");
      this[S$1.___FloatingActionButtonTransitionState__previousController_isSet] = true;
      this[S$1.___FloatingActionButtonTransitionState__previousController] = t75;
    }
    get [S$1._previousScaleAnimation]() {
      let t76;
      return dart.test(this[S$1.___FloatingActionButtonTransitionState__previousScaleAnimation_isSet]) ? (t76 = this[S$1.___FloatingActionButtonTransitionState__previousScaleAnimation], t76) : dart.throw(new _internal.LateError.fieldNI("_previousScaleAnimation"));
    }
    set [S$1._previousScaleAnimation](t76) {
      if (t76 == null) dart.nullFailed(I[124], 1284, 26, "null");
      this[S$1.___FloatingActionButtonTransitionState__previousScaleAnimation_isSet] = true;
      this[S$1.___FloatingActionButtonTransitionState__previousScaleAnimation] = t76;
    }
    get [S$1._previousRotationAnimation]() {
      let t77;
      return dart.test(this[S$1.___FloatingActionButtonTransitionState__previousRotationAnimation_isSet]) ? (t77 = this[S$1.___FloatingActionButtonTransitionState__previousRotationAnimation], t77) : dart.throw(new _internal.LateError.fieldNI("_previousRotationAnimation"));
    }
    set [S$1._previousRotationAnimation](t77) {
      if (t77 == null) dart.nullFailed(I[124], 1285, 26, "null");
      this[S$1.___FloatingActionButtonTransitionState__previousRotationAnimation_isSet] = true;
      this[S$1.___FloatingActionButtonTransitionState__previousRotationAnimation] = t77;
    }
    get [S$1._currentScaleAnimation]() {
      let t78;
      return dart.test(this[S$1.___FloatingActionButtonTransitionState__currentScaleAnimation_isSet]) ? (t78 = this[S$1.___FloatingActionButtonTransitionState__currentScaleAnimation], t78) : dart.throw(new _internal.LateError.fieldNI("_currentScaleAnimation"));
    }
    set [S$1._currentScaleAnimation](t78) {
      if (t78 == null) dart.nullFailed(I[124], 1287, 26, "null");
      this[S$1.___FloatingActionButtonTransitionState__currentScaleAnimation_isSet] = true;
      this[S$1.___FloatingActionButtonTransitionState__currentScaleAnimation] = t78;
    }
    get [S$1._extendedCurrentScaleAnimation]() {
      let t79;
      return dart.test(this[S$1.___FloatingActionButtonTransitionState__extendedCurrentScaleAnimation_isSet]) ? (t79 = this[S$1.___FloatingActionButtonTransitionState__extendedCurrentScaleAnimation], t79) : dart.throw(new _internal.LateError.fieldNI("_extendedCurrentScaleAnimation"));
    }
    set [S$1._extendedCurrentScaleAnimation](t79) {
      if (t79 == null) dart.nullFailed(I[124], 1288, 26, "null");
      this[S$1.___FloatingActionButtonTransitionState__extendedCurrentScaleAnimation_isSet] = true;
      this[S$1.___FloatingActionButtonTransitionState__extendedCurrentScaleAnimation] = t79;
    }
    get [S$1._currentRotationAnimation]() {
      let t80;
      return dart.test(this[S$1.___FloatingActionButtonTransitionState__currentRotationAnimation_isSet]) ? (t80 = this[S$1.___FloatingActionButtonTransitionState__currentRotationAnimation], t80) : dart.throw(new _internal.LateError.fieldNI("_currentRotationAnimation"));
    }
    set [S$1._currentRotationAnimation](t80) {
      if (t80 == null) dart.nullFailed(I[124], 1289, 26, "null");
      this[S$1.___FloatingActionButtonTransitionState__currentRotationAnimation_isSet] = true;
      this[S$1.___FloatingActionButtonTransitionState__currentRotationAnimation] = t80;
    }
    initState() {
      let t81;
      super.initState();
      this[S$1._previousController] = (t81 = new animation_controller.AnimationController.new({duration: floating_action_button_location.kFloatingActionButtonSegue, vsync: this}), (() => {
        t81.addStatusListener(dart.bind(this, S$1._handlePreviousAnimationStatusChanged));
        return t81;
      })());
      this[S$1._updateAnimations]();
      if (this.widget.child != null) {
        this.widget.currentController.value = 1.0;
      } else {
        this[S$1._updateGeometryScale](0.0);
      }
    }
    dispose() {
      this[S$1._previousController].dispose();
      super.dispose();
    }
    didUpdateWidget(oldWidget) {
      let t81, t81$, t81$0;
      scaffold$._FloatingActionButtonTransition.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[124], 1320, 56, "oldWidget");
      super.didUpdateWidget(oldWidget);
      let oldChildIsNull = oldWidget.child == null;
      let newChildIsNull = this.widget.child == null;
      if (oldChildIsNull === newChildIsNull && dart.equals((t81 = oldWidget.child, t81 == null ? null : t81.key), (t81$ = this.widget.child, t81$ == null ? null : t81$.key))) return;
      if (!dart.equals(oldWidget.fabMotionAnimator, this.widget.fabMotionAnimator) || !dart.equals(oldWidget.fabMoveAnimation, this.widget.fabMoveAnimation)) {
        this[S$1._updateAnimations]();
      }
      if (this[S$1._previousController].status == animation.AnimationStatus.dismissed) {
        let currentValue = this.widget.currentController.value;
        if (currentValue === 0.0 || oldWidget.child == null) {
          this[S$1._previousChild] = null;
          if (this.widget.child != null) this.widget.currentController.forward();
        } else {
          this[S$1._previousChild] = oldWidget.child;
          t81$0 = this[S$1._previousController];
          (() => {
            t81$0.value = currentValue;
            t81$0.reverse();
            return t81$0;
          })();
          this.widget.currentController.value = 0.0;
        }
      }
    }
    [S$1._updateAnimations]() {
      let previousExitScaleAnimation = new animations.CurvedAnimation.new({parent: this[S$1._previousController], curve: curves.Curves.easeIn});
      let previousExitRotationAnimation = new (T$.TweenOfdouble()).new({begin: 1.0, end: 1.0}).animate(new animations.CurvedAnimation.new({parent: this[S$1._previousController], curve: curves.Curves.easeIn}));
      let currentEntranceScaleAnimation = new animations.CurvedAnimation.new({parent: this.widget.currentController, curve: curves.Curves.easeIn});
      let currentEntranceRotationAnimation = this.widget.currentController.drive(core.double, scaffold$._FloatingActionButtonTransitionState._entranceTurnTween);
      let moveScaleAnimation = this.widget.fabMotionAnimator.getScaleAnimation({parent: this.widget.fabMoveAnimation});
      let moveRotationAnimation = this.widget.fabMotionAnimator.getRotationAnimation({parent: this.widget.fabMoveAnimation});
      this[S$1._previousScaleAnimation] = new (T$.AnimationMinOfdouble()).new(moveScaleAnimation, previousExitScaleAnimation);
      this[S$1._currentScaleAnimation] = new (T$.AnimationMinOfdouble()).new(moveScaleAnimation, currentEntranceScaleAnimation);
      this[S$1._extendedCurrentScaleAnimation] = this[S$1._currentScaleAnimation].drive(core.double, new tween.CurveTween.new({curve: C[783] || CT.C783}));
      this[S$1._previousRotationAnimation] = new animations.TrainHoppingAnimation.new(previousExitRotationAnimation, moveRotationAnimation);
      this[S$1._currentRotationAnimation] = new animations.TrainHoppingAnimation.new(currentEntranceRotationAnimation, moveRotationAnimation);
      this[S$1._currentScaleAnimation].addListener(dart.bind(this, S$1._onProgressChanged));
      this[S$1._previousScaleAnimation].addListener(dart.bind(this, S$1._onProgressChanged));
    }
    [S$1._handlePreviousAnimationStatusChanged](status) {
      if (status == null) dart.nullFailed(I[124], 1391, 62, "status");
      this.setState(dart.fn(() => {
        if (status == animation.AnimationStatus.dismissed) {
          if (!(this.widget.currentController.status == animation.AnimationStatus.dismissed)) dart.assertFailed(null, I[124], 1394, 16, "widget.currentController.status == AnimationStatus.dismissed");
          if (this.widget.child != null) this.widget.currentController.forward();
        }
      }, T$.VoidTovoid()));
    }
    [S$1._isExtendedFloatingActionButton](widget) {
      return floating_action_button.FloatingActionButton.is(widget) && dart.test(widget.isExtended);
    }
    build(context) {
      if (context == null) dart.nullFailed(I[124], 1407, 29, "context");
      return new basic.Stack.new({alignment: alignment.Alignment.centerRight, children: (() => {
          let t81 = T$.JSArrayOfWidget().of([]);
          if (this[S$1._previousController].status != animation.AnimationStatus.dismissed) if (dart.test(this[S$1._isExtendedFloatingActionButton](this[S$1._previousChild])))
            t81[S.$add](new transitions.FadeTransition.new({opacity: this[S$1._previousScaleAnimation], child: this[S$1._previousChild], $creationLocationd_0dea112b090073317d4: C[784] || CT.C784}));
          else
            t81[S.$add](new transitions.ScaleTransition.new({scale: this[S$1._previousScaleAnimation], child: new transitions.RotationTransition.new({turns: this[S$1._previousRotationAnimation], child: this[S$1._previousChild], $creationLocationd_0dea112b090073317d4: C[785] || CT.C785}), $creationLocationd_0dea112b090073317d4: C[786] || CT.C786}));
          if (dart.test(this[S$1._isExtendedFloatingActionButton](this.widget.child)))
            t81[S.$add](new transitions.ScaleTransition.new({scale: this[S$1._extendedCurrentScaleAnimation], child: new transitions.FadeTransition.new({opacity: this[S$1._currentScaleAnimation], child: this.widget.child, $creationLocationd_0dea112b090073317d4: C[787] || CT.C787}), $creationLocationd_0dea112b090073317d4: C[788] || CT.C788}));
          else
            t81[S.$add](new transitions.ScaleTransition.new({scale: this[S$1._currentScaleAnimation], child: new transitions.RotationTransition.new({turns: this[S$1._currentRotationAnimation], child: this.widget.child, $creationLocationd_0dea112b090073317d4: C[789] || CT.C789}), $creationLocationd_0dea112b090073317d4: C[790] || CT.C790}));
          return t81;
        })(), $creationLocationd_0dea112b090073317d4: C[791] || CT.C791});
    }
    [S$1._onProgressChanged]() {
      this[S$1._updateGeometryScale](math.max(core.double, this[S$1._previousScaleAnimation].value, this[S$1._currentScaleAnimation].value));
    }
    [S$1._updateGeometryScale](scale) {
      if (scale == null) dart.nullFailed(I[124], 1449, 36, "scale");
      this.widget.geometryNotifier[S$1._updateWith]({floatingActionButtonScale: scale});
    }
  };
  (scaffold$._FloatingActionButtonTransitionState.new = function() {
    this[S$1.___FloatingActionButtonTransitionState__previousController] = null;
    this[S$1.___FloatingActionButtonTransitionState__previousController_isSet] = false;
    this[S$1.___FloatingActionButtonTransitionState__previousScaleAnimation] = null;
    this[S$1.___FloatingActionButtonTransitionState__previousScaleAnimation_isSet] = false;
    this[S$1.___FloatingActionButtonTransitionState__previousRotationAnimation] = null;
    this[S$1.___FloatingActionButtonTransitionState__previousRotationAnimation_isSet] = false;
    this[S$1.___FloatingActionButtonTransitionState__currentScaleAnimation] = null;
    this[S$1.___FloatingActionButtonTransitionState__currentScaleAnimation_isSet] = false;
    this[S$1.___FloatingActionButtonTransitionState__extendedCurrentScaleAnimation] = null;
    this[S$1.___FloatingActionButtonTransitionState__extendedCurrentScaleAnimation_isSet] = false;
    this[S$1.___FloatingActionButtonTransitionState__currentRotationAnimation] = null;
    this[S$1.___FloatingActionButtonTransitionState__currentRotationAnimation_isSet] = false;
    this[S$1._previousChild] = null;
    scaffold$._FloatingActionButtonTransitionState.__proto__.new.call(this);
    ;
  }).prototype = scaffold$._FloatingActionButtonTransitionState.prototype;
  dart.addTypeTests(scaffold$._FloatingActionButtonTransitionState);
  dart.addTypeCaches(scaffold$._FloatingActionButtonTransitionState);
  dart.setMethodSignature(scaffold$._FloatingActionButtonTransitionState, () => ({
    __proto__: dart.getMethods(scaffold$._FloatingActionButtonTransitionState.__proto__),
    [S$1._updateAnimations]: dart.fnType(dart.void, []),
    [S$1._handlePreviousAnimationStatusChanged]: dart.fnType(dart.void, [animation.AnimationStatus]),
    [S$1._isExtendedFloatingActionButton]: dart.fnType(core.bool, [dart.nullable(framework.Widget)]),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [S$1._onProgressChanged]: dart.fnType(dart.void, []),
    [S$1._updateGeometryScale]: dart.fnType(dart.void, [core.double])
  }));
  dart.setGetterSignature(scaffold$._FloatingActionButtonTransitionState, () => ({
    __proto__: dart.getGetters(scaffold$._FloatingActionButtonTransitionState.__proto__),
    [S$1._previousController]: animation_controller.AnimationController,
    [S$1._previousScaleAnimation]: animation.Animation$(core.double),
    [S$1._previousRotationAnimation]: animation.Animation$(core.double),
    [S$1._currentScaleAnimation]: animation.Animation$(core.double),
    [S$1._extendedCurrentScaleAnimation]: animation.Animation$(core.double),
    [S$1._currentRotationAnimation]: animation.Animation$(core.double)
  }));
  dart.setSetterSignature(scaffold$._FloatingActionButtonTransitionState, () => ({
    __proto__: dart.getSetters(scaffold$._FloatingActionButtonTransitionState.__proto__),
    [S$1._previousController]: animation_controller.AnimationController,
    [S$1._previousScaleAnimation]: animation.Animation$(core.double),
    [S$1._previousRotationAnimation]: animation.Animation$(core.double),
    [S$1._currentScaleAnimation]: animation.Animation$(core.double),
    [S$1._extendedCurrentScaleAnimation]: animation.Animation$(core.double),
    [S$1._currentRotationAnimation]: animation.Animation$(core.double)
  }));
  dart.setLibraryUri(scaffold$._FloatingActionButtonTransitionState, I[125]);
  dart.setFieldSignature(scaffold$._FloatingActionButtonTransitionState, () => ({
    __proto__: dart.getFields(scaffold$._FloatingActionButtonTransitionState.__proto__),
    [S$1.___FloatingActionButtonTransitionState__previousController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$1.___FloatingActionButtonTransitionState__previousController_isSet]: dart.fieldType(core.bool),
    [S$1.___FloatingActionButtonTransitionState__previousScaleAnimation]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
    [S$1.___FloatingActionButtonTransitionState__previousScaleAnimation_isSet]: dart.fieldType(core.bool),
    [S$1.___FloatingActionButtonTransitionState__previousRotationAnimation]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
    [S$1.___FloatingActionButtonTransitionState__previousRotationAnimation_isSet]: dart.fieldType(core.bool),
    [S$1.___FloatingActionButtonTransitionState__currentScaleAnimation]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
    [S$1.___FloatingActionButtonTransitionState__currentScaleAnimation_isSet]: dart.fieldType(core.bool),
    [S$1.___FloatingActionButtonTransitionState__extendedCurrentScaleAnimation]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
    [S$1.___FloatingActionButtonTransitionState__extendedCurrentScaleAnimation_isSet]: dart.fieldType(core.bool),
    [S$1.___FloatingActionButtonTransitionState__currentRotationAnimation]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
    [S$1.___FloatingActionButtonTransitionState__currentRotationAnimation_isSet]: dart.fieldType(core.bool),
    [S$1._previousChild]: dart.fieldType(dart.nullable(framework.Widget))
  }));
  dart.defineLazy(scaffold$._FloatingActionButtonTransitionState, {
    /*scaffold$._FloatingActionButtonTransitionState._entranceTurnTween*/get _entranceTurnTween() {
      return new (T$.TweenOfdouble()).new({begin: 1.0 - 0.125, end: 1.0}).chain(new tween.CurveTween.new({curve: curves.Curves.easeIn}));
    }
  }, false);
  scaffold$.Scaffold = class Scaffold extends framework.StatefulWidget {
    get extendBody() {
      return this[S$1.extendBody$1];
    }
    set extendBody(value) {
      super.extendBody = value;
    }
    get extendBodyBehindAppBar() {
      return this[S$1.extendBodyBehindAppBar$1];
    }
    set extendBodyBehindAppBar(value) {
      super.extendBodyBehindAppBar = value;
    }
    get appBar() {
      return this[S$1.appBar];
    }
    set appBar(value) {
      super.appBar = value;
    }
    get body() {
      return this[S$1.body$1];
    }
    set body(value) {
      super.body = value;
    }
    get floatingActionButton() {
      return this[S$1.floatingActionButton];
    }
    set floatingActionButton(value) {
      super.floatingActionButton = value;
    }
    get floatingActionButtonLocation() {
      return this[S$1.floatingActionButtonLocation];
    }
    set floatingActionButtonLocation(value) {
      super.floatingActionButtonLocation = value;
    }
    get floatingActionButtonAnimator() {
      return this[S$1.floatingActionButtonAnimator];
    }
    set floatingActionButtonAnimator(value) {
      super.floatingActionButtonAnimator = value;
    }
    get persistentFooterButtons() {
      return this[S$1.persistentFooterButtons];
    }
    set persistentFooterButtons(value) {
      super.persistentFooterButtons = value;
    }
    get drawer() {
      return this[S$1.drawer];
    }
    set drawer(value) {
      super.drawer = value;
    }
    get onDrawerChanged() {
      return this[S$1.onDrawerChanged];
    }
    set onDrawerChanged(value) {
      super.onDrawerChanged = value;
    }
    get endDrawer() {
      return this[S$1.endDrawer];
    }
    set endDrawer(value) {
      super.endDrawer = value;
    }
    get onEndDrawerChanged() {
      return this[S$1.onEndDrawerChanged];
    }
    set onEndDrawerChanged(value) {
      super.onEndDrawerChanged = value;
    }
    get drawerScrimColor() {
      return this[S$1.drawerScrimColor];
    }
    set drawerScrimColor(value) {
      super.drawerScrimColor = value;
    }
    get backgroundColor() {
      return this[S$1.backgroundColor$17];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get bottomNavigationBar() {
      return this[S$1.bottomNavigationBar];
    }
    set bottomNavigationBar(value) {
      super.bottomNavigationBar = value;
    }
    get bottomSheet() {
      return this[S$1.bottomSheet];
    }
    set bottomSheet(value) {
      super.bottomSheet = value;
    }
    get resizeToAvoidBottomInset() {
      return this[S$1.resizeToAvoidBottomInset];
    }
    set resizeToAvoidBottomInset(value) {
      super.resizeToAvoidBottomInset = value;
    }
    get primary() {
      return this[S$1.primary$1];
    }
    set primary(value) {
      super.primary = value;
    }
    get drawerDragStartBehavior() {
      return this[S$1.drawerDragStartBehavior];
    }
    set drawerDragStartBehavior(value) {
      super.drawerDragStartBehavior = value;
    }
    get drawerEdgeDragWidth() {
      return this[S$1.drawerEdgeDragWidth];
    }
    set drawerEdgeDragWidth(value) {
      super.drawerEdgeDragWidth = value;
    }
    get drawerEnableOpenDragGesture() {
      return this[S$1.drawerEnableOpenDragGesture];
    }
    set drawerEnableOpenDragGesture(value) {
      super.drawerEnableOpenDragGesture = value;
    }
    get endDrawerEnableOpenDragGesture() {
      return this[S$1.endDrawerEnableOpenDragGesture];
    }
    set endDrawerEnableOpenDragGesture(value) {
      super.endDrawerEnableOpenDragGesture = value;
    }
    get restorationId() {
      return this[S$1.restorationId];
    }
    set restorationId(value) {
      super.restorationId = value;
    }
    static of(context) {
      if (context == null) dart.nullFailed(I[124], 2142, 40, "context");
      if (!(context != null)) dart.assertFailed(null, I[124], 2143, 12, "context != null");
      let result = context.findAncestorStateOfType(scaffold$.ScaffoldState);
      if (result != null) return result;
      dart.throw(new assertions.FlutterError.fromParts(T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Scaffold.of() called with a context that does not contain a Scaffold."), new assertions.ErrorDescription.new("No Scaffold ancestor could be found starting from the context that was passed to Scaffold.of(). " + "This usually happens when the context provided is from the same StatefulWidget as that " + "whose build function actually creates the Scaffold widget being sought."), new assertions.ErrorHint.new("There are several ways to avoid this problem. The simplest is to use a Builder to get a " + "context that is \"under\" the Scaffold. For an example of this, please see the " + "documentation for Scaffold.of():\n" + "  https://api.flutter.dev/flutter/material/Scaffold/of.html"), new assertions.ErrorHint.new("A more efficient solution is to split your build function into several widgets. This " + "introduces a new context from which you can obtain the Scaffold. In this solution, " + "you would have an outer widget that creates the Scaffold populated by instances of " + "your new inner widgets, and then in these inner widgets you would use Scaffold.of().\n" + "A less elegant but more expedient solution is assign a GlobalKey to the Scaffold, " + "then use the key.currentState property to obtain the ScaffoldState rather than " + "using the Scaffold.of() function."), context.describeElement("The context used was")])));
    }
    static maybeOf(context) {
      if (context == null) dart.nullFailed(I[124], 2188, 46, "context");
      if (!(context != null)) dart.assertFailed(null, I[124], 2189, 12, "context != null");
      return context.findAncestorStateOfType(scaffold$.ScaffoldState);
    }
    static geometryOf(context) {
      if (context == null) dart.nullFailed(I[124], 2213, 68, "context");
      let scaffoldScope = context.dependOnInheritedWidgetOfExactType(scaffold$._ScaffoldScope);
      if (scaffoldScope == null) dart.throw(new assertions.FlutterError.fromParts(T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Scaffold.geometryOf() called with a context that does not contain a Scaffold."), new assertions.ErrorDescription.new("This usually happens when the context provided is from the same StatefulWidget as that " + "whose build function actually creates the Scaffold widget being sought."), new assertions.ErrorHint.new("There are several ways to avoid this problem. The simplest is to use a Builder to get a " + "context that is \"under\" the Scaffold. For an example of this, please see the " + "documentation for Scaffold.of():\n" + "  https://api.flutter.dev/flutter/material/Scaffold/of.html"), new assertions.ErrorHint.new("A more efficient solution is to split your build function into several widgets. This " + "introduces a new context from which you can obtain the Scaffold. In this solution, " + "you would have an outer widget that creates the Scaffold populated by instances of " + "your new inner widgets, and then in these inner widgets you would use Scaffold.geometryOf()."), context.describeElement("The context used was")])));
      return scaffoldScope.geometryNotifier;
    }
    static hasDrawer(context, opts) {
      let t82, t82$, t82$0, t82$1;
      if (context == null) dart.nullFailed(I[124], 2256, 38, "context");
      let registerForUpdates = opts && 'registerForUpdates' in opts ? opts.registerForUpdates : true;
      if (registerForUpdates == null) dart.nullFailed(I[124], 2256, 54, "registerForUpdates");
      if (!(registerForUpdates != null)) dart.assertFailed(null, I[124], 2257, 12, "registerForUpdates != null");
      if (!(context != null)) dart.assertFailed(null, I[124], 2258, 12, "context != null");
      if (dart.test(registerForUpdates)) {
        let scaffold = context.dependOnInheritedWidgetOfExactType(scaffold$._ScaffoldScope);
        t82$ = (t82 = scaffold, t82 == null ? null : t82.hasDrawer);
        return t82$ == null ? false : t82$;
      } else {
        let scaffold = context.findAncestorStateOfType(scaffold$.ScaffoldState);
        t82$1 = (t82$0 = scaffold, t82$0 == null ? null : t82$0.hasDrawer);
        return t82$1 == null ? false : t82$1;
      }
    }
    createState() {
      return new scaffold$.ScaffoldState.new();
    }
  };
  (scaffold$.Scaffold.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let appBar = opts && 'appBar' in opts ? opts.appBar : null;
    let body = opts && 'body' in opts ? opts.body : null;
    let floatingActionButton = opts && 'floatingActionButton' in opts ? opts.floatingActionButton : null;
    let floatingActionButtonLocation = opts && 'floatingActionButtonLocation' in opts ? opts.floatingActionButtonLocation : null;
    let floatingActionButtonAnimator = opts && 'floatingActionButtonAnimator' in opts ? opts.floatingActionButtonAnimator : null;
    let persistentFooterButtons = opts && 'persistentFooterButtons' in opts ? opts.persistentFooterButtons : null;
    let drawer = opts && 'drawer' in opts ? opts.drawer : null;
    let onDrawerChanged = opts && 'onDrawerChanged' in opts ? opts.onDrawerChanged : null;
    let endDrawer = opts && 'endDrawer' in opts ? opts.endDrawer : null;
    let onEndDrawerChanged = opts && 'onEndDrawerChanged' in opts ? opts.onEndDrawerChanged : null;
    let bottomNavigationBar = opts && 'bottomNavigationBar' in opts ? opts.bottomNavigationBar : null;
    let bottomSheet = opts && 'bottomSheet' in opts ? opts.bottomSheet : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let resizeToAvoidBottomInset = opts && 'resizeToAvoidBottomInset' in opts ? opts.resizeToAvoidBottomInset : null;
    let primary = opts && 'primary' in opts ? opts.primary : true;
    if (primary == null) dart.nullFailed(I[124], 1659, 10, "primary");
    let drawerDragStartBehavior = opts && 'drawerDragStartBehavior' in opts ? opts.drawerDragStartBehavior : C[215] || CT.C215;
    if (drawerDragStartBehavior == null) dart.nullFailed(I[124], 1660, 10, "drawerDragStartBehavior");
    let extendBody = opts && 'extendBody' in opts ? opts.extendBody : false;
    if (extendBody == null) dart.nullFailed(I[124], 1661, 10, "extendBody");
    let extendBodyBehindAppBar = opts && 'extendBodyBehindAppBar' in opts ? opts.extendBodyBehindAppBar : false;
    if (extendBodyBehindAppBar == null) dart.nullFailed(I[124], 1662, 10, "extendBodyBehindAppBar");
    let drawerScrimColor = opts && 'drawerScrimColor' in opts ? opts.drawerScrimColor : null;
    let drawerEdgeDragWidth = opts && 'drawerEdgeDragWidth' in opts ? opts.drawerEdgeDragWidth : null;
    let drawerEnableOpenDragGesture = opts && 'drawerEnableOpenDragGesture' in opts ? opts.drawerEnableOpenDragGesture : true;
    if (drawerEnableOpenDragGesture == null) dart.nullFailed(I[124], 1665, 10, "drawerEnableOpenDragGesture");
    let endDrawerEnableOpenDragGesture = opts && 'endDrawerEnableOpenDragGesture' in opts ? opts.endDrawerEnableOpenDragGesture : true;
    if (endDrawerEnableOpenDragGesture == null) dart.nullFailed(I[124], 1666, 10, "endDrawerEnableOpenDragGesture");
    let restorationId = opts && 'restorationId' in opts ? opts.restorationId : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.appBar] = appBar;
    this[S$1.body$1] = body;
    this[S$1.floatingActionButton] = floatingActionButton;
    this[S$1.floatingActionButtonLocation] = floatingActionButtonLocation;
    this[S$1.floatingActionButtonAnimator] = floatingActionButtonAnimator;
    this[S$1.persistentFooterButtons] = persistentFooterButtons;
    this[S$1.drawer] = drawer;
    this[S$1.onDrawerChanged] = onDrawerChanged;
    this[S$1.endDrawer] = endDrawer;
    this[S$1.onEndDrawerChanged] = onEndDrawerChanged;
    this[S$1.bottomNavigationBar] = bottomNavigationBar;
    this[S$1.bottomSheet] = bottomSheet;
    this[S$1.backgroundColor$17] = backgroundColor;
    this[S$1.resizeToAvoidBottomInset] = resizeToAvoidBottomInset;
    this[S$1.primary$1] = primary;
    this[S$1.drawerDragStartBehavior] = drawerDragStartBehavior;
    this[S$1.extendBody$1] = extendBody;
    this[S$1.extendBodyBehindAppBar$1] = extendBodyBehindAppBar;
    this[S$1.drawerScrimColor] = drawerScrimColor;
    this[S$1.drawerEdgeDragWidth] = drawerEdgeDragWidth;
    this[S$1.drawerEnableOpenDragGesture] = drawerEnableOpenDragGesture;
    this[S$1.endDrawerEnableOpenDragGesture] = endDrawerEnableOpenDragGesture;
    this[S$1.restorationId] = restorationId;
    if (!(primary != null)) dart.assertFailed(null, I[124], 1668, 15, "primary != null");
    if (!(extendBody != null)) dart.assertFailed(null, I[124], 1669, 15, "extendBody != null");
    if (!(extendBodyBehindAppBar != null)) dart.assertFailed(null, I[124], 1670, 15, "extendBodyBehindAppBar != null");
    if (!(drawerDragStartBehavior != null)) dart.assertFailed(null, I[124], 1671, 15, "drawerDragStartBehavior != null");
    scaffold$.Scaffold.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scaffold$.Scaffold.prototype;
  dart.addTypeTests(scaffold$.Scaffold);
  dart.addTypeCaches(scaffold$.Scaffold);
  dart.setMethodSignature(scaffold$.Scaffold, () => ({
    __proto__: dart.getMethods(scaffold$.Scaffold.__proto__),
    createState: dart.fnType(scaffold$.ScaffoldState, [])
  }));
  dart.setLibraryUri(scaffold$.Scaffold, I[125]);
  dart.setFieldSignature(scaffold$.Scaffold, () => ({
    __proto__: dart.getFields(scaffold$.Scaffold.__proto__),
    extendBody: dart.finalFieldType(core.bool),
    extendBodyBehindAppBar: dart.finalFieldType(core.bool),
    appBar: dart.finalFieldType(dart.nullable(preferred_size.PreferredSizeWidget)),
    body: dart.finalFieldType(dart.nullable(framework.Widget)),
    floatingActionButton: dart.finalFieldType(dart.nullable(framework.Widget)),
    floatingActionButtonLocation: dart.finalFieldType(dart.nullable(floating_action_button_location.FloatingActionButtonLocation)),
    floatingActionButtonAnimator: dart.finalFieldType(dart.nullable(floating_action_button_location.FloatingActionButtonAnimator)),
    persistentFooterButtons: dart.finalFieldType(dart.nullable(core.List$(framework.Widget))),
    drawer: dart.finalFieldType(dart.nullable(framework.Widget)),
    onDrawerChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    endDrawer: dart.finalFieldType(dart.nullable(framework.Widget)),
    onEndDrawerChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    drawerScrimColor: dart.finalFieldType(dart.nullable(ui.Color)),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    bottomNavigationBar: dart.finalFieldType(dart.nullable(framework.Widget)),
    bottomSheet: dart.finalFieldType(dart.nullable(framework.Widget)),
    resizeToAvoidBottomInset: dart.finalFieldType(dart.nullable(core.bool)),
    primary: dart.finalFieldType(core.bool),
    drawerDragStartBehavior: dart.finalFieldType(recognizer.DragStartBehavior),
    drawerEdgeDragWidth: dart.finalFieldType(dart.nullable(core.double)),
    drawerEnableOpenDragGesture: dart.finalFieldType(core.bool),
    endDrawerEnableOpenDragGesture: dart.finalFieldType(core.bool),
    restorationId: dart.finalFieldType(dart.nullable(core.String))
  }));
  const State_TickerProviderStateMixin$36$5 = class State_TickerProviderStateMixin extends framework.State$(scaffold$.Scaffold) {};
  (State_TickerProviderStateMixin$36$5.new = function() {
    ticker_provider.TickerProviderStateMixin$(scaffold$.Scaffold)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$5.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$5.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$5, ticker_provider.TickerProviderStateMixin$(scaffold$.Scaffold));
  const State_RestorationMixin$36 = class State_RestorationMixin extends State_TickerProviderStateMixin$36$5 {};
  (State_RestorationMixin$36.new = function() {
    restoration.RestorationMixin$(scaffold$.Scaffold)[dart.mixinNew].call(this);
    State_RestorationMixin$36.__proto__.new.call(this);
  }).prototype = State_RestorationMixin$36.prototype;
  dart.applyMixin(State_RestorationMixin$36, restoration.RestorationMixin$(scaffold$.Scaffold));
  scaffold$.ScaffoldState = class ScaffoldState extends State_RestorationMixin$36 {
    get restorationId() {
      return this.widget.restorationId;
    }
    restoreState(oldBucket, initialRestore) {
      if (initialRestore == null) dart.nullFailed(I[124], 2281, 56, "initialRestore");
      this.registerForRestoration(this[S$1._drawerOpened], "drawer_open");
      this.registerForRestoration(this[S$1._endDrawerOpened], "end_drawer_open");
    }
    get hasAppBar() {
      return this.widget.appBar != null;
    }
    get hasDrawer() {
      return this.widget.drawer != null;
    }
    get hasEndDrawer() {
      return this.widget.endDrawer != null;
    }
    get hasFloatingActionButton() {
      return this.widget.floatingActionButton != null;
    }
    get appBarMaxHeight() {
      return this[S$1._appBarMaxHeight];
    }
    get isDrawerOpen() {
      return this[S$1._drawerOpened].value;
    }
    get isEndDrawerOpen() {
      return this[S$1._endDrawerOpened].value;
    }
    [S$1._drawerOpenedCallback](isOpened) {
      let t82;
      if (isOpened == null) dart.nullFailed(I[124], 2324, 35, "isOpened");
      this.setState(dart.fn(() => {
        this[S$1._drawerOpened].value = isOpened;
      }, T$.VoidTovoid()));
      t82 = this.widget.onDrawerChanged;
      t82 == null ? null : t82(isOpened);
    }
    [S$1._endDrawerOpenedCallback](isOpened) {
      let t82;
      if (isOpened == null) dart.nullFailed(I[124], 2331, 38, "isOpened");
      this.setState(dart.fn(() => {
        this[S$1._endDrawerOpened].value = isOpened;
      }, T$.VoidTovoid()));
      t82 = this.widget.onEndDrawerChanged;
      t82 == null ? null : t82(isOpened);
    }
    openDrawer() {
      let t82;
      if (this[S$1._endDrawerKey].currentState != null && dart.test(this[S$1._endDrawerOpened].value)) dart.nullCheck(this[S$1._endDrawerKey].currentState).close();
      t82 = this[S$1._drawerKey$1].currentState;
      t82 == null ? null : t82.open();
    }
    openEndDrawer() {
      let t82;
      if (this[S$1._drawerKey$1].currentState != null && dart.test(this[S$1._drawerOpened].value)) dart.nullCheck(this[S$1._drawerKey$1].currentState).close();
      t82 = this[S$1._endDrawerKey].currentState;
      t82 == null ? null : t82.open();
    }
    showSnackBar(snackbar) {
      let t82;
      if (snackbar == null) dart.nullFailed(I[124], 2430, 83, "snackbar");
      this[S$1._snackBarController] == null ? this[S$1._snackBarController] = (t82 = snack_bar.SnackBar.createAnimationController({vsync: this}), (() => {
        t82.addStatusListener(dart.bind(this, S$1._handleSnackBarStatusChange));
        return t82;
      })()) : null;
      if (dart.test(this[S$1._snackBars][S$1.$isEmpty])) {
        if (!dart.test(dart.nullCheck(this[S$1._snackBarController]).isDismissed)) dart.assertFailed(null, I[124], 2434, 14, "_snackBarController!.isDismissed");
        dart.nullCheck(this[S$1._snackBarController]).forward();
      }
      let controller = null;
      let controller$35isSet = false;
      function controller$35get() {
        return controller$35isSet ? controller : dart.throw(new _internal.LateError.localNI("controller"));
      }
      dart.fn(controller$35get, T$.VoidToScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason());
      function controller$35set(t85) {
        if (t85 == null) dart.nullFailed(I[124], 2437, 68, "null");
        controller$35isSet = true;
        return controller = t85;
      }
      dart.fn(controller$35set, T$.ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReasonTodynamic());
      controller$35set(new (T$.ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason()).__(snackbar.withAnimation(dart.nullCheck(this[S$1._snackBarController]), {fallbackKey: new framework.UniqueKey.new()}), T$.CompleterOfSnackBarClosedReason().new(), dart.fn(() => {
        if (!dart.equals(this[S$1._snackBars][S$0.$first], controller$35get())) dart.assertFailed(null, I[124], 2445, 16, "_snackBars.first == controller");
        this.hideCurrentSnackBar({reason: snack_bar.SnackBarClosedReason.hide});
      }, T$.VoidTovoid()), null));
      this.setState(dart.fn(() => {
        this[S$1._snackBars].addLast(controller$35get());
      }, T$.VoidTovoid()));
      return controller$35get();
    }
    [S$1._handleSnackBarStatusChange](status) {
      if (status == null) dart.nullFailed(I[124], 2456, 52, "status");
      switch (status) {
        case C[85] || CT.C85:
        {
          if (!dart.test(this[S$1._snackBars][S.$isNotEmpty])) dart.assertFailed(null, I[124], 2459, 16, "_snackBars.isNotEmpty");
          this.setState(dart.fn(() => {
            this[S$1._snackBars].removeFirst();
          }, T$.VoidTovoid()));
          if (dart.test(this[S$1._snackBars][S.$isNotEmpty])) dart.nullCheck(this[S$1._snackBarController]).forward();
          break;
        }
        case C[88] || CT.C88:
        {
          this.setState(dart.fn(() => {
            if (!(this[S$1._snackBarTimer] == null)) dart.assertFailed(null, I[124], 2468, 18, "_snackBarTimer == null");
          }, T$.VoidTovoid()));
          break;
        }
        case C[86] || CT.C86:
        case C[87] || CT.C87:
        {
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    removeCurrentSnackBar(opts) {
      let t87;
      let reason = opts && 'reason' in opts ? opts.reason : C[77] || CT.C77;
      if (reason == null) dart.nullFailed(I[124], 2492, 53, "reason");
      if (!(reason != null)) dart.assertFailed(null, I[124], 2493, 12, "reason != null");
      if (this[S$1._messengerSnackBar] != null) {
        if (!dart.test(debug$0.debugCheckHasScaffoldMessenger(this.context))) dart.assertFailed(null, I[124], 2502, 14, "debugCheckHasScaffoldMessenger(context)");
        if (!(this[S$1._scaffoldMessenger] != null)) dart.assertFailed("A SnackBar was shown by the ScaffoldMessenger, but has been called upon " + "to be removed from a Scaffold that is not registered with a " + "ScaffoldMessenger, this can happen if a Scaffold has been rebuilt " + "without an ancestor ScaffoldMessenger.", I[124], 2504, 9, "_scaffoldMessenger != null");
        dart.nullCheck(this[S$1._scaffoldMessenger]).removeCurrentSnackBar({reason: reason});
        return;
      }
      if (dart.test(this[S$1._snackBars][S$1.$isEmpty])) return;
      let completer = this[S$1._snackBars][S$0.$first][S$1._completer];
      if (!dart.test(completer.isCompleted)) completer.complete(reason);
      t87 = this[S$1._snackBarTimer];
      t87 == null ? null : t87.cancel();
      this[S$1._snackBarTimer] = null;
      dart.nullCheck(this[S$1._snackBarController]).value = 0.0;
    }
    hideCurrentSnackBar(opts) {
      let t87;
      let reason = opts && 'reason' in opts ? opts.reason : C[76] || CT.C76;
      if (reason == null) dart.nullFailed(I[124], 2537, 51, "reason");
      if (!(reason != null)) dart.assertFailed(null, I[124], 2538, 12, "reason != null");
      if (this[S$1._messengerSnackBar] != null) {
        if (!dart.test(debug$0.debugCheckHasScaffoldMessenger(this.context))) dart.assertFailed(null, I[124], 2547, 14, "debugCheckHasScaffoldMessenger(context)");
        if (!(this[S$1._scaffoldMessenger] != null)) dart.assertFailed("A SnackBar was shown by the ScaffoldMessenger, but has been called upon " + "to be removed from a Scaffold that is not registered with a " + "ScaffoldMessenger, this can happen if a Scaffold has been rebuilt " + "without an ancestor ScaffoldMessenger.", I[124], 2549, 9, "_scaffoldMessenger != null");
        dart.nullCheck(this[S$1._scaffoldMessenger]).hideCurrentSnackBar({reason: reason});
        return;
      }
      if (dart.test(this[S$1._snackBars][S$1.$isEmpty]) || dart.nullCheck(this[S$1._snackBarController]).status == animation.AnimationStatus.dismissed) return;
      let mediaQuery = media_query.MediaQuery.of(this.context);
      let completer = this[S$1._snackBars][S$0.$first][S$1._completer];
      if (dart.test(mediaQuery.accessibleNavigation)) {
        dart.nullCheck(this[S$1._snackBarController]).value = 0.0;
        completer.complete(reason);
      } else {
        dart.nullCheck(this[S$1._snackBarController]).reverse().then(dart.void, dart.fn(value => {
          if (!dart.test(this.mounted)) dart.assertFailed(null, I[124], 2568, 16, "mounted");
          if (!dart.test(completer.isCompleted)) completer.complete(reason);
        }, T$.voidToNull()));
      }
      t87 = this[S$1._snackBarTimer];
      t87 == null ? null : t87.cancel();
      this[S$1._snackBarTimer] = null;
    }
    [S$1._updateSnackBar]() {
      let messengerSnackBar = dart.test(dart.nullCheck(this[S$1._scaffoldMessenger])[S$1._snackBars][S.$isNotEmpty]) ? dart.nullCheck(this[S$1._scaffoldMessenger])[S$1._snackBars][S$0.$first] : null;
      if (!dart.equals(this[S$1._messengerSnackBar], messengerSnackBar)) {
        this.setState(dart.fn(() => {
          this[S$1._messengerSnackBar] = messengerSnackBar;
        }, T$.VoidTovoid()));
      }
    }
    [S$1._updateMaterialBanner]() {
      let messengerMaterialBanner = dart.test(dart.nullCheck(this[S$1._scaffoldMessenger])[S$1._materialBanners][S.$isNotEmpty]) ? dart.nullCheck(this[S$1._scaffoldMessenger])[S$1._materialBanners][S$0.$first] : null;
      if (!dart.equals(this[S$1._messengerMaterialBanner], messengerMaterialBanner)) {
        this.setState(dart.fn(() => {
          this[S$1._messengerMaterialBanner] = messengerMaterialBanner;
        }, T$.VoidTovoid()));
      }
    }
    [S$1._maybeBuildPersistentBottomSheet]() {
      let t87;
      if (this.widget.bottomSheet != null && this[S$1._currentBottomSheet] == null) {
        let animationController = (t87 = bottom_sheet.BottomSheet.createAnimationController(this), (() => {
          t87.value = 1.0;
          return t87;
        })());
        let _persistentSheetHistoryEntry = null;
        const _persistentBottomSheetExtentChanged = notification => {
          if (notification == null) dart.nullFailed(I[124], 2629, 80, "notification");
          if (dart.notNull(notification.extent) > dart.notNull(notification.initialExtent)) {
            if (_persistentSheetHistoryEntry == null) {
              _persistentSheetHistoryEntry = new routes.LocalHistoryEntry.new({onRemove: dart.fn(() => {
                  if (dart.notNull(notification.extent) > dart.notNull(notification.initialExtent)) {
                    draggable_scrollable_sheet.DraggableScrollableActuator.reset(notification.context);
                  }
                  this.showBodyScrim(false, 0.0);
                  this[S$1._floatingActionButtonVisibilityValue] = 1.0;
                  _persistentSheetHistoryEntry = null;
                }, T$.VoidTovoid())});
              dart.nullCheck(routes.ModalRoute.of(T$.ObjectN(), this.context)).addLocalHistoryEntry(dart.nullCheck(_persistentSheetHistoryEntry));
            }
          } else if (_persistentSheetHistoryEntry != null) {
            dart.nullCheck(routes.ModalRoute.of(T$.ObjectN(), this.context)).removeLocalHistoryEntry(dart.nullCheck(_persistentSheetHistoryEntry));
          }
          return false;
        };
        dart.fn(_persistentBottomSheetExtentChanged, T$.DraggableScrollableNotificationTobool());
        this[S$1._currentBottomSheet] = this[S$1._buildBottomSheet](dart.void, dart.fn(context => {
          if (context == null) dart.nullFailed(I[124], 2649, 23, "context");
          return new (T$.NotificationListenerOfDraggableScrollableNotification()).new({onNotification: _persistentBottomSheetExtentChanged, child: new draggable_scrollable_sheet.DraggableScrollableActuator.new({child: new basic.StatefulBuilder.new({key: this[S$1._currentBottomSheetKey], builder: dart.fn((context, setState) => {
                  if (context == null) dart.nullFailed(I[124], 2655, 40, "context");
                  if (setState == null) dart.nullFailed(I[124], 2655, 61, "setState");
                  return dart.nullCheck(this.widget.bottomSheet);
                }, T$.BuildContextAndFnToWidget()), $creationLocationd_0dea112b090073317d4: C[792] || CT.C792}), $creationLocationd_0dea112b090073317d4: C[793] || CT.C793}), $creationLocationd_0dea112b090073317d4: C[794] || CT.C794});
        }, T$.BuildContextToNotificationListenerOfDraggableScrollableNotification()), true, {animationController: animationController});
      }
    }
    [S$1._closeCurrentBottomSheet]() {
      if (this[S$1._currentBottomSheet] != null) {
        if (!dart.test(dart.nullCheck(this[S$1._currentBottomSheet])[S$1._isLocalHistoryEntry])) {
          dart.nullCheck(this[S$1._currentBottomSheet]).close();
        }
        if (!dart.test(dart.fn(() => {
          let t87;
          t87 = this[S$1._currentBottomSheet];
          t87 == null ? null : t87[S$1._completer].future.whenComplete(dart.fn(() => {
            if (!(this[S$1._currentBottomSheet] == null)) dart.assertFailed(null, I[124], 2673, 18, "_currentBottomSheet == null");
          }, T$.VoidToNull()));
          return true;
        }, T$.VoidTobool())())) dart.assertFailed(null, I[124], 2671, 14, "() {\r\n        _currentBottomSheet?._completer.future.whenComplete(() {\r\n          assert(_currentBottomSheet == null);\r\n        });\r\n        return true;\r\n      }()");
      }
    }
    [S$1._updatePersistentBottomSheet]() {
      dart.nullCheck(this[S$1._currentBottomSheetKey].currentState).setState(dart.fn(() => {
      }, T$.VoidTovoid()));
    }
    [S$1._buildBottomSheet](T, builder, isPersistent, opts) {
      if (builder == null) dart.nullFailed(I[124], 2685, 19, "builder");
      if (isPersistent == null) dart.nullFailed(I[124], 2686, 10, "isPersistent");
      let animationController = opts && 'animationController' in opts ? opts.animationController : null;
      if (animationController == null) dart.nullFailed(I[124], 2687, 34, "animationController");
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      if (!dart.test(dart.fn(() => {
        if (this.widget.bottomSheet != null && dart.test(isPersistent) && this[S$1._currentBottomSheet] != null) {
          dart.throw(assertions.FlutterError.new("Scaffold.bottomSheet cannot be specified while a bottom sheet " + "displayed with showBottomSheet() is still visible.\n" + "Rebuild the Scaffold with a null bottomSheet before calling showBottomSheet()."));
        }
        return true;
      }, T$.VoidTobool())())) dart.assertFailed(null, I[124], 2694, 12, "() {\r\n      if (widget.bottomSheet != null && isPersistent && _currentBottomSheet != null) {\r\n        throw FlutterError(\r\n          'Scaffold.bottomSheet cannot be specified while a bottom sheet '\r\n          'displayed with showBottomSheet() is still visible.\\n'\r\n          'Rebuild the Scaffold with a null bottomSheet before calling showBottomSheet().',\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      let completer = async.Completer$(T).new();
      let bottomSheetKey = T$.GlobalKeyOf_StandardBottomSheetState().new();
      let bottomSheet = null;
      let bottomSheet$35isSet = false;
      function bottomSheet$35get() {
        return bottomSheet$35isSet ? bottomSheet : dart.throw(new _internal.LateError.localNI("bottomSheet"));
      }
      dart.fn(bottomSheet$35get, T$.VoidTo_StandardBottomSheet());
      function bottomSheet$35set(t90) {
        if (t90 == null) dart.nullFailed(I[124], 2707, 31, "null");
        bottomSheet$35isSet = true;
        return bottomSheet = t90;
      }
      dart.fn(bottomSheet$35set, T$._StandardBottomSheetTodynamic());
      let removedEntry = false;
      const _removeCurrentBottomSheet = () => {
        removedEntry = true;
        if (this[S$1._currentBottomSheet] == null) {
          return;
        }
        if (!dart.equals(dart.nullCheck(this[S$1._currentBottomSheet])[S$1._widget], bottomSheet$35get())) dart.assertFailed(null, I[124], 2715, 14, "_currentBottomSheet!._widget == bottomSheet");
        if (!(bottomSheetKey.currentState != null)) dart.assertFailed(null, I[124], 2716, 14, "bottomSheetKey.currentState != null");
        this[S$1._showFloatingActionButton]();
        dart.nullCheck(bottomSheetKey.currentState).close();
        this.setState(dart.fn(() => {
          this[S$1._currentBottomSheet] = null;
        }, T$.VoidTovoid()));
        if (animationController.status != animation.AnimationStatus.dismissed) {
          this[S$1._dismissedBottomSheets][S.$add](bottomSheet$35get());
        }
        completer.complete();
      };
      dart.fn(_removeCurrentBottomSheet, T$.VoidTovoid());
      let entry = dart.test(isPersistent) ? null : new routes.LocalHistoryEntry.new({onRemove: dart.fn(() => {
          if (!removedEntry) {
            _removeCurrentBottomSheet();
          }
        }, T$.VoidTovoid())});
      bottomSheet$35set(new scaffold$._StandardBottomSheet.new({key: bottomSheetKey, animationController: animationController, enableDrag: !dart.test(isPersistent), onClosing: dart.fn(() => {
          if (this[S$1._currentBottomSheet] == null) {
            return;
          }
          if (!dart.equals(dart.nullCheck(this[S$1._currentBottomSheet])[S$1._widget], bottomSheet$35get())) dart.assertFailed(null, I[124], 2746, 16, "_currentBottomSheet!._widget == bottomSheet");
          if (!dart.test(isPersistent) && !removedEntry) {
            if (!(entry != null)) dart.assertFailed(null, I[124], 2748, 18, "entry != null");
            dart.nullCheck(entry).remove();
            removedEntry = true;
          }
        }, T$.VoidTovoid()), onDismissed: dart.fn(() => {
          if (dart.test(this[S$1._dismissedBottomSheets][S.$contains](bottomSheet$35get()))) {
            this.setState(dart.fn(() => {
              this[S$1._dismissedBottomSheets][S$.$remove](bottomSheet$35get());
            }, T$.VoidTovoid()));
          }
        }, T$.VoidTovoid()), builder: builder, isPersistent: isPersistent, backgroundColor: backgroundColor, elevation: elevation, shape: shape, clipBehavior: clipBehavior, constraints: constraints, $creationLocationd_0dea112b090073317d4: C[795] || CT.C795}));
      if (!dart.test(isPersistent)) dart.nullCheck(routes.ModalRoute.of(T$.ObjectN(), this.context)).addLocalHistoryEntry(dart.nullCheck(entry));
      return new (scaffold$.PersistentBottomSheetController$(T)).__(bottomSheet$35get(), completer, entry != null ? dart.bind(entry, 'remove') : _removeCurrentBottomSheet, dart.fn(fn => {
        let t92;
        if (fn == null) dart.nullFailed(I[124], 2778, 21, "fn");
        t92 = bottomSheetKey.currentState;
        t92 == null ? null : t92.setState(fn);
      }, T$.FnTovoid()), !dart.test(isPersistent));
    }
    showBottomSheet(T, builder, opts) {
      let t92, t92$;
      if (builder == null) dart.nullFailed(I[124], 2861, 19, "builder");
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      let transitionAnimationController = opts && 'transitionAnimationController' in opts ? opts.transitionAnimationController : null;
      if (!dart.test(dart.fn(() => {
        if (this.widget.bottomSheet != null) {
          dart.throw(assertions.FlutterError.new("Scaffold.bottomSheet cannot be specified while a bottom sheet " + "displayed with showBottomSheet() is still visible.\n" + "Rebuild the Scaffold with a null bottomSheet before calling showBottomSheet()."));
        }
        return true;
      }, T$.VoidTobool())())) dart.assertFailed(null, I[124], 2869, 12, "() {\r\n      if (widget.bottomSheet != null) {\r\n        throw FlutterError(\r\n          'Scaffold.bottomSheet cannot be specified while a bottom sheet '\r\n          'displayed with showBottomSheet() is still visible.\\n'\r\n          'Rebuild the Scaffold with a null bottomSheet before calling showBottomSheet().',\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      if (!dart.test(debug.debugCheckHasMediaQuery(this.context))) dart.assertFailed(null, I[124], 2879, 12, "debugCheckHasMediaQuery(context)");
      this[S$1._closeCurrentBottomSheet]();
      let controller = (t92$ = (t92 = transitionAnimationController, t92 == null ? bottom_sheet.BottomSheet.createAnimationController(this) : t92), (() => {
        t92$.forward();
        return t92$;
      })());
      this.setState(dart.fn(() => {
        this[S$1._currentBottomSheet] = this[S$1._buildBottomSheet](T, builder, false, {animationController: controller, backgroundColor: backgroundColor, elevation: elevation, shape: shape, clipBehavior: clipBehavior, constraints: constraints});
      }, T$.VoidTovoid()));
      return scaffold$.PersistentBottomSheetController$(T).as(dart.nullCheck(this[S$1._currentBottomSheet]));
    }
    get [S$1._floatingActionButtonMoveController]() {
      let t92;
      return dart.test(this[S$1.__ScaffoldState__floatingActionButtonMoveController_isSet]) ? (t92 = this[S$1.__ScaffoldState__floatingActionButtonMoveController], t92) : dart.throw(new _internal.LateError.fieldNI("_floatingActionButtonMoveController"));
    }
    set [S$1._floatingActionButtonMoveController](t92) {
      if (t92 == null) dart.nullFailed(I[124], 2899, 28, "null");
      this[S$1.__ScaffoldState__floatingActionButtonMoveController_isSet] = true;
      this[S$1.__ScaffoldState__floatingActionButtonMoveController] = t92;
    }
    get [S$1._floatingActionButtonAnimator]() {
      let t93;
      return dart.test(this[S$1.__ScaffoldState__floatingActionButtonAnimator_isSet]) ? (t93 = this[S$1.__ScaffoldState__floatingActionButtonAnimator], t93) : dart.throw(new _internal.LateError.fieldNI("_floatingActionButtonAnimator"));
    }
    set [S$1._floatingActionButtonAnimator](t93) {
      if (t93 == null) dart.nullFailed(I[124], 2900, 37, "null");
      this[S$1.__ScaffoldState__floatingActionButtonAnimator_isSet] = true;
      this[S$1.__ScaffoldState__floatingActionButtonAnimator] = t93;
    }
    get [S$1._floatingActionButtonVisibilityController]() {
      let t94;
      return dart.test(this[S$1.__ScaffoldState__floatingActionButtonVisibilityController_isSet]) ? (t94 = this[S$1.__ScaffoldState__floatingActionButtonVisibilityController], t94) : dart.throw(new _internal.LateError.fieldNI("_floatingActionButtonVisibilityController"));
    }
    set [S$1._floatingActionButtonVisibilityController](t94) {
      if (t94 == null) dart.nullFailed(I[124], 2904, 28, "null");
      this[S$1.__ScaffoldState__floatingActionButtonVisibilityController_isSet] = true;
      this[S$1.__ScaffoldState__floatingActionButtonVisibilityController] = t94;
    }
    get [S$1._floatingActionButtonVisibilityValue]() {
      return this[S$1._floatingActionButtonVisibilityController].value;
    }
    set [S$1._floatingActionButtonVisibilityValue](newValue) {
      if (newValue == null) dart.nullFailed(I[124], 2912, 51, "newValue");
      if (!(newValue != null)) dart.assertFailed(null, I[124], 2913, 12, "newValue != null");
      this[S$1._floatingActionButtonVisibilityController].value = newValue[S.$clamp](this[S$1._floatingActionButtonVisibilityController].lowerBound, this[S$1._floatingActionButtonVisibilityController].upperBound);
    }
    [S$1._showFloatingActionButton]() {
      return this[S$1._floatingActionButtonVisibilityController].forward();
    }
    [S$1._moveFloatingActionButton](newLocation) {
      if (newLocation == null) dart.nullFailed(I[124], 2926, 69, "newLocation");
      let previousLocation = this[S$1._floatingActionButtonLocation];
      let restartAnimationFrom = 0.0;
      if (dart.test(this[S$1._floatingActionButtonMoveController].isAnimating)) {
        previousLocation = new scaffold$._TransitionSnapshotFabLocation.new(dart.nullCheck(this[S$1._previousFloatingActionButtonLocation]), dart.nullCheck(this[S$1._floatingActionButtonLocation]), this[S$1._floatingActionButtonAnimator], this[S$1._floatingActionButtonMoveController].value);
        restartAnimationFrom = this[S$1._floatingActionButtonAnimator].getAnimationRestart(this[S$1._floatingActionButtonMoveController].value);
      }
      this.setState(dart.fn(() => {
        this[S$1._previousFloatingActionButtonLocation] = previousLocation;
        this[S$1._floatingActionButtonLocation] = newLocation;
      }, T$.VoidTovoid()));
      this[S$1._floatingActionButtonMoveController].forward({from: restartAnimationFrom});
    }
    [S$1._handleStatusBarTap]() {
      let _primaryScrollController = primary_scroll_controller.PrimaryScrollController.of(this.context);
      if (_primaryScrollController != null && dart.test(_primaryScrollController.hasClients)) {
        _primaryScrollController.animateTo(0.0, {duration: C[796] || CT.C796, curve: curves.Curves.linear});
      }
    }
    get [S$1._geometryNotifier]() {
      let t95;
      return dart.test(this[S$1.__ScaffoldState__geometryNotifier_isSet]) ? (t95 = this[S$1.__ScaffoldState__geometryNotifier], t95) : dart.throw(new _internal.LateError.fieldNI("_geometryNotifier"));
    }
    set [S$1._geometryNotifier](t95) {
      if (t95 == null) dart.nullFailed(I[124], 2964, 34, "null");
      this[S$1.__ScaffoldState__geometryNotifier_isSet] = true;
      this[S$1.__ScaffoldState__geometryNotifier] = t95;
    }
    get [S$1._resizeToAvoidBottomInset]() {
      let t96;
      t96 = this.widget.resizeToAvoidBottomInset;
      return t96 == null ? true : t96;
    }
    initState() {
      let t96, t96$;
      super.initState();
      this[S$1._geometryNotifier] = new scaffold$._ScaffoldGeometryNotifier.new(C[797] || CT.C797, this.context);
      this[S$1._floatingActionButtonLocation] = (t96 = this.widget.floatingActionButtonLocation, t96 == null ? scaffold$._kDefaultFloatingActionButtonLocation : t96);
      this[S$1._floatingActionButtonAnimator] = (t96$ = this.widget.floatingActionButtonAnimator, t96$ == null ? scaffold$._kDefaultFloatingActionButtonAnimator : t96$);
      this[S$1._previousFloatingActionButtonLocation] = this[S$1._floatingActionButtonLocation];
      this[S$1._floatingActionButtonMoveController] = new animation_controller.AnimationController.new({vsync: this, lowerBound: 0.0, upperBound: 1.0, value: 1.0, duration: floating_action_button_location.kFloatingActionButtonSegue['*'](2)});
      this[S$1._floatingActionButtonVisibilityController] = new animation_controller.AnimationController.new({duration: floating_action_button_location.kFloatingActionButtonSegue, vsync: this});
    }
    didUpdateWidget(oldWidget) {
      let t96, t96$;
      scaffold$.Scaffold.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[124], 2992, 33, "oldWidget");
      if (!dart.equals(this.widget.floatingActionButtonAnimator, oldWidget.floatingActionButtonAnimator)) {
        this[S$1._floatingActionButtonAnimator] = (t96 = this.widget.floatingActionButtonAnimator, t96 == null ? scaffold$._kDefaultFloatingActionButtonAnimator : t96);
      }
      if (!dart.equals(this.widget.floatingActionButtonLocation, oldWidget.floatingActionButtonLocation)) {
        this[S$1._moveFloatingActionButton]((t96$ = this.widget.floatingActionButtonLocation, t96$ == null ? scaffold$._kDefaultFloatingActionButtonLocation : t96$));
      }
      if (!dart.equals(this.widget.bottomSheet, oldWidget.bottomSheet)) {
        if (!dart.test(dart.fn(() => {
          let t96;
          if (this.widget.bottomSheet != null && (t96 = this[S$1._currentBottomSheet], t96 == null ? null : t96[S$1._isLocalHistoryEntry]) === true) {
            dart.throw(new assertions.FlutterError.fromParts(T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Scaffold.bottomSheet cannot be specified while a bottom sheet displayed " + "with showBottomSheet() is still visible."), new assertions.ErrorHint.new("Use the PersistentBottomSheetController " + "returned by showBottomSheet() to close the old bottom sheet before creating " + "a Scaffold with a (non null) bottomSheet.")])));
          }
          return true;
        }, T$.VoidTobool())())) dart.assertFailed(null, I[124], 3001, 14, "() {\r\n        if (widget.bottomSheet != null && _currentBottomSheet?._isLocalHistoryEntry == true) {\r\n          throw FlutterError.fromParts(<DiagnosticsNode>[\r\n            ErrorSummary(\r\n              'Scaffold.bottomSheet cannot be specified while a bottom sheet displayed '\r\n              'with showBottomSheet() is still visible.',\r\n            ),\r\n            ErrorHint(\r\n              'Use the PersistentBottomSheetController '\r\n              'returned by showBottomSheet() to close the old bottom sheet before creating '\r\n              'a Scaffold with a (non null) bottomSheet.',\r\n            ),\r\n          ]);\r\n        }\r\n        return true;\r\n      }()");
        if (this.widget.bottomSheet == null) {
          this[S$1._closeCurrentBottomSheet]();
        } else if (this.widget.bottomSheet != null && oldWidget.bottomSheet == null) {
          this[S$1._maybeBuildPersistentBottomSheet]();
        } else {
          this[S$1._updatePersistentBottomSheet]();
        }
      }
      super.didUpdateWidget(oldWidget);
    }
    didChangeDependencies() {
      let t96, t96$;
      let _currentScaffoldMessenger = scaffold$.ScaffoldMessenger.maybeOf(this.context);
      if (this[S$1._scaffoldMessenger] != null && (_currentScaffoldMessenger == null || !dart.equals(this[S$1._scaffoldMessenger], _currentScaffoldMessenger))) {
        t96 = this[S$1._scaffoldMessenger];
        t96 == null ? null : t96[S$1._unregister](this);
      }
      this[S$1._scaffoldMessenger] = _currentScaffoldMessenger;
      t96$ = this[S$1._scaffoldMessenger];
      t96$ == null ? null : t96$[S$1._register](this);
      let mediaQuery = media_query.MediaQuery.of(this.context);
      if (this[S$1._accessibleNavigation] === true && !dart.test(mediaQuery.accessibleNavigation) && this[S$1._snackBarTimer] != null && !dart.test(dart.nullCheck(this[S$1._snackBarTimer]).isActive)) {
        this.hideCurrentSnackBar({reason: snack_bar.SnackBarClosedReason.timeout});
      }
      this[S$1._accessibleNavigation] = mediaQuery.accessibleNavigation;
      this[S$1._maybeBuildPersistentBottomSheet]();
      super.didChangeDependencies();
    }
    dispose() {
      let t96, t96$, t96$0;
      t96 = this[S$1._snackBarController];
      t96 == null ? null : t96.dispose();
      t96$ = this[S$1._snackBarTimer];
      t96$ == null ? null : t96$.cancel();
      this[S$1._snackBarTimer] = null;
      this[S$1._geometryNotifier].dispose();
      for (let bottomSheet of this[S$1._dismissedBottomSheets]) {
        bottomSheet.animationController.dispose();
      }
      if (this[S$1._currentBottomSheet] != null) {
        dart.nullCheck(this[S$1._currentBottomSheet])[S$1._widget].animationController.dispose();
      }
      this[S$1._floatingActionButtonMoveController].dispose();
      this[S$1._floatingActionButtonVisibilityController].dispose();
      t96$0 = this[S$1._scaffoldMessenger];
      t96$0 == null ? null : t96$0[S$1._unregister](this);
      super.dispose();
    }
    [S$1._addIfNonNull](children, child, childId, opts) {
      if (children == null) dart.nullFailed(I[124], 3081, 20, "children");
      if (childId == null) dart.nullFailed(I[124], 3083, 12, "childId");
      let removeLeftPadding = opts && 'removeLeftPadding' in opts ? opts.removeLeftPadding : null;
      if (removeLeftPadding == null) dart.nullFailed(I[124], 3084, 19, "removeLeftPadding");
      let removeTopPadding = opts && 'removeTopPadding' in opts ? opts.removeTopPadding : null;
      if (removeTopPadding == null) dart.nullFailed(I[124], 3085, 19, "removeTopPadding");
      let removeRightPadding = opts && 'removeRightPadding' in opts ? opts.removeRightPadding : null;
      if (removeRightPadding == null) dart.nullFailed(I[124], 3086, 19, "removeRightPadding");
      let removeBottomPadding = opts && 'removeBottomPadding' in opts ? opts.removeBottomPadding : null;
      if (removeBottomPadding == null) dart.nullFailed(I[124], 3087, 19, "removeBottomPadding");
      let removeBottomInset = opts && 'removeBottomInset' in opts ? opts.removeBottomInset : false;
      if (removeBottomInset == null) dart.nullFailed(I[124], 3088, 10, "removeBottomInset");
      let maintainBottomViewPadding = opts && 'maintainBottomViewPadding' in opts ? opts.maintainBottomViewPadding : false;
      if (maintainBottomViewPadding == null) dart.nullFailed(I[124], 3089, 10, "maintainBottomViewPadding");
      let data = media_query.MediaQuery.of(this.context).removePadding({removeLeft: removeLeftPadding, removeTop: removeTopPadding, removeRight: removeRightPadding, removeBottom: removeBottomPadding});
      if (dart.test(removeBottomInset)) data = data.removeViewInsets({removeBottom: true});
      if (dart.test(maintainBottomViewPadding) && data.viewInsets.bottom !== 0.0) {
        data = data.copyWith({padding: data.padding.copyWith({bottom: data.viewPadding.bottom})});
      }
      if (child != null) {
        children[S.$add](new basic.LayoutId.new({id: childId, child: new media_query.MediaQuery.new({data: data, child: child, $creationLocationd_0dea112b090073317d4: C[798] || CT.C798}), $creationLocationd_0dea112b090073317d4: C[799] || CT.C799}));
      }
    }
    [S$1._buildEndDrawer](children, textDirection) {
      if (children == null) dart.nullFailed(I[124], 3116, 39, "children");
      if (textDirection == null) dart.nullFailed(I[124], 3116, 63, "textDirection");
      if (this.widget.endDrawer != null) {
        if (!dart.test(this.hasEndDrawer)) dart.assertFailed(null, I[124], 3118, 14, "hasEndDrawer");
        this[S$1._addIfNonNull](children, new drawer.DrawerController.new({key: this[S$1._endDrawerKey], alignment: drawer.DrawerAlignment.end, drawerCallback: dart.bind(this, S$1._endDrawerOpenedCallback), dragStartBehavior: this.widget.drawerDragStartBehavior, scrimColor: this.widget.drawerScrimColor, edgeDragWidth: this.widget.drawerEdgeDragWidth, enableOpenDragGesture: this.widget.endDrawerEnableOpenDragGesture, isDrawerOpen: this[S$1._endDrawerOpened].value, child: dart.nullCheck(this.widget.endDrawer), $creationLocationd_0dea112b090073317d4: C[800] || CT.C800}), scaffold$._ScaffoldSlot.endDrawer, {removeLeftPadding: textDirection == ui.TextDirection.ltr, removeTopPadding: false, removeRightPadding: textDirection == ui.TextDirection.rtl, removeBottomPadding: false});
      }
    }
    [S$1._buildDrawer$1](children, textDirection) {
      if (children == null) dart.nullFailed(I[124], 3142, 36, "children");
      if (textDirection == null) dart.nullFailed(I[124], 3142, 60, "textDirection");
      if (this.widget.drawer != null) {
        if (!dart.test(this.hasDrawer)) dart.assertFailed(null, I[124], 3144, 14, "hasDrawer");
        this[S$1._addIfNonNull](children, new drawer.DrawerController.new({key: this[S$1._drawerKey$1], alignment: drawer.DrawerAlignment.start, drawerCallback: dart.bind(this, S$1._drawerOpenedCallback), dragStartBehavior: this.widget.drawerDragStartBehavior, scrimColor: this.widget.drawerScrimColor, edgeDragWidth: this.widget.drawerEdgeDragWidth, enableOpenDragGesture: this.widget.drawerEnableOpenDragGesture, isDrawerOpen: this[S$1._drawerOpened].value, child: dart.nullCheck(this.widget.drawer), $creationLocationd_0dea112b090073317d4: C[801] || CT.C801}), scaffold$._ScaffoldSlot.drawer, {removeLeftPadding: textDirection == ui.TextDirection.rtl, removeTopPadding: false, removeRightPadding: textDirection == ui.TextDirection.ltr, removeBottomPadding: false});
      }
    }
    showBodyScrim(value, opacity) {
      if (value == null) dart.nullFailed(I[124], 3174, 27, "value");
      if (opacity == null) dart.nullFailed(I[124], 3174, 41, "opacity");
      if (!(value != null)) dart.assertFailed(null, I[124], 3175, 12, "value != null");
      if (this[S$1._showBodyScrim] == value && this[S$1._bodyScrimColor].opacity == opacity) {
        return;
      }
      this.setState(dart.fn(() => {
        this[S$1._showBodyScrim] = value;
        this[S$1._bodyScrimColor] = colors$.Colors.black.withOpacity(opacity);
      }, T$.VoidTovoid()));
    }
    build(context) {
      let t96, t97, t97$, t97$0, t97$1, t97$2, t97$3, t97$4, t97$5, t97$6;
      if (context == null) dart.nullFailed(I[124], 3186, 29, "context");
      if (!dart.test(debug.debugCheckHasMediaQuery(context))) dart.assertFailed(null, I[124], 3187, 12, "debugCheckHasMediaQuery(context)");
      if (!dart.test(debug.debugCheckHasDirectionality(context))) dart.assertFailed(null, I[124], 3188, 12, "debugCheckHasDirectionality(context)");
      let mediaQuery = media_query.MediaQuery.of(context);
      let themeData = theme$.Theme.of(context);
      let textDirection = basic.Directionality.of(context);
      this[S$1._accessibleNavigation] = mediaQuery.accessibleNavigation;
      if (dart.test(this[S$1._snackBars][S.$isNotEmpty])) {
        let route = routes.ModalRoute.of(T$.ObjectN(), context);
        if (route == null || dart.test(route.isCurrent)) {
          if (dart.test(dart.nullCheck(this[S$1._snackBarController]).isCompleted) && this[S$1._snackBarTimer] == null) {
            let snackBar = this[S$1._snackBars][S$0.$first][S$1._widget];
            this[S$1._snackBarTimer] = async.Timer.new(snackBar.duration, dart.fn(() => {
              if (!(dart.nullCheck(this[S$1._snackBarController]).status == animation.AnimationStatus.forward || dart.nullCheck(this[S$1._snackBarController]).status == animation.AnimationStatus.completed)) dart.assertFailed(null, I[124], 3202, 15, "_snackBarController!.status == AnimationStatus.forward ||\r\n                _snackBarController!.status == AnimationStatus.completed");
              let mediaQuery = media_query.MediaQuery.of(context);
              if (dart.test(mediaQuery.accessibleNavigation) && snackBar.action != null) return;
              this.hideCurrentSnackBar({reason: snack_bar.SnackBarClosedReason.timeout});
            }, T$.VoidTovoid()));
          }
        } else {
          t96 = this[S$1._snackBarTimer];
          t96 == null ? null : t96.cancel();
          this[S$1._snackBarTimer] = null;
        }
      }
      let children = T$.JSArrayOfLayoutId().of([]);
      this[S$1._addIfNonNull](children, this.widget.body == null ? null : new scaffold$._BodyBuilder.new({extendBody: this.widget.extendBody, extendBodyBehindAppBar: this.widget.extendBodyBehindAppBar, body: dart.nullCheck(this.widget.body), $creationLocationd_0dea112b090073317d4: C[802] || CT.C802}), scaffold$._ScaffoldSlot.body, {removeLeftPadding: false, removeTopPadding: this.widget.appBar != null, removeRightPadding: false, removeBottomPadding: this.widget.bottomNavigationBar != null || this.widget.persistentFooterButtons != null, removeBottomInset: this[S$1._resizeToAvoidBottomInset]});
      if (dart.test(this[S$1._showBodyScrim])) {
        this[S$1._addIfNonNull](children, new modal_barrier.ModalBarrier.new({dismissible: false, color: this[S$1._bodyScrimColor], $creationLocationd_0dea112b090073317d4: C[803] || CT.C803}), scaffold$._ScaffoldSlot.bodyScrim, {removeLeftPadding: true, removeTopPadding: true, removeRightPadding: true, removeBottomPadding: true});
      }
      if (this.widget.appBar != null) {
        let topPadding = dart.test(this.widget.primary) ? mediaQuery.padding.top : 0.0;
        this[S$1._appBarMaxHeight] = dart.notNull(app_bar.AppBar.preferredHeightFor(context, dart.nullCheck(this.widget.appBar).preferredSize)) + dart.notNull(topPadding);
        if (!(dart.nullCheck(this[S$1._appBarMaxHeight]) >= 0.0 && dart.nullCheck(this[S$1._appBarMaxHeight])[S.$isFinite])) dart.assertFailed(null, I[124], 3251, 14, "_appBarMaxHeight! >= 0.0 && _appBarMaxHeight!.isFinite");
        this[S$1._addIfNonNull](children, new basic.ConstrainedBox.new({constraints: new box$.BoxConstraints.new({maxHeight: dart.nullCheck(this[S$1._appBarMaxHeight])}), child: flexible_space_bar.FlexibleSpaceBar.createSettings({currentExtent: dart.nullCheck(this[S$1._appBarMaxHeight]), child: dart.nullCheck(this.widget.appBar)}), $creationLocationd_0dea112b090073317d4: C[804] || CT.C804}), scaffold$._ScaffoldSlot.appBar, {removeLeftPadding: false, removeTopPadding: false, removeRightPadding: false, removeBottomPadding: true});
      }
      let isSnackBarFloating = false;
      let snackBarWidth = null;
      if (!(dart.test(this[S$1._snackBars][S$1.$isEmpty]) || this[S$1._messengerSnackBar] == null)) dart.assertFailed("Only one API should be used to manage SnackBars. The ScaffoldMessenger is " + "the preferred API instead of the Scaffold methods.", I[124], 3276, 7, "_snackBars.isEmpty || _messengerSnackBar == null");
      if (this[S$1._currentBottomSheet] != null || dart.test(this[S$1._dismissedBottomSheets][S.$isNotEmpty])) {
        let stack = new basic.Stack.new({alignment: alignment.Alignment.bottomCenter, children: (() => {
            let t96 = T$.ListOfWidget().of(this[S$1._dismissedBottomSheets]);
            if (this[S$1._currentBottomSheet] != null) t96[S.$add](dart.nullCheck(this[S$1._currentBottomSheet])[S$1._widget]);
            return t96;
          })(), $creationLocationd_0dea112b090073317d4: C[805] || CT.C805});
        this[S$1._addIfNonNull](children, stack, scaffold$._ScaffoldSlot.bottomSheet, {removeLeftPadding: false, removeTopPadding: true, removeRightPadding: false, removeBottomPadding: this[S$1._resizeToAvoidBottomInset]});
      }
      if (this[S$1._messengerSnackBar] != null) {
        let snackBarBehavior = (t97$0 = (t97$ = (t97 = this[S$1._messengerSnackBar], t97 == null ? null : t97[S$1._widget].behavior), t97$ == null ? themeData.snackBarTheme.behavior : t97$), t97$0 == null ? snack_bar_theme.SnackBarBehavior.fixed : t97$0);
        isSnackBarFloating = snackBarBehavior == snack_bar_theme.SnackBarBehavior.floating;
        snackBarWidth = (t97$1 = this[S$1._messengerSnackBar], t97$1 == null ? null : t97$1[S$1._widget].width);
        this[S$1._addIfNonNull](children, (t97$2 = this[S$1._messengerSnackBar], t97$2 == null ? null : t97$2[S$1._widget]), scaffold$._ScaffoldSlot.snackBar, {removeLeftPadding: false, removeTopPadding: true, removeRightPadding: false, removeBottomPadding: this.widget.bottomNavigationBar != null || this.widget.persistentFooterButtons != null, maintainBottomViewPadding: !dart.test(this[S$1._resizeToAvoidBottomInset])});
      }
      if (dart.test(this[S$1._snackBars][S.$isNotEmpty])) {
        let snackBarBehavior = (t97$4 = (t97$3 = this[S$1._snackBars][S$0.$first][S$1._widget].behavior, t97$3 == null ? themeData.snackBarTheme.behavior : t97$3), t97$4 == null ? snack_bar_theme.SnackBarBehavior.fixed : t97$4);
        isSnackBarFloating = snackBarBehavior == snack_bar_theme.SnackBarBehavior.floating;
        snackBarWidth = this[S$1._snackBars][S$0.$first][S$1._widget].width;
        this[S$1._addIfNonNull](children, this[S$1._snackBars][S$0.$first][S$1._widget], scaffold$._ScaffoldSlot.snackBar, {removeLeftPadding: false, removeTopPadding: true, removeRightPadding: false, removeBottomPadding: this.widget.bottomNavigationBar != null || this.widget.persistentFooterButtons != null, maintainBottomViewPadding: !dart.test(this[S$1._resizeToAvoidBottomInset])});
      }
      if (this[S$1._messengerMaterialBanner] != null) {
        this[S$1._addIfNonNull](children, (t97$5 = this[S$1._messengerMaterialBanner], t97$5 == null ? null : t97$5[S$1._widget]), scaffold$._ScaffoldSlot.materialBanner, {removeLeftPadding: false, removeTopPadding: this.widget.appBar != null, removeRightPadding: false, removeBottomPadding: true, maintainBottomViewPadding: !dart.test(this[S$1._resizeToAvoidBottomInset])});
      }
      if (this.widget.persistentFooterButtons != null) {
        this[S$1._addIfNonNull](children, new container.Container.new({decoration: new box_decoration.BoxDecoration.new({border: new box_border.Border.new({top: divider.Divider.createBorderSide(context, {width: 1.0})})}), child: new safe_area.SafeArea.new({top: false, child: new basic.IntrinsicHeight.new({child: new container.Container.new({alignment: alignment.AlignmentDirectional.centerEnd, padding: C[0] || CT.C0, child: new overflow_bar.OverflowBar.new({spacing: 8.0, overflowAlignment: overflow_bar.OverflowBarAlignment.end, children: dart.nullCheck(this.widget.persistentFooterButtons), $creationLocationd_0dea112b090073317d4: C[806] || CT.C806}), $creationLocationd_0dea112b090073317d4: C[807] || CT.C807}), $creationLocationd_0dea112b090073317d4: C[808] || CT.C808}), $creationLocationd_0dea112b090073317d4: C[809] || CT.C809}), $creationLocationd_0dea112b090073317d4: C[810] || CT.C810}), scaffold$._ScaffoldSlot.persistentFooter, {removeLeftPadding: false, removeTopPadding: true, removeRightPadding: false, removeBottomPadding: false, maintainBottomViewPadding: !dart.test(this[S$1._resizeToAvoidBottomInset])});
      }
      if (this.widget.bottomNavigationBar != null) {
        this[S$1._addIfNonNull](children, this.widget.bottomNavigationBar, scaffold$._ScaffoldSlot.bottomNavigationBar, {removeLeftPadding: false, removeTopPadding: true, removeRightPadding: false, removeBottomPadding: false, maintainBottomViewPadding: !dart.test(this[S$1._resizeToAvoidBottomInset])});
      }
      this[S$1._addIfNonNull](children, new scaffold$._FloatingActionButtonTransition.new({fabMoveAnimation: this[S$1._floatingActionButtonMoveController], fabMotionAnimator: this[S$1._floatingActionButtonAnimator], geometryNotifier: this[S$1._geometryNotifier], currentController: this[S$1._floatingActionButtonVisibilityController], child: this.widget.floatingActionButton, $creationLocationd_0dea112b090073317d4: C[811] || CT.C811}), scaffold$._ScaffoldSlot.floatingActionButton, {removeLeftPadding: true, removeTopPadding: true, removeRightPadding: true, removeBottomPadding: true});
      switch (themeData.platform) {
        case C[15] || CT.C15:
        case C[16] || CT.C16:
        {
          this[S$1._addIfNonNull](children, new gesture_detector.GestureDetector.new({behavior: proxy_box.HitTestBehavior.opaque, onTap: dart.bind(this, S$1._handleStatusBarTap), excludeFromSemantics: true, $creationLocationd_0dea112b090073317d4: C[812] || CT.C812}), scaffold$._ScaffoldSlot.statusBar, {removeLeftPadding: false, removeTopPadding: true, removeRightPadding: false, removeBottomPadding: true});
          break;
        }
        case C[11] || CT.C11:
        case C[12] || CT.C12:
        case C[13] || CT.C13:
        case C[14] || CT.C14:
        {
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      if (dart.test(this[S$1._endDrawerOpened].value)) {
        this[S$1._buildDrawer$1](children, textDirection);
        this[S$1._buildEndDrawer](children, textDirection);
      } else {
        this[S$1._buildEndDrawer](children, textDirection);
        this[S$1._buildDrawer$1](children, textDirection);
      }
      let minInsets = mediaQuery.padding.copyWith({bottom: dart.test(this[S$1._resizeToAvoidBottomInset]) ? mediaQuery.viewInsets.bottom : 0.0});
      let minViewPadding = mediaQuery.viewPadding.copyWith({bottom: dart.test(this[S$1._resizeToAvoidBottomInset]) && mediaQuery.viewInsets.bottom !== 0.0 ? 0.0 : null});
      let _extendBody = dart.notNull(minInsets.bottom) <= 0 && dart.test(this.widget.extendBody);
      return new scaffold$._ScaffoldScope.new({hasDrawer: this.hasDrawer, geometryNotifier: this[S$1._geometryNotifier], child: new scroll_notification_observer.ScrollNotificationObserver.new({child: new material.Material.new({color: (t97$6 = this.widget.backgroundColor, t97$6 == null ? themeData.scaffoldBackgroundColor : t97$6), child: new transitions.AnimatedBuilder.new({animation: this[S$1._floatingActionButtonMoveController], builder: dart.fn((context, child) => {
                if (context == null) dart.nullFailed(I[124], 3470, 105, "context");
                return new basic.CustomMultiChildLayout.new({delegate: new scaffold$._ScaffoldLayout.new({extendBody: _extendBody, extendBodyBehindAppBar: this.widget.extendBodyBehindAppBar, minInsets: minInsets, minViewPadding: minViewPadding, currentFloatingActionButtonLocation: dart.nullCheck(this[S$1._floatingActionButtonLocation]), floatingActionButtonMoveAnimationProgress: this[S$1._floatingActionButtonMoveController].value, floatingActionButtonMotionAnimator: this[S$1._floatingActionButtonAnimator], geometryNotifier: this[S$1._geometryNotifier], previousFloatingActionButtonLocation: dart.nullCheck(this[S$1._previousFloatingActionButtonLocation]), textDirection: textDirection, isSnackBarFloating: isSnackBarFloating, snackBarWidth: snackBarWidth}), children: children, $creationLocationd_0dea112b090073317d4: C[813] || CT.C813});
              }, T$.BuildContextAndWidgetNToCustomMultiChildLayout()), $creationLocationd_0dea112b090073317d4: C[814] || CT.C814}), $creationLocationd_0dea112b090073317d4: C[815] || CT.C815}), $creationLocationd_0dea112b090073317d4: C[816] || CT.C816}), $creationLocationd_0dea112b090073317d4: C[817] || CT.C817});
    }
  };
  (scaffold$.ScaffoldState.new = function() {
    this[S$1._drawerKey$1] = T$.GlobalKeyOfDrawerControllerState().new();
    this[S$1._endDrawerKey] = T$.GlobalKeyOfDrawerControllerState().new();
    this[S$1._appBarMaxHeight] = null;
    this[S$1._drawerOpened] = new restoration_properties.RestorableBool.new(false);
    this[S$1._endDrawerOpened] = new restoration_properties.RestorableBool.new(false);
    this[S$1._scaffoldMessenger] = null;
    this[S$1._accessibleNavigation] = null;
    this[S$1._snackBars] = new (T$.ListQueueOfScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason()).new();
    this[S$1._snackBarController] = null;
    this[S$1._snackBarTimer] = null;
    this[S$1._messengerSnackBar] = null;
    this[S$1._messengerMaterialBanner] = null;
    this[S$1._dismissedBottomSheets] = T$.JSArrayOf_StandardBottomSheet().of([]);
    this[S$1._currentBottomSheet] = null;
    this[S$1._currentBottomSheetKey] = T$.GlobalKeyOfStateOfStatefulWidget().new();
    this[S$1.__ScaffoldState__floatingActionButtonMoveController] = null;
    this[S$1.__ScaffoldState__floatingActionButtonMoveController_isSet] = false;
    this[S$1.__ScaffoldState__floatingActionButtonAnimator] = null;
    this[S$1.__ScaffoldState__floatingActionButtonAnimator_isSet] = false;
    this[S$1._previousFloatingActionButtonLocation] = null;
    this[S$1._floatingActionButtonLocation] = null;
    this[S$1.__ScaffoldState__floatingActionButtonVisibilityController] = null;
    this[S$1.__ScaffoldState__floatingActionButtonVisibilityController_isSet] = false;
    this[S$1.__ScaffoldState__geometryNotifier] = null;
    this[S$1.__ScaffoldState__geometryNotifier_isSet] = false;
    this[S$1._showBodyScrim] = false;
    this[S$1._bodyScrimColor] = colors$.Colors.black;
    scaffold$.ScaffoldState.__proto__.new.call(this);
    ;
  }).prototype = scaffold$.ScaffoldState.prototype;
  dart.addTypeTests(scaffold$.ScaffoldState);
  dart.addTypeCaches(scaffold$.ScaffoldState);
  dart.setMethodSignature(scaffold$.ScaffoldState, () => ({
    __proto__: dart.getMethods(scaffold$.ScaffoldState.__proto__),
    restoreState: dart.fnType(dart.void, [dart.nullable(restoration$.RestorationBucket), core.bool]),
    [S$1._drawerOpenedCallback]: dart.fnType(dart.void, [core.bool]),
    [S$1._endDrawerOpenedCallback]: dart.fnType(dart.void, [core.bool]),
    openDrawer: dart.fnType(dart.void, []),
    openEndDrawer: dart.fnType(dart.void, []),
    showSnackBar: dart.fnType(scaffold$.ScaffoldFeatureController$(snack_bar.SnackBar, snack_bar.SnackBarClosedReason), [snack_bar.SnackBar]),
    [S$1._handleSnackBarStatusChange]: dart.fnType(dart.void, [animation.AnimationStatus]),
    removeCurrentSnackBar: dart.fnType(dart.void, [], {reason: snack_bar.SnackBarClosedReason}, {}),
    hideCurrentSnackBar: dart.fnType(dart.void, [], {reason: snack_bar.SnackBarClosedReason}, {}),
    [S$1._updateSnackBar]: dart.fnType(dart.void, []),
    [S$1._updateMaterialBanner]: dart.fnType(dart.void, []),
    [S$1._maybeBuildPersistentBottomSheet]: dart.fnType(dart.void, []),
    [S$1._closeCurrentBottomSheet]: dart.fnType(dart.void, []),
    [S$1._updatePersistentBottomSheet]: dart.fnType(dart.void, []),
    [S$1._buildBottomSheet]: dart.gFnType(T => [scaffold$.PersistentBottomSheetController$(T), [dart.fnType(framework.Widget, [framework.BuildContext]), core.bool], {backgroundColor: dart.nullable(ui.Color), clipBehavior: dart.nullable(ui.Clip), constraints: dart.nullable(box$.BoxConstraints), elevation: dart.nullable(core.double), shape: dart.nullable(borders.ShapeBorder)}, {animationController: animation_controller.AnimationController}], T => [dart.nullable(core.Object)]),
    showBottomSheet: dart.gFnType(T => [scaffold$.PersistentBottomSheetController$(T), [dart.fnType(framework.Widget, [framework.BuildContext])], {backgroundColor: dart.nullable(ui.Color), clipBehavior: dart.nullable(ui.Clip), constraints: dart.nullable(box$.BoxConstraints), elevation: dart.nullable(core.double), shape: dart.nullable(borders.ShapeBorder), transitionAnimationController: dart.nullable(animation_controller.AnimationController)}, {}], T => [dart.nullable(core.Object)]),
    [S$1._showFloatingActionButton]: dart.fnType(ticker.TickerFuture, []),
    [S$1._moveFloatingActionButton]: dart.fnType(dart.void, [floating_action_button_location.FloatingActionButtonLocation]),
    [S$1._handleStatusBarTap]: dart.fnType(dart.void, []),
    [S$1._addIfNonNull]: dart.fnType(dart.void, [core.List$(basic.LayoutId), dart.nullable(framework.Widget), core.Object], {maintainBottomViewPadding: core.bool, removeBottomInset: core.bool}, {removeBottomPadding: core.bool, removeLeftPadding: core.bool, removeRightPadding: core.bool, removeTopPadding: core.bool}),
    [S$1._buildEndDrawer]: dart.fnType(dart.void, [core.List$(basic.LayoutId), ui.TextDirection]),
    [S$1._buildDrawer$1]: dart.fnType(dart.void, [core.List$(basic.LayoutId), ui.TextDirection]),
    showBodyScrim: dart.fnType(dart.void, [core.bool, core.double]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(scaffold$.ScaffoldState, () => ({
    __proto__: dart.getGetters(scaffold$.ScaffoldState.__proto__),
    restorationId: dart.nullable(core.String),
    hasAppBar: core.bool,
    hasDrawer: core.bool,
    hasEndDrawer: core.bool,
    hasFloatingActionButton: core.bool,
    appBarMaxHeight: dart.nullable(core.double),
    isDrawerOpen: core.bool,
    isEndDrawerOpen: core.bool,
    [S$1._floatingActionButtonMoveController]: animation_controller.AnimationController,
    [S$1._floatingActionButtonAnimator]: floating_action_button_location.FloatingActionButtonAnimator,
    [S$1._floatingActionButtonVisibilityController]: animation_controller.AnimationController,
    [S$1._floatingActionButtonVisibilityValue]: core.double,
    [S$1._geometryNotifier]: scaffold$._ScaffoldGeometryNotifier,
    [S$1._resizeToAvoidBottomInset]: core.bool
  }));
  dart.setSetterSignature(scaffold$.ScaffoldState, () => ({
    __proto__: dart.getSetters(scaffold$.ScaffoldState.__proto__),
    [S$1._floatingActionButtonMoveController]: animation_controller.AnimationController,
    [S$1._floatingActionButtonAnimator]: floating_action_button_location.FloatingActionButtonAnimator,
    [S$1._floatingActionButtonVisibilityController]: animation_controller.AnimationController,
    [S$1._floatingActionButtonVisibilityValue]: core.double,
    [S$1._geometryNotifier]: scaffold$._ScaffoldGeometryNotifier
  }));
  dart.setLibraryUri(scaffold$.ScaffoldState, I[125]);
  dart.setFieldSignature(scaffold$.ScaffoldState, () => ({
    __proto__: dart.getFields(scaffold$.ScaffoldState.__proto__),
    [S$1._drawerKey$1]: dart.finalFieldType(framework.GlobalKey$(drawer.DrawerControllerState)),
    [S$1._endDrawerKey]: dart.finalFieldType(framework.GlobalKey$(drawer.DrawerControllerState)),
    [S$1._appBarMaxHeight]: dart.fieldType(dart.nullable(core.double)),
    [S$1._drawerOpened]: dart.finalFieldType(restoration_properties.RestorableBool),
    [S$1._endDrawerOpened]: dart.finalFieldType(restoration_properties.RestorableBool),
    [S$1._scaffoldMessenger]: dart.fieldType(dart.nullable(scaffold$.ScaffoldMessengerState)),
    [S$1._accessibleNavigation]: dart.fieldType(dart.nullable(core.bool)),
    [S$1._snackBars]: dart.finalFieldType(collection.Queue$(scaffold$.ScaffoldFeatureController$(snack_bar.SnackBar, snack_bar.SnackBarClosedReason))),
    [S$1._snackBarController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$1._snackBarTimer]: dart.fieldType(dart.nullable(async.Timer)),
    [S$1._messengerSnackBar]: dart.fieldType(dart.nullable(scaffold$.ScaffoldFeatureController$(snack_bar.SnackBar, snack_bar.SnackBarClosedReason))),
    [S$1._messengerMaterialBanner]: dart.fieldType(dart.nullable(scaffold$.ScaffoldFeatureController$(banner.MaterialBanner, banner.MaterialBannerClosedReason))),
    [S$1._dismissedBottomSheets]: dart.finalFieldType(core.List$(scaffold$._StandardBottomSheet)),
    [S$1._currentBottomSheet]: dart.fieldType(dart.nullable(scaffold$.PersistentBottomSheetController)),
    [S$1._currentBottomSheetKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [S$1.__ScaffoldState__floatingActionButtonMoveController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$1.__ScaffoldState__floatingActionButtonMoveController_isSet]: dart.fieldType(core.bool),
    [S$1.__ScaffoldState__floatingActionButtonAnimator]: dart.fieldType(dart.nullable(floating_action_button_location.FloatingActionButtonAnimator)),
    [S$1.__ScaffoldState__floatingActionButtonAnimator_isSet]: dart.fieldType(core.bool),
    [S$1._previousFloatingActionButtonLocation]: dart.fieldType(dart.nullable(floating_action_button_location.FloatingActionButtonLocation)),
    [S$1._floatingActionButtonLocation]: dart.fieldType(dart.nullable(floating_action_button_location.FloatingActionButtonLocation)),
    [S$1.__ScaffoldState__floatingActionButtonVisibilityController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$1.__ScaffoldState__floatingActionButtonVisibilityController_isSet]: dart.fieldType(core.bool),
    [S$1.__ScaffoldState__geometryNotifier]: dart.fieldType(dart.nullable(scaffold$._ScaffoldGeometryNotifier)),
    [S$1.__ScaffoldState__geometryNotifier_isSet]: dart.fieldType(core.bool),
    [S$1._showBodyScrim]: dart.fieldType(core.bool),
    [S$1._bodyScrimColor]: dart.fieldType(ui.Color)
  }));
  const _is_ScaffoldFeatureController_default = Symbol('_is_ScaffoldFeatureController_default');
  scaffold$.ScaffoldFeatureController$ = dart.generic((T, U) => {
    class ScaffoldFeatureController extends core.Object {
      get [S$1._widget]() {
        return this[S$1._widget$1];
      }
      set [S$1._widget](value) {
        super[S$1._widget] = value;
      }
      get [S$1._completer]() {
        return this[S$1._completer$1];
      }
      set [S$1._completer](value) {
        super[S$1._completer] = value;
      }
      get close() {
        return this[S$1.close];
      }
      set close(value) {
        super.close = value;
      }
      get setState() {
        return this[S$1.setState];
      }
      set setState(value) {
        super.setState = value;
      }
      get closed() {
        return this[S$1._completer].future;
      }
    }
    (ScaffoldFeatureController.__ = function(_widget, _completer, close, setState) {
      if (_widget == null) dart.nullFailed(I[124], 3500, 42, "_widget");
      if (_completer == null) dart.nullFailed(I[124], 3500, 56, "_completer");
      if (close == null) dart.nullFailed(I[124], 3500, 73, "close");
      this[S$1._widget$1] = _widget;
      this[S$1._completer$1] = _completer;
      this[S$1.close] = close;
      this[S$1.setState] = setState;
      ;
    }).prototype = ScaffoldFeatureController.prototype;
    dart.addTypeTests(ScaffoldFeatureController);
    ScaffoldFeatureController.prototype[_is_ScaffoldFeatureController_default] = true;
    dart.addTypeCaches(ScaffoldFeatureController);
    dart.setGetterSignature(ScaffoldFeatureController, () => ({
      __proto__: dart.getGetters(ScaffoldFeatureController.__proto__),
      closed: async.Future$(U)
    }));
    dart.setLibraryUri(ScaffoldFeatureController, I[125]);
    dart.setFieldSignature(ScaffoldFeatureController, () => ({
      __proto__: dart.getFields(ScaffoldFeatureController.__proto__),
      [S$1._widget]: dart.finalFieldType(T),
      [S$1._completer]: dart.finalFieldType(async.Completer$(U)),
      close: dart.finalFieldType(dart.fnType(dart.void, [])),
      setState: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [dart.fnType(dart.void, [])])))
    }));
    return ScaffoldFeatureController;
  });
  scaffold$.ScaffoldFeatureController = scaffold$.ScaffoldFeatureController$();
  dart.addTypeTests(scaffold$.ScaffoldFeatureController, _is_ScaffoldFeatureController_default);
  scaffold$._BottomSheetSuspendedCurve = class _BottomSheetSuspendedCurve extends curves.ParametricCurve$(core.double) {
    get startingPoint() {
      return this[S$1.startingPoint$1];
    }
    set startingPoint(value) {
      super.startingPoint = value;
    }
    get curve() {
      return this[S$1.curve$1];
    }
    set curve(value) {
      super.curve = value;
    }
    transform(t) {
      if (t == null) dart.nullFailed(I[124], 3549, 27, "t");
      if (!(dart.notNull(t) >= 0.0 && dart.notNull(t) <= 1.0)) dart.assertFailed(null, I[124], 3550, 12, "t >= 0.0 && t <= 1.0");
      if (!(dart.notNull(this.startingPoint) >= 0.0 && dart.notNull(this.startingPoint) <= 1.0)) dart.assertFailed(null, I[124], 3551, 12, "startingPoint >= 0.0 && startingPoint <= 1.0");
      if (dart.notNull(t) < dart.notNull(this.startingPoint)) {
        return t;
      }
      if (t === 1.0) {
        return t;
      }
      let curveProgress = (dart.notNull(t) - dart.notNull(this.startingPoint)) / (1 - dart.notNull(this.startingPoint));
      let transformed = this.curve.transform(curveProgress);
      return dart.nullCheck(ui.lerpDouble(this.startingPoint, 1, transformed));
    }
    toString() {
      return dart.str(diagnostics.describeIdentity(this)) + "(" + dart.str(this.startingPoint) + ", " + dart.str(this.curve) + ")";
    }
  };
  (scaffold$._BottomSheetSuspendedCurve.new = function(startingPoint, opts) {
    if (startingPoint == null) dart.nullFailed(I[124], 3535, 12, "startingPoint");
    let curve = opts && 'curve' in opts ? opts.curve : C[730] || CT.C730;
    if (curve == null) dart.nullFailed(I[124], 3536, 14, "curve");
    this[S$1.startingPoint$1] = startingPoint;
    this[S$1.curve$1] = curve;
    if (!(startingPoint != null)) dart.assertFailed(null, I[124], 3537, 19, "startingPoint != null");
    if (!(curve != null)) dart.assertFailed(null, I[124], 3538, 16, "curve != null");
    scaffold$._BottomSheetSuspendedCurve.__proto__.new.call(this);
    ;
  }).prototype = scaffold$._BottomSheetSuspendedCurve.prototype;
  dart.addTypeTests(scaffold$._BottomSheetSuspendedCurve);
  dart.addTypeCaches(scaffold$._BottomSheetSuspendedCurve);
  dart.setLibraryUri(scaffold$._BottomSheetSuspendedCurve, I[125]);
  dart.setFieldSignature(scaffold$._BottomSheetSuspendedCurve, () => ({
    __proto__: dart.getFields(scaffold$._BottomSheetSuspendedCurve.__proto__),
    startingPoint: dart.finalFieldType(core.double),
    curve: dart.finalFieldType(curves.Curve)
  }));
  dart.defineExtensionMethods(scaffold$._BottomSheetSuspendedCurve, ['toString']);
  scaffold$._StandardBottomSheet = class _StandardBottomSheet extends framework.StatefulWidget {
    get animationController() {
      return this[S$1.animationController$1];
    }
    set animationController(value) {
      super.animationController = value;
    }
    get enableDrag() {
      return this[S$1.enableDrag$2];
    }
    set enableDrag(value) {
      super.enableDrag = value;
    }
    get onClosing() {
      return this[S$1.onClosing$1];
    }
    set onClosing(value) {
      super.onClosing = value;
    }
    get onDismissed() {
      return this[S$1.onDismissed];
    }
    set onDismissed(value) {
      super.onDismissed = value;
    }
    get builder() {
      return this[S$1.builder$1];
    }
    set builder(value) {
      super.builder = value;
    }
    get isPersistent() {
      return this[S$1.isPersistent];
    }
    set isPersistent(value) {
      super.isPersistent = value;
    }
    get backgroundColor() {
      return this[S$1.backgroundColor$18];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get elevation() {
      return this[S$1.elevation$20];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get shape() {
      return this[S$1.shape$19];
    }
    set shape(value) {
      super.shape = value;
    }
    get clipBehavior() {
      return this[S$1.clipBehavior$8];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get constraints() {
      return this[S$1.constraints$7];
    }
    set constraints(value) {
      super.constraints = value;
    }
    createState() {
      return new scaffold$._StandardBottomSheetState.new();
    }
  };
  (scaffold$._StandardBottomSheet.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let animationController = opts && 'animationController' in opts ? opts.animationController : null;
    if (animationController == null) dart.nullFailed(I[124], 3575, 19, "animationController");
    let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
    if (enableDrag == null) dart.nullFailed(I[124], 3576, 10, "enableDrag");
    let onClosing = opts && 'onClosing' in opts ? opts.onClosing : null;
    let onDismissed = opts && 'onDismissed' in opts ? opts.onDismissed : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    if (builder == null) dart.nullFailed(I[124], 3579, 19, "builder");
    let isPersistent = opts && 'isPersistent' in opts ? opts.isPersistent : false;
    if (isPersistent == null) dart.nullFailed(I[124], 3580, 10, "isPersistent");
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
    let constraints = opts && 'constraints' in opts ? opts.constraints : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.animationController$1] = animationController;
    this[S$1.enableDrag$2] = enableDrag;
    this[S$1.onClosing$1] = onClosing;
    this[S$1.onDismissed] = onDismissed;
    this[S$1.builder$1] = builder;
    this[S$1.isPersistent] = isPersistent;
    this[S$1.backgroundColor$18] = backgroundColor;
    this[S$1.elevation$20] = elevation;
    this[S$1.shape$19] = shape;
    this[S$1.clipBehavior$8] = clipBehavior;
    this[S$1.constraints$7] = constraints;
    scaffold$._StandardBottomSheet.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scaffold$._StandardBottomSheet.prototype;
  dart.addTypeTests(scaffold$._StandardBottomSheet);
  dart.addTypeCaches(scaffold$._StandardBottomSheet);
  dart.setMethodSignature(scaffold$._StandardBottomSheet, () => ({
    __proto__: dart.getMethods(scaffold$._StandardBottomSheet.__proto__),
    createState: dart.fnType(scaffold$._StandardBottomSheetState, [])
  }));
  dart.setLibraryUri(scaffold$._StandardBottomSheet, I[125]);
  dart.setFieldSignature(scaffold$._StandardBottomSheet, () => ({
    __proto__: dart.getFields(scaffold$._StandardBottomSheet.__proto__),
    animationController: dart.finalFieldType(animation_controller.AnimationController),
    enableDrag: dart.finalFieldType(core.bool),
    onClosing: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onDismissed: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext])),
    isPersistent: dart.finalFieldType(core.bool),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    clipBehavior: dart.finalFieldType(dart.nullable(ui.Clip)),
    constraints: dart.finalFieldType(dart.nullable(box$.BoxConstraints))
  }));
  scaffold$._StandardBottomSheetState = class _StandardBottomSheetState extends framework.State$(scaffold$._StandardBottomSheet) {
    initState() {
      super.initState();
      if (!(this.widget.animationController != null)) dart.assertFailed(null, I[124], 3610, 12, "widget.animationController != null");
      if (!(this.widget.animationController.status == animation.AnimationStatus.forward || this.widget.animationController.status == animation.AnimationStatus.completed)) dart.assertFailed(null, I[124], 3612, 7, "widget.animationController.status == AnimationStatus.forward\r\n        || widget.animationController.status == AnimationStatus.completed");
      this.widget.animationController.addStatusListener(dart.bind(this, S$1._handleStatusChange));
    }
    didUpdateWidget(oldWidget) {
      scaffold$._StandardBottomSheet.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[124], 3619, 45, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.animationController, oldWidget.animationController)) dart.assertFailed(null, I[124], 3621, 12, "widget.animationController == oldWidget.animationController");
    }
    close() {
      let t97;
      if (!(this.widget.animationController != null)) dart.assertFailed(null, I[124], 3625, 12, "widget.animationController != null");
      this.widget.animationController.reverse();
      t97 = this.widget.onClosing;
      t97 == null ? null : t97();
    }
    [S$1._handleDragStart$1](details) {
      if (details == null) dart.nullFailed(I[124], 3630, 42, "details");
      this.animationCurve = curves.Curves.linear;
    }
    [S$1._handleDragEnd$1](details, opts) {
      if (details == null) dart.nullFailed(I[124], 3635, 38, "details");
      let isClosing = opts && 'isClosing' in opts ? opts.isClosing : null;
      this.animationCurve = new scaffold$._BottomSheetSuspendedCurve.new(this.widget.animationController.value, {curve: scaffold$._standardBottomSheetCurve});
    }
    [S$1._handleStatusChange](status) {
      let t97;
      if (status == null) dart.nullFailed(I[124], 3643, 44, "status");
      if (status == animation.AnimationStatus.dismissed) {
        t97 = this.widget.onDismissed;
        t97 == null ? null : t97();
      }
    }
    extentChanged(notification) {
      if (notification == null) dart.nullFailed(I[124], 3649, 54, "notification");
      let extentRemaining = 1.0 - dart.notNull(notification.extent);
      let scaffold = scaffold$.Scaffold.of(this.context);
      if (extentRemaining < 0.3) {
        scaffold[S$1._floatingActionButtonVisibilityValue] = extentRemaining * 0.3 * 10;
        scaffold.showBodyScrim(true, math.max(core.double, 0.1, 0.6 - dart.notNull(scaffold[S$1._floatingActionButtonVisibilityValue])));
      } else {
        scaffold[S$1._floatingActionButtonVisibilityValue] = 1.0;
        scaffold.showBodyScrim(false, 0.0);
      }
      if (notification.extent == notification.minExtent && scaffold.widget.bottomSheet == null) {
        this.close();
      }
      return false;
    }
    [S$1._wrapBottomSheet](bottomSheet) {
      if (bottomSheet == null) dart.nullFailed(I[124], 3669, 34, "bottomSheet");
      return new basic.Semantics.new({container: true, onDismiss: dart.bind(this, 'close'), child: new (T$.NotificationListenerOfDraggableScrollableNotification()).new({onNotification: dart.bind(this, 'extentChanged'), child: bottomSheet, $creationLocationd_0dea112b090073317d4: C[818] || CT.C818}), $creationLocationd_0dea112b090073317d4: C[819] || CT.C819});
    }
    build(context) {
      if (context == null) dart.nullFailed(I[124], 3681, 29, "context");
      return new transitions.AnimatedBuilder.new({animation: this.widget.animationController, builder: dart.fn((context, child) => {
          if (context == null) dart.nullFailed(I[124], 3684, 30, "context");
          return new basic.Align.new({alignment: alignment.AlignmentDirectional.topStart, heightFactor: this.animationCurve.transform(this.widget.animationController.value), child: child, $creationLocationd_0dea112b090073317d4: C[820] || CT.C820});
        }, T$.BuildContextAndWidgetNToAlign()), child: this[S$1._wrapBottomSheet](new bottom_sheet.BottomSheet.new({animationController: this.widget.animationController, enableDrag: this.widget.enableDrag, onDragStart: dart.bind(this, S$1._handleDragStart$1), onDragEnd: dart.bind(this, S$1._handleDragEnd$1), onClosing: dart.nullCheck(this.widget.onClosing), builder: this.widget.builder, backgroundColor: this.widget.backgroundColor, elevation: this.widget.elevation, shape: this.widget.shape, clipBehavior: this.widget.clipBehavior, constraints: this.widget.constraints, $creationLocationd_0dea112b090073317d4: C[821] || CT.C821})), $creationLocationd_0dea112b090073317d4: C[822] || CT.C822});
    }
  };
  (scaffold$._StandardBottomSheetState.new = function() {
    this.animationCurve = scaffold$._standardBottomSheetCurve;
    scaffold$._StandardBottomSheetState.__proto__.new.call(this);
    ;
  }).prototype = scaffold$._StandardBottomSheetState.prototype;
  dart.addTypeTests(scaffold$._StandardBottomSheetState);
  dart.addTypeCaches(scaffold$._StandardBottomSheetState);
  dart.setMethodSignature(scaffold$._StandardBottomSheetState, () => ({
    __proto__: dart.getMethods(scaffold$._StandardBottomSheetState.__proto__),
    close: dart.fnType(dart.void, []),
    [S$1._handleDragStart$1]: dart.fnType(dart.void, [drag_details.DragStartDetails]),
    [S$1._handleDragEnd$1]: dart.fnType(dart.void, [drag_details.DragEndDetails], {isClosing: dart.nullable(core.bool)}, {}),
    [S$1._handleStatusChange]: dart.fnType(dart.void, [animation.AnimationStatus]),
    extentChanged: dart.fnType(core.bool, [draggable_scrollable_sheet.DraggableScrollableNotification]),
    [S$1._wrapBottomSheet]: dart.fnType(framework.Widget, [framework.Widget]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(scaffold$._StandardBottomSheetState, I[125]);
  dart.setFieldSignature(scaffold$._StandardBottomSheetState, () => ({
    __proto__: dart.getFields(scaffold$._StandardBottomSheetState.__proto__),
    animationCurve: dart.fieldType(curves.ParametricCurve$(core.double))
  }));
  const _is_PersistentBottomSheetController_default = Symbol('_is_PersistentBottomSheetController_default');
  scaffold$.PersistentBottomSheetController$ = dart.generic(T => {
    class PersistentBottomSheetController extends scaffold$.ScaffoldFeatureController$(scaffold$._StandardBottomSheet, T) {
      get [S$1._isLocalHistoryEntry]() {
        return this[S$1._isLocalHistoryEntry$1];
      }
      set [S$1._isLocalHistoryEntry](value) {
        super[S$1._isLocalHistoryEntry] = value;
      }
    }
    (PersistentBottomSheetController.__ = function(widget, completer, close, setState, _isLocalHistoryEntry) {
      if (widget == null) dart.nullFailed(I[124], 3720, 26, "widget");
      if (completer == null) dart.nullFailed(I[124], 3721, 18, "completer");
      if (close == null) dart.nullFailed(I[124], 3722, 18, "close");
      if (setState == null) dart.nullFailed(I[124], 3723, 17, "setState");
      if (_isLocalHistoryEntry == null) dart.nullFailed(I[124], 3724, 10, "_isLocalHistoryEntry");
      this[S$1._isLocalHistoryEntry$1] = _isLocalHistoryEntry;
      PersistentBottomSheetController.__proto__.__.call(this, widget, completer, close, setState);
      ;
    }).prototype = PersistentBottomSheetController.prototype;
    dart.addTypeTests(PersistentBottomSheetController);
    PersistentBottomSheetController.prototype[_is_PersistentBottomSheetController_default] = true;
    dart.addTypeCaches(PersistentBottomSheetController);
    dart.setLibraryUri(PersistentBottomSheetController, I[125]);
    dart.setFieldSignature(PersistentBottomSheetController, () => ({
      __proto__: dart.getFields(PersistentBottomSheetController.__proto__),
      [S$1._isLocalHistoryEntry]: dart.finalFieldType(core.bool)
    }));
    return PersistentBottomSheetController;
  });
  scaffold$.PersistentBottomSheetController = scaffold$.PersistentBottomSheetController$();
  dart.addTypeTests(scaffold$.PersistentBottomSheetController, _is_PersistentBottomSheetController_default);
  scaffold$._ScaffoldScope = class _ScaffoldScope extends framework.InheritedWidget {
    get hasDrawer() {
      return this[S$1.hasDrawer];
    }
    set hasDrawer(value) {
      super.hasDrawer = value;
    }
    get geometryNotifier() {
      return this[S$1.geometryNotifier$1];
    }
    set geometryNotifier(value) {
      super.geometryNotifier = value;
    }
    updateShouldNotify(oldWidget) {
      scaffold$._ScaffoldScope.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[124], 3743, 42, "oldWidget");
      return this.hasDrawer != oldWidget.hasDrawer;
    }
  };
  (scaffold$._ScaffoldScope.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let hasDrawer = opts && 'hasDrawer' in opts ? opts.hasDrawer : null;
    if (hasDrawer == null) dart.nullFailed(I[124], 3733, 19, "hasDrawer");
    let geometryNotifier = opts && 'geometryNotifier' in opts ? opts.geometryNotifier : null;
    if (geometryNotifier == null) dart.nullFailed(I[124], 3734, 19, "geometryNotifier");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[124], 3735, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.hasDrawer] = hasDrawer;
    this[S$1.geometryNotifier$1] = geometryNotifier;
    if (!(hasDrawer != null)) dart.assertFailed(null, I[124], 3736, 15, "hasDrawer != null");
    scaffold$._ScaffoldScope.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scaffold$._ScaffoldScope.prototype;
  dart.addTypeTests(scaffold$._ScaffoldScope);
  dart.addTypeCaches(scaffold$._ScaffoldScope);
  dart.setMethodSignature(scaffold$._ScaffoldScope, () => ({
    __proto__: dart.getMethods(scaffold$._ScaffoldScope.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(scaffold$._ScaffoldScope, I[125]);
  dart.setFieldSignature(scaffold$._ScaffoldScope, () => ({
    __proto__: dart.getFields(scaffold$._ScaffoldScope.__proto__),
    hasDrawer: dart.finalFieldType(core.bool),
    geometryNotifier: dart.finalFieldType(scaffold$._ScaffoldGeometryNotifier)
  }));
  dart.defineLazy(scaffold$, {
    /*scaffold$._kDefaultFloatingActionButtonLocation*/get _kDefaultFloatingActionButtonLocation() {
      return C[129] || CT.C129;
    },
    /*scaffold$._kDefaultFloatingActionButtonAnimator*/get _kDefaultFloatingActionButtonAnimator() {
      return C[139] || CT.C139;
    },
    /*scaffold$._standardBottomSheetCurve*/get _standardBottomSheetCurve() {
      return C[116] || CT.C116;
    },
    /*scaffold$._kBottomSheetDominatesPercentage*/get _kBottomSheetDominatesPercentage() {
      return 0.3;
    },
    /*scaffold$._kMinBottomSheetScrimOpacity*/get _kMinBottomSheetScrimOpacity() {
      return 0.1;
    },
    /*scaffold$._kMaxBottomSheetScrimOpacity*/get _kMaxBottomSheetScrimOpacity() {
      return 0.6;
    }
  }, false);
  elevation_overlay.ElevationOverlay = class ElevationOverlay extends core.Object {
    static applyOverlay(context, color, elevation) {
      if (context == null) dart.nullFailed(I[126], 44, 42, "context");
      if (color == null) dart.nullFailed(I[126], 44, 57, "color");
      if (elevation == null) dart.nullFailed(I[126], 44, 71, "elevation");
      let theme = theme$.Theme.of(context);
      if (dart.notNull(elevation) > 0.0 && dart.test(theme.applyElevationOverlayColor) && theme.brightness == ui.Brightness.dark && dart.equals(color.withOpacity(1.0), theme.colorScheme.surface.withOpacity(1.0))) {
        return elevation_overlay.ElevationOverlay.colorWithOverlay(color, theme.colorScheme.onSurface, elevation);
      }
      return color;
    }
    static overlayColor(context, elevation) {
      if (context == null) dart.nullFailed(I[126], 62, 42, "context");
      if (elevation == null) dart.nullFailed(I[126], 62, 58, "elevation");
      let theme = theme$.Theme.of(context);
      return elevation_overlay.ElevationOverlay._overlayColor(theme.colorScheme.onSurface, elevation);
    }
    static colorWithOverlay(surface, overlay, elevation) {
      if (surface == null) dart.nullFailed(I[126], 74, 39, "surface");
      if (overlay == null) dart.nullFailed(I[126], 74, 54, "overlay");
      if (elevation == null) dart.nullFailed(I[126], 74, 70, "elevation");
      return ui.Color.alphaBlend(elevation_overlay.ElevationOverlay._overlayColor(overlay, elevation), surface);
    }
    static _overlayColor(color, elevation) {
      if (color == null) dart.nullFailed(I[126], 79, 36, "color");
      if (elevation == null) dart.nullFailed(I[126], 79, 50, "elevation");
      let opacity = (4.5 * math.log(dart.notNull(elevation) + 1) + 2) / 100.0;
      return color.withOpacity(opacity);
    }
  };
  (elevation_overlay.ElevationOverlay.__ = function() {
    ;
  }).prototype = elevation_overlay.ElevationOverlay.prototype;
  dart.addTypeTests(elevation_overlay.ElevationOverlay);
  dart.addTypeCaches(elevation_overlay.ElevationOverlay);
  dart.setLibraryUri(elevation_overlay.ElevationOverlay, I[127]);
  material.MaterialType = class MaterialType extends core.Object {
    toString() {
      return this[S$1._name$28];
    }
  };
  (material.MaterialType.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[10], 25, 6, "index");
    if (_name == null) dart.nullFailed(I[10], 25, 6, "_name");
    this.index = index;
    this[S$1._name$28] = _name;
    ;
  }).prototype = material.MaterialType.prototype;
  dart.addTypeTests(material.MaterialType);
  dart.addTypeCaches(material.MaterialType);
  material.MaterialType[dart.implements] = () => [core.Enum];
  dart.setLibraryUri(material.MaterialType, I[11]);
  dart.setFieldSignature(material.MaterialType, () => ({
    __proto__: dart.getFields(material.MaterialType.__proto__),
    index: dart.finalFieldType(core.int),
    [S$1._name$28]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(material.MaterialType, ['toString']);
  material.MaterialType.canvas = C[823] || CT.C823;
  material.MaterialType.card = C[824] || CT.C824;
  material.MaterialType.circle = C[825] || CT.C825;
  material.MaterialType.button = C[826] || CT.C826;
  material.MaterialType.transparency = C[827] || CT.C827;
  material.MaterialType.values = C[828] || CT.C828;
  material.MaterialInkController = class MaterialInkController extends core.Object {};
  (material.MaterialInkController.new = function() {
    ;
  }).prototype = material.MaterialInkController.prototype;
  dart.addTypeTests(material.MaterialInkController);
  dart.addTypeCaches(material.MaterialInkController);
  dart.setLibraryUri(material.MaterialInkController, I[11]);
  material.Material = class Material extends framework.StatefulWidget {
    get child() {
      return this[S$1.child$23];
    }
    set child(value) {
      super.child = value;
    }
    get type() {
      return this[S$1.type$3];
    }
    set type(value) {
      super.type = value;
    }
    get elevation() {
      return this[S$1.elevation$21];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get color() {
      return this[S$1.color$14];
    }
    set color(value) {
      super.color = value;
    }
    get shadowColor() {
      return this[S$1.shadowColor$4];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get textStyle() {
      return this[S$1.textStyle$7];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get shape() {
      return this[S$1.shape$20];
    }
    set shape(value) {
      super.shape = value;
    }
    get borderOnForeground() {
      return this[S$1.borderOnForeground];
    }
    set borderOnForeground(value) {
      super.borderOnForeground = value;
    }
    get clipBehavior() {
      return this[S$1.clipBehavior$9];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get animationDuration() {
      return this[S$1.animationDuration$3];
    }
    set animationDuration(value) {
      super.animationDuration = value;
    }
    get borderRadius() {
      return this[S$1.borderRadius$3];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    static of(context) {
      if (context == null) dart.nullFailed(I[10], 315, 49, "context");
      return context.findAncestorRenderObjectOfType(material._RenderInkFeatures);
    }
    createState() {
      return new material._MaterialState.new();
    }
    debugFillProperties(properties) {
      let t97;
      if (properties == null) dart.nullFailed(I[10], 323, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.EnumPropertyOfMaterialType()).new("type", this.type));
      properties.add(new diagnostics.DoubleProperty.new("elevation", this.elevation, {defaultValue: 0.0}));
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("shadowColor", this.shadowColor, {defaultValue: null}));
      t97 = this.textStyle;
      t97 == null ? null : t97.debugFillProperties(properties, {prefix: "textStyle."});
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("borderOnForeground", this.borderOnForeground, {defaultValue: true}));
      properties.add(new (T$.DiagnosticsPropertyOfBorderRadiusGeometry()).new("borderRadius", this.borderRadius, {defaultValue: null}));
    }
  };
  (material.Material.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let type = opts && 'type' in opts ? opts.type : C[823] || CT.C823;
    if (type == null) dart.nullFailed(I[10], 179, 10, "type");
    let elevation = opts && 'elevation' in opts ? opts.elevation : 0;
    if (elevation == null) dart.nullFailed(I[10], 180, 10, "elevation");
    let color = opts && 'color' in opts ? opts.color : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let borderOnForeground = opts && 'borderOnForeground' in opts ? opts.borderOnForeground : true;
    if (borderOnForeground == null) dart.nullFailed(I[10], 186, 10, "borderOnForeground");
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[59] || CT.C59;
    if (clipBehavior == null) dart.nullFailed(I[10], 187, 10, "clipBehavior");
    let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : C[143] || CT.C143;
    if (animationDuration == null) dart.nullFailed(I[10], 188, 10, "animationDuration");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.type$3] = type;
    this[S$1.elevation$21] = elevation;
    this[S$1.color$14] = color;
    this[S$1.shadowColor$4] = shadowColor;
    this[S$1.textStyle$7] = textStyle;
    this[S$1.borderRadius$3] = borderRadius;
    this[S$1.shape$20] = shape;
    this[S$1.borderOnForeground] = borderOnForeground;
    this[S$1.clipBehavior$9] = clipBehavior;
    this[S$1.animationDuration$3] = animationDuration;
    this[S$1.child$23] = child;
    if (!(type != null)) dart.assertFailed(null, I[10], 190, 15, "type != null");
    if (!(elevation != null && dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[10], 191, 15, "elevation != null && elevation >= 0.0");
    if (!!(shape != null && borderRadius != null)) dart.assertFailed(null, I[10], 192, 15, "!(shape != null && borderRadius != null)");
    if (!(animationDuration != null)) dart.assertFailed(null, I[10], 193, 15, "animationDuration != null");
    if (!!(type == material.MaterialType.circle && (borderRadius != null || shape != null))) dart.assertFailed(null, I[10], 194, 15, "!(identical(type, MaterialType.circle) && (borderRadius != null || shape != null))");
    if (!(borderOnForeground != null)) dart.assertFailed(null, I[10], 195, 15, "borderOnForeground != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, I[10], 196, 15, "clipBehavior != null");
    material.Material.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = material.Material.prototype;
  dart.addTypeTests(material.Material);
  dart.addTypeCaches(material.Material);
  dart.setMethodSignature(material.Material, () => ({
    __proto__: dart.getMethods(material.Material.__proto__),
    createState: dart.fnType(framework.State$(material.Material), [])
  }));
  dart.setLibraryUri(material.Material, I[11]);
  dart.setFieldSignature(material.Material, () => ({
    __proto__: dart.getFields(material.Material.__proto__),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    type: dart.finalFieldType(material.MaterialType),
    elevation: dart.finalFieldType(core.double),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    shadowColor: dart.finalFieldType(dart.nullable(ui.Color)),
    textStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    borderOnForeground: dart.finalFieldType(core.bool),
    clipBehavior: dart.finalFieldType(ui.Clip),
    animationDuration: dart.finalFieldType(core.Duration),
    borderRadius: dart.finalFieldType(dart.nullable(border_radius.BorderRadiusGeometry))
  }));
  dart.defineLazy(material.Material, {
    /*material.Material.defaultSplashRadius*/get defaultSplashRadius() {
      return 35;
    }
  }, false);
  const State_TickerProviderStateMixin$36$6 = class State_TickerProviderStateMixin extends framework.State$(material.Material) {};
  (State_TickerProviderStateMixin$36$6.new = function() {
    ticker_provider.TickerProviderStateMixin$(material.Material)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$6.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$6.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$6, ticker_provider.TickerProviderStateMixin$(material.Material));
  material._MaterialState = class _MaterialState extends State_TickerProviderStateMixin$36$6 {
    [S$1._getBackgroundColor](context) {
      if (context == null) dart.nullFailed(I[10], 342, 43, "context");
      let theme = theme$.Theme.of(context);
      let color = this.widget.color;
      if (color == null) {
        switch (this.widget.type) {
          case C[823] || CT.C823:
          {
            color = theme.canvasColor;
            break;
          }
          case C[824] || CT.C824:
          {
            color = theme.cardColor;
            break;
          }
          default:
          {
            break;
          }
        }
      }
      return color;
    }
    build(context) {
      let t97, t97$, t97$0;
      if (context == null) dart.nullFailed(I[10], 361, 29, "context");
      let backgroundColor = this[S$1._getBackgroundColor](context);
      if (!(backgroundColor != null || this.widget.type == material.MaterialType.transparency)) dart.assertFailed("If Material type is not MaterialType.transparency, a color must " + "either be passed in through the `color` property, or be defined " + "in the theme (ex. canvasColor != null if type is set to " + "MaterialType.canvas)", I[10], 364, 7, "backgroundColor != null || widget.type == MaterialType.transparency");
      let contents = this.widget.child;
      if (contents != null) {
        contents = new implicit_animations.AnimatedDefaultTextStyle.new({style: (t97 = this.widget.textStyle, t97 == null ? dart.nullCheck(theme$.Theme.of(context).textTheme.bodyText2) : t97), duration: this.widget.animationDuration, child: contents, $creationLocationd_0dea112b090073317d4: C[829] || CT.C829});
      }
      contents = new (T$.NotificationListenerOfLayoutChangedNotification()).new({onNotification: dart.fn(notification => {
          if (notification == null) dart.nullFailed(I[10], 379, 50, "notification");
          let renderer = material._RenderInkFeatures.as(dart.nullCheck(dart.nullCheck(this[S$1._inkFeatureRenderer].currentContext).findRenderObject()));
          renderer[S$1._didChangeLayout]();
          return false;
        }, T$.LayoutChangedNotificationTobool()), child: new material._InkFeatures.new({key: this[S$1._inkFeatureRenderer], absorbHitTest: this.widget.type != material.MaterialType.transparency, color: backgroundColor, vsync: this, child: contents, $creationLocationd_0dea112b090073317d4: C[830] || CT.C830}), $creationLocationd_0dea112b090073317d4: C[831] || CT.C831});
      if (this.widget.type == material.MaterialType.canvas && this.widget.shape == null && this.widget.borderRadius == null) {
        return new implicit_animations.AnimatedPhysicalModel.new({curve: curves.Curves.fastOutSlowIn, duration: this.widget.animationDuration, shape: box_border.BoxShape.rectangle, clipBehavior: this.widget.clipBehavior, borderRadius: border_radius.BorderRadius.zero, elevation: this.widget.elevation, color: elevation_overlay.ElevationOverlay.applyOverlay(context, dart.nullCheck(backgroundColor), this.widget.elevation), shadowColor: (t97$ = this.widget.shadowColor, t97$ == null ? theme$.Theme.of(context).shadowColor : t97$), animateColor: false, child: contents, $creationLocationd_0dea112b090073317d4: C[832] || CT.C832});
      }
      let shape = this[S$1._getShape]();
      if (this.widget.type == material.MaterialType.transparency) {
        return material._MaterialState._transparentInterior({context: context, shape: shape, clipBehavior: this.widget.clipBehavior, contents: contents});
      }
      return new material._MaterialInterior.new({curve: curves.Curves.fastOutSlowIn, duration: this.widget.animationDuration, shape: shape, borderOnForeground: this.widget.borderOnForeground, clipBehavior: this.widget.clipBehavior, elevation: this.widget.elevation, color: dart.nullCheck(backgroundColor), shadowColor: (t97$0 = this.widget.shadowColor, t97$0 == null ? theme$.Theme.of(context).shadowColor : t97$0), child: contents, $creationLocationd_0dea112b090073317d4: C[833] || CT.C833});
    }
    static _transparentInterior(opts) {
      let context = opts && 'context' in opts ? opts.context : null;
      if (context == null) dart.nullFailed(I[10], 442, 27, "context");
      let shape = opts && 'shape' in opts ? opts.shape : null;
      if (shape == null) dart.nullFailed(I[10], 443, 26, "shape");
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      if (clipBehavior == null) dart.nullFailed(I[10], 444, 19, "clipBehavior");
      let contents = opts && 'contents' in opts ? opts.contents : null;
      if (contents == null) dart.nullFailed(I[10], 445, 21, "contents");
      let child = new material._ShapeBorderPaint.new({shape: shape, child: contents, $creationLocationd_0dea112b090073317d4: C[834] || CT.C834});
      if (clipBehavior == ui.Clip.none) {
        return child;
      }
      return new basic.ClipPath.new({clipper: new proxy_box.ShapeBorderClipper.new({shape: shape, textDirection: basic.Directionality.maybeOf(context)}), clipBehavior: clipBehavior, child: child, $creationLocationd_0dea112b090073317d4: C[835] || CT.C835});
    }
    [S$1._getShape]() {
      let t97;
      if (this.widget.shape != null) return dart.nullCheck(this.widget.shape);
      if (this.widget.borderRadius != null) return new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: dart.nullCheck(this.widget.borderRadius)});
      switch (this.widget.type) {
        case C[823] || CT.C823:
        case C[827] || CT.C827:
        {
          return C[461] || CT.C461;
        }
        case C[824] || CT.C824:
        case C[826] || CT.C826:
        {
          return new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: (t97 = this.widget.borderRadius, t97 == null ? dart.nullCheck(material.kMaterialEdges[S.$_get](this.widget.type)) : t97)});
        }
        case C[825] || CT.C825:
        {
          return C[165] || CT.C165;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
  };
  (material._MaterialState.new = function() {
    this[S$1._inkFeatureRenderer] = T$.GlobalKeyOfStateOfStatefulWidget().new({debugLabel: "ink renderer"});
    material._MaterialState.__proto__.new.call(this);
    ;
  }).prototype = material._MaterialState.prototype;
  dart.addTypeTests(material._MaterialState);
  dart.addTypeCaches(material._MaterialState);
  dart.setMethodSignature(material._MaterialState, () => ({
    __proto__: dart.getMethods(material._MaterialState.__proto__),
    [S$1._getBackgroundColor]: dart.fnType(dart.nullable(ui.Color), [framework.BuildContext]),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [S$1._getShape]: dart.fnType(borders.ShapeBorder, [])
  }));
  dart.setLibraryUri(material._MaterialState, I[11]);
  dart.setFieldSignature(material._MaterialState, () => ({
    __proto__: dart.getFields(material._MaterialState.__proto__),
    [S$1._inkFeatureRenderer]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget)))
  }));
  material._RenderInkFeatures = class _RenderInkFeatures extends proxy_box.RenderProxyBox {
    addInkFeature(feature) {
      if (feature == null) dart.nullFailed(I[10], 519, 33, "feature");
      if (!!dart.test(feature[S._debugDisposed])) dart.assertFailed(null, I[10], 520, 12, "!feature._debugDisposed");
      if (!dart.equals(feature[S._controller], this)) dart.assertFailed(null, I[10], 521, 12, "feature._controller == this");
      this[S$1._inkFeatures] == null ? this[S$1._inkFeatures] = T$.JSArrayOfInkFeature().of([]) : null;
      if (!!dart.test(dart.nullCheck(this[S$1._inkFeatures])[S.$contains](feature))) dart.assertFailed(null, I[10], 523, 12, "!_inkFeatures!.contains(feature)");
      dart.nullCheck(this[S$1._inkFeatures])[S.$add](feature);
      this.markNeedsPaint();
    }
    [S._removeFeature](feature) {
      if (feature == null) dart.nullFailed(I[10], 528, 34, "feature");
      if (!(this[S$1._inkFeatures] != null)) dart.assertFailed(null, I[10], 529, 12, "_inkFeatures != null");
      dart.nullCheck(this[S$1._inkFeatures])[S$.$remove](feature);
      this.markNeedsPaint();
    }
    [S$1._didChangeLayout]() {
      if (this[S$1._inkFeatures] != null && dart.test(dart.nullCheck(this[S$1._inkFeatures])[S.$isNotEmpty])) this.markNeedsPaint();
    }
    hitTestSelf(position) {
      if (position == null) dart.nullFailed(I[10], 540, 27, "position");
      return this.absorbHitTest;
    }
    paint(context, offset) {
      if (context == null) dart.nullFailed(I[10], 543, 30, "context");
      if (offset == null) dart.nullFailed(I[10], 543, 46, "offset");
      if (this[S$1._inkFeatures] != null && dart.test(dart.nullCheck(this[S$1._inkFeatures])[S.$isNotEmpty])) {
        let canvas = context.canvas;
        canvas.save();
        canvas.translate(offset.dx, offset.dy);
        canvas.clipRect(ui.Offset.zero['&'](this.size));
        for (let inkFeature of dart.nullCheck(this[S$1._inkFeatures]))
          inkFeature[S._paint](canvas);
        canvas.restore();
      }
      super.paint(context, offset);
    }
  };
  (material._RenderInkFeatures.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let vsync = opts && 'vsync' in opts ? opts.vsync : null;
    if (vsync == null) dart.nullFailed(I[10], 496, 19, "vsync");
    let absorbHitTest = opts && 'absorbHitTest' in opts ? opts.absorbHitTest : null;
    if (absorbHitTest == null) dart.nullFailed(I[10], 497, 19, "absorbHitTest");
    let color = opts && 'color' in opts ? opts.color : null;
    this[S$1._inkFeatures] = null;
    this.vsync = vsync;
    this.absorbHitTest = absorbHitTest;
    this.color = color;
    if (!(vsync != null)) dart.assertFailed(null, I[10], 499, 15, "vsync != null");
    material._RenderInkFeatures.__proto__.new.call(this, child);
    ;
  }).prototype = material._RenderInkFeatures.prototype;
  dart.addTypeTests(material._RenderInkFeatures);
  dart.addTypeCaches(material._RenderInkFeatures);
  material._RenderInkFeatures[dart.implements] = () => [material.MaterialInkController];
  dart.setMethodSignature(material._RenderInkFeatures, () => ({
    __proto__: dart.getMethods(material._RenderInkFeatures.__proto__),
    addInkFeature: dart.fnType(dart.void, [material.InkFeature]),
    [S._removeFeature]: dart.fnType(dart.void, [material.InkFeature]),
    [S$1._didChangeLayout]: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(material._RenderInkFeatures, I[11]);
  dart.setFieldSignature(material._RenderInkFeatures, () => ({
    __proto__: dart.getFields(material._RenderInkFeatures.__proto__),
    vsync: dart.finalFieldType(ticker.TickerProvider),
    color: dart.fieldType(dart.nullable(ui.Color)),
    absorbHitTest: dart.fieldType(core.bool),
    [S$1._inkFeatures]: dart.fieldType(dart.nullable(core.List$(material.InkFeature)))
  }));
  material._InkFeatures = class _InkFeatures extends framework.SingleChildRenderObjectWidget {
    get color() {
      return this[S$1.color$15];
    }
    set color(value) {
      super.color = value;
    }
    get vsync() {
      return this[S$1.vsync];
    }
    set vsync(value) {
      super.vsync = value;
    }
    get absorbHitTest() {
      return this[S$1.absorbHitTest];
    }
    set absorbHitTest(value) {
      super.absorbHitTest = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(I[10], 576, 54, "context");
      return new material._RenderInkFeatures.new({color: this.color, absorbHitTest: this.absorbHitTest, vsync: this.vsync});
    }
    updateRenderObject(context, renderObject) {
      let t97;
      if (context == null) dart.nullFailed(I[10], 585, 40, "context");
      material._RenderInkFeatures.as(renderObject);
      if (renderObject == null) dart.nullFailed(I[10], 585, 68, "renderObject");
      t97 = renderObject;
      (() => {
        t97.color = this.color;
        t97.absorbHitTest = this.absorbHitTest;
        return t97;
      })();
      if (!dart.equals(this.vsync, renderObject.vsync)) dart.assertFailed(null, I[10], 588, 12, "vsync == renderObject.vsync");
    }
  };
  (material._InkFeatures.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let vsync = opts && 'vsync' in opts ? opts.vsync : null;
    if (vsync == null) dart.nullFailed(I[10], 561, 19, "vsync");
    let absorbHitTest = opts && 'absorbHitTest' in opts ? opts.absorbHitTest : null;
    if (absorbHitTest == null) dart.nullFailed(I[10], 562, 19, "absorbHitTest");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.color$15] = color;
    this[S$1.vsync] = vsync;
    this[S$1.absorbHitTest] = absorbHitTest;
    material._InkFeatures.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = material._InkFeatures.prototype;
  dart.addTypeTests(material._InkFeatures);
  dart.addTypeCaches(material._InkFeatures);
  dart.setMethodSignature(material._InkFeatures, () => ({
    __proto__: dart.getMethods(material._InkFeatures.__proto__),
    createRenderObject: dart.fnType(material._RenderInkFeatures, [framework.BuildContext])
  }));
  dart.setLibraryUri(material._InkFeatures, I[11]);
  dart.setFieldSignature(material._InkFeatures, () => ({
    __proto__: dart.getFields(material._InkFeatures.__proto__),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    vsync: dart.finalFieldType(ticker.TickerProvider),
    absorbHitTest: dart.finalFieldType(core.bool)
  }));
  material.ShapeBorderTween = class ShapeBorderTween extends tween.Tween$(dart.nullable(borders.ShapeBorder)) {
    lerp(t) {
      if (t == null) dart.nullFailed(I[10], 675, 28, "t");
      return borders.ShapeBorder.lerp(this.begin, this.end, t);
    }
  };
  (material.ShapeBorderTween.new = function(opts) {
    let begin = opts && 'begin' in opts ? opts.begin : null;
    let end = opts && 'end' in opts ? opts.end : null;
    material.ShapeBorderTween.__proto__.new.call(this, {begin: begin, end: end});
    ;
  }).prototype = material.ShapeBorderTween.prototype;
  dart.addTypeTests(material.ShapeBorderTween);
  dart.addTypeCaches(material.ShapeBorderTween);
  dart.setLibraryUri(material.ShapeBorderTween, I[11]);
  material._MaterialInterior = class _MaterialInterior extends implicit_animations.ImplicitlyAnimatedWidget {
    get child() {
      return this[S$1.child$24];
    }
    set child(value) {
      super.child = value;
    }
    get shape() {
      return this[S$1.shape$21];
    }
    set shape(value) {
      super.shape = value;
    }
    get borderOnForeground() {
      return this[S$1.borderOnForeground$1];
    }
    set borderOnForeground(value) {
      super.borderOnForeground = value;
    }
    get clipBehavior() {
      return this[S$1.clipBehavior$10];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get elevation() {
      return this[S$1.elevation$22];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get color() {
      return this[S$1.color$16];
    }
    set color(value) {
      super.color = value;
    }
    get shadowColor() {
      return this[S$1.shadowColor$5];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    createState() {
      return new material._MaterialInteriorState.new();
    }
    debugFillProperties(description) {
      if (description == null) dart.nullFailed(I[10], 746, 56, "description");
      super.debugFillProperties(description);
      description.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape));
      description.add(new diagnostics.DoubleProperty.new("elevation", this.elevation));
      description.add(new colors.ColorProperty.new("color", this.color));
      description.add(new colors.ColorProperty.new("shadowColor", this.shadowColor));
    }
  };
  (material._MaterialInterior.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[10], 691, 19, "child");
    let shape = opts && 'shape' in opts ? opts.shape : null;
    if (shape == null) dart.nullFailed(I[10], 692, 19, "shape");
    let borderOnForeground = opts && 'borderOnForeground' in opts ? opts.borderOnForeground : true;
    if (borderOnForeground == null) dart.nullFailed(I[10], 693, 10, "borderOnForeground");
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[59] || CT.C59;
    if (clipBehavior == null) dart.nullFailed(I[10], 694, 10, "clipBehavior");
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    if (elevation == null) dart.nullFailed(I[10], 695, 19, "elevation");
    let color = opts && 'color' in opts ? opts.color : null;
    if (color == null) dart.nullFailed(I[10], 696, 19, "color");
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    if (shadowColor == null) dart.nullFailed(I[10], 697, 19, "shadowColor");
    let curve = opts && 'curve' in opts ? opts.curve : C[43] || CT.C43;
    if (curve == null) dart.nullFailed(I[10], 698, 11, "curve");
    let duration = opts && 'duration' in opts ? opts.duration : null;
    if (duration == null) dart.nullFailed(I[10], 699, 23, "duration");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.child$24] = child;
    this[S$1.shape$21] = shape;
    this[S$1.borderOnForeground$1] = borderOnForeground;
    this[S$1.clipBehavior$10] = clipBehavior;
    this[S$1.elevation$22] = elevation;
    this[S$1.color$16] = color;
    this[S$1.shadowColor$5] = shadowColor;
    if (!(child != null)) dart.assertFailed(null, I[10], 700, 15, "child != null");
    if (!(shape != null)) dart.assertFailed(null, I[10], 701, 15, "shape != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, I[10], 702, 15, "clipBehavior != null");
    if (!(elevation != null && dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[10], 703, 15, "elevation != null && elevation >= 0.0");
    if (!(color != null)) dart.assertFailed(null, I[10], 704, 15, "color != null");
    if (!(shadowColor != null)) dart.assertFailed(null, I[10], 705, 15, "shadowColor != null");
    material._MaterialInterior.__proto__.new.call(this, {key: key, curve: curve, duration: duration, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = material._MaterialInterior.prototype;
  dart.addTypeTests(material._MaterialInterior);
  dart.addTypeCaches(material._MaterialInterior);
  dart.setMethodSignature(material._MaterialInterior, () => ({
    __proto__: dart.getMethods(material._MaterialInterior.__proto__),
    createState: dart.fnType(material._MaterialInteriorState, [])
  }));
  dart.setLibraryUri(material._MaterialInterior, I[11]);
  dart.setFieldSignature(material._MaterialInterior, () => ({
    __proto__: dart.getFields(material._MaterialInterior.__proto__),
    child: dart.finalFieldType(framework.Widget),
    shape: dart.finalFieldType(borders.ShapeBorder),
    borderOnForeground: dart.finalFieldType(core.bool),
    clipBehavior: dart.finalFieldType(ui.Clip),
    elevation: dart.finalFieldType(core.double),
    color: dart.finalFieldType(ui.Color),
    shadowColor: dart.finalFieldType(ui.Color)
  }));
  material._MaterialInteriorState = class _MaterialInteriorState extends implicit_animations.AnimatedWidgetBaseState$(material._MaterialInterior) {
    forEachTween(visitor) {
      if (visitor == null) dart.nullFailed(I[10], 761, 43, "visitor");
      this[S$1._elevation$1] = T$.TweenNOfdouble().as(visitor(this[S$1._elevation$1], this.widget.elevation, dart.fn(value => new (T$.TweenOfdouble()).new({begin: core.double.as(value)}), T$.dynamicToTweenOfdouble())));
      this[S$1._shadowColor] = T$.ColorTweenN().as(visitor(this[S$1._shadowColor], this.widget.shadowColor, dart.fn(value => new tween.ColorTween.new({begin: ui.Color.as(value)}), T$.dynamicToColorTween())));
      this[S$1._border$1] = T$.ShapeBorderTweenN().as(visitor(this[S$1._border$1], this.widget.shape, dart.fn(value => new material.ShapeBorderTween.new({begin: borders.ShapeBorder.as(value)}), T$.dynamicToShapeBorderTween())));
    }
    build(context) {
      if (context == null) dart.nullFailed(I[10], 780, 29, "context");
      let shape = dart.nullCheck(dart.nullCheck(this[S$1._border$1]).evaluate(this.animation));
      let elevation = dart.nullCheck(this[S$1._elevation$1]).evaluate(this.animation);
      return new basic.PhysicalShape.new({clipper: new proxy_box.ShapeBorderClipper.new({shape: shape, textDirection: basic.Directionality.maybeOf(context)}), clipBehavior: this.widget.clipBehavior, elevation: elevation, color: elevation_overlay.ElevationOverlay.applyOverlay(context, this.widget.color, elevation), shadowColor: dart.nullCheck(dart.nullCheck(this[S$1._shadowColor]).evaluate(this.animation)), child: new material._ShapeBorderPaint.new({shape: shape, borderOnForeground: this.widget.borderOnForeground, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C[836] || CT.C836}), $creationLocationd_0dea112b090073317d4: C[837] || CT.C837});
    }
  };
  (material._MaterialInteriorState.new = function() {
    this[S$1._elevation$1] = null;
    this[S$1._shadowColor] = null;
    this[S$1._border$1] = null;
    material._MaterialInteriorState.__proto__.new.call(this);
    ;
  }).prototype = material._MaterialInteriorState.prototype;
  dart.addTypeTests(material._MaterialInteriorState);
  dart.addTypeCaches(material._MaterialInteriorState);
  dart.setMethodSignature(material._MaterialInteriorState, () => ({
    __proto__: dart.getMethods(material._MaterialInteriorState.__proto__),
    forEachTween: dart.fnType(dart.void, [dart.fnType(dart.nullable(tween.Tween), [dart.nullable(tween.Tween), dart.dynamic, dart.fnType(tween.Tween, [dart.dynamic])])]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(material._MaterialInteriorState, I[11]);
  dart.setFieldSignature(material._MaterialInteriorState, () => ({
    __proto__: dart.getFields(material._MaterialInteriorState.__proto__),
    [S$1._elevation$1]: dart.fieldType(dart.nullable(tween.Tween$(core.double))),
    [S$1._shadowColor]: dart.fieldType(dart.nullable(tween.ColorTween)),
    [S$1._border$1]: dart.fieldType(dart.nullable(material.ShapeBorderTween))
  }));
  material._ShapeBorderPaint = class _ShapeBorderPaint extends framework.StatelessWidget {
    get child() {
      return this[S$1.child$25];
    }
    set child(value) {
      super.child = value;
    }
    get shape() {
      return this[S$1.shape$22];
    }
    set shape(value) {
      super.shape = value;
    }
    get borderOnForeground() {
      return this[S$1.borderOnForeground$2];
    }
    set borderOnForeground(value) {
      super.borderOnForeground = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[10], 813, 29, "context");
      return new basic.CustomPaint.new({painter: dart.test(this.borderOnForeground) ? null : new material._ShapeBorderPainter.new(this.shape, basic.Directionality.maybeOf(context)), foregroundPainter: dart.test(this.borderOnForeground) ? new material._ShapeBorderPainter.new(this.shape, basic.Directionality.maybeOf(context)) : null, child: this.child, $creationLocationd_0dea112b090073317d4: C[838] || CT.C838});
    }
  };
  (material._ShapeBorderPaint.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[10], 803, 19, "child");
    let shape = opts && 'shape' in opts ? opts.shape : null;
    if (shape == null) dart.nullFailed(I[10], 804, 19, "shape");
    let borderOnForeground = opts && 'borderOnForeground' in opts ? opts.borderOnForeground : true;
    if (borderOnForeground == null) dart.nullFailed(I[10], 805, 10, "borderOnForeground");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.child$25] = child;
    this[S$1.shape$22] = shape;
    this[S$1.borderOnForeground$2] = borderOnForeground;
    material._ShapeBorderPaint.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = material._ShapeBorderPaint.prototype;
  dart.addTypeTests(material._ShapeBorderPaint);
  dart.addTypeCaches(material._ShapeBorderPaint);
  dart.setMethodSignature(material._ShapeBorderPaint, () => ({
    __proto__: dart.getMethods(material._ShapeBorderPaint.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(material._ShapeBorderPaint, I[11]);
  dart.setFieldSignature(material._ShapeBorderPaint, () => ({
    __proto__: dart.getFields(material._ShapeBorderPaint.__proto__),
    child: dart.finalFieldType(framework.Widget),
    shape: dart.finalFieldType(borders.ShapeBorder),
    borderOnForeground: dart.finalFieldType(core.bool)
  }));
  material._ShapeBorderPainter = class _ShapeBorderPainter extends custom_paint.CustomPainter {
    paint(canvas, size) {
      if (canvas == null) dart.nullFailed(I[10], 828, 21, "canvas");
      if (size == null) dart.nullFailed(I[10], 828, 34, "size");
      this.border.paint(canvas, ui.Offset.zero['&'](size), {textDirection: this.textDirection});
    }
    shouldRepaint(oldDelegate) {
      material._ShapeBorderPainter.as(oldDelegate);
      if (oldDelegate == null) dart.nullFailed(I[10], 833, 42, "oldDelegate");
      return !dart.equals(oldDelegate.border, this.border);
    }
  };
  (material._ShapeBorderPainter.new = function(border, textDirection) {
    if (border == null) dart.nullFailed(I[10], 823, 28, "border");
    this.border = border;
    this.textDirection = textDirection;
    material._ShapeBorderPainter.__proto__.new.call(this);
    ;
  }).prototype = material._ShapeBorderPainter.prototype;
  dart.addTypeTests(material._ShapeBorderPainter);
  dart.addTypeCaches(material._ShapeBorderPainter);
  dart.setMethodSignature(material._ShapeBorderPainter, () => ({
    __proto__: dart.getMethods(material._ShapeBorderPainter.__proto__),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Size]),
    shouldRepaint: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(material._ShapeBorderPainter, I[11]);
  dart.setFieldSignature(material._ShapeBorderPainter, () => ({
    __proto__: dart.getFields(material._ShapeBorderPainter.__proto__),
    border: dart.finalFieldType(borders.ShapeBorder),
    textDirection: dart.finalFieldType(dart.nullable(ui.TextDirection))
  }));
  dart.defineLazy(material, {
    /*material.kMaterialEdges*/get kMaterialEdges() {
      return new (T$.LinkedMapOfMaterialType$BorderRadiusN()).from([material.MaterialType.canvas, null, material.MaterialType.card, new border_radius.BorderRadius.circular(2.0), material.MaterialType.circle, null, material.MaterialType.button, new border_radius.BorderRadius.circular(2.0), material.MaterialType.transparency, null]);
    }
  }, false);
  debug$0.debugCheckHasMaterial = function debugCheckHasMaterial(context) {
    if (context == null) dart.nullFailed(I[128], 26, 41, "context");
    if (!dart.test(dart.fn(() => {
      if (!material.Material.is(context.widget) && context.findAncestorWidgetOfExactType(material.Material) == null) {
        dart.throw(new assertions.FlutterError.fromParts((() => {
          let t97 = T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("No Material widget found."), new assertions.ErrorDescription.new(dart.str(dart.runtimeType(context.widget)) + " widgets require a Material " + "widget ancestor.\n" + "In material design, most widgets are conceptually \"printed\" on " + "a sheet of material. In Flutter's material library, that " + "material is represented by the Material widget. It is the " + "Material widget that renders ink splashes, for instance. " + "Because of this, many material library widgets require that " + "there be a Material widget in the tree above them."), new assertions.ErrorHint.new("To introduce a Material widget, you can either directly " + "include one, or use a widget that contains Material itself, " + "such as a Card, Dialog, Drawer, or Scaffold.")]);
          t97[S.$addAll](context.describeMissingAncestor({expectedAncestorType: dart.wrapType(material.Material)}));
          return t97;
        })()));
      }
      return true;
    }, T$.VoidTobool())())) dart.assertFailed(null, I[128], 27, 10, "() {\r\n    if (context.widget is! Material && context.findAncestorWidgetOfExactType<Material>() == null) {\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('No Material widget found.'),\r\n        ErrorDescription(\r\n          '${context.widget.runtimeType} widgets require a Material '\r\n          'widget ancestor.\\n'\r\n          'In material design, most widgets are conceptually \"printed\" on '\r\n          \"a sheet of material. In Flutter's material library, that \"\r\n          'material is represented by the Material widget. It is the '\r\n          'Material widget that renders ink splashes, for instance. '\r\n          'Because of this, many material library widgets require that '\r\n          'there be a Material widget in the tree above them.',\r\n        ),\r\n        ErrorHint(\r\n          'To introduce a Material widget, you can either directly '\r\n          'include one, or use a widget that contains Material itself, '\r\n          'such as a Card, Dialog, Drawer, or Scaffold.',\r\n        ),\r\n        ...context.describeMissingAncestor(expectedAncestorType: Material),\r\n      ]);\r\n    }\r\n    return true;\r\n  }()");
    return true;
  };
  debug$0.debugCheckHasMaterialLocalizations = function debugCheckHasMaterialLocalizations(context) {
    if (context == null) dart.nullFailed(I[128], 73, 54, "context");
    if (!dart.test(dart.fn(() => {
      if (localizations$.Localizations.of(material_localizations.MaterialLocalizations, context, dart.wrapType(material_localizations.MaterialLocalizations)) == null) {
        dart.throw(new assertions.FlutterError.fromParts((() => {
          let t98 = T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("No MaterialLocalizations found."), new assertions.ErrorDescription.new(dart.str(dart.runtimeType(context.widget)) + " widgets require MaterialLocalizations " + "to be provided by a Localizations widget ancestor."), new assertions.ErrorDescription.new("The material library uses Localizations to generate messages, " + "labels, and abbreviations."), new assertions.ErrorHint.new("To introduce a MaterialLocalizations, either use a " + "MaterialApp at the root of your application to include them " + "automatically, or add a Localization widget with a " + "MaterialLocalizations delegate.")]);
          t98[S.$addAll](context.describeMissingAncestor({expectedAncestorType: dart.wrapType(material_localizations.MaterialLocalizations)}));
          return t98;
        })()));
      }
      return true;
    }, T$.VoidTobool())())) dart.assertFailed(null, I[128], 74, 10, "() {\r\n    if (Localizations.of<MaterialLocalizations>(context, MaterialLocalizations) == null) {\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('No MaterialLocalizations found.'),\r\n        ErrorDescription(\r\n          '${context.widget.runtimeType} widgets require MaterialLocalizations '\r\n          'to be provided by a Localizations widget ancestor.',\r\n        ),\r\n        ErrorDescription(\r\n          'The material library uses Localizations to generate messages, '\r\n          'labels, and abbreviations.',\r\n        ),\r\n        ErrorHint(\r\n          'To introduce a MaterialLocalizations, either use a '\r\n          'MaterialApp at the root of your application to include them '\r\n          'automatically, or add a Localization widget with a '\r\n          'MaterialLocalizations delegate.',\r\n        ),\r\n        ...context.describeMissingAncestor(expectedAncestorType: MaterialLocalizations),\r\n      ]);\r\n    }\r\n    return true;\r\n  }()");
    return true;
  };
  debug$0.debugCheckHasScaffold = function debugCheckHasScaffold(context) {
    if (context == null) dart.nullFailed(I[128], 115, 41, "context");
    if (!dart.test(dart.fn(() => {
      if (!scaffold$.Scaffold.is(context.widget) && context.findAncestorWidgetOfExactType(scaffold$.Scaffold) == null) {
        dart.throw(new assertions.FlutterError.fromParts((() => {
          let t99 = T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("No Scaffold widget found."), new assertions.ErrorDescription.new(dart.str(dart.runtimeType(context.widget)) + " widgets require a Scaffold widget ancestor.")]);
          t99[S.$addAll](context.describeMissingAncestor({expectedAncestorType: dart.wrapType(scaffold$.Scaffold)}));
          t99[S.$add](new assertions.ErrorHint.new("Typically, the Scaffold widget is introduced by the MaterialApp or " + "WidgetsApp widget at the top of your application widget tree."));
          return t99;
        })()));
      }
      return true;
    }, T$.VoidTobool())())) dart.assertFailed(null, I[128], 116, 10, "() {\r\n    if (context.widget is! Scaffold && context.findAncestorWidgetOfExactType<Scaffold>() == null) {\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('No Scaffold widget found.'),\r\n        ErrorDescription('${context.widget.runtimeType} widgets require a Scaffold widget ancestor.'),\r\n        ...context.describeMissingAncestor(expectedAncestorType: Scaffold),\r\n        ErrorHint(\r\n          'Typically, the Scaffold widget is introduced by the MaterialApp or '\r\n          'WidgetsApp widget at the top of your application widget tree.',\r\n        ),\r\n      ]);\r\n    }\r\n    return true;\r\n  }()");
    return true;
  };
  debug$0.debugCheckHasScaffoldMessenger = function debugCheckHasScaffoldMessenger(context) {
    if (context == null) dart.nullFailed(I[128], 148, 50, "context");
    if (!dart.test(dart.fn(() => {
      if (context.findAncestorWidgetOfExactType(scaffold$.ScaffoldMessenger) == null) {
        dart.throw(new assertions.FlutterError.fromParts((() => {
          let t100 = T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("No ScaffoldMessenger widget found."), new assertions.ErrorDescription.new(dart.str(dart.runtimeType(context.widget)) + " widgets require a ScaffoldMessenger widget ancestor.")]);
          t100[S.$addAll](context.describeMissingAncestor({expectedAncestorType: dart.wrapType(scaffold$.ScaffoldMessenger)}));
          t100[S.$add](new assertions.ErrorHint.new("Typically, the ScaffoldMessenger widget is introduced by the MaterialApp " + "at the top of your application widget tree."));
          return t100;
        })()));
      }
      return true;
    }, T$.VoidTobool())())) dart.assertFailed(null, I[128], 149, 10, "() {\r\n    if (context.findAncestorWidgetOfExactType<ScaffoldMessenger>() == null) {\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('No ScaffoldMessenger widget found.'),\r\n        ErrorDescription('${context.widget.runtimeType} widgets require a ScaffoldMessenger widget ancestor.'),\r\n        ...context.describeMissingAncestor(expectedAncestorType: ScaffoldMessenger),\r\n        ErrorHint(\r\n          'Typically, the ScaffoldMessenger widget is introduced by the MaterialApp '\r\n          'at the top of your application widget tree.',\r\n        ),\r\n      ]);\r\n    }\r\n    return true;\r\n  }()");
    return true;
  };
  material_localizations.MaterialLocalizations = class MaterialLocalizations extends core.Object {
    get expandedIconTapHint() {
      return "Collapse";
    }
    get collapsedIconTapHint() {
      return "Expand";
    }
    static of(context) {
      if (context == null) dart.nullFailed(I[129], 514, 48, "context");
      if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, I[129], 515, 12, "debugCheckHasMaterialLocalizations(context)");
      return dart.nullCheck(localizations$.Localizations.of(material_localizations.MaterialLocalizations, context, dart.wrapType(material_localizations.MaterialLocalizations)));
    }
  };
  (material_localizations.MaterialLocalizations.new = function() {
    ;
  }).prototype = material_localizations.MaterialLocalizations.prototype;
  dart.addTypeTests(material_localizations.MaterialLocalizations);
  dart.addTypeCaches(material_localizations.MaterialLocalizations);
  dart.setGetterSignature(material_localizations.MaterialLocalizations, () => ({
    __proto__: dart.getGetters(material_localizations.MaterialLocalizations.__proto__),
    expandedIconTapHint: core.String,
    collapsedIconTapHint: core.String
  }));
  dart.setLibraryUri(material_localizations.MaterialLocalizations, I[130]);
  material_localizations._MaterialLocalizationsDelegate = class _MaterialLocalizationsDelegate extends localizations$.LocalizationsDelegate$(material_localizations.MaterialLocalizations) {
    isSupported(locale) {
      if (locale == null) dart.nullFailed(I[129], 524, 27, "locale");
      return locale.languageCode === "en";
    }
    load(locale) {
      if (locale == null) dart.nullFailed(I[129], 527, 45, "locale");
      return material_localizations.DefaultMaterialLocalizations.load(locale);
    }
    shouldReload(old) {
      material_localizations._MaterialLocalizationsDelegate.as(old);
      if (old == null) dart.nullFailed(I[129], 530, 52, "old");
      return false;
    }
    toString() {
      return "DefaultMaterialLocalizations.delegate(en_US)";
    }
  };
  (material_localizations._MaterialLocalizationsDelegate.new = function() {
    material_localizations._MaterialLocalizationsDelegate.__proto__.new.call(this);
    ;
  }).prototype = material_localizations._MaterialLocalizationsDelegate.prototype;
  dart.addTypeTests(material_localizations._MaterialLocalizationsDelegate);
  dart.addTypeCaches(material_localizations._MaterialLocalizationsDelegate);
  dart.setMethodSignature(material_localizations._MaterialLocalizationsDelegate, () => ({
    __proto__: dart.getMethods(material_localizations._MaterialLocalizationsDelegate.__proto__),
    isSupported: dart.fnType(core.bool, [ui.Locale]),
    load: dart.fnType(async.Future$(material_localizations.MaterialLocalizations), [ui.Locale]),
    shouldReload: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(material_localizations._MaterialLocalizationsDelegate, I[130]);
  dart.defineExtensionMethods(material_localizations._MaterialLocalizationsDelegate, ['toString']);
  material_localizations.DefaultMaterialLocalizations = class DefaultMaterialLocalizations extends core.Object {
    [S$1._getDaysInMonth](year, month) {
      if (year == null) dart.nullFailed(I[129], 619, 27, "year");
      if (month == null) dart.nullFailed(I[129], 619, 37, "month");
      if (month === 2) {
        let isLeapYear = year[S$1.$modulo](4) === 0 && year[S$1.$modulo](100) !== 0 || year[S$1.$modulo](400) === 0;
        if (isLeapYear) return 29;
        return 28;
      }
      let daysInMonth = C[839] || CT.C839;
      return daysInMonth[S.$_get](dart.notNull(month) - 1);
    }
    formatHour(timeOfDay, opts) {
      if (timeOfDay == null) dart.nullFailed(I[129], 632, 31, "timeOfDay");
      let alwaysUse24HourFormat = opts && 'alwaysUse24HourFormat' in opts ? opts.alwaysUse24HourFormat : false;
      if (alwaysUse24HourFormat == null) dart.nullFailed(I[129], 632, 49, "alwaysUse24HourFormat");
      let format = this.timeOfDayFormat({alwaysUse24HourFormat: alwaysUse24HourFormat});
      switch (format) {
        case C[32] || CT.C32:
        {
          return this.formatDecimal(timeOfDay.hourOfPeriod === 0 ? 12 : timeOfDay.hourOfPeriod);
        }
        case C[28] || CT.C28:
        {
          return this[S$1._formatTwoDigitZeroPad](timeOfDay.hour);
        }
        default:
        {
          dart.throw(new core.AssertionError.new(dart.str(this[S.$runtimeType]) + " does not support " + dart.str(format) + "."));
        }
      }
    }
    [S$1._formatTwoDigitZeroPad](number) {
      if (number == null) dart.nullFailed(I[129], 646, 37, "number");
      if (!(0 <= dart.notNull(number) && dart.notNull(number) < 100)) dart.assertFailed(null, I[129], 647, 12, "0 <= number && number < 100");
      if (dart.notNull(number) < 10) return "0" + dart.str(number);
      return dart.str(number);
    }
    formatMinute(timeOfDay) {
      if (timeOfDay == null) dart.nullFailed(I[129], 656, 33, "timeOfDay");
      let minute = timeOfDay.minute;
      return dart.notNull(minute) < 10 ? "0" + dart.str(minute) : dart.toString(minute);
    }
    formatYear(date) {
      if (date == null) dart.nullFailed(I[129], 662, 30, "date");
      return dart.toString(date.year);
    }
    formatCompactDate(date) {
      if (date == null) dart.nullFailed(I[129], 665, 37, "date");
      let month = this[S$1._formatTwoDigitZeroPad](date.month);
      let day = this[S$1._formatTwoDigitZeroPad](date.day);
      let year = dart.toString(date.year)[S$1.$padLeft](4, "0");
      return dart.str(month) + "/" + dart.str(day) + "/" + year;
    }
    formatShortDate(date) {
      if (date == null) dart.nullFailed(I[129], 674, 35, "date");
      let month = material_localizations.DefaultMaterialLocalizations._shortMonths[S.$_get](dart.notNull(date.month) - 1);
      return dart.str(month) + " " + dart.str(date.day) + ", " + dart.str(date.year);
    }
    formatMediumDate(date) {
      if (date == null) dart.nullFailed(I[129], 680, 36, "date");
      let day = material_localizations.DefaultMaterialLocalizations._shortWeekdays[S.$_get](dart.notNull(date.weekday) - 1);
      let month = material_localizations.DefaultMaterialLocalizations._shortMonths[S.$_get](dart.notNull(date.month) - 1);
      return dart.str(day) + ", " + dart.str(month) + " " + dart.str(date.day);
    }
    formatFullDate(date) {
      if (date == null) dart.nullFailed(I[129], 687, 34, "date");
      let month = material_localizations.DefaultMaterialLocalizations._months[S.$_get](dart.notNull(date.month) - 1);
      return dart.str(material_localizations.DefaultMaterialLocalizations._weekdays[S.$_get](dart.notNull(date.weekday) - 1)) + ", " + dart.str(month) + " " + dart.str(date.day) + ", " + dart.str(date.year);
    }
    formatMonthYear(date) {
      if (date == null) dart.nullFailed(I[129], 693, 35, "date");
      let year = this.formatYear(date);
      let month = material_localizations.DefaultMaterialLocalizations._months[S.$_get](dart.notNull(date.month) - 1);
      return dart.str(month) + " " + dart.str(year);
    }
    formatShortMonthDay(date) {
      if (date == null) dart.nullFailed(I[129], 700, 39, "date");
      let month = material_localizations.DefaultMaterialLocalizations._shortMonths[S.$_get](dart.notNull(date.month) - 1);
      return dart.str(month) + " " + dart.str(date.day);
    }
    parseCompactDate(inputString) {
      if (inputString == null) {
        return null;
      }
      let inputParts = inputString[S$1.$split]("/");
      if (inputParts[S.$length] !== 3) {
        return null;
      }
      let year = core.int.tryParse(inputParts[S.$_get](2), {radix: 10});
      if (year == null || dart.notNull(year) < 1) {
        return null;
      }
      let month = core.int.tryParse(inputParts[S.$_get](0), {radix: 10});
      if (month == null || dart.notNull(month) < 1 || dart.notNull(month) > 12) {
        return null;
      }
      let day = core.int.tryParse(inputParts[S.$_get](1), {radix: 10});
      if (day == null || dart.notNull(day) < 1 || dart.notNull(day) > dart.notNull(this[S$1._getDaysInMonth](year, month))) {
        return null;
      }
      return new core.DateTime.new(year, month, day);
    }
    get narrowWeekdays() {
      return material_localizations.DefaultMaterialLocalizations._narrowWeekdays;
    }
    get firstDayOfWeekIndex() {
      return 0;
    }
    get dateSeparator() {
      return "/";
    }
    get dateHelpText() {
      return "mm/dd/yyyy";
    }
    get selectYearSemanticsLabel() {
      return "Select year";
    }
    get unspecifiedDate() {
      return "Date";
    }
    get unspecifiedDateRange() {
      return "Date Range";
    }
    get dateInputLabel() {
      return "Enter Date";
    }
    get dateRangeStartLabel() {
      return "Start Date";
    }
    get dateRangeEndLabel() {
      return "End Date";
    }
    dateRangeStartDateSemanticLabel(fullDate) {
      if (fullDate == null) dart.nullFailed(I[129], 765, 49, "fullDate");
      return "Start date " + dart.str(fullDate);
    }
    dateRangeEndDateSemanticLabel(fullDate) {
      if (fullDate == null) dart.nullFailed(I[129], 768, 47, "fullDate");
      return "End date " + dart.str(fullDate);
    }
    get invalidDateFormatLabel() {
      return "Invalid format.";
    }
    get invalidDateRangeLabel() {
      return "Invalid range.";
    }
    get dateOutOfRangeLabel() {
      return "Out of range.";
    }
    get saveButtonLabel() {
      return "SAVE";
    }
    get datePickerHelpText() {
      return "SELECT DATE";
    }
    get dateRangePickerHelpText() {
      return "SELECT RANGE";
    }
    get calendarModeButtonLabel() {
      return "Switch to calendar";
    }
    get inputDateModeButtonLabel() {
      return "Switch to input";
    }
    get timePickerDialHelpText() {
      return "SELECT TIME";
    }
    get timePickerInputHelpText() {
      return "ENTER TIME";
    }
    get timePickerHourLabel() {
      return "Hour";
    }
    get timePickerMinuteLabel() {
      return "Minute";
    }
    get invalidTimeLabel() {
      return "Enter a valid time";
    }
    get dialModeButtonLabel() {
      return "Switch to dial picker mode";
    }
    get inputTimeModeButtonLabel() {
      return "Switch to text input mode";
    }
    [S$1._formatDayPeriod](timeOfDay) {
      if (timeOfDay == null) dart.nullFailed(I[129], 815, 37, "timeOfDay");
      switch (timeOfDay.period) {
        case C[25] || CT.C25:
        {
          return this.anteMeridiemAbbreviation;
        }
        case C[26] || CT.C26:
        {
          return this.postMeridiemAbbreviation;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    formatDecimal(number) {
      if (number == null) dart.nullFailed(I[129], 825, 28, "number");
      if (dart.notNull(number) > -1000 && dart.notNull(number) < 1000) return dart.toString(number);
      let digits = number[S.$abs]()[S.$toString]();
      let result = new core.StringBuffer.new(dart.notNull(number) < 0 ? "-" : "");
      let maxDigitIndex = digits.length - 1;
      for (let i = 0; i <= maxDigitIndex; i = i + 1) {
        result.write(digits[S.$_get](i));
        if (i < maxDigitIndex && (maxDigitIndex - i)[S$1.$modulo](3) === 0) result.write(",");
      }
      return result.toString();
    }
    formatTimeOfDay(timeOfDay, opts) {
      let t101, t101$;
      if (timeOfDay == null) dart.nullFailed(I[129], 841, 36, "timeOfDay");
      let alwaysUse24HourFormat = opts && 'alwaysUse24HourFormat' in opts ? opts.alwaysUse24HourFormat : false;
      if (alwaysUse24HourFormat == null) dart.nullFailed(I[129], 841, 54, "alwaysUse24HourFormat");
      let buffer = new core.StringBuffer.new();
      t101 = buffer;
      (() => {
        t101.write(this.formatHour(timeOfDay, {alwaysUse24HourFormat: alwaysUse24HourFormat}));
        t101.write(":");
        t101.write(this.formatMinute(timeOfDay));
        return t101;
      })();
      if (dart.test(alwaysUse24HourFormat)) {
        return dart.str(buffer);
      }
      t101$ = buffer;
      (() => {
        t101$.write(" ");
        t101$.write(this[S$1._formatDayPeriod](timeOfDay));
        return t101$;
      })();
      return dart.str(buffer);
    }
    get openAppDrawerTooltip() {
      return "Open navigation menu";
    }
    get backButtonTooltip() {
      return "Back";
    }
    get closeButtonTooltip() {
      return "Close";
    }
    get deleteButtonTooltip() {
      return "Delete";
    }
    get moreButtonTooltip() {
      return "More";
    }
    get nextMonthTooltip() {
      return "Next month";
    }
    get previousMonthTooltip() {
      return "Previous month";
    }
    get nextPageTooltip() {
      return "Next page";
    }
    get previousPageTooltip() {
      return "Previous page";
    }
    get firstPageTooltip() {
      return "First page";
    }
    get lastPageTooltip() {
      return "Last page";
    }
    get showMenuTooltip() {
      return "Show menu";
    }
    get drawerLabel() {
      return "Navigation menu";
    }
    get popupMenuLabel() {
      return "Popup menu";
    }
    get dialogLabel() {
      return "Dialog";
    }
    get alertDialogLabel() {
      return "Alert";
    }
    get searchFieldLabel() {
      return "Search";
    }
    aboutListTileTitle(applicationName) {
      if (applicationName == null) dart.nullFailed(I[129], 922, 36, "applicationName");
      return "About " + dart.str(applicationName);
    }
    get licensesPageTitle() {
      return "Licenses";
    }
    licensesPackageDetailText(licenseCount) {
      if (licenseCount == null) dart.nullFailed(I[129], 928, 40, "licenseCount");
      if (!(dart.notNull(licenseCount) >= 0)) dart.assertFailed(null, I[129], 929, 13, "licenseCount >= 0");
      switch (licenseCount) {
        case 0:
        {
          return "No licenses.";
        }
        case 1:
        {
          return "1 license.";
        }
        default:
        {
          return dart.str(licenseCount) + " licenses.";
        }
      }
    }
    pageRowsInfoTitle(firstRow, lastRow, rowCount, rowCountIsApproximate) {
      if (firstRow == null) dart.nullFailed(I[129], 941, 32, "firstRow");
      if (lastRow == null) dart.nullFailed(I[129], 941, 46, "lastRow");
      if (rowCount == null) dart.nullFailed(I[129], 941, 59, "rowCount");
      if (rowCountIsApproximate == null) dart.nullFailed(I[129], 941, 74, "rowCountIsApproximate");
      return dart.test(rowCountIsApproximate) ? dart.str(firstRow) + "–" + dart.str(lastRow) + " of about " + dart.str(rowCount) : dart.str(firstRow) + "–" + dart.str(lastRow) + " of " + dart.str(rowCount);
    }
    get rowsPerPageTitle() {
      return "Rows per page:";
    }
    tabLabel(opts) {
      let tabIndex = opts && 'tabIndex' in opts ? opts.tabIndex : null;
      if (tabIndex == null) dart.nullFailed(I[129], 951, 34, "tabIndex");
      let tabCount = opts && 'tabCount' in opts ? opts.tabCount : null;
      if (tabCount == null) dart.nullFailed(I[129], 951, 57, "tabCount");
      if (!(dart.notNull(tabIndex) >= 1)) dart.assertFailed(null, I[129], 952, 12, "tabIndex >= 1");
      if (!(dart.notNull(tabCount) >= 1)) dart.assertFailed(null, I[129], 953, 12, "tabCount >= 1");
      return "Tab " + dart.str(tabIndex) + " of " + dart.str(tabCount);
    }
    selectedRowCountTitle(selectedRowCount) {
      if (selectedRowCount == null) dart.nullFailed(I[129], 958, 36, "selectedRowCount");
      switch (selectedRowCount) {
        case 0:
        {
          return "No items selected";
        }
        case 1:
        {
          return "1 item selected";
        }
        default:
        {
          return dart.str(selectedRowCount) + " items selected";
        }
      }
    }
    get cancelButtonLabel() {
      return "CANCEL";
    }
    get closeButtonLabel() {
      return "CLOSE";
    }
    get continueButtonLabel() {
      return "CONTINUE";
    }
    get copyButtonLabel() {
      return "Copy";
    }
    get cutButtonLabel() {
      return "Cut";
    }
    get okButtonLabel() {
      return "OK";
    }
    get pasteButtonLabel() {
      return "Paste";
    }
    get selectAllButtonLabel() {
      return "Select all";
    }
    get viewLicensesButtonLabel() {
      return "VIEW LICENSES";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get timePickerHourModeAnnouncement() {
      return "Select hours";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Select minutes";
    }
    get modalBarrierDismissLabel() {
      return "Dismiss";
    }
    get scriptCategory() {
      return typography$.ScriptCategory.englishLike;
    }
    timeOfDayFormat(opts) {
      let alwaysUse24HourFormat = opts && 'alwaysUse24HourFormat' in opts ? opts.alwaysUse24HourFormat : false;
      if (alwaysUse24HourFormat == null) dart.nullFailed(I[129], 1015, 42, "alwaysUse24HourFormat");
      return dart.test(alwaysUse24HourFormat) ? time.TimeOfDayFormat.HH_colon_mm : time.TimeOfDayFormat.h_colon_mm_space_a;
    }
    get signedInLabel() {
      return "Signed in";
    }
    get hideAccountsLabel() {
      return "Hide accounts";
    }
    get showAccountsLabel() {
      return "Show accounts";
    }
    get reorderItemUp() {
      return "Move up";
    }
    get reorderItemDown() {
      return "Move down";
    }
    get reorderItemLeft() {
      return "Move left";
    }
    get reorderItemRight() {
      return "Move right";
    }
    get reorderItemToEnd() {
      return "Move to the end";
    }
    get reorderItemToStart() {
      return "Move to the start";
    }
    get expandedIconTapHint() {
      return "Collapse";
    }
    get collapsedIconTapHint() {
      return "Expand";
    }
    get refreshIndicatorSemanticLabel() {
      return "Refresh";
    }
    static load(locale) {
      if (locale == null) dart.nullFailed(I[129], 1064, 52, "locale");
      return new (T$.SynchronousFutureOfMaterialLocalizations()).new(C[840] || CT.C840);
    }
    remainingTextFieldCharacterCount(remaining) {
      if (remaining == null) dart.nullFailed(I[129], 1075, 47, "remaining");
      switch (remaining) {
        case 0:
        {
          return "No characters remaining";
        }
        case 1:
        {
          return "1 character remaining";
        }
        default:
        {
          return dart.str(remaining) + " characters remaining";
        }
      }
    }
  };
  (material_localizations.DefaultMaterialLocalizations.new = function() {
    ;
  }).prototype = material_localizations.DefaultMaterialLocalizations.prototype;
  dart.addTypeTests(material_localizations.DefaultMaterialLocalizations);
  dart.addTypeCaches(material_localizations.DefaultMaterialLocalizations);
  material_localizations.DefaultMaterialLocalizations[dart.implements] = () => [material_localizations.MaterialLocalizations];
  dart.setMethodSignature(material_localizations.DefaultMaterialLocalizations, () => ({
    __proto__: dart.getMethods(material_localizations.DefaultMaterialLocalizations.__proto__),
    [S$1._getDaysInMonth]: dart.fnType(core.int, [core.int, core.int]),
    formatHour: dart.fnType(core.String, [time.TimeOfDay], {alwaysUse24HourFormat: core.bool}, {}),
    [S$1._formatTwoDigitZeroPad]: dart.fnType(core.String, [core.int]),
    formatMinute: dart.fnType(core.String, [time.TimeOfDay]),
    formatYear: dart.fnType(core.String, [core.DateTime]),
    formatCompactDate: dart.fnType(core.String, [core.DateTime]),
    formatShortDate: dart.fnType(core.String, [core.DateTime]),
    formatMediumDate: dart.fnType(core.String, [core.DateTime]),
    formatFullDate: dart.fnType(core.String, [core.DateTime]),
    formatMonthYear: dart.fnType(core.String, [core.DateTime]),
    formatShortMonthDay: dart.fnType(core.String, [core.DateTime]),
    parseCompactDate: dart.fnType(dart.nullable(core.DateTime), [dart.nullable(core.String)]),
    dateRangeStartDateSemanticLabel: dart.fnType(core.String, [core.String]),
    dateRangeEndDateSemanticLabel: dart.fnType(core.String, [core.String]),
    [S$1._formatDayPeriod]: dart.fnType(core.String, [time.TimeOfDay]),
    formatDecimal: dart.fnType(core.String, [core.int]),
    formatTimeOfDay: dart.fnType(core.String, [time.TimeOfDay], {alwaysUse24HourFormat: core.bool}, {}),
    aboutListTileTitle: dart.fnType(core.String, [core.String]),
    licensesPackageDetailText: dart.fnType(core.String, [core.int]),
    pageRowsInfoTitle: dart.fnType(core.String, [core.int, core.int, core.int, core.bool]),
    tabLabel: dart.fnType(core.String, [], {}, {tabCount: core.int, tabIndex: core.int}),
    selectedRowCountTitle: dart.fnType(core.String, [core.int]),
    timeOfDayFormat: dart.fnType(time.TimeOfDayFormat, [], {alwaysUse24HourFormat: core.bool}, {}),
    remainingTextFieldCharacterCount: dart.fnType(core.String, [core.int])
  }));
  dart.setGetterSignature(material_localizations.DefaultMaterialLocalizations, () => ({
    __proto__: dart.getGetters(material_localizations.DefaultMaterialLocalizations.__proto__),
    narrowWeekdays: core.List$(core.String),
    firstDayOfWeekIndex: core.int,
    dateSeparator: core.String,
    dateHelpText: core.String,
    selectYearSemanticsLabel: core.String,
    unspecifiedDate: core.String,
    unspecifiedDateRange: core.String,
    dateInputLabel: core.String,
    dateRangeStartLabel: core.String,
    dateRangeEndLabel: core.String,
    invalidDateFormatLabel: core.String,
    invalidDateRangeLabel: core.String,
    dateOutOfRangeLabel: core.String,
    saveButtonLabel: core.String,
    datePickerHelpText: core.String,
    dateRangePickerHelpText: core.String,
    calendarModeButtonLabel: core.String,
    inputDateModeButtonLabel: core.String,
    timePickerDialHelpText: core.String,
    timePickerInputHelpText: core.String,
    timePickerHourLabel: core.String,
    timePickerMinuteLabel: core.String,
    invalidTimeLabel: core.String,
    dialModeButtonLabel: core.String,
    inputTimeModeButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    backButtonTooltip: core.String,
    closeButtonTooltip: core.String,
    deleteButtonTooltip: core.String,
    moreButtonTooltip: core.String,
    nextMonthTooltip: core.String,
    previousMonthTooltip: core.String,
    nextPageTooltip: core.String,
    previousPageTooltip: core.String,
    firstPageTooltip: core.String,
    lastPageTooltip: core.String,
    showMenuTooltip: core.String,
    drawerLabel: core.String,
    popupMenuLabel: core.String,
    dialogLabel: core.String,
    alertDialogLabel: core.String,
    searchFieldLabel: core.String,
    licensesPageTitle: core.String,
    rowsPerPageTitle: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    okButtonLabel: core.String,
    pasteButtonLabel: core.String,
    selectAllButtonLabel: core.String,
    viewLicensesButtonLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    postMeridiemAbbreviation: core.String,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    modalBarrierDismissLabel: core.String,
    scriptCategory: typography$.ScriptCategory,
    signedInLabel: core.String,
    hideAccountsLabel: core.String,
    showAccountsLabel: core.String,
    reorderItemUp: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    expandedIconTapHint: core.String,
    collapsedIconTapHint: core.String,
    refreshIndicatorSemanticLabel: core.String
  }));
  dart.setLibraryUri(material_localizations.DefaultMaterialLocalizations, I[130]);
  dart.defineLazy(material_localizations.DefaultMaterialLocalizations, {
    /*material_localizations.DefaultMaterialLocalizations._shortWeekdays*/get _shortWeekdays() {
      return C[841] || CT.C841;
    },
    /*material_localizations.DefaultMaterialLocalizations._weekdays*/get _weekdays() {
      return C[842] || CT.C842;
    },
    /*material_localizations.DefaultMaterialLocalizations._narrowWeekdays*/get _narrowWeekdays() {
      return C[843] || CT.C843;
    },
    /*material_localizations.DefaultMaterialLocalizations._shortMonths*/get _shortMonths() {
      return C[844] || CT.C844;
    },
    /*material_localizations.DefaultMaterialLocalizations._months*/get _months() {
      return C[845] || CT.C845;
    },
    /*material_localizations.DefaultMaterialLocalizations.delegate*/get delegate() {
      return C[846] || CT.C846;
    }
  }, false);
  theme$.Theme = class Theme extends framework.StatelessWidget {
    get data() {
      return this[S$1.data$22];
    }
    set data(value) {
      super.data = value;
    }
    get child() {
      return this[S$1.child$26];
    }
    set child(value) {
      super.child = value;
    }
    static of(context) {
      let t101, t101$, t101$0, t101$1;
      if (context == null) dart.nullFailed(I[131], 106, 36, "context");
      let inheritedTheme = context.dependOnInheritedWidgetOfExactType(theme$._InheritedTheme);
      let localizations = localizations$.Localizations.of(material_localizations.MaterialLocalizations, context, dart.wrapType(material_localizations.MaterialLocalizations));
      let category = (t101$ = (t101 = localizations, t101 == null ? null : t101.scriptCategory), t101$ == null ? typography$.ScriptCategory.englishLike : t101$);
      let theme = (t101$1 = (t101$0 = inheritedTheme, t101$0 == null ? null : t101$0.theme.data), t101$1 == null ? theme$.Theme._kFallbackTheme : t101$1);
      return theme_data.ThemeData.localize(theme, theme.typography.geometryThemeFor(category));
    }
    build(context) {
      if (context == null) dart.nullFailed(I[131], 115, 29, "context");
      return new theme$._InheritedTheme.new({theme: this, child: new theme.CupertinoTheme.new({data: new theme_data.MaterialBasedCupertinoThemeData.new({materialTheme: this.data}), child: new icon_theme.IconTheme.new({data: this.data.iconTheme, child: this.child, $creationLocationd_0dea112b090073317d4: C[847] || CT.C847}), $creationLocationd_0dea112b090073317d4: C[848] || CT.C848}), $creationLocationd_0dea112b090073317d4: C[849] || CT.C849});
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[131], 134, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfThemeData()).new("data", this.data, {showName: false}));
    }
  };
  (theme$.Theme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[131], 41, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[131], 42, 19, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.data$22] = data;
    this[S$1.child$26] = child;
    if (!(child != null)) dart.assertFailed(null, I[131], 43, 15, "child != null");
    if (!(data != null)) dart.assertFailed(null, I[131], 44, 15, "data != null");
    theme$.Theme.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = theme$.Theme.prototype;
  dart.addTypeTests(theme$.Theme);
  dart.addTypeCaches(theme$.Theme);
  dart.setMethodSignature(theme$.Theme, () => ({
    __proto__: dart.getMethods(theme$.Theme.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(theme$.Theme, I[132]);
  dart.setFieldSignature(theme$.Theme, () => ({
    __proto__: dart.getFields(theme$.Theme.__proto__),
    data: dart.finalFieldType(theme_data.ThemeData),
    child: dart.finalFieldType(framework.Widget)
  }));
  dart.defineLazy(theme$.Theme, {
    /*theme$.Theme._kFallbackTheme*/get _kFallbackTheme() {
      return theme_data.ThemeData.fallback();
    }
  }, false);
  theme$._InheritedTheme = class _InheritedTheme extends inherited_theme.InheritedTheme {
    get theme() {
      return this[S$1.theme];
    }
    set theme(value) {
      super.theme = value;
    }
    wrap(context, child) {
      if (context == null) dart.nullFailed(I[131], 151, 28, "context");
      if (child == null) dart.nullFailed(I[131], 151, 44, "child");
      return new theme$.Theme.new({data: this.theme.data, child: child, $creationLocationd_0dea112b090073317d4: C[850] || CT.C850});
    }
    updateShouldNotify(old) {
      theme$._InheritedTheme.as(old);
      if (old == null) dart.nullFailed(I[131], 156, 43, "old");
      return !dart.equals(this.theme.data, old.theme.data);
    }
  };
  (theme$._InheritedTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let theme = opts && 'theme' in opts ? opts.theme : null;
    if (theme == null) dart.nullFailed(I[131], 143, 19, "theme");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[131], 144, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.theme] = theme;
    if (!(theme != null)) dart.assertFailed(null, I[131], 145, 15, "theme != null");
    theme$._InheritedTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = theme$._InheritedTheme.prototype;
  dart.addTypeTests(theme$._InheritedTheme);
  dart.addTypeCaches(theme$._InheritedTheme);
  dart.setMethodSignature(theme$._InheritedTheme, () => ({
    __proto__: dart.getMethods(theme$._InheritedTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(theme$._InheritedTheme, I[132]);
  dart.setFieldSignature(theme$._InheritedTheme, () => ({
    __proto__: dart.getFields(theme$._InheritedTheme.__proto__),
    theme: dart.finalFieldType(theme$.Theme)
  }));
  theme$.ThemeDataTween = class ThemeDataTween extends tween.Tween$(theme_data.ThemeData) {
    lerp(t) {
      if (t == null) dart.nullFailed(I[131], 174, 25, "t");
      return theme_data.ThemeData.lerp(dart.nullCheck(this.begin), dart.nullCheck(this.end), t);
    }
  };
  (theme$.ThemeDataTween.new = function(opts) {
    let begin = opts && 'begin' in opts ? opts.begin : null;
    let end = opts && 'end' in opts ? opts.end : null;
    theme$.ThemeDataTween.__proto__.new.call(this, {begin: begin, end: end});
    ;
  }).prototype = theme$.ThemeDataTween.prototype;
  dart.addTypeTests(theme$.ThemeDataTween);
  dart.addTypeCaches(theme$.ThemeDataTween);
  dart.setLibraryUri(theme$.ThemeDataTween, I[132]);
  theme$.AnimatedTheme = class AnimatedTheme extends implicit_animations.ImplicitlyAnimatedWidget {
    get data() {
      return this[S$1.data$23];
    }
    set data(value) {
      super.data = value;
    }
    get child() {
      return this[S$1.child$27];
    }
    set child(value) {
      super.child = value;
    }
    createState() {
      return new theme$._AnimatedThemeState.new();
    }
  };
  (theme$.AnimatedTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[131], 198, 19, "data");
    let curve = opts && 'curve' in opts ? opts.curve : C[43] || CT.C43;
    if (curve == null) dart.nullFailed(I[131], 199, 11, "curve");
    let duration = opts && 'duration' in opts ? opts.duration : C[143] || CT.C143;
    if (duration == null) dart.nullFailed(I[131], 200, 14, "duration");
    let onEnd = opts && 'onEnd' in opts ? opts.onEnd : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[131], 202, 19, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.data$23] = data;
    this[S$1.child$27] = child;
    if (!(child != null)) dart.assertFailed(null, I[131], 203, 15, "child != null");
    if (!(data != null)) dart.assertFailed(null, I[131], 204, 15, "data != null");
    theme$.AnimatedTheme.__proto__.new.call(this, {key: key, curve: curve, duration: duration, onEnd: onEnd, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = theme$.AnimatedTheme.prototype;
  dart.addTypeTests(theme$.AnimatedTheme);
  dart.addTypeCaches(theme$.AnimatedTheme);
  dart.setMethodSignature(theme$.AnimatedTheme, () => ({
    __proto__: dart.getMethods(theme$.AnimatedTheme.__proto__),
    createState: dart.fnType(implicit_animations.AnimatedWidgetBaseState$(theme$.AnimatedTheme), [])
  }));
  dart.setLibraryUri(theme$.AnimatedTheme, I[132]);
  dart.setFieldSignature(theme$.AnimatedTheme, () => ({
    __proto__: dart.getFields(theme$.AnimatedTheme.__proto__),
    data: dart.finalFieldType(theme_data.ThemeData),
    child: dart.finalFieldType(framework.Widget)
  }));
  theme$._AnimatedThemeState = class _AnimatedThemeState extends implicit_animations.AnimatedWidgetBaseState$(theme$.AnimatedTheme) {
    forEachTween(visitor) {
      if (visitor == null) dart.nullFailed(I[131], 223, 43, "visitor");
      this[S$1._data] = theme$.ThemeDataTween.as(dart.nullCheck(visitor(this[S$1._data], this.widget.data, dart.fn(value => new theme$.ThemeDataTween.new({begin: theme_data.ThemeData.as(value)}), T$.dynamicToThemeDataTween()))));
    }
    build(context) {
      if (context == null) dart.nullFailed(I[131], 228, 29, "context");
      return new theme$.Theme.new({data: dart.nullCheck(this[S$1._data]).evaluate(this.animation), child: this.widget.child, $creationLocationd_0dea112b090073317d4: C[851] || CT.C851});
    }
    debugFillProperties(description) {
      if (description == null) dart.nullFailed(I[131], 236, 56, "description");
      super.debugFillProperties(description);
      description.add(new (T$.DiagnosticsPropertyOfThemeDataTween()).new("data", this[S$1._data], {showName: false, defaultValue: null}));
    }
  };
  (theme$._AnimatedThemeState.new = function() {
    this[S$1._data] = null;
    theme$._AnimatedThemeState.__proto__.new.call(this);
    ;
  }).prototype = theme$._AnimatedThemeState.prototype;
  dart.addTypeTests(theme$._AnimatedThemeState);
  dart.addTypeCaches(theme$._AnimatedThemeState);
  dart.setMethodSignature(theme$._AnimatedThemeState, () => ({
    __proto__: dart.getMethods(theme$._AnimatedThemeState.__proto__),
    forEachTween: dart.fnType(dart.void, [dart.fnType(dart.nullable(tween.Tween), [dart.nullable(tween.Tween), dart.dynamic, dart.fnType(tween.Tween, [dart.dynamic])])]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(theme$._AnimatedThemeState, I[132]);
  dart.setFieldSignature(theme$._AnimatedThemeState, () => ({
    __proto__: dart.getFields(theme$._AnimatedThemeState.__proto__),
    [S$1._data]: dart.fieldType(dart.nullable(theme$.ThemeDataTween))
  }));
  dart.defineLazy(theme$, {
    /*theme$.kThemeAnimationDuration*/get kThemeAnimationDuration() {
      return C[143] || CT.C143;
    }
  }, false);
  const Object_Diagnosticable$36$31 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$31.new = function() {
  }).prototype = Object_Diagnosticable$36$31.prototype;
  dart.applyMixin(Object_Diagnosticable$36$31, diagnostics.Diagnosticable);
  app_bar_theme.AppBarTheme = class AppBarTheme extends Object_Diagnosticable$36$31 {
    get brightness() {
      return this[S$1.brightness$3];
    }
    set brightness(value) {
      super.brightness = value;
    }
    get backgroundColor() {
      return this[S$1.backgroundColor$19];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get foregroundColor() {
      return this[S$1.foregroundColor$2];
    }
    set foregroundColor(value) {
      super.foregroundColor = value;
    }
    get elevation() {
      return this[S$1.elevation$23];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get shadowColor() {
      return this[S$1.shadowColor$6];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get iconTheme() {
      return this[S$1.iconTheme$1];
    }
    set iconTheme(value) {
      super.iconTheme = value;
    }
    get actionsIconTheme() {
      return this[S$1.actionsIconTheme];
    }
    set actionsIconTheme(value) {
      super.actionsIconTheme = value;
    }
    get textTheme() {
      return this[S$1.textTheme$4];
    }
    set textTheme(value) {
      super.textTheme = value;
    }
    get centerTitle() {
      return this[S$1.centerTitle$1];
    }
    set centerTitle(value) {
      super.centerTitle = value;
    }
    get titleSpacing() {
      return this[S$1.titleSpacing];
    }
    set titleSpacing(value) {
      super.titleSpacing = value;
    }
    get toolbarHeight() {
      return this[S$1.toolbarHeight];
    }
    set toolbarHeight(value) {
      super.toolbarHeight = value;
    }
    get toolbarTextStyle() {
      return this[S$1.toolbarTextStyle];
    }
    set toolbarTextStyle(value) {
      super.toolbarTextStyle = value;
    }
    get titleTextStyle() {
      return this[S$1.titleTextStyle$1];
    }
    set titleTextStyle(value) {
      super.titleTextStyle = value;
    }
    get systemOverlayStyle() {
      return this[S$1.systemOverlayStyle];
    }
    set systemOverlayStyle(value) {
      super.systemOverlayStyle = value;
    }
    get backwardsCompatibility() {
      return this[S$1.backwardsCompatibility];
    }
    set backwardsCompatibility(value) {
      super.backwardsCompatibility = value;
    }
    get color() {
      return this.backgroundColor;
    }
    copyWith(opts) {
      let t101, t101$, t101$0, t101$1, t101$2, t101$3, t101$4, t101$5, t101$6, t101$7, t101$8, t101$9, t101$10, t101$11, t101$12, t101$13;
      let actionsIconTheme = opts && 'actionsIconTheme' in opts ? opts.actionsIconTheme : null;
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
      let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
      let centerTitle = opts && 'centerTitle' in opts ? opts.centerTitle : null;
      let titleSpacing = opts && 'titleSpacing' in opts ? opts.titleSpacing : null;
      let toolbarHeight = opts && 'toolbarHeight' in opts ? opts.toolbarHeight : null;
      let toolbarTextStyle = opts && 'toolbarTextStyle' in opts ? opts.toolbarTextStyle : null;
      let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
      let systemOverlayStyle = opts && 'systemOverlayStyle' in opts ? opts.systemOverlayStyle : null;
      let backwardsCompatibility = opts && 'backwardsCompatibility' in opts ? opts.backwardsCompatibility : null;
      if (!(color == null || backgroundColor == null)) dart.assertFailed("The color and backgroundColor parameters mean the same thing. Only specify one.", I[133], 208, 7, "color == null || backgroundColor == null");
      return new app_bar_theme.AppBarTheme.new({brightness: (t101 = brightness, t101 == null ? this.brightness : t101), backgroundColor: (t101$0 = (t101$ = backgroundColor, t101$ == null ? color : t101$), t101$0 == null ? this.backgroundColor : t101$0), foregroundColor: (t101$1 = foregroundColor, t101$1 == null ? this.foregroundColor : t101$1), elevation: (t101$2 = elevation, t101$2 == null ? this.elevation : t101$2), shadowColor: (t101$3 = shadowColor, t101$3 == null ? this.shadowColor : t101$3), iconTheme: (t101$4 = iconTheme, t101$4 == null ? this.iconTheme : t101$4), actionsIconTheme: (t101$5 = actionsIconTheme, t101$5 == null ? this.actionsIconTheme : t101$5), textTheme: (t101$6 = textTheme, t101$6 == null ? this.textTheme : t101$6), centerTitle: (t101$7 = centerTitle, t101$7 == null ? this.centerTitle : t101$7), titleSpacing: (t101$8 = titleSpacing, t101$8 == null ? this.titleSpacing : t101$8), toolbarHeight: (t101$9 = toolbarHeight, t101$9 == null ? this.toolbarHeight : t101$9), toolbarTextStyle: (t101$10 = toolbarTextStyle, t101$10 == null ? this.toolbarTextStyle : t101$10), titleTextStyle: (t101$11 = titleTextStyle, t101$11 == null ? this.titleTextStyle : t101$11), systemOverlayStyle: (t101$12 = systemOverlayStyle, t101$12 == null ? this.systemOverlayStyle : t101$12), backwardsCompatibility: (t101$13 = backwardsCompatibility, t101$13 == null ? this.backwardsCompatibility : t101$13)});
    }
    static of(context) {
      if (context == null) dart.nullFailed(I[133], 231, 38, "context");
      return theme$.Theme.of(context).appBarTheme;
    }
    static lerp(a, b, t) {
      let t101, t101$, t101$0, t101$1, t101$2, t101$3, t101$4, t101$5, t101$6, t101$7, t101$8, t101$9, t101$10, t101$11, t101$12, t101$13, t101$14, t101$15, t101$16, t101$17, t101$18, t101$19, t101$20, t101$21, t101$22, t101$23, t101$24, t101$25, t101$26, t101$27;
      if (t == null) dart.nullFailed(I[133], 240, 66, "t");
      if (!(t != null)) dart.assertFailed(null, I[133], 241, 12, "t != null");
      return new app_bar_theme.AppBarTheme.new({brightness: dart.notNull(t) < 0.5 ? (t101 = a, t101 == null ? null : t101.brightness) : (t101$ = b, t101$ == null ? null : t101$.brightness), backgroundColor: ui.Color.lerp((t101$0 = a, t101$0 == null ? null : t101$0.backgroundColor), (t101$1 = b, t101$1 == null ? null : t101$1.backgroundColor), t), foregroundColor: ui.Color.lerp((t101$2 = a, t101$2 == null ? null : t101$2.foregroundColor), (t101$3 = b, t101$3 == null ? null : t101$3.foregroundColor), t), elevation: ui.lerpDouble((t101$4 = a, t101$4 == null ? null : t101$4.elevation), (t101$5 = b, t101$5 == null ? null : t101$5.elevation), t), shadowColor: ui.Color.lerp((t101$6 = a, t101$6 == null ? null : t101$6.shadowColor), (t101$7 = b, t101$7 == null ? null : t101$7.shadowColor), t), iconTheme: icon_theme_data.IconThemeData.lerp((t101$8 = a, t101$8 == null ? null : t101$8.iconTheme), (t101$9 = b, t101$9 == null ? null : t101$9.iconTheme), t), actionsIconTheme: icon_theme_data.IconThemeData.lerp((t101$10 = a, t101$10 == null ? null : t101$10.actionsIconTheme), (t101$11 = b, t101$11 == null ? null : t101$11.actionsIconTheme), t), textTheme: text_theme.TextTheme.lerp((t101$12 = a, t101$12 == null ? null : t101$12.textTheme), (t101$13 = b, t101$13 == null ? null : t101$13.textTheme), t), centerTitle: dart.notNull(t) < 0.5 ? (t101$14 = a, t101$14 == null ? null : t101$14.centerTitle) : (t101$15 = b, t101$15 == null ? null : t101$15.centerTitle), titleSpacing: ui.lerpDouble((t101$16 = a, t101$16 == null ? null : t101$16.titleSpacing), (t101$17 = b, t101$17 == null ? null : t101$17.titleSpacing), t), toolbarHeight: ui.lerpDouble((t101$18 = a, t101$18 == null ? null : t101$18.toolbarHeight), (t101$19 = b, t101$19 == null ? null : t101$19.toolbarHeight), t), toolbarTextStyle: text_style.TextStyle.lerp((t101$20 = a, t101$20 == null ? null : t101$20.toolbarTextStyle), (t101$21 = b, t101$21 == null ? null : t101$21.toolbarTextStyle), t), titleTextStyle: text_style.TextStyle.lerp((t101$22 = a, t101$22 == null ? null : t101$22.titleTextStyle), (t101$23 = b, t101$23 == null ? null : t101$23.titleTextStyle), t), systemOverlayStyle: dart.notNull(t) < 0.5 ? (t101$24 = a, t101$24 == null ? null : t101$24.systemOverlayStyle) : (t101$25 = b, t101$25 == null ? null : t101$25.systemOverlayStyle), backwardsCompatibility: dart.notNull(t) < 0.5 ? (t101$26 = a, t101$26 == null ? null : t101$26.backwardsCompatibility) : (t101$27 = b, t101$27 == null ? null : t101$27.backwardsCompatibility)});
    }
    get hashCode() {
      return ui.hashValues(this.brightness, this.backgroundColor, this.foregroundColor, this.elevation, this.shadowColor, this.iconTheme, this.actionsIconTheme, this.textTheme, this.centerTitle, this.titleSpacing, this.toolbarHeight, this.toolbarTextStyle, this.titleTextStyle, this.systemOverlayStyle, this.backwardsCompatibility);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return app_bar_theme.AppBarTheme.is(other) && other.brightness == this.brightness && dart.equals(other.backgroundColor, this.backgroundColor) && dart.equals(other.foregroundColor, this.foregroundColor) && other.elevation == this.elevation && dart.equals(other.shadowColor, this.shadowColor) && dart.equals(other.iconTheme, this.iconTheme) && dart.equals(other.actionsIconTheme, this.actionsIconTheme) && dart.equals(other.textTheme, this.textTheme) && other.centerTitle == this.centerTitle && other.titleSpacing == this.titleSpacing && other.toolbarHeight == this.toolbarHeight && dart.equals(other.toolbarTextStyle, this.toolbarTextStyle) && dart.equals(other.titleTextStyle, this.titleTextStyle) && dart.equals(other.systemOverlayStyle, this.systemOverlayStyle) && other.backwardsCompatibility == this.backwardsCompatibility;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[133], 307, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfBrightness()).new("brightness", this.brightness, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("foregroundColor", this.foregroundColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfdouble()).new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("shadowColor", this.shadowColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfIconThemeData()).new("iconTheme", this.iconTheme, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfIconThemeData()).new("actionsIconTheme", this.actionsIconTheme, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextTheme()).new("textTheme", this.textTheme, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("centerTitle", this.centerTitle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfdouble()).new("titleSpacing", this.titleSpacing, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfdouble()).new("toolbarHeight", this.toolbarHeight, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("toolbarTextStyle", this.toolbarTextStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("titleTextStyle", this.titleTextStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("backwardsCompatibility", this.backwardsCompatibility, {defaultValue: null}));
    }
  };
  (app_bar_theme.AppBarTheme.new = function(opts) {
    let t101;
    let brightness = opts && 'brightness' in opts ? opts.brightness : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
    let actionsIconTheme = opts && 'actionsIconTheme' in opts ? opts.actionsIconTheme : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let centerTitle = opts && 'centerTitle' in opts ? opts.centerTitle : null;
    let titleSpacing = opts && 'titleSpacing' in opts ? opts.titleSpacing : null;
    let toolbarHeight = opts && 'toolbarHeight' in opts ? opts.toolbarHeight : null;
    let toolbarTextStyle = opts && 'toolbarTextStyle' in opts ? opts.toolbarTextStyle : null;
    let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
    let systemOverlayStyle = opts && 'systemOverlayStyle' in opts ? opts.systemOverlayStyle : null;
    let backwardsCompatibility = opts && 'backwardsCompatibility' in opts ? opts.backwardsCompatibility : null;
    this[S$1.brightness$3] = brightness;
    this[S$1.foregroundColor$2] = foregroundColor;
    this[S$1.elevation$23] = elevation;
    this[S$1.shadowColor$6] = shadowColor;
    this[S$1.iconTheme$1] = iconTheme;
    this[S$1.actionsIconTheme] = actionsIconTheme;
    this[S$1.textTheme$4] = textTheme;
    this[S$1.centerTitle$1] = centerTitle;
    this[S$1.titleSpacing] = titleSpacing;
    this[S$1.toolbarHeight] = toolbarHeight;
    this[S$1.toolbarTextStyle] = toolbarTextStyle;
    this[S$1.titleTextStyle$1] = titleTextStyle;
    this[S$1.systemOverlayStyle] = systemOverlayStyle;
    this[S$1.backwardsCompatibility] = backwardsCompatibility;
    if (!(color == null || backgroundColor == null)) dart.assertFailed("The color and backgroundColor parameters mean the same thing. Only specify one.", I[133], 48, 10, "color == null || backgroundColor == null");
    this[S$1.backgroundColor$19] = (t101 = backgroundColor, t101 == null ? color : t101);
    ;
  }).prototype = app_bar_theme.AppBarTheme.prototype;
  dart.addTypeTests(app_bar_theme.AppBarTheme);
  dart.addTypeCaches(app_bar_theme.AppBarTheme);
  dart.setMethodSignature(app_bar_theme.AppBarTheme, () => ({
    __proto__: dart.getMethods(app_bar_theme.AppBarTheme.__proto__),
    copyWith: dart.fnType(app_bar_theme.AppBarTheme, [], {actionsIconTheme: dart.nullable(icon_theme_data.IconThemeData), backgroundColor: dart.nullable(ui.Color), backwardsCompatibility: dart.nullable(core.bool), brightness: dart.nullable(ui.Brightness), centerTitle: dart.nullable(core.bool), color: dart.nullable(ui.Color), elevation: dart.nullable(core.double), foregroundColor: dart.nullable(ui.Color), iconTheme: dart.nullable(icon_theme_data.IconThemeData), shadowColor: dart.nullable(ui.Color), systemOverlayStyle: dart.nullable(system_chrome.SystemUiOverlayStyle), textTheme: dart.nullable(text_theme.TextTheme), titleSpacing: dart.nullable(core.double), titleTextStyle: dart.nullable(text_style.TextStyle), toolbarHeight: dart.nullable(core.double), toolbarTextStyle: dart.nullable(text_style.TextStyle)}, {})
  }));
  dart.setGetterSignature(app_bar_theme.AppBarTheme, () => ({
    __proto__: dart.getGetters(app_bar_theme.AppBarTheme.__proto__),
    color: dart.nullable(ui.Color)
  }));
  dart.setLibraryUri(app_bar_theme.AppBarTheme, I[134]);
  dart.setFieldSignature(app_bar_theme.AppBarTheme, () => ({
    __proto__: dart.getFields(app_bar_theme.AppBarTheme.__proto__),
    brightness: dart.finalFieldType(dart.nullable(ui.Brightness)),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    foregroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    shadowColor: dart.finalFieldType(dart.nullable(ui.Color)),
    iconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    actionsIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    textTheme: dart.finalFieldType(dart.nullable(text_theme.TextTheme)),
    centerTitle: dart.finalFieldType(dart.nullable(core.bool)),
    titleSpacing: dart.finalFieldType(dart.nullable(core.double)),
    toolbarHeight: dart.finalFieldType(dart.nullable(core.double)),
    toolbarTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    titleTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    systemOverlayStyle: dart.finalFieldType(dart.nullable(system_chrome.SystemUiOverlayStyle)),
    backwardsCompatibility: dart.finalFieldType(dart.nullable(core.bool))
  }));
  dart.defineExtensionMethods(app_bar_theme.AppBarTheme, ['_equals']);
  dart.defineExtensionAccessors(app_bar_theme.AppBarTheme, ['hashCode']);
  app_bar._ToolbarContainerLayout = class _ToolbarContainerLayout extends shifted_box.SingleChildLayoutDelegate {
    get toolbarHeight() {
      return this[S$1.toolbarHeight$1];
    }
    set toolbarHeight(value) {
      super.toolbarHeight = value;
    }
    getConstraintsForChild(constraints) {
      if (constraints == null) dart.nullFailed(I[135], 38, 56, "constraints");
      return constraints.tighten({height: this.toolbarHeight});
    }
    getSize(constraints) {
      if (constraints == null) dart.nullFailed(I[135], 43, 31, "constraints");
      return new ui.Size.new(constraints.maxWidth, this.toolbarHeight);
    }
    getPositionForChild(size, childSize) {
      if (size == null) dart.nullFailed(I[135], 48, 35, "size");
      if (childSize == null) dart.nullFailed(I[135], 48, 46, "childSize");
      return new ui.Offset.new(0.0, dart.notNull(size.height) - dart.notNull(childSize.height));
    }
    shouldRelayout(oldDelegate) {
      app_bar._ToolbarContainerLayout.as(oldDelegate);
      if (oldDelegate == null) dart.nullFailed(I[135], 53, 47, "oldDelegate");
      return this.toolbarHeight != oldDelegate.toolbarHeight;
    }
  };
  (app_bar._ToolbarContainerLayout.new = function(toolbarHeight) {
    if (toolbarHeight == null) dart.nullFailed(I[135], 33, 38, "toolbarHeight");
    this[S$1.toolbarHeight$1] = toolbarHeight;
    app_bar._ToolbarContainerLayout.__proto__.new.call(this);
    ;
  }).prototype = app_bar._ToolbarContainerLayout.prototype;
  dart.addTypeTests(app_bar._ToolbarContainerLayout);
  dart.addTypeCaches(app_bar._ToolbarContainerLayout);
  dart.setMethodSignature(app_bar._ToolbarContainerLayout, () => ({
    __proto__: dart.getMethods(app_bar._ToolbarContainerLayout.__proto__),
    shouldRelayout: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(app_bar._ToolbarContainerLayout, I[136]);
  dart.setFieldSignature(app_bar._ToolbarContainerLayout, () => ({
    __proto__: dart.getFields(app_bar._ToolbarContainerLayout.__proto__),
    toolbarHeight: dart.finalFieldType(core.double)
  }));
  app_bar._PreferredAppBarSize = class _PreferredAppBarSize extends ui.Size {};
  (app_bar._PreferredAppBarSize.new = function(toolbarHeight, bottomHeight) {
    let t101, t101$;
    this.toolbarHeight = toolbarHeight;
    this.bottomHeight = bottomHeight;
    app_bar._PreferredAppBarSize.__proto__.fromHeight.call(this, dart.notNull((t101 = toolbarHeight, t101 == null ? 56 : t101)) + dart.notNull((t101$ = bottomHeight, t101$ == null ? 0 : t101$)));
    ;
  }).prototype = app_bar._PreferredAppBarSize.prototype;
  dart.addTypeTests(app_bar._PreferredAppBarSize);
  dart.addTypeCaches(app_bar._PreferredAppBarSize);
  dart.setLibraryUri(app_bar._PreferredAppBarSize, I[136]);
  dart.setFieldSignature(app_bar._PreferredAppBarSize, () => ({
    __proto__: dart.getFields(app_bar._PreferredAppBarSize.__proto__),
    toolbarHeight: dart.finalFieldType(dart.nullable(core.double)),
    bottomHeight: dart.finalFieldType(dart.nullable(core.double))
  }));
  app_bar.AppBar = class AppBar extends framework.StatefulWidget {
    get leading() {
      return this[S$1.leading$4];
    }
    set leading(value) {
      super.leading = value;
    }
    get automaticallyImplyLeading() {
      return this[S$1.automaticallyImplyLeading];
    }
    set automaticallyImplyLeading(value) {
      super.automaticallyImplyLeading = value;
    }
    get title() {
      return this[S$1.title$3];
    }
    set title(value) {
      super.title = value;
    }
    get actions() {
      return this[S$1.actions$1];
    }
    set actions(value) {
      super.actions = value;
    }
    get flexibleSpace() {
      return this[S$1.flexibleSpace];
    }
    set flexibleSpace(value) {
      super.flexibleSpace = value;
    }
    get bottom() {
      return this[S$1.bottom];
    }
    set bottom(value) {
      super.bottom = value;
    }
    get elevation() {
      return this[S$1.elevation$24];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get shadowColor() {
      return this[S$1.shadowColor$7];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get shape() {
      return this[S$1.shape$23];
    }
    set shape(value) {
      super.shape = value;
    }
    get backgroundColor() {
      return this[S$1.backgroundColor$20];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get foregroundColor() {
      return this[S$1.foregroundColor$3];
    }
    set foregroundColor(value) {
      super.foregroundColor = value;
    }
    get brightness() {
      return this[S$1.brightness$4];
    }
    set brightness(value) {
      super.brightness = value;
    }
    get iconTheme() {
      return this[S$1.iconTheme$2];
    }
    set iconTheme(value) {
      super.iconTheme = value;
    }
    get actionsIconTheme() {
      return this[S$1.actionsIconTheme$1];
    }
    set actionsIconTheme(value) {
      super.actionsIconTheme = value;
    }
    get textTheme() {
      return this[S$1.textTheme$5];
    }
    set textTheme(value) {
      super.textTheme = value;
    }
    get primary() {
      return this[S$1.primary$2];
    }
    set primary(value) {
      super.primary = value;
    }
    get centerTitle() {
      return this[S$1.centerTitle$2];
    }
    set centerTitle(value) {
      super.centerTitle = value;
    }
    get excludeHeaderSemantics() {
      return this[S$1.excludeHeaderSemantics];
    }
    set excludeHeaderSemantics(value) {
      super.excludeHeaderSemantics = value;
    }
    get titleSpacing() {
      return this[S$1.titleSpacing$1];
    }
    set titleSpacing(value) {
      super.titleSpacing = value;
    }
    get toolbarOpacity() {
      return this[S$1.toolbarOpacity$1];
    }
    set toolbarOpacity(value) {
      super.toolbarOpacity = value;
    }
    get bottomOpacity() {
      return this[S$1.bottomOpacity];
    }
    set bottomOpacity(value) {
      super.bottomOpacity = value;
    }
    get preferredSize() {
      return this[S$1.preferredSize];
    }
    set preferredSize(value) {
      super.preferredSize = value;
    }
    get toolbarHeight() {
      return this[S$1.toolbarHeight$2];
    }
    set toolbarHeight(value) {
      super.toolbarHeight = value;
    }
    get leadingWidth() {
      return this[S$1.leadingWidth];
    }
    set leadingWidth(value) {
      super.leadingWidth = value;
    }
    get backwardsCompatibility() {
      return this[S$1.backwardsCompatibility$1];
    }
    set backwardsCompatibility(value) {
      super.backwardsCompatibility = value;
    }
    get toolbarTextStyle() {
      return this[S$1.toolbarTextStyle$1];
    }
    set toolbarTextStyle(value) {
      super.toolbarTextStyle = value;
    }
    get titleTextStyle() {
      return this[S$1.titleTextStyle$2];
    }
    set titleTextStyle(value) {
      super.titleTextStyle = value;
    }
    get systemOverlayStyle() {
      return this[S$1.systemOverlayStyle$1];
    }
    set systemOverlayStyle(value) {
      super.systemOverlayStyle = value;
    }
    static preferredHeightFor(context, preferredSize) {
      let t101, t101$;
      if (context == null) dart.nullFailed(I[135], 265, 49, "context");
      if (preferredSize == null) dart.nullFailed(I[135], 265, 63, "preferredSize");
      if (app_bar._PreferredAppBarSize.is(preferredSize) && preferredSize.toolbarHeight == null) {
        return dart.notNull((t101 = app_bar_theme.AppBarTheme.of(context).toolbarHeight, t101 == null ? 56 : t101)) + dart.notNull((t101$ = preferredSize.bottomHeight, t101$ == null ? 0 : t101$));
      }
      return preferredSize.height;
    }
    [S$1._getEffectiveCenterTitle$1](theme) {
      if (theme == null) dart.nullFailed(I[135], 750, 43, "theme");
      if (this.centerTitle != null) return dart.nullCheck(this.centerTitle);
      if (theme.appBarTheme.centerTitle != null) return dart.nullCheck(theme.appBarTheme.centerTitle);
      if (!(theme.platform != null)) dart.assertFailed(null, I[135], 755, 12, "theme.platform != null");
      switch (theme.platform) {
        case C[11] || CT.C11:
        case C[12] || CT.C12:
        case C[13] || CT.C13:
        case C[14] || CT.C14:
        {
          return false;
        }
        case C[15] || CT.C15:
        case C[16] || CT.C16:
        {
          return this.actions == null || dart.notNull(dart.nullCheck(this.actions)[S.$length]) < 2;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    createState() {
      return new app_bar._AppBarState.new();
    }
  };
  (app_bar.AppBar.new = function(opts) {
    let t101;
    let key = opts && 'key' in opts ? opts.key : null;
    let leading = opts && 'leading' in opts ? opts.leading : null;
    let automaticallyImplyLeading = opts && 'automaticallyImplyLeading' in opts ? opts.automaticallyImplyLeading : true;
    if (automaticallyImplyLeading == null) dart.nullFailed(I[135], 226, 10, "automaticallyImplyLeading");
    let title = opts && 'title' in opts ? opts.title : null;
    let actions = opts && 'actions' in opts ? opts.actions : null;
    let flexibleSpace = opts && 'flexibleSpace' in opts ? opts.flexibleSpace : null;
    let bottom = opts && 'bottom' in opts ? opts.bottom : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
    let brightness = opts && 'brightness' in opts ? opts.brightness : null;
    let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
    let actionsIconTheme = opts && 'actionsIconTheme' in opts ? opts.actionsIconTheme : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let primary = opts && 'primary' in opts ? opts.primary : true;
    if (primary == null) dart.nullFailed(I[135], 240, 10, "primary");
    let centerTitle = opts && 'centerTitle' in opts ? opts.centerTitle : null;
    let excludeHeaderSemantics = opts && 'excludeHeaderSemantics' in opts ? opts.excludeHeaderSemantics : false;
    if (excludeHeaderSemantics == null) dart.nullFailed(I[135], 242, 10, "excludeHeaderSemantics");
    let titleSpacing = opts && 'titleSpacing' in opts ? opts.titleSpacing : null;
    let toolbarOpacity = opts && 'toolbarOpacity' in opts ? opts.toolbarOpacity : 1;
    if (toolbarOpacity == null) dart.nullFailed(I[135], 244, 10, "toolbarOpacity");
    let bottomOpacity = opts && 'bottomOpacity' in opts ? opts.bottomOpacity : 1;
    if (bottomOpacity == null) dart.nullFailed(I[135], 245, 10, "bottomOpacity");
    let toolbarHeight = opts && 'toolbarHeight' in opts ? opts.toolbarHeight : null;
    let leadingWidth = opts && 'leadingWidth' in opts ? opts.leadingWidth : null;
    let backwardsCompatibility = opts && 'backwardsCompatibility' in opts ? opts.backwardsCompatibility : null;
    let toolbarTextStyle = opts && 'toolbarTextStyle' in opts ? opts.toolbarTextStyle : null;
    let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
    let systemOverlayStyle = opts && 'systemOverlayStyle' in opts ? opts.systemOverlayStyle : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.leading$4] = leading;
    this[S$1.automaticallyImplyLeading] = automaticallyImplyLeading;
    this[S$1.title$3] = title;
    this[S$1.actions$1] = actions;
    this[S$1.flexibleSpace] = flexibleSpace;
    this[S$1.bottom] = bottom;
    this[S$1.elevation$24] = elevation;
    this[S$1.shadowColor$7] = shadowColor;
    this[S$1.shape$23] = shape;
    this[S$1.backgroundColor$20] = backgroundColor;
    this[S$1.foregroundColor$3] = foregroundColor;
    this[S$1.brightness$4] = brightness;
    this[S$1.iconTheme$2] = iconTheme;
    this[S$1.actionsIconTheme$1] = actionsIconTheme;
    this[S$1.textTheme$5] = textTheme;
    this[S$1.primary$2] = primary;
    this[S$1.centerTitle$2] = centerTitle;
    this[S$1.excludeHeaderSemantics] = excludeHeaderSemantics;
    this[S$1.titleSpacing$1] = titleSpacing;
    this[S$1.toolbarOpacity$1] = toolbarOpacity;
    this[S$1.bottomOpacity] = bottomOpacity;
    this[S$1.toolbarHeight$2] = toolbarHeight;
    this[S$1.leadingWidth] = leadingWidth;
    this[S$1.backwardsCompatibility$1] = backwardsCompatibility;
    this[S$1.toolbarTextStyle$1] = toolbarTextStyle;
    this[S$1.titleTextStyle$2] = titleTextStyle;
    this[S$1.systemOverlayStyle$1] = systemOverlayStyle;
    if (!(automaticallyImplyLeading != null)) dart.assertFailed(null, I[135], 252, 15, "automaticallyImplyLeading != null");
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[135], 253, 15, "elevation == null || elevation >= 0.0");
    if (!(primary != null)) dart.assertFailed(null, I[135], 254, 15, "primary != null");
    if (!(toolbarOpacity != null)) dart.assertFailed(null, I[135], 255, 15, "toolbarOpacity != null");
    if (!(bottomOpacity != null)) dart.assertFailed(null, I[135], 256, 15, "bottomOpacity != null");
    this[S$1.preferredSize] = new app_bar._PreferredAppBarSize.new(toolbarHeight, (t101 = bottom, t101 == null ? null : t101.preferredSize.height));
    app_bar.AppBar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = app_bar.AppBar.prototype;
  dart.addTypeTests(app_bar.AppBar);
  dart.addTypeCaches(app_bar.AppBar);
  app_bar.AppBar[dart.implements] = () => [preferred_size.PreferredSizeWidget];
  dart.setMethodSignature(app_bar.AppBar, () => ({
    __proto__: dart.getMethods(app_bar.AppBar.__proto__),
    [S$1._getEffectiveCenterTitle$1]: dart.fnType(core.bool, [theme_data.ThemeData]),
    createState: dart.fnType(framework.State$(app_bar.AppBar), [])
  }));
  dart.setLibraryUri(app_bar.AppBar, I[136]);
  dart.setFieldSignature(app_bar.AppBar, () => ({
    __proto__: dart.getFields(app_bar.AppBar.__proto__),
    leading: dart.finalFieldType(dart.nullable(framework.Widget)),
    automaticallyImplyLeading: dart.finalFieldType(core.bool),
    title: dart.finalFieldType(dart.nullable(framework.Widget)),
    actions: dart.finalFieldType(dart.nullable(core.List$(framework.Widget))),
    flexibleSpace: dart.finalFieldType(dart.nullable(framework.Widget)),
    bottom: dart.finalFieldType(dart.nullable(preferred_size.PreferredSizeWidget)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    shadowColor: dart.finalFieldType(dart.nullable(ui.Color)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    foregroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    brightness: dart.finalFieldType(dart.nullable(ui.Brightness)),
    iconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    actionsIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    textTheme: dart.finalFieldType(dart.nullable(text_theme.TextTheme)),
    primary: dart.finalFieldType(core.bool),
    centerTitle: dart.finalFieldType(dart.nullable(core.bool)),
    excludeHeaderSemantics: dart.finalFieldType(core.bool),
    titleSpacing: dart.finalFieldType(dart.nullable(core.double)),
    toolbarOpacity: dart.finalFieldType(core.double),
    bottomOpacity: dart.finalFieldType(core.double),
    preferredSize: dart.finalFieldType(ui.Size),
    toolbarHeight: dart.finalFieldType(dart.nullable(core.double)),
    leadingWidth: dart.finalFieldType(dart.nullable(core.double)),
    backwardsCompatibility: dart.finalFieldType(dart.nullable(core.bool)),
    toolbarTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    titleTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    systemOverlayStyle: dart.finalFieldType(dart.nullable(system_chrome.SystemUiOverlayStyle))
  }));
  app_bar._AppBarState = class _AppBarState extends framework.State$(app_bar.AppBar) {
    didChangeDependencies() {
      super.didChangeDependencies();
      if (this[S$1._scrollNotificationObserver] != null) dart.nullCheck(this[S$1._scrollNotificationObserver]).removeListener(dart.bind(this, S$1._handleScrollNotification$1));
      this[S$1._scrollNotificationObserver] = scroll_notification_observer.ScrollNotificationObserver.of(this.context);
      if (this[S$1._scrollNotificationObserver] != null) dart.nullCheck(this[S$1._scrollNotificationObserver]).addListener(dart.bind(this, S$1._handleScrollNotification$1));
    }
    dispose() {
      if (this[S$1._scrollNotificationObserver] != null) {
        dart.nullCheck(this[S$1._scrollNotificationObserver]).removeListener(dart.bind(this, S$1._handleScrollNotification$1));
        this[S$1._scrollNotificationObserver] = null;
      }
      super.dispose();
    }
    [S$1._handleDrawerButton]() {
      scaffold$.Scaffold.of(this.context).openDrawer();
    }
    [S$1._handleDrawerButtonEnd]() {
      scaffold$.Scaffold.of(this.context).openEndDrawer();
    }
    [S$1._handleScrollNotification$1](notification) {
      if (notification == null) dart.nullFailed(I[135], 806, 53, "notification");
      if (scroll_notification.ScrollUpdateNotification.is(notification)) {
        let oldScrolledUnder = this[S$1._scrolledUnder];
        this[S$1._scrolledUnder] = notification.depth === 0 && dart.notNull(notification.metrics.extentBefore) > 0 && notification.metrics.axis == basic_types.Axis.vertical;
        if (this[S$1._scrolledUnder] != oldScrolledUnder) {
          this.setState(dart.fn(() => {
          }, T$.VoidTovoid()));
        }
      }
    }
    [S$1._resolveColor](states, widgetColor, themeColor, defaultColor) {
      let t101, t101$;
      if (states == null) dart.nullFailed(I[135], 820, 42, "states");
      if (defaultColor == null) dart.nullFailed(I[135], 820, 95, "defaultColor");
      t101$ = (t101 = material_state.MaterialStateProperty.resolveAs(T$.ColorN(), widgetColor, states), t101 == null ? material_state.MaterialStateProperty.resolveAs(T$.ColorN(), themeColor, states) : t101);
      return t101$ == null ? material_state.MaterialStateProperty.resolveAs(ui.Color, defaultColor, states) : t101$;
    }
    [S$1._systemOverlayStyleForBrightness](brightness) {
      if (brightness == null) dart.nullFailed(I[135], 826, 68, "brightness");
      return brightness == ui.Brightness.dark ? system_chrome.SystemUiOverlayStyle.light : system_chrome.SystemUiOverlayStyle.dark;
    }
    build(context) {
      let t102, t102$, t102$0, t102$1, t102$2, t102$3, t102$4, t102$5, t102$6, t102$7, t102$8, t102$9, t102$10, t102$11, t102$12, t102$13, t102$14, t102$15, t102$16, t102$17, t102$18, t102$19, t102$20, t103, t102$21, t102$22, t102$23, t103$, t102$24, t102$25, t103$0, t102$26, t102$27, t102$28, t103$1, t102$29, t102$30, t102$31, t102$32, t102$33, t102$34, t102$35, t102$36, t102$37, t102$38, t103$2, t103$3, t103$4, t103$5, t103$6, t103$7, t103$8, t103$9;
      if (context == null) dart.nullFailed(I[135], 831, 29, "context");
      if (!(!dart.test(this.widget.primary) || dart.test(debug.debugCheckHasMediaQuery(context)))) dart.assertFailed(null, I[135], 832, 12, "!widget.primary || debugCheckHasMediaQuery(context)");
      if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, I[135], 833, 12, "debugCheckHasMaterialLocalizations(context)");
      let theme = theme$.Theme.of(context);
      let colorScheme = theme.colorScheme;
      let appBarTheme = app_bar_theme.AppBarTheme.of(context);
      let scaffold = scaffold$.Scaffold.maybeOf(context);
      let parentRoute = routes.ModalRoute.of(T$.ObjectN(), context);
      let settings = context.dependOnInheritedWidgetOfExactType(flexible_space_bar.FlexibleSpaceBarSettings);
      let states = (() => {
        let t101 = T$.LinkedHashSetOfMaterialState().new();
        if (dart.test((t102$ = (t102 = settings, t102 == null ? null : t102.isScrolledUnder), t102$ == null ? this[S$1._scrolledUnder] : t102$))) t101.add(material_state.MaterialState.scrolledUnder);
        return t101;
      })();
      let hasDrawer = (t102$1 = (t102$0 = scaffold, t102$0 == null ? null : t102$0.hasDrawer), t102$1 == null ? false : t102$1);
      let hasEndDrawer = (t102$3 = (t102$2 = scaffold, t102$2 == null ? null : t102$2.hasEndDrawer), t102$3 == null ? false : t102$3);
      let canPop = (t102$5 = (t102$4 = parentRoute, t102$4 == null ? null : t102$4.canPop), t102$5 == null ? false : t102$5);
      let useCloseButton = pages.PageRoute.is(parentRoute) && dart.test(parentRoute.fullscreenDialog);
      let toolbarHeight = (t102$7 = (t102$6 = this.widget.toolbarHeight, t102$6 == null ? appBarTheme.toolbarHeight : t102$6), t102$7 == null ? 56 : t102$7);
      let backwardsCompatibility = (t102$9 = (t102$8 = this.widget.backwardsCompatibility, t102$8 == null ? appBarTheme.backwardsCompatibility : t102$8), t102$9 == null ? true : t102$9);
      let backgroundColor = dart.test(backwardsCompatibility) ? (t102$11 = (t102$10 = this.widget.backgroundColor, t102$10 == null ? appBarTheme.backgroundColor : t102$10), t102$11 == null ? theme.primaryColor : t102$11) : this[S$1._resolveColor](states, this.widget.backgroundColor, appBarTheme.backgroundColor, colorScheme.brightness == ui.Brightness.dark ? colorScheme.surface : colorScheme.primary);
      let foregroundColor = (t102$13 = (t102$12 = this.widget.foregroundColor, t102$12 == null ? appBarTheme.foregroundColor : t102$12), t102$13 == null ? colorScheme.brightness == ui.Brightness.dark ? colorScheme.onSurface : colorScheme.onPrimary : t102$13);
      let overallIconTheme = dart.test(backwardsCompatibility) ? (t102$15 = (t102$14 = this.widget.iconTheme, t102$14 == null ? appBarTheme.iconTheme : t102$14), t102$15 == null ? theme.primaryIconTheme : t102$15) : (t102$17 = (t102$16 = this.widget.iconTheme, t102$16 == null ? appBarTheme.iconTheme : t102$16), t102$17 == null ? theme.iconTheme.copyWith({color: foregroundColor}) : t102$17);
      let actionsIconTheme = (t102$19 = (t102$18 = this.widget.actionsIconTheme, t102$18 == null ? appBarTheme.actionsIconTheme : t102$18), t102$19 == null ? overallIconTheme : t102$19);
      let toolbarTextStyle = dart.test(backwardsCompatibility) ? (t102$22 = (t102$21 = (t102$20 = this.widget.textTheme, t102$20 == null ? null : t102$20.bodyText2), t102$21 == null ? (t103 = appBarTheme.textTheme, t103 == null ? null : t103.bodyText2) : t102$21), t102$22 == null ? theme.primaryTextTheme.bodyText2 : t102$22) : (t102$24 = (t102$23 = this.widget.toolbarTextStyle, t102$23 == null ? appBarTheme.toolbarTextStyle : t102$23), t102$24 == null ? (t103$ = theme.textTheme.bodyText2, t103$ == null ? null : t103$.copyWith({color: foregroundColor})) : t102$24);
      let titleTextStyle = dart.test(backwardsCompatibility) ? (t102$27 = (t102$26 = (t102$25 = this.widget.textTheme, t102$25 == null ? null : t102$25.headline6), t102$26 == null ? (t103$0 = appBarTheme.textTheme, t103$0 == null ? null : t103$0.headline6) : t102$26), t102$27 == null ? theme.primaryTextTheme.headline6 : t102$27) : (t102$29 = (t102$28 = this.widget.titleTextStyle, t102$28 == null ? appBarTheme.titleTextStyle : t102$28), t102$29 == null ? (t103$1 = theme.textTheme.headline6, t103$1 == null ? null : t103$1.copyWith({color: foregroundColor})) : t102$29);
      if (this.widget.toolbarOpacity !== 1.0) {
        let opacity = (C[852] || CT.C852).transform(this.widget.toolbarOpacity);
        if ((t102$30 = titleTextStyle, t102$30 == null ? null : t102$30.color) != null) titleTextStyle = dart.nullCheck(titleTextStyle).copyWith({color: dart.nullCheck(titleTextStyle.color).withOpacity(opacity)});
        if ((t102$31 = toolbarTextStyle, t102$31 == null ? null : t102$31.color) != null) toolbarTextStyle = dart.nullCheck(toolbarTextStyle).copyWith({color: dart.nullCheck(toolbarTextStyle.color).withOpacity(opacity)});
        overallIconTheme = overallIconTheme.copyWith({opacity: dart.notNull(opacity) * dart.notNull((t102$32 = overallIconTheme.opacity, t102$32 == null ? 1.0 : t102$32))});
        actionsIconTheme = actionsIconTheme.copyWith({opacity: dart.notNull(opacity) * dart.notNull((t102$33 = actionsIconTheme.opacity, t102$33 == null ? 1.0 : t102$33))});
      }
      let leading = this.widget.leading;
      if (leading == null && dart.test(this.widget.automaticallyImplyLeading)) {
        if (dart.test(hasDrawer)) {
          leading = new icon_button.IconButton.new({icon: C[853] || CT.C853, iconSize: (t102$34 = overallIconTheme.size, t102$34 == null ? 24.0 : t102$34), onPressed: dart.bind(this, S$1._handleDrawerButton), tooltip: material_localizations.MaterialLocalizations.of(context).openAppDrawerTooltip, $creationLocationd_0dea112b090073317d4: C[856] || CT.C856});
        } else {
          if (!dart.test(hasEndDrawer) && dart.test(canPop)) leading = useCloseButton ? C[857] || CT.C857 : C[859] || CT.C859;
        }
      }
      if (leading != null) {
        leading = new basic.ConstrainedBox.new({constraints: new box$.BoxConstraints.tightFor({width: (t102$35 = this.widget.leadingWidth, t102$35 == null ? 56 : t102$35)}), child: leading, $creationLocationd_0dea112b090073317d4: C[861] || CT.C861});
      }
      let title = this.widget.title;
      if (title != null) {
        let namesRoute = null;
        switch (theme.platform) {
          case C[11] || CT.C11:
          case C[12] || CT.C12:
          case C[13] || CT.C13:
          case C[14] || CT.C14:
          {
            namesRoute = true;
            break;
          }
          case C[15] || CT.C15:
          case C[16] || CT.C16:
          {
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
        title = new app_bar._AppBarTitleBox.new({child: title, $creationLocationd_0dea112b090073317d4: C[862] || CT.C862});
        if (!dart.test(this.widget.excludeHeaderSemantics)) {
          title = new basic.Semantics.new({namesRoute: namesRoute, header: true, child: title, $creationLocationd_0dea112b090073317d4: C[863] || CT.C863});
        }
        title = new text$.DefaultTextStyle.new({style: dart.nullCheck(titleTextStyle), softWrap: false, overflow: text_painter.TextOverflow.ellipsis, child: title, $creationLocationd_0dea112b090073317d4: C[864] || CT.C864});
        let mediaQueryData = media_query.MediaQuery.of(context);
        title = new media_query.MediaQuery.new({data: mediaQueryData.copyWith({textScaleFactor: math.min(core.double, mediaQueryData.textScaleFactor, 1.34)}), child: title, $creationLocationd_0dea112b090073317d4: C[865] || CT.C865});
      }
      let actions = null;
      if (this.widget.actions != null && dart.test(dart.nullCheck(this.widget.actions)[S.$isNotEmpty])) {
        actions = new basic.Row.new({mainAxisSize: flex.MainAxisSize.min, crossAxisAlignment: flex.CrossAxisAlignment.stretch, children: dart.nullCheck(this.widget.actions), $creationLocationd_0dea112b090073317d4: C[866] || CT.C866});
      } else if (dart.test(hasEndDrawer)) {
        actions = new icon_button.IconButton.new({icon: C[867] || CT.C867, iconSize: (t102$36 = overallIconTheme.size, t102$36 == null ? 24.0 : t102$36), onPressed: dart.bind(this, S$1._handleDrawerButtonEnd), tooltip: material_localizations.MaterialLocalizations.of(context).openAppDrawerTooltip, $creationLocationd_0dea112b090073317d4: C[869] || CT.C869});
      }
      if (actions != null) {
        actions = icon_theme.IconTheme.merge({data: actionsIconTheme, child: actions});
      }
      let toolbar = new navigation_toolbar.NavigationToolbar.new({leading: leading, middle: title, trailing: actions, centerMiddle: this.widget[S$1._getEffectiveCenterTitle$1](theme), middleSpacing: (t102$38 = (t102$37 = this.widget.titleSpacing, t102$37 == null ? appBarTheme.titleSpacing : t102$37), t102$38 == null ? 16 : t102$38), $creationLocationd_0dea112b090073317d4: C[870] || CT.C870});
      let appBar = new basic.ClipRect.new({child: new basic.CustomSingleChildLayout.new({delegate: new app_bar._ToolbarContainerLayout.new(toolbarHeight), child: icon_theme.IconTheme.merge({data: overallIconTheme, child: new text$.DefaultTextStyle.new({style: dart.nullCheck(toolbarTextStyle), child: toolbar, $creationLocationd_0dea112b090073317d4: C[871] || CT.C871})}), $creationLocationd_0dea112b090073317d4: C[872] || CT.C872}), $creationLocationd_0dea112b090073317d4: C[873] || CT.C873});
      if (this.widget.bottom != null) {
        appBar = new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: (() => {
            let t102 = T$.JSArrayOfWidget().of([new basic.Flexible.new({child: new basic.ConstrainedBox.new({constraints: new box$.BoxConstraints.new({maxHeight: toolbarHeight}), child: appBar, $creationLocationd_0dea112b090073317d4: C[874] || CT.C874}), $creationLocationd_0dea112b090073317d4: C[875] || CT.C875})]);
            if (this.widget.bottomOpacity === 1.0)
              t102[S.$add](dart.nullCheck(this.widget.bottom));
            else
              t102[S.$add](new basic.Opacity.new({opacity: (C[852] || CT.C852).transform(this.widget.bottomOpacity), child: this.widget.bottom, $creationLocationd_0dea112b090073317d4: C[876] || CT.C876}));
            return t102;
          })(), $creationLocationd_0dea112b090073317d4: C[877] || CT.C877});
      }
      if (dart.test(this.widget.primary)) {
        appBar = new safe_area.SafeArea.new({bottom: false, top: true, child: appBar, $creationLocationd_0dea112b090073317d4: C[878] || CT.C878});
      }
      appBar = new basic.Align.new({alignment: alignment.Alignment.topCenter, child: appBar, $creationLocationd_0dea112b090073317d4: C[879] || CT.C879});
      if (this.widget.flexibleSpace != null) {
        appBar = new basic.Stack.new({fit: stack.StackFit.passthrough, children: T$.JSArrayOfWidget().of([new basic.Semantics.new({sortKey: C[880] || CT.C880, explicitChildNodes: true, child: this.widget.flexibleSpace, $creationLocationd_0dea112b090073317d4: C[881] || CT.C881}), new basic.Semantics.new({sortKey: C[882] || CT.C882, explicitChildNodes: true, child: new material.Material.new({type: material.MaterialType.transparency, child: appBar, $creationLocationd_0dea112b090073317d4: C[883] || CT.C883}), $creationLocationd_0dea112b090073317d4: C[884] || CT.C884})]), $creationLocationd_0dea112b090073317d4: C[885] || CT.C885});
      }
      let overlayStyle = dart.test(backwardsCompatibility) ? this[S$1._systemOverlayStyleForBrightness]((t103$3 = (t103$2 = this.widget.brightness, t103$2 == null ? appBarTheme.brightness : t103$2), t103$3 == null ? theme.primaryColorBrightness : t103$3)) : (t103$5 = (t103$4 = this.widget.systemOverlayStyle, t103$4 == null ? appBarTheme.systemOverlayStyle : t103$4), t103$5 == null ? this[S$1._systemOverlayStyleForBrightness](theme_data.ThemeData.estimateBrightnessForColor(backgroundColor)) : t103$5);
      return new basic.Semantics.new({container: true, child: new (T$.AnnotatedRegionOfSystemUiOverlayStyle()).new({value: overlayStyle, child: new material.Material.new({color: backgroundColor, elevation: (t103$7 = (t103$6 = this.widget.elevation, t103$6 == null ? appBarTheme.elevation : t103$6), t103$7 == null ? 4 : t103$7), shadowColor: (t103$9 = (t103$8 = this.widget.shadowColor, t103$8 == null ? appBarTheme.shadowColor : t103$8), t103$9 == null ? app_bar._AppBarState._defaultShadowColor : t103$9), shape: this.widget.shape, child: new basic.Semantics.new({explicitChildNodes: true, child: appBar, $creationLocationd_0dea112b090073317d4: C[886] || CT.C886}), $creationLocationd_0dea112b090073317d4: C[887] || CT.C887}), $creationLocationd_0dea112b090073317d4: C[888] || CT.C888}), $creationLocationd_0dea112b090073317d4: C[889] || CT.C889});
    }
  };
  (app_bar._AppBarState.new = function() {
    this[S$1._scrollNotificationObserver] = null;
    this[S$1._scrolledUnder] = false;
    app_bar._AppBarState.__proto__.new.call(this);
    ;
  }).prototype = app_bar._AppBarState.prototype;
  dart.addTypeTests(app_bar._AppBarState);
  dart.addTypeCaches(app_bar._AppBarState);
  dart.setMethodSignature(app_bar._AppBarState, () => ({
    __proto__: dart.getMethods(app_bar._AppBarState.__proto__),
    [S$1._handleDrawerButton]: dart.fnType(dart.void, []),
    [S$1._handleDrawerButtonEnd]: dart.fnType(dart.void, []),
    [S$1._handleScrollNotification$1]: dart.fnType(dart.void, [scroll_notification.ScrollNotification]),
    [S$1._resolveColor]: dart.fnType(ui.Color, [core.Set$(material_state.MaterialState), dart.nullable(ui.Color), dart.nullable(ui.Color), ui.Color]),
    [S$1._systemOverlayStyleForBrightness]: dart.fnType(system_chrome.SystemUiOverlayStyle, [ui.Brightness]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(app_bar._AppBarState, I[136]);
  dart.setFieldSignature(app_bar._AppBarState, () => ({
    __proto__: dart.getFields(app_bar._AppBarState.__proto__),
    [S$1._scrollNotificationObserver]: dart.fieldType(dart.nullable(scroll_notification_observer.ScrollNotificationObserverState)),
    [S$1._scrolledUnder]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(app_bar._AppBarState, {
    /*app_bar._AppBarState._defaultElevation*/get _defaultElevation() {
      return 4;
    },
    /*app_bar._AppBarState._defaultShadowColor*/get _defaultShadowColor() {
      return C[66] || CT.C66;
    }
  }, false);
  app_bar._SliverAppBarDelegate = class _SliverAppBarDelegate extends sliver_persistent_header.SliverPersistentHeaderDelegate {
    get vsync() {
      return this[S$1.vsync$1];
    }
    set vsync(value) {
      super.vsync = value;
    }
    get snapConfiguration() {
      return this[S$1.snapConfiguration];
    }
    set snapConfiguration(value) {
      super.snapConfiguration = value;
    }
    get stretchConfiguration() {
      return this[S$1.stretchConfiguration];
    }
    set stretchConfiguration(value) {
      super.stretchConfiguration = value;
    }
    get showOnScreenConfiguration() {
      return this[S$1.showOnScreenConfiguration];
    }
    set showOnScreenConfiguration(value) {
      super.showOnScreenConfiguration = value;
    }
    get minExtent() {
      return this.collapsedHeight;
    }
    get maxExtent() {
      let t104, t103;
      return math.max(core.double, dart.notNull(this.topPadding) + dart.notNull((t103 = this.expandedHeight, t103 == null ? dart.notNull((t104 = this.toolbarHeight, t104 == null ? 56 : t104)) + dart.notNull(this[S$1._bottomHeight]) : t103)), this.minExtent);
    }
    build(context, shrinkOffset, overlapsContent) {
      let t103, t103$;
      if (context == null) dart.nullFailed(I[135], 1212, 29, "context");
      if (shrinkOffset == null) dart.nullFailed(I[135], 1212, 45, "shrinkOffset");
      if (overlapsContent == null) dart.nullFailed(I[135], 1212, 64, "overlapsContent");
      let visibleMainHeight = dart.notNull(this.maxExtent) - dart.notNull(shrinkOffset) - dart.notNull(this.topPadding);
      let extraToolbarHeight = math.max(core.double, dart.notNull(this.minExtent) - dart.notNull(this[S$1._bottomHeight]) - dart.notNull(this.topPadding) - dart.notNull((t103 = this.toolbarHeight, t103 == null ? 56 : t103)), 0.0);
      let visibleToolbarHeight = visibleMainHeight - dart.notNull(this[S$1._bottomHeight]) - extraToolbarHeight;
      let isScrolledUnder = dart.test(overlapsContent) || dart.test(this.pinned) && dart.notNull(shrinkOffset) > dart.notNull(this.maxExtent) - dart.notNull(this.minExtent);
      let isPinnedWithOpacityFade = dart.test(this.pinned) && dart.test(this.floating) && this.bottom != null && extraToolbarHeight === 0.0;
      let toolbarOpacity = !dart.test(this.pinned) || isPinnedWithOpacityFade ? (visibleToolbarHeight / dart.notNull((t103$ = this.toolbarHeight, t103$ == null ? 56 : t103$)))[S.$clamp](0.0, 1.0) : 1.0;
      let appBar = flexible_space_bar.FlexibleSpaceBar.createSettings({minExtent: this.minExtent, maxExtent: this.maxExtent, currentExtent: math.max(core.double, this.minExtent, dart.notNull(this.maxExtent) - dart.notNull(shrinkOffset)), toolbarOpacity: toolbarOpacity, isScrolledUnder: isScrolledUnder, child: new app_bar.AppBar.new({leading: this.leading, automaticallyImplyLeading: this.automaticallyImplyLeading, title: this.title, actions: this.actions, flexibleSpace: this.title == null && this.flexibleSpace != null && !dart.test(this.excludeHeaderSemantics) ? new basic.Semantics.new({header: true, child: this.flexibleSpace, $creationLocationd_0dea112b090073317d4: C[890] || CT.C890}) : this.flexibleSpace, bottom: this.bottom, elevation: dart.test(this.forceElevated) || isScrolledUnder ? this.elevation : 0.0, shadowColor: this.shadowColor, backgroundColor: this.backgroundColor, foregroundColor: this.foregroundColor, brightness: this.brightness, iconTheme: this.iconTheme, actionsIconTheme: this.actionsIconTheme, textTheme: this.textTheme, primary: this.primary, centerTitle: this.centerTitle, excludeHeaderSemantics: this.excludeHeaderSemantics, titleSpacing: this.titleSpacing, shape: this.shape, toolbarOpacity: toolbarOpacity, bottomOpacity: dart.test(this.pinned) ? 1.0 : (visibleMainHeight / dart.notNull(this[S$1._bottomHeight]))[S.$clamp](0.0, 1.0), toolbarHeight: this.toolbarHeight, leadingWidth: this.leadingWidth, backwardsCompatibility: this.backwardsCompatibility, toolbarTextStyle: this.toolbarTextStyle, titleTextStyle: this.titleTextStyle, systemOverlayStyle: this.systemOverlayStyle, $creationLocationd_0dea112b090073317d4: C[891] || CT.C891})});
      return appBar;
    }
    shouldRebuild(oldDelegate) {
      app_bar._SliverAppBarDelegate.as(oldDelegate);
      if (oldDelegate == null) dart.nullFailed(I[135], 1268, 54, "oldDelegate");
      return !dart.equals(this.leading, oldDelegate.leading) || this.automaticallyImplyLeading != oldDelegate.automaticallyImplyLeading || !dart.equals(this.title, oldDelegate.title) || !dart.equals(this.actions, oldDelegate.actions) || !dart.equals(this.flexibleSpace, oldDelegate.flexibleSpace) || !dart.equals(this.bottom, oldDelegate.bottom) || this[S$1._bottomHeight] != oldDelegate[S$1._bottomHeight] || this.elevation != oldDelegate.elevation || !dart.equals(this.shadowColor, oldDelegate.shadowColor) || !dart.equals(this.backgroundColor, oldDelegate.backgroundColor) || !dart.equals(this.foregroundColor, oldDelegate.foregroundColor) || this.brightness != oldDelegate.brightness || !dart.equals(this.iconTheme, oldDelegate.iconTheme) || !dart.equals(this.actionsIconTheme, oldDelegate.actionsIconTheme) || !dart.equals(this.textTheme, oldDelegate.textTheme) || this.primary != oldDelegate.primary || this.centerTitle != oldDelegate.centerTitle || this.titleSpacing != oldDelegate.titleSpacing || this.expandedHeight != oldDelegate.expandedHeight || this.topPadding != oldDelegate.topPadding || this.pinned != oldDelegate.pinned || this.floating != oldDelegate.floating || !dart.equals(this.vsync, oldDelegate.vsync) || !dart.equals(this.snapConfiguration, oldDelegate.snapConfiguration) || !dart.equals(this.stretchConfiguration, oldDelegate.stretchConfiguration) || !dart.equals(this.showOnScreenConfiguration, oldDelegate.showOnScreenConfiguration) || this.forceElevated != oldDelegate.forceElevated || this.toolbarHeight != oldDelegate.toolbarHeight || this.leadingWidth != oldDelegate.leadingWidth || this.backwardsCompatibility != oldDelegate.backwardsCompatibility || !dart.equals(this.toolbarTextStyle, oldDelegate.toolbarTextStyle) || !dart.equals(this.titleTextStyle, oldDelegate.titleTextStyle) || !dart.equals(this.systemOverlayStyle, oldDelegate.systemOverlayStyle);
    }
    toString() {
      return dart.str(diagnostics.describeIdentity(this)) + "(topPadding: " + this.topPadding[S$1.$toStringAsFixed](1) + ", bottomHeight: " + this[S$1._bottomHeight][S$1.$toStringAsFixed](1) + ", ...)";
    }
  };
  (app_bar._SliverAppBarDelegate.new = function(opts) {
    let t103, t103$;
    let leading = opts && 'leading' in opts ? opts.leading : null;
    let automaticallyImplyLeading = opts && 'automaticallyImplyLeading' in opts ? opts.automaticallyImplyLeading : null;
    if (automaticallyImplyLeading == null) dart.nullFailed(I[135], 1119, 19, "automaticallyImplyLeading");
    let title = opts && 'title' in opts ? opts.title : null;
    let actions = opts && 'actions' in opts ? opts.actions : null;
    let flexibleSpace = opts && 'flexibleSpace' in opts ? opts.flexibleSpace : null;
    let bottom = opts && 'bottom' in opts ? opts.bottom : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let forceElevated = opts && 'forceElevated' in opts ? opts.forceElevated : null;
    if (forceElevated == null) dart.nullFailed(I[135], 1126, 19, "forceElevated");
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
    let brightness = opts && 'brightness' in opts ? opts.brightness : null;
    let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
    let actionsIconTheme = opts && 'actionsIconTheme' in opts ? opts.actionsIconTheme : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let primary = opts && 'primary' in opts ? opts.primary : null;
    if (primary == null) dart.nullFailed(I[135], 1133, 19, "primary");
    let centerTitle = opts && 'centerTitle' in opts ? opts.centerTitle : null;
    let excludeHeaderSemantics = opts && 'excludeHeaderSemantics' in opts ? opts.excludeHeaderSemantics : null;
    if (excludeHeaderSemantics == null) dart.nullFailed(I[135], 1135, 19, "excludeHeaderSemantics");
    let titleSpacing = opts && 'titleSpacing' in opts ? opts.titleSpacing : null;
    let expandedHeight = opts && 'expandedHeight' in opts ? opts.expandedHeight : null;
    let collapsedHeight = opts && 'collapsedHeight' in opts ? opts.collapsedHeight : null;
    if (collapsedHeight == null) dart.nullFailed(I[135], 1138, 19, "collapsedHeight");
    let topPadding = opts && 'topPadding' in opts ? opts.topPadding : null;
    if (topPadding == null) dart.nullFailed(I[135], 1139, 19, "topPadding");
    let floating = opts && 'floating' in opts ? opts.floating : null;
    if (floating == null) dart.nullFailed(I[135], 1140, 19, "floating");
    let pinned = opts && 'pinned' in opts ? opts.pinned : null;
    if (pinned == null) dart.nullFailed(I[135], 1141, 19, "pinned");
    let vsync = opts && 'vsync' in opts ? opts.vsync : null;
    if (vsync == null) dart.nullFailed(I[135], 1142, 19, "vsync");
    let snapConfiguration = opts && 'snapConfiguration' in opts ? opts.snapConfiguration : null;
    let stretchConfiguration = opts && 'stretchConfiguration' in opts ? opts.stretchConfiguration : null;
    let showOnScreenConfiguration = opts && 'showOnScreenConfiguration' in opts ? opts.showOnScreenConfiguration : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let toolbarHeight = opts && 'toolbarHeight' in opts ? opts.toolbarHeight : null;
    let leadingWidth = opts && 'leadingWidth' in opts ? opts.leadingWidth : null;
    let backwardsCompatibility = opts && 'backwardsCompatibility' in opts ? opts.backwardsCompatibility : null;
    let toolbarTextStyle = opts && 'toolbarTextStyle' in opts ? opts.toolbarTextStyle : null;
    let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
    let systemOverlayStyle = opts && 'systemOverlayStyle' in opts ? opts.systemOverlayStyle : null;
    this.leading = leading;
    this.automaticallyImplyLeading = automaticallyImplyLeading;
    this.title = title;
    this.actions = actions;
    this.flexibleSpace = flexibleSpace;
    this.bottom = bottom;
    this.elevation = elevation;
    this.shadowColor = shadowColor;
    this.forceElevated = forceElevated;
    this.backgroundColor = backgroundColor;
    this.foregroundColor = foregroundColor;
    this.brightness = brightness;
    this.iconTheme = iconTheme;
    this.actionsIconTheme = actionsIconTheme;
    this.textTheme = textTheme;
    this.primary = primary;
    this.centerTitle = centerTitle;
    this.excludeHeaderSemantics = excludeHeaderSemantics;
    this.titleSpacing = titleSpacing;
    this.expandedHeight = expandedHeight;
    this.collapsedHeight = collapsedHeight;
    this.topPadding = topPadding;
    this.floating = floating;
    this.pinned = pinned;
    this[S$1.vsync$1] = vsync;
    this[S$1.snapConfiguration] = snapConfiguration;
    this[S$1.stretchConfiguration] = stretchConfiguration;
    this[S$1.showOnScreenConfiguration] = showOnScreenConfiguration;
    this.shape = shape;
    this.toolbarHeight = toolbarHeight;
    this.leadingWidth = leadingWidth;
    this.backwardsCompatibility = backwardsCompatibility;
    this.toolbarTextStyle = toolbarTextStyle;
    this.titleTextStyle = titleTextStyle;
    this.systemOverlayStyle = systemOverlayStyle;
    if (!(dart.test(primary) || topPadding === 0.0)) dart.assertFailed(null, I[135], 1153, 15, "primary || topPadding == 0.0");
    if (!(!dart.test(floating) || snapConfiguration == null && showOnScreenConfiguration == null || vsync != null)) dart.assertFailed("vsync cannot be null when snapConfiguration or showOnScreenConfiguration is not null, and floating is true", I[135], 1155, 10, "!floating || (snapConfiguration == null && showOnScreenConfiguration == null) || vsync != null");
    this[S$1._bottomHeight] = (t103$ = (t103 = bottom, t103 == null ? null : t103.preferredSize.height), t103$ == null ? 0.0 : t103$);
    app_bar._SliverAppBarDelegate.__proto__.new.call(this);
    ;
  }).prototype = app_bar._SliverAppBarDelegate.prototype;
  dart.addTypeTests(app_bar._SliverAppBarDelegate);
  dart.addTypeCaches(app_bar._SliverAppBarDelegate);
  dart.setMethodSignature(app_bar._SliverAppBarDelegate, () => ({
    __proto__: dart.getMethods(app_bar._SliverAppBarDelegate.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext, core.double, core.bool]),
    shouldRebuild: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(app_bar._SliverAppBarDelegate, () => ({
    __proto__: dart.getGetters(app_bar._SliverAppBarDelegate.__proto__),
    minExtent: core.double,
    maxExtent: core.double
  }));
  dart.setLibraryUri(app_bar._SliverAppBarDelegate, I[136]);
  dart.setFieldSignature(app_bar._SliverAppBarDelegate, () => ({
    __proto__: dart.getFields(app_bar._SliverAppBarDelegate.__proto__),
    leading: dart.finalFieldType(dart.nullable(framework.Widget)),
    automaticallyImplyLeading: dart.finalFieldType(core.bool),
    title: dart.finalFieldType(dart.nullable(framework.Widget)),
    actions: dart.finalFieldType(dart.nullable(core.List$(framework.Widget))),
    flexibleSpace: dart.finalFieldType(dart.nullable(framework.Widget)),
    bottom: dart.finalFieldType(dart.nullable(preferred_size.PreferredSizeWidget)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    shadowColor: dart.finalFieldType(dart.nullable(ui.Color)),
    forceElevated: dart.finalFieldType(core.bool),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    foregroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    brightness: dart.finalFieldType(dart.nullable(ui.Brightness)),
    iconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    actionsIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    textTheme: dart.finalFieldType(dart.nullable(text_theme.TextTheme)),
    primary: dart.finalFieldType(core.bool),
    centerTitle: dart.finalFieldType(dart.nullable(core.bool)),
    excludeHeaderSemantics: dart.finalFieldType(core.bool),
    titleSpacing: dart.finalFieldType(dart.nullable(core.double)),
    expandedHeight: dart.finalFieldType(dart.nullable(core.double)),
    collapsedHeight: dart.finalFieldType(core.double),
    topPadding: dart.finalFieldType(core.double),
    floating: dart.finalFieldType(core.bool),
    pinned: dart.finalFieldType(core.bool),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    toolbarHeight: dart.finalFieldType(dart.nullable(core.double)),
    leadingWidth: dart.finalFieldType(dart.nullable(core.double)),
    backwardsCompatibility: dart.finalFieldType(dart.nullable(core.bool)),
    toolbarTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    titleTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    systemOverlayStyle: dart.finalFieldType(dart.nullable(system_chrome.SystemUiOverlayStyle)),
    [S$1._bottomHeight]: dart.finalFieldType(core.double),
    vsync: dart.finalFieldType(ticker.TickerProvider),
    snapConfiguration: dart.finalFieldType(dart.nullable(sliver_persistent_header$.FloatingHeaderSnapConfiguration)),
    stretchConfiguration: dart.finalFieldType(dart.nullable(sliver_persistent_header$.OverScrollHeaderStretchConfiguration)),
    showOnScreenConfiguration: dart.finalFieldType(dart.nullable(sliver_persistent_header$.PersistentHeaderShowOnScreenConfiguration))
  }));
  dart.defineExtensionMethods(app_bar._SliverAppBarDelegate, ['toString']);
  app_bar.SliverAppBar = class SliverAppBar extends framework.StatefulWidget {
    get leading() {
      return this[S$1.leading$5];
    }
    set leading(value) {
      super.leading = value;
    }
    get automaticallyImplyLeading() {
      return this[S$1.automaticallyImplyLeading$1];
    }
    set automaticallyImplyLeading(value) {
      super.automaticallyImplyLeading = value;
    }
    get title() {
      return this[S$1.title$4];
    }
    set title(value) {
      super.title = value;
    }
    get actions() {
      return this[S$1.actions$2];
    }
    set actions(value) {
      super.actions = value;
    }
    get flexibleSpace() {
      return this[S$1.flexibleSpace$1];
    }
    set flexibleSpace(value) {
      super.flexibleSpace = value;
    }
    get bottom() {
      return this[S$1.bottom$1];
    }
    set bottom(value) {
      super.bottom = value;
    }
    get elevation() {
      return this[S$1.elevation$25];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get shadowColor() {
      return this[S$1.shadowColor$8];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get forceElevated() {
      return this[S$1.forceElevated];
    }
    set forceElevated(value) {
      super.forceElevated = value;
    }
    get backgroundColor() {
      return this[S$1.backgroundColor$21];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get foregroundColor() {
      return this[S$1.foregroundColor$4];
    }
    set foregroundColor(value) {
      super.foregroundColor = value;
    }
    get brightness() {
      return this[S$1.brightness$5];
    }
    set brightness(value) {
      super.brightness = value;
    }
    get iconTheme() {
      return this[S$1.iconTheme$3];
    }
    set iconTheme(value) {
      super.iconTheme = value;
    }
    get actionsIconTheme() {
      return this[S$1.actionsIconTheme$2];
    }
    set actionsIconTheme(value) {
      super.actionsIconTheme = value;
    }
    get textTheme() {
      return this[S$1.textTheme$6];
    }
    set textTheme(value) {
      super.textTheme = value;
    }
    get primary() {
      return this[S$1.primary$3];
    }
    set primary(value) {
      super.primary = value;
    }
    get centerTitle() {
      return this[S$1.centerTitle$3];
    }
    set centerTitle(value) {
      super.centerTitle = value;
    }
    get excludeHeaderSemantics() {
      return this[S$1.excludeHeaderSemantics$1];
    }
    set excludeHeaderSemantics(value) {
      super.excludeHeaderSemantics = value;
    }
    get titleSpacing() {
      return this[S$1.titleSpacing$2];
    }
    set titleSpacing(value) {
      super.titleSpacing = value;
    }
    get collapsedHeight() {
      return this[S$1.collapsedHeight];
    }
    set collapsedHeight(value) {
      super.collapsedHeight = value;
    }
    get expandedHeight() {
      return this[S$1.expandedHeight];
    }
    set expandedHeight(value) {
      super.expandedHeight = value;
    }
    get floating() {
      return this[S$1.floating];
    }
    set floating(value) {
      super.floating = value;
    }
    get pinned() {
      return this[S$1.pinned];
    }
    set pinned(value) {
      super.pinned = value;
    }
    get shape() {
      return this[S$1.shape$24];
    }
    set shape(value) {
      super.shape = value;
    }
    get snap() {
      return this[S$1.snap];
    }
    set snap(value) {
      super.snap = value;
    }
    get stretch() {
      return this[S$1.stretch];
    }
    set stretch(value) {
      super.stretch = value;
    }
    get stretchTriggerOffset() {
      return this[S$1.stretchTriggerOffset];
    }
    set stretchTriggerOffset(value) {
      super.stretchTriggerOffset = value;
    }
    get onStretchTrigger() {
      return this[S$1.onStretchTrigger];
    }
    set onStretchTrigger(value) {
      super.onStretchTrigger = value;
    }
    get toolbarHeight() {
      return this[S$1.toolbarHeight$3];
    }
    set toolbarHeight(value) {
      super.toolbarHeight = value;
    }
    get leadingWidth() {
      return this[S$1.leadingWidth$1];
    }
    set leadingWidth(value) {
      super.leadingWidth = value;
    }
    get backwardsCompatibility() {
      return this[S$1.backwardsCompatibility$2];
    }
    set backwardsCompatibility(value) {
      super.backwardsCompatibility = value;
    }
    get toolbarTextStyle() {
      return this[S$1.toolbarTextStyle$2];
    }
    set toolbarTextStyle(value) {
      super.toolbarTextStyle = value;
    }
    get titleTextStyle() {
      return this[S$1.titleTextStyle$3];
    }
    set titleTextStyle(value) {
      super.titleTextStyle = value;
    }
    get systemOverlayStyle() {
      return this[S$1.systemOverlayStyle$2];
    }
    set systemOverlayStyle(value) {
      super.systemOverlayStyle = value;
    }
    createState() {
      return new app_bar._SliverAppBarState.new();
    }
  };
  (app_bar.SliverAppBar.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let leading = opts && 'leading' in opts ? opts.leading : null;
    let automaticallyImplyLeading = opts && 'automaticallyImplyLeading' in opts ? opts.automaticallyImplyLeading : true;
    if (automaticallyImplyLeading == null) dart.nullFailed(I[135], 1506, 10, "automaticallyImplyLeading");
    let title = opts && 'title' in opts ? opts.title : null;
    let actions = opts && 'actions' in opts ? opts.actions : null;
    let flexibleSpace = opts && 'flexibleSpace' in opts ? opts.flexibleSpace : null;
    let bottom = opts && 'bottom' in opts ? opts.bottom : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let forceElevated = opts && 'forceElevated' in opts ? opts.forceElevated : false;
    if (forceElevated == null) dart.nullFailed(I[135], 1513, 10, "forceElevated");
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
    let brightness = opts && 'brightness' in opts ? opts.brightness : null;
    let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
    let actionsIconTheme = opts && 'actionsIconTheme' in opts ? opts.actionsIconTheme : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let primary = opts && 'primary' in opts ? opts.primary : true;
    if (primary == null) dart.nullFailed(I[135], 1520, 10, "primary");
    let centerTitle = opts && 'centerTitle' in opts ? opts.centerTitle : null;
    let excludeHeaderSemantics = opts && 'excludeHeaderSemantics' in opts ? opts.excludeHeaderSemantics : false;
    if (excludeHeaderSemantics == null) dart.nullFailed(I[135], 1522, 10, "excludeHeaderSemantics");
    let titleSpacing = opts && 'titleSpacing' in opts ? opts.titleSpacing : null;
    let collapsedHeight = opts && 'collapsedHeight' in opts ? opts.collapsedHeight : null;
    let expandedHeight = opts && 'expandedHeight' in opts ? opts.expandedHeight : null;
    let floating = opts && 'floating' in opts ? opts.floating : false;
    if (floating == null) dart.nullFailed(I[135], 1526, 10, "floating");
    let pinned = opts && 'pinned' in opts ? opts.pinned : false;
    if (pinned == null) dart.nullFailed(I[135], 1527, 10, "pinned");
    let snap = opts && 'snap' in opts ? opts.snap : false;
    if (snap == null) dart.nullFailed(I[135], 1528, 10, "snap");
    let stretch = opts && 'stretch' in opts ? opts.stretch : false;
    if (stretch == null) dart.nullFailed(I[135], 1529, 10, "stretch");
    let stretchTriggerOffset = opts && 'stretchTriggerOffset' in opts ? opts.stretchTriggerOffset : 100;
    if (stretchTriggerOffset == null) dart.nullFailed(I[135], 1530, 10, "stretchTriggerOffset");
    let onStretchTrigger = opts && 'onStretchTrigger' in opts ? opts.onStretchTrigger : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let toolbarHeight = opts && 'toolbarHeight' in opts ? opts.toolbarHeight : 56;
    if (toolbarHeight == null) dart.nullFailed(I[135], 1533, 10, "toolbarHeight");
    let leadingWidth = opts && 'leadingWidth' in opts ? opts.leadingWidth : null;
    let backwardsCompatibility = opts && 'backwardsCompatibility' in opts ? opts.backwardsCompatibility : null;
    let toolbarTextStyle = opts && 'toolbarTextStyle' in opts ? opts.toolbarTextStyle : null;
    let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
    let systemOverlayStyle = opts && 'systemOverlayStyle' in opts ? opts.systemOverlayStyle : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.leading$5] = leading;
    this[S$1.automaticallyImplyLeading$1] = automaticallyImplyLeading;
    this[S$1.title$4] = title;
    this[S$1.actions$2] = actions;
    this[S$1.flexibleSpace$1] = flexibleSpace;
    this[S$1.bottom$1] = bottom;
    this[S$1.elevation$25] = elevation;
    this[S$1.shadowColor$8] = shadowColor;
    this[S$1.forceElevated] = forceElevated;
    this[S$1.backgroundColor$21] = backgroundColor;
    this[S$1.foregroundColor$4] = foregroundColor;
    this[S$1.brightness$5] = brightness;
    this[S$1.iconTheme$3] = iconTheme;
    this[S$1.actionsIconTheme$2] = actionsIconTheme;
    this[S$1.textTheme$6] = textTheme;
    this[S$1.primary$3] = primary;
    this[S$1.centerTitle$3] = centerTitle;
    this[S$1.excludeHeaderSemantics$1] = excludeHeaderSemantics;
    this[S$1.titleSpacing$2] = titleSpacing;
    this[S$1.collapsedHeight] = collapsedHeight;
    this[S$1.expandedHeight] = expandedHeight;
    this[S$1.floating] = floating;
    this[S$1.pinned] = pinned;
    this[S$1.snap] = snap;
    this[S$1.stretch] = stretch;
    this[S$1.stretchTriggerOffset] = stretchTriggerOffset;
    this[S$1.onStretchTrigger] = onStretchTrigger;
    this[S$1.shape$24] = shape;
    this[S$1.toolbarHeight$3] = toolbarHeight;
    this[S$1.leadingWidth$1] = leadingWidth;
    this[S$1.backwardsCompatibility$2] = backwardsCompatibility;
    this[S$1.toolbarTextStyle$2] = toolbarTextStyle;
    this[S$1.titleTextStyle$3] = titleTextStyle;
    this[S$1.systemOverlayStyle$2] = systemOverlayStyle;
    if (!(automaticallyImplyLeading != null)) dart.assertFailed(null, I[135], 1539, 15, "automaticallyImplyLeading != null");
    if (!(forceElevated != null)) dart.assertFailed(null, I[135], 1540, 15, "forceElevated != null");
    if (!(primary != null)) dart.assertFailed(null, I[135], 1541, 15, "primary != null");
    if (!(floating != null)) dart.assertFailed(null, I[135], 1542, 15, "floating != null");
    if (!(pinned != null)) dart.assertFailed(null, I[135], 1543, 15, "pinned != null");
    if (!(snap != null)) dart.assertFailed(null, I[135], 1544, 15, "snap != null");
    if (!(stretch != null)) dart.assertFailed(null, I[135], 1545, 15, "stretch != null");
    if (!(toolbarHeight != null)) dart.assertFailed(null, I[135], 1546, 15, "toolbarHeight != null");
    if (!(dart.test(floating) || !dart.test(snap))) dart.assertFailed("The \"snap\" argument only makes sense for floating app bars.", I[135], 1547, 15, "floating || !snap");
    if (!(dart.notNull(stretchTriggerOffset) > 0.0)) dart.assertFailed(null, I[135], 1548, 15, "stretchTriggerOffset > 0.0");
    if (!(collapsedHeight == null || dart.notNull(collapsedHeight) >= dart.notNull(toolbarHeight))) dart.assertFailed("The \"collapsedHeight\" argument has to be larger than or equal to [toolbarHeight].", I[135], 1549, 15, "collapsedHeight == null || collapsedHeight >= toolbarHeight");
    app_bar.SliverAppBar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = app_bar.SliverAppBar.prototype;
  dart.addTypeTests(app_bar.SliverAppBar);
  dart.addTypeCaches(app_bar.SliverAppBar);
  dart.setMethodSignature(app_bar.SliverAppBar, () => ({
    __proto__: dart.getMethods(app_bar.SliverAppBar.__proto__),
    createState: dart.fnType(framework.State$(app_bar.SliverAppBar), [])
  }));
  dart.setLibraryUri(app_bar.SliverAppBar, I[136]);
  dart.setFieldSignature(app_bar.SliverAppBar, () => ({
    __proto__: dart.getFields(app_bar.SliverAppBar.__proto__),
    leading: dart.finalFieldType(dart.nullable(framework.Widget)),
    automaticallyImplyLeading: dart.finalFieldType(core.bool),
    title: dart.finalFieldType(dart.nullable(framework.Widget)),
    actions: dart.finalFieldType(dart.nullable(core.List$(framework.Widget))),
    flexibleSpace: dart.finalFieldType(dart.nullable(framework.Widget)),
    bottom: dart.finalFieldType(dart.nullable(preferred_size.PreferredSizeWidget)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    shadowColor: dart.finalFieldType(dart.nullable(ui.Color)),
    forceElevated: dart.finalFieldType(core.bool),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    foregroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    brightness: dart.finalFieldType(dart.nullable(ui.Brightness)),
    iconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    actionsIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    textTheme: dart.finalFieldType(dart.nullable(text_theme.TextTheme)),
    primary: dart.finalFieldType(core.bool),
    centerTitle: dart.finalFieldType(dart.nullable(core.bool)),
    excludeHeaderSemantics: dart.finalFieldType(core.bool),
    titleSpacing: dart.finalFieldType(dart.nullable(core.double)),
    collapsedHeight: dart.finalFieldType(dart.nullable(core.double)),
    expandedHeight: dart.finalFieldType(dart.nullable(core.double)),
    floating: dart.finalFieldType(core.bool),
    pinned: dart.finalFieldType(core.bool),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    snap: dart.finalFieldType(core.bool),
    stretch: dart.finalFieldType(core.bool),
    stretchTriggerOffset: dart.finalFieldType(core.double),
    onStretchTrigger: dart.finalFieldType(dart.nullable(dart.fnType(async.Future$(dart.void), []))),
    toolbarHeight: dart.finalFieldType(core.double),
    leadingWidth: dart.finalFieldType(dart.nullable(core.double)),
    backwardsCompatibility: dart.finalFieldType(dart.nullable(core.bool)),
    toolbarTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    titleTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    systemOverlayStyle: dart.finalFieldType(dart.nullable(system_chrome.SystemUiOverlayStyle))
  }));
  const State_TickerProviderStateMixin$36$7 = class State_TickerProviderStateMixin extends framework.State$(app_bar.SliverAppBar) {};
  (State_TickerProviderStateMixin$36$7.new = function() {
    ticker_provider.TickerProviderStateMixin$(app_bar.SliverAppBar)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$7.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$7.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$7, ticker_provider.TickerProviderStateMixin$(app_bar.SliverAppBar));
  app_bar._SliverAppBarState = class _SliverAppBarState extends State_TickerProviderStateMixin$36$7 {
    [S$1._updateSnapConfiguration]() {
      if (dart.test(this.widget.snap) && dart.test(this.widget.floating)) {
        this[S$1._snapConfiguration] = new sliver_persistent_header$.FloatingHeaderSnapConfiguration.new({curve: curves.Curves.easeOut, duration: C[143] || CT.C143});
      } else {
        this[S$1._snapConfiguration] = null;
      }
      this[S$1._showOnScreenConfiguration] = !!(dart.notNull(this.widget.floating) & dart.test(this.widget.snap)) ? C[892] || CT.C892 : null;
    }
    [S$1._updateStretchConfiguration]() {
      if (dart.test(this.widget.stretch)) {
        this[S$1._stretchConfiguration] = new sliver_persistent_header$.OverScrollHeaderStretchConfiguration.new({stretchTriggerOffset: this.widget.stretchTriggerOffset, onStretchTrigger: this.widget.onStretchTrigger});
      } else {
        this[S$1._stretchConfiguration] = null;
      }
    }
    initState() {
      super.initState();
      this[S$1._updateSnapConfiguration]();
      this[S$1._updateStretchConfiguration]();
    }
    didUpdateWidget(oldWidget) {
      app_bar.SliverAppBar.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[135], 1849, 37, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (this.widget.snap != oldWidget.snap || this.widget.floating != oldWidget.floating) this[S$1._updateSnapConfiguration]();
      if (this.widget.stretch != oldWidget.stretch) this[S$1._updateStretchConfiguration]();
    }
    build(context) {
      let t103, t103$, t103$0, t103$1;
      if (context == null) dart.nullFailed(I[135], 1858, 29, "context");
      if (!(!dart.test(this.widget.primary) || dart.test(debug.debugCheckHasMediaQuery(context)))) dart.assertFailed(null, I[135], 1859, 12, "!widget.primary || debugCheckHasMediaQuery(context)");
      let bottomHeight = (t103$ = (t103 = this.widget.bottom, t103 == null ? null : t103.preferredSize.height), t103$ == null ? 0.0 : t103$);
      let topPadding = dart.test(this.widget.primary) ? media_query.MediaQuery.of(context).padding.top : 0.0;
      let collapsedHeight = dart.test(this.widget.pinned) && dart.test(this.widget.floating) && this.widget.bottom != null ? dart.notNull((t103$0 = this.widget.collapsedHeight, t103$0 == null ? 0.0 : t103$0)) + dart.notNull(bottomHeight) + dart.notNull(topPadding) : dart.notNull((t103$1 = this.widget.collapsedHeight, t103$1 == null ? this.widget.toolbarHeight : t103$1)) + dart.notNull(bottomHeight) + dart.notNull(topPadding);
      return media_query.MediaQuery.removePadding({context: context, removeBottom: true, child: new sliver_persistent_header.SliverPersistentHeader.new({floating: this.widget.floating, pinned: this.widget.pinned, delegate: new app_bar._SliverAppBarDelegate.new({vsync: this, leading: this.widget.leading, automaticallyImplyLeading: this.widget.automaticallyImplyLeading, title: this.widget.title, actions: this.widget.actions, flexibleSpace: this.widget.flexibleSpace, bottom: this.widget.bottom, elevation: this.widget.elevation, shadowColor: this.widget.shadowColor, forceElevated: this.widget.forceElevated, backgroundColor: this.widget.backgroundColor, foregroundColor: this.widget.foregroundColor, brightness: this.widget.brightness, iconTheme: this.widget.iconTheme, actionsIconTheme: this.widget.actionsIconTheme, textTheme: this.widget.textTheme, primary: this.widget.primary, centerTitle: this.widget.centerTitle, excludeHeaderSemantics: this.widget.excludeHeaderSemantics, titleSpacing: this.widget.titleSpacing, expandedHeight: this.widget.expandedHeight, collapsedHeight: collapsedHeight, topPadding: topPadding, floating: this.widget.floating, pinned: this.widget.pinned, shape: this.widget.shape, snapConfiguration: this[S$1._snapConfiguration], stretchConfiguration: this[S$1._stretchConfiguration], showOnScreenConfiguration: this[S$1._showOnScreenConfiguration], toolbarHeight: this.widget.toolbarHeight, leadingWidth: this.widget.leadingWidth, backwardsCompatibility: this.widget.backwardsCompatibility, toolbarTextStyle: this.widget.toolbarTextStyle, titleTextStyle: this.widget.titleTextStyle, systemOverlayStyle: this.widget.systemOverlayStyle}), $creationLocationd_0dea112b090073317d4: C[893] || CT.C893}), $creationLocationd_0dea112b090073317d4: C[894] || CT.C894});
    }
  };
  (app_bar._SliverAppBarState.new = function() {
    this[S$1._snapConfiguration] = null;
    this[S$1._stretchConfiguration] = null;
    this[S$1._showOnScreenConfiguration] = null;
    app_bar._SliverAppBarState.__proto__.new.call(this);
    ;
  }).prototype = app_bar._SliverAppBarState.prototype;
  dart.addTypeTests(app_bar._SliverAppBarState);
  dart.addTypeCaches(app_bar._SliverAppBarState);
  dart.setMethodSignature(app_bar._SliverAppBarState, () => ({
    __proto__: dart.getMethods(app_bar._SliverAppBarState.__proto__),
    [S$1._updateSnapConfiguration]: dart.fnType(dart.void, []),
    [S$1._updateStretchConfiguration]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(app_bar._SliverAppBarState, I[136]);
  dart.setFieldSignature(app_bar._SliverAppBarState, () => ({
    __proto__: dart.getFields(app_bar._SliverAppBarState.__proto__),
    [S$1._snapConfiguration]: dart.fieldType(dart.nullable(sliver_persistent_header$.FloatingHeaderSnapConfiguration)),
    [S$1._stretchConfiguration]: dart.fieldType(dart.nullable(sliver_persistent_header$.OverScrollHeaderStretchConfiguration)),
    [S$1._showOnScreenConfiguration]: dart.fieldType(dart.nullable(sliver_persistent_header$.PersistentHeaderShowOnScreenConfiguration))
  }));
  app_bar._AppBarTitleBox = class _AppBarTitleBox extends framework.SingleChildRenderObjectWidget {
    createRenderObject(context) {
      if (context == null) dart.nullFailed(I[135], 1921, 57, "context");
      return new app_bar._RenderAppBarTitleBox.new({textDirection: basic.Directionality.of(context)});
    }
    updateRenderObject(context, renderObject) {
      if (context == null) dart.nullFailed(I[135], 1928, 40, "context");
      app_bar._RenderAppBarTitleBox.as(renderObject);
      if (renderObject == null) dart.nullFailed(I[135], 1928, 71, "renderObject");
      renderObject.textDirection = basic.Directionality.of(context);
    }
  };
  (app_bar._AppBarTitleBox.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[135], 1918, 53, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(child != null)) dart.assertFailed(null, I[135], 1918, 71, "child != null");
    app_bar._AppBarTitleBox.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = app_bar._AppBarTitleBox.prototype;
  dart.addTypeTests(app_bar._AppBarTitleBox);
  dart.addTypeCaches(app_bar._AppBarTitleBox);
  dart.setMethodSignature(app_bar._AppBarTitleBox, () => ({
    __proto__: dart.getMethods(app_bar._AppBarTitleBox.__proto__),
    createRenderObject: dart.fnType(app_bar._RenderAppBarTitleBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(app_bar._AppBarTitleBox, I[136]);
  app_bar._RenderAppBarTitleBox = class _RenderAppBarTitleBox extends shifted_box.RenderAligningShiftedBox {
    computeDryLayout(constraints) {
      if (constraints == null) dart.nullFailed(I[135], 1940, 40, "constraints");
      let innerConstraints = constraints.copyWith({maxHeight: 1 / 0});
      let childSize = dart.nullCheck(this.child).getDryLayout(innerConstraints);
      return constraints.constrain(childSize);
    }
    performLayout() {
      let innerConstraints = this.constraints.copyWith({maxHeight: 1 / 0});
      dart.nullCheck(this.child).layout(innerConstraints, {parentUsesSize: true});
      this.size = this.constraints.constrain(dart.nullCheck(this.child).size);
      this.alignChild();
    }
  };
  (app_bar._RenderAppBarTitleBox.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    app_bar._RenderAppBarTitleBox.__proto__.new.call(this, {child: child, alignment: alignment.Alignment.center, textDirection: textDirection});
    ;
  }).prototype = app_bar._RenderAppBarTitleBox.prototype;
  dart.addTypeTests(app_bar._RenderAppBarTitleBox);
  dart.addTypeCaches(app_bar._RenderAppBarTitleBox);
  dart.setLibraryUri(app_bar._RenderAppBarTitleBox, I[136]);
  dart.defineLazy(app_bar, {
    /*app_bar._kLeadingWidth*/get _kLeadingWidth() {
      return 56;
    },
    /*app_bar._kMaxTitleTextScaleFactor*/get _kMaxTitleTextScaleFactor() {
      return 1.34;
    }
  }, false);
  dart.trackLibraries("packages/flutter/src/material/icon_button.dart", {
    "package:flutter/src/material/icon_button.dart": icon_button,
    "package:flutter/src/material/back_button.dart": back_button,
    "package:flutter/src/material/time.dart": time,
    "package:flutter/src/material/ink_ripple.dart": ink_ripple,
    "package:flutter/src/material/button_style_button.dart": button_style_button,
    "package:flutter/src/material/text_button.dart": text_button,
    "package:flutter/src/material/snack_bar.dart": snack_bar,
    "package:flutter/src/material/floating_action_button_location.dart": floating_action_button_location,
    "package:flutter/src/material/floating_action_button.dart": floating_action_button,
    "package:flutter/src/material/flexible_space_bar.dart": flexible_space_bar,
    "package:flutter/src/material/toggle_buttons_theme.dart": toggle_buttons_theme,
    "package:flutter/src/material/time_picker_theme.dart": time_picker_theme,
    "package:flutter/src/material/text_selection_theme.dart": text_selection_theme,
    "package:flutter/src/material/text_button_theme.dart": text_button_theme,
    "package:flutter/src/material/tabs.dart": tabs$,
    "package:flutter/src/material/tab_bar_theme.dart": tab_bar_theme,
    "package:flutter/src/material/switch_theme.dart": switch_theme,
    "package:flutter/src/material/snack_bar_theme.dart": snack_bar_theme,
    "package:flutter/src/material/slider_theme.dart": slider_theme,
    "package:flutter/src/material/scrollbar_theme.dart": scrollbar_theme,
    "package:flutter/src/material/radio_theme.dart": radio_theme,
    "package:flutter/src/material/progress_indicator_theme.dart": progress_indicator_theme,
    "package:flutter/src/material/popup_menu_theme.dart": popup_menu_theme,
    "package:flutter/src/material/page_transitions_theme.dart": page_transitions_theme,
    "package:flutter/src/material/outlined_button_theme.dart": outlined_button_theme,
    "package:flutter/src/material/navigation_rail.dart": navigation_rail,
    "package:flutter/src/material/navigation_rail_theme.dart": navigation_rail_theme,
    "package:flutter/src/material/input_decorator.dart": input_decorator,
    "package:flutter/src/material/ink_splash.dart": ink_splash,
    "package:flutter/src/material/button_style.dart": button_style,
    "package:flutter/src/material/elevated_button_theme.dart": elevated_button_theme,
    "package:flutter/src/material/dialog_theme.dart": dialog_theme,
    "package:flutter/src/material/data_table_theme.dart": data_table_theme,
    "package:flutter/src/material/chip_theme.dart": chip_theme,
    "package:flutter/src/material/checkbox_theme.dart": checkbox_theme,
    "package:flutter/src/material/card_theme.dart": card_theme,
    "package:flutter/src/material/raised_button.dart": raised_button,
    "package:flutter/src/material/outline_button.dart": outline_button,
    "package:flutter/src/material/material_button.dart": material_button,
    "package:flutter/src/material/button.dart": button,
    "package:flutter/src/material/flat_button.dart": flat_button,
    "package:flutter/src/material/color_scheme.dart": color_scheme,
    "package:flutter/src/material/button_theme.dart": button_theme,
    "package:flutter/src/material/button_bar_theme.dart": button_bar_theme,
    "package:flutter/src/material/tooltip_theme.dart": tooltip_theme,
    "package:flutter/src/material/tooltip.dart": tooltip,
    "package:flutter/src/material/bottom_navigation_bar.dart": bottom_navigation_bar,
    "package:flutter/src/material/bottom_navigation_bar_theme.dart": bottom_navigation_bar_theme,
    "package:flutter/src/material/bottom_app_bar_theme.dart": bottom_app_bar_theme,
    "package:flutter/src/material/theme_data.dart": theme_data,
    "package:flutter/src/material/ink_highlight.dart": ink_highlight,
    "package:flutter/src/material/feedback.dart": feedback,
    "package:flutter/src/material/ink_well.dart": ink_well,
    "package:flutter/src/material/ink_decoration.dart": ink_decoration,
    "package:flutter/src/material/list_tile.dart": list_tile,
    "package:flutter/src/material/drawer.dart": drawer,
    "package:flutter/src/material/bottom_sheet.dart": bottom_sheet,
    "package:flutter/src/material/divider_theme.dart": divider_theme,
    "package:flutter/src/material/divider.dart": divider,
    "package:flutter/src/material/banner_theme.dart": banner_theme,
    "package:flutter/src/material/banner.dart": banner,
    "package:flutter/src/material/scaffold.dart": scaffold$,
    "package:flutter/src/material/elevation_overlay.dart": elevation_overlay,
    "package:flutter/src/material/material.dart": material,
    "package:flutter/src/material/debug.dart": debug$0,
    "package:flutter/src/material/material_localizations.dart": material_localizations,
    "package:flutter/src/material/theme.dart": theme$,
    "package:flutter/src/material/app_bar_theme.dart": app_bar_theme,
    "package:flutter/src/material/app_bar.dart": app_bar
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["icon_button.dart","back_button.dart","time.dart","ink_well.dart","ink_ripple.dart","material.dart","button_style_button.dart","text_button.dart","snack_bar.dart","floating_action_button_location.dart","floating_action_button.dart","flexible_space_bar.dart","toggle_buttons_theme.dart","time_picker_theme.dart","text_selection_theme.dart","text_button_theme.dart","tabs.dart","tab_bar_theme.dart","switch_theme.dart","snack_bar_theme.dart","slider_theme.dart","scrollbar_theme.dart","radio_theme.dart","progress_indicator_theme.dart","popup_menu_theme.dart","page_transitions_theme.dart","outlined_button_theme.dart","navigation_rail.dart","navigation_rail_theme.dart","input_decorator.dart","ink_splash.dart","button_style.dart","elevated_button_theme.dart","dialog_theme.dart","data_table_theme.dart","chip_theme.dart","checkbox_theme.dart","card_theme.dart","material_button.dart","raised_button.dart","outline_button.dart","button.dart","flat_button.dart","color_scheme.dart","button_theme.dart","button_bar_theme.dart","tooltip_theme.dart","tooltip.dart","bottom_navigation_bar.dart","bottom_navigation_bar_theme.dart","bottom_app_bar_theme.dart","theme_data.dart","ink_highlight.dart","feedback.dart","ink_decoration.dart","list_tile.dart","drawer.dart","bottom_sheet.dart","divider_theme.dart","divider.dart","banner_theme.dart","banner.dart","scaffold.dart","elevation_overlay.dart","debug.dart","material_localizations.dart","theme.dart","app_bar_theme.dart","app_bar.dart"],"names":[],"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CA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;UACK,AAAQ,OAAD;WACL,MAAM,YAAY,UAAU,6BAAW;WACvC,MAAM,YAAY,UAAU,6BAAW;;EAAyD;;QAQ9F;QACT;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;IATS;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;UACK,AAAQ,OAAD;IACT,kBAAE;IACG,qBAAE;IACD,wBAAE;IACF,wBAAE;IACD,yBAAE;IACC,4BAAE;IACJ,wBAAE;IACL,uBAAE;IACD,wBAAE;IACC,2BAAE;IACR,qBAAE;IACK,4BAAa;IAChB,yBAAE;IACH,wBAAE;IACN,oBAAE;IACE,sBAAE;IACD,uBAAE;IACQ,iCAAE;IACjB,oBAAE;IACE,wBAAE;IACF,sBAAE;IACD,uBAAE;IACQ,iCAAE;IAChB,qBAAE;IACE,uBAAE;IACD,wBAAE;IACH,uBAAE;IACA,yBAAE;IACG,8BAAE;IACN,0BAAE;IACH,yBAAE;IACI,+BAAE;IACH,gCAAE;IACT,yBAAE;;EAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA0gCN;;;;;;IAGA;;;;;;IAaN;;;;;;IAWM;;;;;;IAMA;;;;;;IAaN;;;;;;IAKiB;;;;;;IAMjB;;;;;;IAce;;;;;;IAMf;;;;;;IAKM;;;;;;IAKA;;;;;;IAKA;;;;;;IAYN;;;;;;IASE;;;;;;IAUA;;;;;;IAYA;;;;;;IAwBM;;;;;;IAwBA;;;;;;IAwBA;;;;;;IAuBA;;;;;;IAuBA;;;;;;IA8BA;;;;;;IAKR;;;;;;IAiBW;;;;;;;;UAKT;UACA;UACN;UACM;UACA;UACN;UACkB;UACjB;UACc;UACd;UACK;UACA;UACA;UACL;UACC;UACA;UACA;UACM;UACA;UACA;UACA;UACA;UACA;UACP;UACU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A;;QACA;;QACA;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QAKA;;IAzHA;IACA;IACA;IACA;IACA;IACA;IACA;IAOA;IAOA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAKA;IACA;IACA;IAKA;IAKA;IAKA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAOA;IACA;IACA;IACA;IAOA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAKA;UACJ,AAAc,aAAD;UACb,AAAa,YAAD;UACZ,AAAuB,sBAAD;UACtB,AAAkB,iBAAD;UACjB,AAAiB,gBAAD;UAChB,AAAY,WAAD;UACX,AAAsB,qBAAD;UACrB,AAAY,WAAD;UACX,AAAY,WAAD;UACX,AAAwB,uBAAD;UACvB,AAAkB,iBAAD;UACjB,AAAU,SAAD;UACT,AAAa,YAAD;UACZ,AAAW,UAAD;UACV,AAAW,UAAD;UACV,AAAe,cAAD;UACd,AAAY,WAAD;UACX,AAAc,aAAD;UACb,AAAiB,gBAAD;UAChB,AAAsB,qBAAD;UACrB,AAAc,aAAD;UACb,AAAsB,qBAAD;UACrB,AAAY,WAAD;UACX,AAAmB,kBAAD;UAClB,AAAqB,oBAAD;UACpB,AAAmB,kBAAD;UAClB,AAAY,WAAD;UACX,AAAyB,wBAAD;UACxB,AAAgB,eAAD;UACf,AAAsB,qBAAD;UACrB,AAAe,cAAD;UACd,AAAU,SAAD;UACT,AAAW,UAAD;UACV,AAAU,SAAD;UACT,AAAiB,gBAAD;UAChB,AAAgB,eAAD;UACf,AAAqB,oBAAD;UACpB,AAAU,SAAD;UACT,AAAiB,gBAAD;UAChB,AAAgB,eAAD;UACf,AAAY,WAAD;UACX,AAAY,WA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ACA;;QACA;QACA;;;IAzBA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;UACK,AAAiB,gBAAD;UAChB,AAAe,cAAD;UACd,AAAe,cAAD;UACd,AAAqB,oBAAD;UACpB,AAAU,SAAD;UACT,AAAgB,eAAD;AACtB,wDAAW,GAAG;;EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAqVN;;;;;;IACY;;;;;;IACI;;;;;;IACJ;;;;;;IACA;;;;;;IACM;;;;;;IACN;;;;;;IACA;;;;;;IACP;;;;;;IACR;;;;;;IACI;;;;;;IACD;;;;;;IACM;;;;;;IACD;;;;;;IACN;;;;;;IACA;;;;;;IACA;;;;;;IACwB;;;;;;IACxB;;;;;;IACuB;;;;;;IACzB;;;;;;IACA;;;;;;IACe;;;;;;IACf;;;;;;IACM;;;;;;IACN;;;;;;IACoB;;;;;;IACP;;;;;;IACJ;;;;;;;AAGe;IAAmB;;UAGD;AACd,MAA/B,0BAAoB,UAAU;AACjB,qBAAmB;;AACpC,YAAI,oBAAe;AACnB,YAAI,0BAAqB;AACzB,YAAI,0BAAqB;AACzB,YAAI,wBAAmB;AACvB,YAAI,0BAAqB;;;AAEsD,MAAjF,AAAW,UAAD,KAAK,wCAAyB,YAAY,QAAQ,YAAW;AACK,MAA5E,AAAW,UAAD,KAAK,gDAAiC,eAAe;AAC6C,MAA5G,AAAW,UAAD,KAAK,yCAA0B,oBAAoB,+BAAyC;AAMpG,MALF,AAAW,UAAD,KAAK,6CACb,kBACA,mCACsE,WAAtD,yBAAmB,gBAAgB,eAAI,gCAC7C;IAEd;;;QAxFO;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QACA;;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QACA;;QACA;QACA;;QACA;QACA;;QACA;QACA;QACS;;;IA5BT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IA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","file":"../../../../../../../../../packages/flutter/src/material/icon_button.dart.lib.js"}');
  // Exports:
  return {
    src__material__icon_button: icon_button,
    src__material__back_button: back_button,
    src__material__time: time,
    src__material__ink_ripple: ink_ripple,
    src__material__button_style_button: button_style_button,
    src__material__text_button: text_button,
    src__material__snack_bar: snack_bar,
    src__material__floating_action_button_location: floating_action_button_location,
    src__material__floating_action_button: floating_action_button,
    src__material__flexible_space_bar: flexible_space_bar,
    src__material__toggle_buttons_theme: toggle_buttons_theme,
    src__material__time_picker_theme: time_picker_theme,
    src__material__text_selection_theme: text_selection_theme,
    src__material__text_button_theme: text_button_theme,
    src__material__tabs: tabs$,
    src__material__tab_bar_theme: tab_bar_theme,
    src__material__switch_theme: switch_theme,
    src__material__snack_bar_theme: snack_bar_theme,
    src__material__slider_theme: slider_theme,
    src__material__scrollbar_theme: scrollbar_theme,
    src__material__radio_theme: radio_theme,
    src__material__progress_indicator_theme: progress_indicator_theme,
    src__material__popup_menu_theme: popup_menu_theme,
    src__material__page_transitions_theme: page_transitions_theme,
    src__material__outlined_button_theme: outlined_button_theme,
    src__material__navigation_rail: navigation_rail,
    src__material__navigation_rail_theme: navigation_rail_theme,
    src__material__input_decorator: input_decorator,
    src__material__ink_splash: ink_splash,
    src__material__button_style: button_style,
    src__material__elevated_button_theme: elevated_button_theme,
    src__material__dialog_theme: dialog_theme,
    src__material__data_table_theme: data_table_theme,
    src__material__chip_theme: chip_theme,
    src__material__checkbox_theme: checkbox_theme,
    src__material__card_theme: card_theme,
    src__material__raised_button: raised_button,
    src__material__outline_button: outline_button,
    src__material__material_button: material_button,
    src__material__button: button,
    src__material__flat_button: flat_button,
    src__material__color_scheme: color_scheme,
    src__material__button_theme: button_theme,
    src__material__button_bar_theme: button_bar_theme,
    src__material__tooltip_theme: tooltip_theme,
    src__material__tooltip: tooltip,
    src__material__bottom_navigation_bar: bottom_navigation_bar,
    src__material__bottom_navigation_bar_theme: bottom_navigation_bar_theme,
    src__material__bottom_app_bar_theme: bottom_app_bar_theme,
    src__material__theme_data: theme_data,
    src__material__ink_highlight: ink_highlight,
    src__material__feedback: feedback,
    src__material__ink_well: ink_well,
    src__material__ink_decoration: ink_decoration,
    src__material__list_tile: list_tile,
    src__material__drawer: drawer,
    src__material__bottom_sheet: bottom_sheet,
    src__material__divider_theme: divider_theme,
    src__material__divider: divider,
    src__material__banner_theme: banner_theme,
    src__material__banner: banner,
    src__material__scaffold: scaffold$,
    src__material__elevation_overlay: elevation_overlay,
    src__material__material: material,
    src__material__debug: debug$0,
    src__material__material_localizations: material_localizations,
    src__material__theme: theme$,
    src__material__app_bar_theme: app_bar_theme,
    src__material__app_bar: app_bar
  };
}));

//# sourceMappingURL=icon_button.dart.lib.js.map
